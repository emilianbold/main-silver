/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2012 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2012 Sun Microsystems, Inc.
 */
package org.netbeans.modules.web.clientproject.ui.browser;

import org.netbeans.modules.web.browser.api.BrowserFamilyId;
import org.netbeans.modules.web.browser.api.WebBrowser;
import org.netbeans.modules.web.clientproject.ClientSideProject;
import org.netbeans.modules.web.clientproject.ClientSideProjectConstants;
import org.netbeans.modules.web.clientproject.browser.ClientProjectConfigurationImpl;

/**
 *
 * @author david
 */
public class BrowserConfigurationPanel extends javax.swing.JPanel {

    /**
     * Creates new form BrowserConfigurationPanel
     */
    public BrowserConfigurationPanel(ClientSideProject project, ClientProjectConfigurationImpl cfg, WebBrowser browser) {
        initComponents();
        // never editable
        jNetBeansIntegrationCheckBox.setEnabled(false);
        jNetBeansIntegrationCheckBox.setSelected(cfg.getBrowserIntegration() == Boolean.TRUE);
        if (cfg.getBrowserIntegration() != Boolean.TRUE) {
            jAutoRefreshCheckBox.setVisible(false);
            jHighlightSelectionCheckBox.setVisible(false);
        }
        jAutoRefreshCheckBox.setSelected(cfg.isAutoRefresh());
        jHighlightSelectionCheckBox.setSelected(cfg.isHighlightSelection());
        updateEnablement();
    }

    public boolean isAutoRefresh() {
        return jAutoRefreshCheckBox.isSelected();
    }
    
    public boolean isHighlightSelection() {
        return jHighlightSelectionCheckBox.isSelected();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jNetBeansIntegrationCheckBox = new javax.swing.JCheckBox();
        jAutoRefreshCheckBox = new javax.swing.JCheckBox();
        jHighlightSelectionCheckBox = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jNetBeansIntegrationCheckBox, org.openide.util.NbBundle.getMessage(BrowserConfigurationPanel.class, "BrowserConfigurationPanel.jNetBeansIntegrationCheckBox.text")); // NOI18N
        jNetBeansIntegrationCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNetBeansIntegrationCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jAutoRefreshCheckBox, org.openide.util.NbBundle.getMessage(BrowserConfigurationPanel.class, "BrowserConfigurationPanel.jAutoRefreshCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jHighlightSelectionCheckBox, org.openide.util.NbBundle.getMessage(BrowserConfigurationPanel.class, "BrowserConfigurationPanel.jHighlightSelectionCheckBox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jNetBeansIntegrationCheckBox)
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAutoRefreshCheckBox)
                    .addComponent(jHighlightSelectionCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jNetBeansIntegrationCheckBox)
                .addGap(0, 0, 0)
                .addComponent(jAutoRefreshCheckBox)
                .addGap(0, 0, 0)
                .addComponent(jHighlightSelectionCheckBox))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jNetBeansIntegrationCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNetBeansIntegrationCheckBoxActionPerformed
        updateEnablement();
    }//GEN-LAST:event_jNetBeansIntegrationCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jAutoRefreshCheckBox;
    private javax.swing.JCheckBox jHighlightSelectionCheckBox;
    private javax.swing.JCheckBox jNetBeansIntegrationCheckBox;
    // End of variables declaration//GEN-END:variables

    private void updateEnablement() {
        jAutoRefreshCheckBox.setEnabled(jNetBeansIntegrationCheckBox.isSelected());
        jHighlightSelectionCheckBox.setEnabled(jNetBeansIntegrationCheckBox.isSelected());
    }
}
