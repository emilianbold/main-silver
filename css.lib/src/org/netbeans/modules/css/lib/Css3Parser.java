// $ANTLR 3.5.2 /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2014-11-26 14:06:57

/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", "INCLUDES", "INVALID", 
		"J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", 
		"LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", 
		"LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", 
		"MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", 
		"NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", 
		"PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", 
		"RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_EXTEND", 
		"SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FUNCTION", "SASS_GLOBAL", 
		"SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", "SASS_OPTIONAL", "SASS_RETURN", 
		"SASS_VAR", "SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", "STAR", "STRING", 
		"T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", "TOPLEFT_SYM", 
		"TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URI", "URL", "V", 
		"W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int I=49;
	public static final int IDENT=50;
	public static final int IMPORTANT_SYM=51;
	public static final int IMPORT_SYM=52;
	public static final int INCLUDES=53;
	public static final int INVALID=54;
	public static final int J=55;
	public static final int K=56;
	public static final int L=57;
	public static final int LBRACE=58;
	public static final int LBRACKET=59;
	public static final int LEFTBOTTOM_SYM=60;
	public static final int LEFTMIDDLE_SYM=61;
	public static final int LEFTTOP_SYM=62;
	public static final int LENGTH=63;
	public static final int LESS=64;
	public static final int LESS_AND=65;
	public static final int LESS_JS_STRING=66;
	public static final int LESS_OR_EQ=67;
	public static final int LESS_REST=68;
	public static final int LINE_COMMENT=69;
	public static final int LPAREN=70;
	public static final int M=71;
	public static final int MEDIA_SYM=72;
	public static final int MINUS=73;
	public static final int MOZ_DOCUMENT_SYM=74;
	public static final int MOZ_DOMAIN=75;
	public static final int MOZ_REGEXP=76;
	public static final int MOZ_URL_PREFIX=77;
	public static final int N=78;
	public static final int NAME=79;
	public static final int NAMESPACE_SYM=80;
	public static final int NL=81;
	public static final int NMCHAR=82;
	public static final int NMSTART=83;
	public static final int NONASCII=84;
	public static final int NOT=85;
	public static final int NUMBER=86;
	public static final int O=87;
	public static final int OPEQ=88;
	public static final int P=89;
	public static final int PAGE_SYM=90;
	public static final int PERCENTAGE=91;
	public static final int PERCENTAGE_SYMBOL=92;
	public static final int PIPE=93;
	public static final int PLUS=94;
	public static final int Q=95;
	public static final int R=96;
	public static final int RBRACE=97;
	public static final int RBRACKET=98;
	public static final int REM=99;
	public static final int RESOLUTION=100;
	public static final int RIGHTBOTTOM_SYM=101;
	public static final int RIGHTMIDDLE_SYM=102;
	public static final int RIGHTTOP_SYM=103;
	public static final int RPAREN=104;
	public static final int S=105;
	public static final int SASS_AT_ROOT=106;
	public static final int SASS_CONTENT=107;
	public static final int SASS_DEBUG=108;
	public static final int SASS_DEFAULT=109;
	public static final int SASS_EACH=110;
	public static final int SASS_ELSE=111;
	public static final int SASS_ELSEIF=112;
	public static final int SASS_EXTEND=113;
	public static final int SASS_EXTEND_ONLY_SELECTOR=114;
	public static final int SASS_FOR=115;
	public static final int SASS_FUNCTION=116;
	public static final int SASS_GLOBAL=117;
	public static final int SASS_IF=118;
	public static final int SASS_INCLUDE=119;
	public static final int SASS_MIXIN=120;
	public static final int SASS_OPTIONAL=121;
	public static final int SASS_RETURN=122;
	public static final int SASS_VAR=123;
	public static final int SASS_WARN=124;
	public static final int SASS_WHILE=125;
	public static final int SEMI=126;
	public static final int SOLIDUS=127;
	public static final int STAR=128;
	public static final int STRING=129;
	public static final int T=130;
	public static final int TILDE=131;
	public static final int TIME=132;
	public static final int TOPCENTER_SYM=133;
	public static final int TOPLEFTCORNER_SYM=134;
	public static final int TOPLEFT_SYM=135;
	public static final int TOPRIGHTCORNER_SYM=136;
	public static final int TOPRIGHT_SYM=137;
	public static final int U=138;
	public static final int UNICODE=139;
	public static final int URI=140;
	public static final int URL=141;
	public static final int V=142;
	public static final int W=143;
	public static final int WEBKIT_KEYFRAMES_SYM=144;
	public static final int WS=145;
	public static final int X=146;
	public static final int Y=147;
	public static final int Z=148;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "slAttribute", "synpred7_Css3", "importItem", "moz_document_function", 
		"synpred9_Css3", "moz_document", "key_and", "cp_expression_operator", 
		"elementName", "synpred5_Css3", "synpred35_Css3", "mediaQuery", "synpred14_Css3", 
		"synpred36_Css3", "namespacePrefix", "synpred3_Css3", "combinator", "less_condition", 
		"synpred37_Css3", "sass_function_name", "sass_map", "cp_expression_atom", 
		"sass_interpolation_expression_var", "namespace", "less_condition_operator", 
		"fnAttribute", "bodyItem", "synpred8_Css3", "sass_control", "synpred4_Css3", 
		"sass_function_return", "synpred17_Css3", "cp_term_symbol", "page", "synpred39_Css3", 
		"media", "sass_selector_interpolation_exp", "synpred20_Css3", "synpred11_Css3", 
		"synpred25_Css3", "synpred6_Css3", "selectorsGroup", "cp_expression", 
		"propertyValue", "cp_arg", "cp_math_expression_atom", "less_selector_interpolation", 
		"margin", "key_only", "synpred16_Css3", "synpred24_Css3", "cp_variable_declaration", 
		"cp_mixin_call_arg", "key_or", "sass_map_name", "sass_map_pair", "property", 
		"imports", "syncTo_RBRACE", "synpred22_Css3", "unaryOperator", "functionName", 
		"less_function_in_condition", "synpred13_Css3", "declarations", "namespaces", 
		"sass_for", "cssClass", "synpred19_Css3", "webkitKeyframeSelectors", "sass_function_declaration", 
		"operator", "hexColor", "prio", "rule", "syncTo_SEMI", "declaration", 
		"synpred23_Css3", "charSet", "less_when", "body", "mediaQueryOperator", 
		"styleSheet", "mediaFeatureValue", "cssId", "cp_expression_list", "pseudoPage", 
		"mediaBody", "namespacePrefixName", "sass_if", "syncToFollow", "ws", "cp_variable", 
		"cp_mixin_call", "sass_each", "less_fn_name", "synpred33_Css3", "sass_control_block", 
		"cp_mixin_declaration", "cp_mixin_block", "sass_nested_properties", "synpred21_Css3", 
		"synpred1_Css3", "elementSubsequent", "fnAttributeValue", "synpred31_Css3", 
		"synpred27_Css3", "sass_else", "propertyDeclaration", "pseudo", "resourceIdentifier", 
		"esPred", "sass_debug", "fontFace", "vendorAtRule", "slAttributeName", 
		"synpred15_Css3", "expression", "term", "synpred12_Css3", "expressionPredicate", 
		"less_import_types", "simpleSelectorSequence", "less_mixin_guarded", "counterStyle", 
		"synpred28_Css3", "at_rule", "fnAttributes", "slAttributeValue", "sass_extend", 
		"mediaType", "cp_propertyValue", "cp_math_expression", "atRuleId", "mediaBodyItem", 
		"syncToDeclarationsRule", "cp_mixin_name", "typeSelector", "selector", 
		"synpred10_Css3", "sass_extend_only_selector", "cp_args_list", "sass_each_variables", 
		"sass_control_expression", "charSetValue", "fnAttributeName", "sass_while", 
		"synpred38_Css3", "synpred2_Css3", "synpred29_Css3", "synpred32_Css3", 
		"mediaFeature", "synpred26_Css3", "synpred34_Css3", "synpred30_Css3", 
		"mediaExpression", "webkitKeyframes", "mediaQueryList", "margin_sym", 
		"webkitKeyframesBlock", "synpred18_Css3", "function", "synpred40_Css3", 
		"cp_mixin_call_args", "generic_at_rule", "sass_content", "sass_map_pairs", 
		"cp_math_expressions"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, false, false, false, false, true, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	/**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	    /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:330:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(330, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:331:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(332,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ws
					{
					dbg.location(332,6);
					pushFollow(FOLLOW_ws_in_styleSheet120);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(333,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:8: charSet ( ws )?
					{
					dbg.location(333,8);
					pushFollow(FOLLOW_charSet_in_styleSheet130);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(333,16);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:16: ws
							{
							dbg.location(333,16);
							pushFollow(FOLLOW_ws_in_styleSheet132);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(334,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:9: imports
					{
					dbg.location(334,9);
					pushFollow(FOLLOW_imports_in_styleSheet146);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(335,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:335:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:335:9: namespaces
					{
					dbg.location(335,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet157);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(336,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COLON)||LA6_0==COUNTER_STYLE_SYM||LA6_0==DCOLON||LA6_0==DOT||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_ELSE)||(LA6_0 >= SASS_EXTEND && LA6_0 <= SASS_FUNCTION)||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||(LA6_0 >= SASS_RETURN && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: body
					{
					dbg.location(336,9);
					pushFollow(FOLLOW_body_in_styleSheet168);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(337,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet176); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(338, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:340:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(340, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:341:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:2: ( namespace ( ws )? )+
			{
			dbg.location(342,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:4: namespace ( ws )?
					{
					dbg.location(342,4);
					pushFollow(FOLLOW_namespace_in_namespaces193);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(342,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:14: ws
							{
							dbg.location(342,14);
							pushFollow(FOLLOW_ws_in_namespaces195);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(343, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:345:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(345, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(346,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace211); if (state.failed) return;dbg.location(346,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:19: ws
					{
					dbg.location(346,19);
					pushFollow(FOLLOW_ws_in_namespace213);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(346,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:24: namespacePrefixName ( ws )?
					{
					dbg.location(346,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace217);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(346,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:44: ws
							{
							dbg.location(346,44);
							pushFollow(FOLLOW_ws_in_namespace219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(346,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace224);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(346,69);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:69: ws
					{
					dbg.location(346,69);
					pushFollow(FOLLOW_ws_in_namespace226);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(346,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace229); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(347, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(349, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:5: IDENT
			{
			dbg.location(350,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName242); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(351, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(353, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(354,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(355, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:357:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(357, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(358,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet276); if (state.failed) return;dbg.location(358,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:21: ws
					{
					dbg.location(358,21);
					pushFollow(FOLLOW_ws_in_charSet278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(358,25);
			pushFollow(FOLLOW_charSetValue_in_charSet281);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(358,38);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ws
					{
					dbg.location(358,38);
					pushFollow(FOLLOW_ws_in_charSet283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(358,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet286); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(361, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:2: ( STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:4: STRING
			{
			dbg.location(362,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue300); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(363, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:1: imports : ( importItem ( ws )? SEMI ( ws )? )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(365, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:366:2: ( ( importItem ( ws )? SEMI ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:2: ( importItem ( ws )? SEMI ( ws )? )+
			{
			dbg.location(367,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:2: ( importItem ( ws )? SEMI ( ws )? )+
			int cnt17=0;
			try { dbg.enterSubRule(17);

			loop17:
			while (true) {
				int alt17=2;
				try { dbg.enterDecision(17, decisionCanBacktrack[17]);

				int LA17_0 = input.LA(1);
				if ( (LA17_0==IMPORT_SYM) ) {
					int LA17_27 = input.LA(2);
					if ( (!(evalPredicate((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt17=1;
					}

				}

				} finally {dbg.exitDecision(17);}

				switch (alt17) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:4: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(367,4);
					pushFollow(FOLLOW_importItem_in_imports314);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(367,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:15: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:15: ws
							{
							dbg.location(367,15);
							pushFollow(FOLLOW_ws_in_imports316);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(367,19);
					match(input,SEMI,FOLLOW_SEMI_in_imports319); if (state.failed) return;dbg.location(367,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:24: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:24: ws
							{
							dbg.location(367,24);
							pushFollow(FOLLOW_ws_in_imports321);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(17, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt17++;
			}
			} finally {dbg.exitSubRule(17);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(368, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(370, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:371:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt32=3;
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(372,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem347); if (state.failed) return;dbg.location(372,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:20: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:20: ws
							{
							dbg.location(372,20);
							pushFollow(FOLLOW_ws_in_importItem349);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(372,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem352);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(372,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						int LA20_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IDENT) ) {
						int LA20_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==NOT) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==GEN) ) {
						int LA20_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==HASH_SYMBOL) ) {
						int LA20_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred1_Css3())) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==LPAREN) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==SASS_MIXIN) ) {
						int LA20_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_VAR) ) {
						int LA20_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_INCLUDE) ) {
						int LA20_12 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_DEBUG||LA20_0==SASS_WARN) ) {
						int LA20_13 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_IF) ) {
						int LA20_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FOR) ) {
						int LA20_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EACH) ) {
						int LA20_18 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_WHILE) ) {
						int LA20_19 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_CONTENT) ) {
						int LA20_20 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IMPORT_SYM) ) {
						int LA20_21 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_AT_ROOT) ) {
						int LA20_22 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==PAGE_SYM) ) {
						int LA20_23 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==FONT_FACE_SYM) ) {
						int LA20_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MOZ_DOCUMENT_SYM) ) {
						int LA20_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA20_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==AT_IDENT) ) {
						int LA20_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MEDIA_SYM) ) {
						int LA20_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EXTEND) ) {
						int LA20_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==COUNTER_STYLE_SYM) ) {
						int LA20_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FUNCTION) ) {
						int LA20_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( ((LA20_0 >= BOTTOMCENTER_SYM && LA20_0 <= BOTTOMRIGHT_SYM)||LA20_0==CHARSET_SYM||(LA20_0 >= LEFTBOTTOM_SYM && LA20_0 <= LEFTTOP_SYM)||LA20_0==NAMESPACE_SYM||(LA20_0 >= RIGHTBOTTOM_SYM && LA20_0 <= RIGHTTOP_SYM)||LA20_0==SASS_ELSE||LA20_0==SASS_RETURN||(LA20_0 >= TOPCENTER_SYM && LA20_0 <= TOPRIGHT_SYM)) ) {
						int LA20_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(372,66);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:66: ( ws )?
							int alt19=2;
							try { dbg.enterSubRule(19);
							try { dbg.enterDecision(19, decisionCanBacktrack[19]);

							int LA19_0 = input.LA(1);
							if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
								alt19=1;
							}
							} finally {dbg.exitDecision(19);}

							switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:66: ws
									{
									dbg.location(372,66);
									pushFollow(FOLLOW_ws_in_importItem362);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(19);}
							dbg.location(372,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem365);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(375,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(375,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem398); if (state.failed) return;dbg.location(375,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:38: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:38: ws
							{
							dbg.location(375,38);
							pushFollow(FOLLOW_ws_in_importItem400);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(375,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem403);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(375,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(24);

					loop24:
					while (true) {
						int alt24=2;
						try { dbg.enterDecision(24, decisionCanBacktrack[24]);

						try {
							isCyclicDecision = true;
							alt24 = dfa24.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(24);}

						switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(375,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ( ws )?
							int alt22=2;
							try { dbg.enterSubRule(22);
							try { dbg.enterDecision(22, decisionCanBacktrack[22]);

							int LA22_0 = input.LA(1);
							if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
								alt22=1;
							}
							} finally {dbg.exitDecision(22);}

							switch (alt22) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ws
									{
									dbg.location(375,62);
									pushFollow(FOLLOW_ws_in_importItem406);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(22);}
							dbg.location(375,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem409); if (state.failed) return;dbg.location(375,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:72: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:72: ws
									{
									dbg.location(375,72);
									pushFollow(FOLLOW_ws_in_importItem411);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(375,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem414);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop24;
						}
					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(375,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
						int LA26_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IDENT) ) {
						int LA26_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==NOT) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==GEN) ) {
						int LA26_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==HASH_SYMBOL) ) {
						int LA26_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==LPAREN) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==SASS_MIXIN) ) {
						int LA26_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_VAR) ) {
						int LA26_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_INCLUDE) ) {
						int LA26_12 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_DEBUG||LA26_0==SASS_WARN) ) {
						int LA26_13 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_IF) ) {
						int LA26_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FOR) ) {
						int LA26_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EACH) ) {
						int LA26_18 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_WHILE) ) {
						int LA26_19 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_CONTENT) ) {
						int LA26_20 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IMPORT_SYM) ) {
						int LA26_21 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_AT_ROOT) ) {
						int LA26_22 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==PAGE_SYM) ) {
						int LA26_23 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==FONT_FACE_SYM) ) {
						int LA26_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MOZ_DOCUMENT_SYM) ) {
						int LA26_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA26_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==AT_IDENT) ) {
						int LA26_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MEDIA_SYM) ) {
						int LA26_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EXTEND) ) {
						int LA26_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==COUNTER_STYLE_SYM) ) {
						int LA26_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FUNCTION) ) {
						int LA26_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( ((LA26_0 >= BOTTOMCENTER_SYM && LA26_0 <= BOTTOMRIGHT_SYM)||LA26_0==CHARSET_SYM||(LA26_0 >= LEFTBOTTOM_SYM && LA26_0 <= LEFTTOP_SYM)||LA26_0==NAMESPACE_SYM||(LA26_0 >= RIGHTBOTTOM_SYM && LA26_0 <= RIGHTTOP_SYM)||LA26_0==SASS_ELSE||LA26_0==SASS_RETURN||(LA26_0 >= TOPCENTER_SYM && LA26_0 <= TOPRIGHT_SYM)) ) {
						int LA26_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(375,120);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:120: ( ws )?
							int alt25=2;
							try { dbg.enterSubRule(25);
							try { dbg.enterDecision(25, decisionCanBacktrack[25]);

							int LA25_0 = input.LA(1);
							if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
								alt25=1;
							}
							} finally {dbg.exitDecision(25);}

							switch (alt25) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:120: ws
									{
									dbg.location(375,120);
									pushFollow(FOLLOW_ws_in_importItem426);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(25);}
							dbg.location(375,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem429);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(377,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(377,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem453); if (state.failed) return;dbg.location(377,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ( ws )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ws
							{
							dbg.location(377,38);
							pushFollow(FOLLOW_ws_in_importItem455);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(377,42);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==LPAREN) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(377,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem459); if (state.failed) return;dbg.location(377,50);
							pushFollow(FOLLOW_less_import_types_in_importItem461);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(377,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem463); if (state.failed) return;dbg.location(377,75);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:75: ( ws )?
							int alt28=2;
							try { dbg.enterSubRule(28);
							try { dbg.enterDecision(28, decisionCanBacktrack[28]);

							int LA28_0 = input.LA(1);
							if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
								alt28=1;
							}
							} finally {dbg.exitDecision(28);}

							switch (alt28) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:75: ws
									{
									dbg.location(377,75);
									pushFollow(FOLLOW_ws_in_importItem465);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(28);}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(377,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem470);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(377,100);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						int LA31_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IDENT) ) {
						int LA31_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==NOT) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==GEN) ) {
						int LA31_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==HASH_SYMBOL) ) {
						int LA31_5 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==LPAREN) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==SASS_MIXIN) ) {
						int LA31_7 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_VAR) ) {
						int LA31_8 = input.LA(2);
						if ( (((synpred3_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_INCLUDE) ) {
						int LA31_12 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_DEBUG||LA31_0==SASS_WARN) ) {
						int LA31_13 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_IF) ) {
						int LA31_16 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FOR) ) {
						int LA31_17 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EACH) ) {
						int LA31_18 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_WHILE) ) {
						int LA31_19 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_CONTENT) ) {
						int LA31_20 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IMPORT_SYM) ) {
						int LA31_21 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_AT_ROOT) ) {
						int LA31_22 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==PAGE_SYM) ) {
						int LA31_23 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==FONT_FACE_SYM) ) {
						int LA31_32 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MOZ_DOCUMENT_SYM) ) {
						int LA31_33 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA31_34 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==AT_IDENT) ) {
						int LA31_35 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MEDIA_SYM) ) {
						int LA31_36 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EXTEND) ) {
						int LA31_37 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==COUNTER_STYLE_SYM) ) {
						int LA31_38 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FUNCTION) ) {
						int LA31_40 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( ((LA31_0 >= BOTTOMCENTER_SYM && LA31_0 <= BOTTOMRIGHT_SYM)||LA31_0==CHARSET_SYM||(LA31_0 >= LEFTBOTTOM_SYM && LA31_0 <= LEFTTOP_SYM)||LA31_0==NAMESPACE_SYM||(LA31_0 >= RIGHTBOTTOM_SYM && LA31_0 <= RIGHTTOP_SYM)||LA31_0==SASS_ELSE||LA31_0==SASS_RETURN||(LA31_0 >= TOPCENTER_SYM && LA31_0 <= TOPRIGHT_SYM)) ) {
						int LA31_41 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(377,123);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:123: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:123: ws
									{
									dbg.location(377,123);
									pushFollow(FOLLOW_ws_in_importItem480);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(377,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem483);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(378, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "media"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(379, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(380,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media501); if (state.failed) return;dbg.location(380,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:17: ( ws )?
			int alt33=2;
			try { dbg.enterSubRule(33);
			try { dbg.enterDecision(33, decisionCanBacktrack[33]);

			int LA33_0 = input.LA(1);
			if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
				alt33=1;
			}
			} finally {dbg.exitDecision(33);}

			switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:17: ws
					{
					dbg.location(380,17);
					pushFollow(FOLLOW_ws_in_media503);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(381,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:382:10: mediaQueryList
			{
			dbg.location(382,10);
			pushFollow(FOLLOW_mediaQueryList_in_media521);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(383,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:7: ( ws )?
			int alt34=2;
			try { dbg.enterSubRule(34);
			try { dbg.enterDecision(34, decisionCanBacktrack[34]);

			int LA34_0 = input.LA(1);
			if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
				alt34=1;
			}
			} finally {dbg.exitDecision(34);}

			switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:7: ws
					{
					dbg.location(383,7);
					pushFollow(FOLLOW_ws_in_media529);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(384,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media536); if (state.failed) return;dbg.location(384,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:12: ( ws )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:12: ws
					{
					dbg.location(384,12);
					pushFollow(FOLLOW_ws_in_media538);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(384,16);
			pushFollow(FOLLOW_syncToFollow_in_media541);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(385,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:9: ( mediaBody )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( ((LA36_0 >= AT_IDENT && LA36_0 <= AT_SIGN)||(LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||(LA36_0 >= CHARSET_SYM && LA36_0 <= COLON)||LA36_0==COUNTER_STYLE_SYM||LA36_0==DCOLON||LA36_0==DOT||LA36_0==FONT_FACE_SYM||(LA36_0 >= GEN && LA36_0 <= GREATER)||(LA36_0 >= HASH && LA36_0 <= HASH_SYMBOL)||LA36_0==IDENT||LA36_0==IMPORT_SYM||(LA36_0 >= LBRACKET && LA36_0 <= LEFTTOP_SYM)||LA36_0==LESS_AND||(LA36_0 >= MEDIA_SYM && LA36_0 <= MOZ_DOCUMENT_SYM)||LA36_0==NAMESPACE_SYM||LA36_0==PAGE_SYM||(LA36_0 >= PIPE && LA36_0 <= PLUS)||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||(LA36_0 >= SASS_AT_ROOT && LA36_0 <= SASS_DEBUG)||(LA36_0 >= SASS_EACH && LA36_0 <= SASS_ELSE)||(LA36_0 >= SASS_EXTEND && LA36_0 <= SASS_FUNCTION)||(LA36_0 >= SASS_IF && LA36_0 <= SASS_MIXIN)||(LA36_0 >= SASS_RETURN && LA36_0 <= SEMI)||LA36_0==STAR||LA36_0==TILDE||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)||LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:9: mediaBody
					{
					dbg.location(385,9);
					pushFollow(FOLLOW_mediaBody_in_media551);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}
			dbg.location(386,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media558); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(387, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(389, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:390:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(391,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt42=0;
			try { dbg.enterSubRule(42);

			loop42:
			while (true) {
				int alt42=4;
				try { dbg.enterDecision(42, decisionCanBacktrack[42]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt42=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA42_33 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt42=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt42=3;
					}

					}
					break;
				case SEMI:
					{
					alt42=2;
					}
					break;
				}
				} finally {dbg.exitDecision(42);}

				switch (alt42) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(392,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(392,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody592);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(392,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt38=2;
					try { dbg.enterSubRule(38);
					try { dbg.enterDecision(38, decisionCanBacktrack[38]);

					try {
						isCyclicDecision = true;
						alt38 = dfa38.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(38);}

					switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(392,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:39: ( ws )?
							int alt37=2;
							try { dbg.enterSubRule(37);
							try { dbg.enterDecision(37, decisionCanBacktrack[37]);

							int LA37_0 = input.LA(1);
							if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
								alt37=1;
							}
							} finally {dbg.exitDecision(37);}

							switch (alt37) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:39: ws
									{
									dbg.location(392,39);
									pushFollow(FOLLOW_ws_in_mediaBody602);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(37);}
							dbg.location(392,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody605); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(392,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:50: ( ws )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:50: ws
							{
							dbg.location(392,50);
							pushFollow(FOLLOW_ws_in_mediaBody609);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(39);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:10: ( SEMI ( ws )? )
					{
					dbg.location(394,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:12: SEMI ( ws )?
					{
					dbg.location(394,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody636); if (state.failed) return;dbg.location(394,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ws
							{
							dbg.location(394,17);
							pushFollow(FOLLOW_ws_in_mediaBody638);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(395,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(395,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(395,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody657);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(395,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:43: ( ws | ( SEMI ) )
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==COMMENT||LA41_0==NL||LA41_0==WS) ) {
						alt41=1;
					}
					else if ( (LA41_0==SEMI) ) {
						alt41=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 41, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:44: ws
							{
							dbg.location(395,44);
							pushFollow(FOLLOW_ws_in_mediaBody660);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:49: ( SEMI )
							{
							dbg.location(395,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:50: SEMI
							{
							dbg.location(395,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody665); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(41);}

					}

					}
					break;

				default :
					if ( cnt42 >= 1 ) break loop42;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(42, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt42++;
			}
			} finally {dbg.exitSubRule(42);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(397, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:1: mediaBodyItem : ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(399, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media )
			int alt47=13;
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			int LA47_0 = input.LA(1);
			if ( (LA47_0==DOT) ) {
				int LA47_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((synpred7_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=3;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==SASS_MIXIN) ) {
				int LA47_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_INCLUDE) ) {
				int LA47_3 = input.LA(2);
				if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( ((synpred7_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==STAR) ) {
				int LA47_4 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==IDENT) ) {
				int LA47_5 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==HASH_SYMBOL) ) {
				int LA47_6 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==MINUS) ) {
				int LA47_7 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==GEN) ) {
				int LA47_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==SASS_DEBUG||LA47_0==SASS_WARN) ) {
				int LA47_9 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_VAR) && (synpred8_Css3())) {
				alt47=4;
			}
			else if ( (LA47_0==SASS_IF) ) {
				int LA47_11 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_FOR) ) {
				int LA47_12 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_EACH) ) {
				int LA47_13 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_WHILE) ) {
				int LA47_14 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_CONTENT) ) {
				int LA47_15 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==IMPORT_SYM) ) {
				int LA47_16 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt47=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_AT_ROOT) ) {
				int LA47_17 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==PAGE_SYM) ) {
				int LA47_18 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==AT_SIGN||LA47_0==COLON||LA47_0==DCOLON||LA47_0==GREATER||LA47_0==HASH||LA47_0==LBRACKET||LA47_0==LESS_AND||(LA47_0 >= PIPE && LA47_0 <= PLUS)||LA47_0==SASS_EXTEND_ONLY_SELECTOR||LA47_0==TILDE) ) {
				alt47=9;
			}
			else if ( (LA47_0==FONT_FACE_SYM) ) {
				int LA47_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=11;
				}

			}
			else if ( (LA47_0==MOZ_DOCUMENT_SYM) ) {
				int LA47_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA47_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==AT_IDENT) ) {
				int LA47_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==MEDIA_SYM) ) {
				int LA47_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( ((LA47_0 >= BOTTOMCENTER_SYM && LA47_0 <= BOTTOMRIGHT_SYM)||LA47_0==CHARSET_SYM||LA47_0==COUNTER_STYLE_SYM||(LA47_0 >= LEFTBOTTOM_SYM && LA47_0 <= LEFTTOP_SYM)||LA47_0==NAMESPACE_SYM||(LA47_0 >= RIGHTBOTTOM_SYM && LA47_0 <= RIGHTTOP_SYM)||LA47_0==SASS_ELSE||LA47_0==SASS_EXTEND||LA47_0==SASS_FUNCTION||LA47_0==SASS_RETURN||(LA47_0 >= TOPCENTER_SYM && LA47_0 <= TOPRIGHT_SYM)) && (synpred8_Css3())) {
				alt47=4;
			}

			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:5: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(401,85);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem731);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(403,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(403,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem764);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(403,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:87: ( ( ws )? IMPORTANT_SYM )?
					int alt44=2;
					try { dbg.enterSubRule(44);
					try { dbg.enterDecision(44, decisionCanBacktrack[44]);

					try {
						isCyclicDecision = true;
						alt44 = dfa44.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(44);}

					switch (alt44) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(403,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:88: ( ws )?
							int alt43=2;
							try { dbg.enterSubRule(43);
							try { dbg.enterDecision(43, decisionCanBacktrack[43]);

							int LA43_0 = input.LA(1);
							if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
								alt43=1;
							}
							} finally {dbg.exitDecision(43);}

							switch (alt43) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:88: ws
									{
									dbg.location(403,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem767);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(43);}
							dbg.location(403,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem770); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(44);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(404,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(404,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem787);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(404,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:57: ( ( ws )? IMPORTANT_SYM )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					try {
						isCyclicDecision = true;
						alt46 = dfa46.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(404,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:58: ( ws )?
							int alt45=2;
							try { dbg.enterSubRule(45);
							try { dbg.enterDecision(45, decisionCanBacktrack[45]);

							int LA45_0 = input.LA(1);
							if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
								alt45=1;
							}
							} finally {dbg.exitDecision(45);}

							switch (alt45) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:58: ws
									{
									dbg.location(404,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem790);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(45);}
							dbg.location(404,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem793); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration
					{
					dbg.location(405,74);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem832);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:7: {...}? sass_debug
					{
					dbg.location(406,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(406,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem842);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:407:7: {...}? sass_control
					{
					dbg.location(407,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(407,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem852);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:7: {...}? sass_content
					{
					dbg.location(408,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(408,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem862);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:7: {...}? importItem
					{
					dbg.location(409,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(409,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem872);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:7: rule
					{
					dbg.location(410,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem880);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:7: page
					{
					dbg.location(411,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem888);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:7: fontFace
					{
					dbg.location(412,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem896);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:7: vendorAtRule
					{
					dbg.location(413,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem904);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:7: media
					{
					dbg.location(415,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem917);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(416, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(418, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(419,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList931);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(419,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(50);

			loop50:
			while (true) {
				int alt50=2;
				try { dbg.enterDecision(50, decisionCanBacktrack[50]);

				try {
					isCyclicDecision = true;
					alt50 = dfa50.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(50);}

				switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(419,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:31: ( ws )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==COMMENT||LA48_0==NL||LA48_0==WS) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:31: ws
							{
							dbg.location(419,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList943);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(419,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList946); if (state.failed) return;dbg.location(419,41);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ( ws )?
					int alt49=2;
					try { dbg.enterSubRule(49);
					try { dbg.enterDecision(49, decisionCanBacktrack[49]);

					int LA49_0 = input.LA(1);
					if ( (LA49_0==COMMENT||LA49_0==NL||LA49_0==WS) ) {
						alt49=1;
					}
					} finally {dbg.exitDecision(49);}

					switch (alt49) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ws
							{
							dbg.location(419,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList948);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(49);}
					dbg.location(419,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList951);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop50;
				}
			}
			} finally {dbg.exitSubRule(50);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(420, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(422, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt59=3;
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			switch ( input.LA(1) ) {
			case GEN:
			case HASH_SYMBOL:
			case IDENT:
			case NOT:
				{
				alt59=1;
				}
				break;
			case LPAREN:
				{
				alt59=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt59=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(424,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:5: ( mediaQueryOperator ( ws )? )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==IDENT) ) {
						int LA52_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt52=1;
						}
					}
					else if ( (LA52_0==NOT) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:6: mediaQueryOperator ( ws )?
							{
							dbg.location(424,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery970);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(424,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:25: ( ws )?
							int alt51=2;
							try { dbg.enterSubRule(51);
							try { dbg.enterDecision(51, decisionCanBacktrack[51]);

							int LA51_0 = input.LA(1);
							if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
								alt51=1;
							}
							} finally {dbg.exitDecision(51);}

							switch (alt51) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:25: ws
									{
									dbg.location(424,25);
									pushFollow(FOLLOW_ws_in_mediaQuery972);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(51);}

							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(424,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery979);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(424,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:43: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(55);

					loop55:
					while (true) {
						int alt55=2;
						try { dbg.enterDecision(55, decisionCanBacktrack[55]);

						try {
							isCyclicDecision = true;
							alt55 = dfa55.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(55);}

						switch (alt55) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:45: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(424,45);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:45: ( ws )?
							int alt53=2;
							try { dbg.enterSubRule(53);
							try { dbg.enterDecision(53, decisionCanBacktrack[53]);

							int LA53_0 = input.LA(1);
							if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
								alt53=1;
							}
							} finally {dbg.exitDecision(53);}

							switch (alt53) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:45: ws
									{
									dbg.location(424,45);
									pushFollow(FOLLOW_ws_in_mediaQuery983);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(53);}
							dbg.location(424,49);
							pushFollow(FOLLOW_key_and_in_mediaQuery986);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(424,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:57: ( ws )?
							int alt54=2;
							try { dbg.enterSubRule(54);
							try { dbg.enterDecision(54, decisionCanBacktrack[54]);

							int LA54_0 = input.LA(1);
							if ( (LA54_0==COMMENT||LA54_0==NL||LA54_0==WS) ) {
								alt54=1;
							}
							} finally {dbg.exitDecision(54);}

							switch (alt54) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:57: ws
									{
									dbg.location(424,57);
									pushFollow(FOLLOW_ws_in_mediaQuery988);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(54);}
							dbg.location(424,61);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery991);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop55;
						}
					}
					} finally {dbg.exitSubRule(55);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(425,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1002);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(425,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:23: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(58);

					loop58:
					while (true) {
						int alt58=2;
						try { dbg.enterDecision(58, decisionCanBacktrack[58]);

						try {
							isCyclicDecision = true;
							alt58 = dfa58.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(58);}

						switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:25: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(425,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:25: ( ws )?
							int alt56=2;
							try { dbg.enterSubRule(56);
							try { dbg.enterDecision(56, decisionCanBacktrack[56]);

							int LA56_0 = input.LA(1);
							if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
								alt56=1;
							}
							} finally {dbg.exitDecision(56);}

							switch (alt56) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:25: ws
									{
									dbg.location(425,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1006);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(56);}
							dbg.location(425,29);
							pushFollow(FOLLOW_key_and_in_mediaQuery1009);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(425,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:37: ( ws )?
							int alt57=2;
							try { dbg.enterSubRule(57);
							try { dbg.enterDecision(57, decisionCanBacktrack[57]);

							int LA57_0 = input.LA(1);
							if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
								alt57=1;
							}
							} finally {dbg.exitDecision(57);}

							switch (alt57) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:37: ws
									{
									dbg.location(425,37);
									pushFollow(FOLLOW_ws_in_mediaQuery1011);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(57);}
							dbg.location(425,41);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1014);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop58;
						}
					}
					} finally {dbg.exitSubRule(58);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: {...}? cp_variable
					{
					dbg.location(426,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(426,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1027);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(427, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(429, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:3: ( key_only | NOT )
			int alt60=2;
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			int LA60_0 = input.LA(1);
			if ( (LA60_0==IDENT) ) {
				alt60=1;
			}
			else if ( (LA60_0==NOT) ) {
				alt60=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:5: key_only
					{
					dbg.location(430,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1039);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:16: NOT
					{
					dbg.location(430,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1043); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(431, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(433, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt61=3;
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt61=1;
				}
				break;
			case GEN:
				{
				alt61=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt61=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 61, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:4: IDENT
					{
					dbg.location(434,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1055); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:12: GEN
					{
					dbg.location(434,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1059); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(434,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(434,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1065);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(435, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:437:1: mediaExpression : LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ;
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(437, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:5: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:5: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
			{
			dbg.location(439,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1083); if (state.failed) return;dbg.location(439,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:12: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:12: ws
					{
					dbg.location(439,12);
					pushFollow(FOLLOW_ws_in_mediaExpression1085);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(439,16);
			pushFollow(FOLLOW_mediaFeature_in_mediaExpression1088);
			mediaFeature();
			state._fsp--;
			if (state.failed) return;dbg.location(439,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:29: ( mediaFeatureValue )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			try {
				isCyclicDecision = true;
				alt63 = dfa63.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:29: mediaFeatureValue
					{
					dbg.location(439,29);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1090);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(439,48);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:48: ( ws )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:48: ws
					{
					dbg.location(439,48);
					pushFollow(FOLLOW_ws_in_mediaExpression1093);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(439,52);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1096); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(440, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:442:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(442, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(444,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ws
					{
					dbg.location(444,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1117);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(444,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1120); if (state.failed) return;dbg.location(444,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:15: ( ws )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==COMMENT||LA66_0==NL||LA66_0==WS) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:15: ws
					{
					dbg.location(444,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1122);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(445,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:5: ({...}? cp_expression | expression )
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LPAREN:
			case NOT:
				{
				alt67=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA67_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case IDENT:
				{
				int LA67_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA67_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA67_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA67_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EMS:
				{
				int LA67_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case REM:
				{
				int LA67_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EXS:
				{
				int LA67_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA67_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TIME:
				{
				int LA67_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case FREQ:
				{
				int LA67_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA67_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA67_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case STRING:
				{
				int LA67_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TILDE:
				{
				int LA67_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA67_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case GEN:
				{
				int LA67_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case URI:
				{
				int LA67_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case HASH:
				{
				int LA67_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA67_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA67_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA67_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA67_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:446:9: {...}? cp_expression
					{
					dbg.location(446,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(446,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1141);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:9: expression
					{
					dbg.location(448,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1161);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(450, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:452:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(452, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt69=3;
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt69=1;
				}
				break;
			case GEN:
				{
				alt69=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt69=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:4: IDENT
					{
					dbg.location(453,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1181); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:12: GEN
					{
					dbg.location(453,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1185); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(453,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(453,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:47: ( cp_variable | sass_interpolation_expression_var )
					int alt68=2;
					try { dbg.enterSubRule(68);
					try { dbg.enterDecision(68, decisionCanBacktrack[68]);

					int LA68_0 = input.LA(1);
					if ( (LA68_0==AT_IDENT||(LA68_0 >= BOTTOMCENTER_SYM && LA68_0 <= BOTTOMRIGHT_SYM)||LA68_0==CHARSET_SYM||LA68_0==COUNTER_STYLE_SYM||LA68_0==FONT_FACE_SYM||LA68_0==IMPORT_SYM||(LA68_0 >= LEFTBOTTOM_SYM && LA68_0 <= LEFTTOP_SYM)||LA68_0==MEDIA_SYM||LA68_0==MOZ_DOCUMENT_SYM||LA68_0==NAMESPACE_SYM||LA68_0==PAGE_SYM||(LA68_0 >= RIGHTBOTTOM_SYM && LA68_0 <= RIGHTTOP_SYM)||(LA68_0 >= SASS_AT_ROOT && LA68_0 <= SASS_DEBUG)||(LA68_0 >= SASS_EACH && LA68_0 <= SASS_ELSE)||LA68_0==SASS_EXTEND||(LA68_0 >= SASS_FOR && LA68_0 <= SASS_FUNCTION)||(LA68_0 >= SASS_IF && LA68_0 <= SASS_MIXIN)||(LA68_0 >= SASS_RETURN && LA68_0 <= SASS_WHILE)||(LA68_0 >= TOPCENTER_SYM && LA68_0 <= TOPRIGHT_SYM)||LA68_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt68=1;
					}
					else if ( (LA68_0==HASH_SYMBOL) ) {
						alt68=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 68, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(68);}

					switch (alt68) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:49: cp_variable
							{
							dbg.location(453,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1193);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:63: sass_interpolation_expression_var
							{
							dbg.location(453,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1197);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(68);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(454, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(456, 1);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(458,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt74=0;
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=3;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				int LA74_0 = input.LA(1);
				if ( ((LA74_0 >= AT_IDENT && LA74_0 <= AT_SIGN)||(LA74_0 >= BOTTOMCENTER_SYM && LA74_0 <= BOTTOMRIGHT_SYM)||(LA74_0 >= CHARSET_SYM && LA74_0 <= COLON)||LA74_0==COUNTER_STYLE_SYM||LA74_0==DCOLON||LA74_0==DOT||LA74_0==FONT_FACE_SYM||(LA74_0 >= GEN && LA74_0 <= GREATER)||(LA74_0 >= HASH && LA74_0 <= HASH_SYMBOL)||LA74_0==IDENT||LA74_0==IMPORT_SYM||(LA74_0 >= LBRACKET && LA74_0 <= LEFTTOP_SYM)||LA74_0==LESS_AND||(LA74_0 >= MEDIA_SYM && LA74_0 <= MOZ_DOCUMENT_SYM)||LA74_0==NAMESPACE_SYM||LA74_0==PAGE_SYM||(LA74_0 >= PIPE && LA74_0 <= PLUS)||(LA74_0 >= RIGHTBOTTOM_SYM && LA74_0 <= RIGHTTOP_SYM)||(LA74_0 >= SASS_AT_ROOT && LA74_0 <= SASS_DEBUG)||(LA74_0 >= SASS_EACH && LA74_0 <= SASS_ELSE)||(LA74_0 >= SASS_EXTEND && LA74_0 <= SASS_FUNCTION)||(LA74_0 >= SASS_IF && LA74_0 <= SASS_MIXIN)||(LA74_0 >= SASS_RETURN && LA74_0 <= SASS_WHILE)||LA74_0==STAR||LA74_0==TILDE||(LA74_0 >= TOPCENTER_SYM && LA74_0 <= TOPRIGHT_SYM)||LA74_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt74=1;
				}
				else if ( (LA74_0==SEMI) ) {
					alt74=2;
				}

				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(459,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(459,12);
					pushFollow(FOLLOW_bodyItem_in_body1231);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(459,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					try {
						isCyclicDecision = true;
						alt71 = dfa71.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(459,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:34: ( ws )?
							int alt70=2;
							try { dbg.enterSubRule(70);
							try { dbg.enterDecision(70, decisionCanBacktrack[70]);

							int LA70_0 = input.LA(1);
							if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
								alt70=1;
							}
							} finally {dbg.exitDecision(70);}

							switch (alt70) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:34: ws
									{
									dbg.location(459,34);
									pushFollow(FOLLOW_ws_in_body1241);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(70);}
							dbg.location(459,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1244); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(459,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:45: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:45: ws
							{
							dbg.location(459,45);
							pushFollow(FOLLOW_ws_in_body1248);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:10: ( SEMI ( ws )? )
					{
					dbg.location(461,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:12: SEMI ( ws )?
					{
					dbg.location(461,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1275); if (state.failed) return;dbg.location(461,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:17: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:17: ws
							{
							dbg.location(461,17);
							pushFollow(FOLLOW_ws_in_body1277);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}

					}

					}
					break;

				default :
					if ( cnt74 >= 1 ) break loop74;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(74, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt74++;
			}
			} finally {dbg.exitSubRule(74);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(463, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:1: bodyItem : ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( sass_map )=> sass_map | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(465, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:5: ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( sass_map )=> sass_map | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt75=11;
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case DOT:
				{
				int LA75_1 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( (((synpred13_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA75_2 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=1;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA75_3 = input.LA(2);
				if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA75_4 = input.LA(2);
				if ( (true) ) {
					alt75=4;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case GEN:
			case GREATER:
			case HASH:
			case HASH_SYMBOL:
			case IDENT:
			case LBRACKET:
			case LESS_AND:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt75=4;
				}
				break;
			case MEDIA_SYM:
				{
				int LA75_18 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA75_19 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA75_20 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA75_21 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA75_22 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA75_23 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA75_24 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case AT_IDENT:
				{
				int LA75_25 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA75_26 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt75=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA75_27 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA75_28 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA75_29 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA75_30 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA75_31 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA75_32 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA75_33 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:9: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(467,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1349);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(469,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(469,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1382);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(470,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(470,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1401);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:8: rule
					{
					dbg.location(471,8);
					pushFollow(FOLLOW_rule_in_bodyItem1410);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:11: ( sass_map )=> sass_map
					{
					dbg.location(472,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem1427);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(473,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem1449);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:11: at_rule
					{
					dbg.location(474,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem1461);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:11: {...}? importItem
					{
					dbg.location(476,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(476,40);
					pushFollow(FOLLOW_importItem_in_bodyItem1484);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:11: {...}? sass_debug
					{
					dbg.location(477,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(477,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem1498);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:11: {...}? sass_control
					{
					dbg.location(478,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(478,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem1512);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:11: {...}? sass_function_declaration
					{
					dbg.location(479,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(479,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem1526);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(480, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:1: at_rule : ( media | page | counterStyle | fontFace | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(485, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:5: ( media | page | counterStyle | fontFace | vendorAtRule )
			int alt76=5;
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt76=1;
				}
				break;
			case PAGE_SYM:
				{
				alt76=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt76=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt76=4;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt76=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 76, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:5: media
					{
					dbg.location(487,5);
					pushFollow(FOLLOW_media_in_at_rule1552);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:7: page
					{
					dbg.location(488,7);
					pushFollow(FOLLOW_page_in_at_rule1560);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:7: counterStyle
					{
					dbg.location(489,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule1568);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:7: fontFace
					{
					dbg.location(490,7);
					pushFollow(FOLLOW_fontFace_in_at_rule1576);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:7: vendorAtRule
					{
					dbg.location(491,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule1584);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(492, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(494, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt77=3;
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt77=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt77=2;
				}
				break;
			case AT_IDENT:
				{
				alt77=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:3: moz_document
					{
					dbg.location(495,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule1597);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:18: webkitKeyframes
					{
					dbg.location(495,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule1601);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:36: generic_at_rule
					{
					dbg.location(495,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule1605);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(495, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:497:1: atRuleId : ( IDENT | STRING );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(497, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:2: ( IDENT | STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(498,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(500, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:502:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(502, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(503,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule1633); if (state.failed) return;dbg.location(503,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:16: ( ws )?
			int alt78=2;
			try { dbg.enterSubRule(78);
			try { dbg.enterDecision(78, decisionCanBacktrack[78]);

			int LA78_0 = input.LA(1);
			if ( (LA78_0==COMMENT||LA78_0==NL||LA78_0==WS) ) {
				alt78=1;
			}
			} finally {dbg.exitDecision(78);}

			switch (alt78) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:16: ws
					{
					dbg.location(503,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule1635);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(78);}
			dbg.location(503,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:20: ( atRuleId ( ws )? )?
			int alt80=2;
			try { dbg.enterSubRule(80);
			try { dbg.enterDecision(80, decisionCanBacktrack[80]);

			int LA80_0 = input.LA(1);
			if ( (LA80_0==IDENT||LA80_0==STRING) ) {
				alt80=1;
			}
			} finally {dbg.exitDecision(80);}

			switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:22: atRuleId ( ws )?
					{
					dbg.location(503,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule1640);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(503,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:31: ( ws )?
					int alt79=2;
					try { dbg.enterSubRule(79);
					try { dbg.enterDecision(79, decisionCanBacktrack[79]);

					int LA79_0 = input.LA(1);
					if ( (LA79_0==COMMENT||LA79_0==NL||LA79_0==WS) ) {
						alt79=1;
					}
					} finally {dbg.exitDecision(79);}

					switch (alt79) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:31: ws
							{
							dbg.location(503,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule1642);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(79);}

					}
					break;

			}
			} finally {dbg.exitSubRule(80);}
			dbg.location(504,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule1656); if (state.failed) return;dbg.location(505,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule1667);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(506,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule1677); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(507, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(508, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(510,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1688); if (state.failed) return;dbg.location(510,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:19: ( ws )?
			int alt81=2;
			try { dbg.enterSubRule(81);
			try { dbg.enterDecision(81, decisionCanBacktrack[81]);

			int LA81_0 = input.LA(1);
			if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
				alt81=1;
			}
			} finally {dbg.exitDecision(81);}

			switch (alt81) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:19: ws
					{
					dbg.location(510,19);
					pushFollow(FOLLOW_ws_in_moz_document1690);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(81);}
			dbg.location(510,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:25: moz_document_function ( ws )?
			{
			dbg.location(510,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document1695);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(510,47);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:47: ( ws )?
			int alt82=2;
			try { dbg.enterSubRule(82);
			try { dbg.enterDecision(82, decisionCanBacktrack[82]);

			int LA82_0 = input.LA(1);
			if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {
				alt82=1;
			}
			} finally {dbg.exitDecision(82);}

			switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:47: ws
					{
					dbg.location(510,47);
					pushFollow(FOLLOW_ws_in_moz_document1697);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(82);}

			}
			dbg.location(510,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(85);

			loop85:
			while (true) {
				int alt85=2;
				try { dbg.enterDecision(85, decisionCanBacktrack[85]);

				int LA85_0 = input.LA(1);
				if ( (LA85_0==COMMA) ) {
					alt85=1;
				}

				} finally {dbg.exitDecision(85);}

				switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(510,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document1703); if (state.failed) return;dbg.location(510,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:60: ( ws )?
					int alt83=2;
					try { dbg.enterSubRule(83);
					try { dbg.enterDecision(83, decisionCanBacktrack[83]);

					int LA83_0 = input.LA(1);
					if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
						alt83=1;
					}
					} finally {dbg.exitDecision(83);}

					switch (alt83) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:60: ws
							{
							dbg.location(510,60);
							pushFollow(FOLLOW_ws_in_moz_document1705);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(83);}
					dbg.location(510,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document1708);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(510,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:86: ( ws )?
					int alt84=2;
					try { dbg.enterSubRule(84);
					try { dbg.enterDecision(84, decisionCanBacktrack[84]);

					int LA84_0 = input.LA(1);
					if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
						alt84=1;
					}
					} finally {dbg.exitDecision(84);}

					switch (alt84) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:86: ws
							{
							dbg.location(510,86);
							pushFollow(FOLLOW_ws_in_moz_document1710);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(84);}

					}
					break;

				default :
					break loop85;
				}
			}
			} finally {dbg.exitSubRule(85);}
			dbg.location(511,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document1717); if (state.failed) return;dbg.location(511,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:9: ( ws )?
			int alt86=2;
			try { dbg.enterSubRule(86);
			try { dbg.enterDecision(86, decisionCanBacktrack[86]);

			int LA86_0 = input.LA(1);
			if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
				alt86=1;
			}
			} finally {dbg.exitDecision(86);}

			switch (alt86) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:9: ws
					{
					dbg.location(511,9);
					pushFollow(FOLLOW_ws_in_moz_document1719);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(86);}
			dbg.location(512,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:3: ( body )?
			int alt87=2;
			try { dbg.enterSubRule(87);
			try { dbg.enterDecision(87, decisionCanBacktrack[87]);

			int LA87_0 = input.LA(1);
			if ( ((LA87_0 >= AT_IDENT && LA87_0 <= AT_SIGN)||(LA87_0 >= BOTTOMCENTER_SYM && LA87_0 <= BOTTOMRIGHT_SYM)||(LA87_0 >= CHARSET_SYM && LA87_0 <= COLON)||LA87_0==COUNTER_STYLE_SYM||LA87_0==DCOLON||LA87_0==DOT||LA87_0==FONT_FACE_SYM||(LA87_0 >= GEN && LA87_0 <= GREATER)||(LA87_0 >= HASH && LA87_0 <= HASH_SYMBOL)||LA87_0==IDENT||LA87_0==IMPORT_SYM||(LA87_0 >= LBRACKET && LA87_0 <= LEFTTOP_SYM)||LA87_0==LESS_AND||(LA87_0 >= MEDIA_SYM && LA87_0 <= MOZ_DOCUMENT_SYM)||LA87_0==NAMESPACE_SYM||LA87_0==PAGE_SYM||(LA87_0 >= PIPE && LA87_0 <= PLUS)||(LA87_0 >= RIGHTBOTTOM_SYM && LA87_0 <= RIGHTTOP_SYM)||(LA87_0 >= SASS_AT_ROOT && LA87_0 <= SASS_DEBUG)||(LA87_0 >= SASS_EACH && LA87_0 <= SASS_ELSE)||(LA87_0 >= SASS_EXTEND && LA87_0 <= SASS_FUNCTION)||(LA87_0 >= SASS_IF && LA87_0 <= SASS_MIXIN)||(LA87_0 >= SASS_RETURN && LA87_0 <= SEMI)||LA87_0==STAR||LA87_0==TILDE||(LA87_0 >= TOPCENTER_SYM && LA87_0 <= TOPRIGHT_SYM)||LA87_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt87=1;
			}
			} finally {dbg.exitDecision(87);}

			switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:3: body
					{
					dbg.location(512,3);
					pushFollow(FOLLOW_body_in_moz_document1724);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(87);}
			dbg.location(513,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document1729); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(514, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(516, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(517,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(519, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:522:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(522, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(524,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1766); if (state.failed) return;dbg.location(524,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:23: ( ws )?
			int alt88=2;
			try { dbg.enterSubRule(88);
			try { dbg.enterDecision(88, decisionCanBacktrack[88]);

			int LA88_0 = input.LA(1);
			if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
				alt88=1;
			}
			} finally {dbg.exitDecision(88);}

			switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:23: ws
					{
					dbg.location(524,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1768);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(88);}
			dbg.location(524,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes1771);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(524,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:36: ( ws )?
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( (LA89_0==COMMENT||LA89_0==NL||LA89_0==WS) ) {
				alt89=1;
			}
			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:36: ws
					{
					dbg.location(524,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1773);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}
			dbg.location(525,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes1777); if (state.failed) return;dbg.location(525,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ( ws )?
			int alt90=2;
			try { dbg.enterSubRule(90);
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
				alt90=1;
			}
			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ws
					{
					dbg.location(525,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1779);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(90);}
			dbg.location(526,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(92);

			loop92:
			while (true) {
				int alt92=2;
				try { dbg.enterDecision(92, decisionCanBacktrack[92]);

				int LA92_0 = input.LA(1);
				if ( (LA92_0==IDENT||LA92_0==PERCENTAGE) ) {
					alt92=1;
				}

				} finally {dbg.exitDecision(92);}

				switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(526,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1786);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(526,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:26: ( ws )?
					int alt91=2;
					try { dbg.enterSubRule(91);
					try { dbg.enterDecision(91, decisionCanBacktrack[91]);

					int LA91_0 = input.LA(1);
					if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
						alt91=1;
					}
					} finally {dbg.exitDecision(91);}

					switch (alt91) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:26: ws
							{
							dbg.location(526,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes1788);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(91);}

					}
					break;

				default :
					break loop92;
				}
			}
			} finally {dbg.exitSubRule(92);}
			dbg.location(527,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes1795); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(528, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:1: webkitKeyframesBlock : webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(530, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(532,2);
			pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1807);
			webkitKeyframeSelectors();
			state._fsp--;
			if (state.failed) return;dbg.location(532,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:26: ( ws )?
			int alt93=2;
			try { dbg.enterSubRule(93);
			try { dbg.enterDecision(93, decisionCanBacktrack[93]);

			int LA93_0 = input.LA(1);
			if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {
				alt93=1;
			}
			} finally {dbg.exitDecision(93);}

			switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:26: ws
					{
					dbg.location(532,26);
					pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1809);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(93);}
			dbg.location(533,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock1813); if (state.failed) return;dbg.location(533,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:10: ( ws )?
			int alt94=2;
			try { dbg.enterSubRule(94);
			try { dbg.enterDecision(94, decisionCanBacktrack[94]);

			int LA94_0 = input.LA(1);
			if ( (LA94_0==COMMENT||LA94_0==NL||LA94_0==WS) ) {
				alt94=1;
			}
			} finally {dbg.exitDecision(94);}

			switch (alt94) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:10: ws
					{
					dbg.location(533,10);
					pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1816);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(94);}
			dbg.location(533,14);
			pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock1819);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(534,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:3: ( declarations )?
			int alt95=2;
			try { dbg.enterSubRule(95);
			try { dbg.enterDecision(95, decisionCanBacktrack[95]);

			int LA95_0 = input.LA(1);
			if ( ((LA95_0 >= AT_IDENT && LA95_0 <= AT_SIGN)||(LA95_0 >= BOTTOMCENTER_SYM && LA95_0 <= BOTTOMRIGHT_SYM)||(LA95_0 >= CHARSET_SYM && LA95_0 <= COLON)||LA95_0==COUNTER_STYLE_SYM||LA95_0==DCOLON||LA95_0==DOT||LA95_0==FONT_FACE_SYM||(LA95_0 >= GEN && LA95_0 <= GREATER)||(LA95_0 >= HASH && LA95_0 <= HASH_SYMBOL)||LA95_0==IDENT||LA95_0==IMPORT_SYM||(LA95_0 >= LBRACKET && LA95_0 <= LEFTTOP_SYM)||LA95_0==LESS_AND||(LA95_0 >= MEDIA_SYM && LA95_0 <= MOZ_DOCUMENT_SYM)||LA95_0==NAMESPACE_SYM||LA95_0==PAGE_SYM||(LA95_0 >= PIPE && LA95_0 <= PLUS)||(LA95_0 >= RIGHTBOTTOM_SYM && LA95_0 <= RIGHTTOP_SYM)||(LA95_0 >= SASS_AT_ROOT && LA95_0 <= SASS_DEBUG)||(LA95_0 >= SASS_EACH && LA95_0 <= SASS_ELSE)||(LA95_0 >= SASS_EXTEND && LA95_0 <= SASS_FUNCTION)||(LA95_0 >= SASS_IF && LA95_0 <= SASS_MIXIN)||(LA95_0 >= SASS_RETURN && LA95_0 <= SEMI)||LA95_0==STAR||LA95_0==TILDE||(LA95_0 >= TOPCENTER_SYM && LA95_0 <= TOPRIGHT_SYM)||LA95_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt95=1;
			}
			} finally {dbg.exitDecision(95);}

			switch (alt95) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:3: declarations
					{
					dbg.location(534,3);
					pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock1823);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(95);}
			dbg.location(535,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock1827); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(536, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:1: webkitKeyframeSelectors : ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(538, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:2: ( ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:2: ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*
			{
			dbg.location(540,2);
			if ( input.LA(1)==IDENT||input.LA(1)==PERCENTAGE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(540,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:25: ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(98);

			loop98:
			while (true) {
				int alt98=2;
				try { dbg.enterDecision(98, decisionCanBacktrack[98]);

				try {
					isCyclicDecision = true;
					alt98 = dfa98.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(98);}

				switch (alt98) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:27: ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE )
					{
					dbg.location(540,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:27: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:27: ws
							{
							dbg.location(540,27);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1851);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(540,31);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors1854); if (state.failed) return;dbg.location(540,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:37: ( ws )?
					int alt97=2;
					try { dbg.enterSubRule(97);
					try { dbg.enterDecision(97, decisionCanBacktrack[97]);

					int LA97_0 = input.LA(1);
					if ( (LA97_0==COMMENT||LA97_0==NL||LA97_0==WS) ) {
						alt97=1;
					}
					} finally {dbg.exitDecision(97);}

					switch (alt97) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:37: ws
							{
							dbg.location(540,37);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1856);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(97);}
					dbg.location(540,41);
					if ( input.LA(1)==IDENT||input.LA(1)==PERCENTAGE ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					break loop98;
				}
			}
			} finally {dbg.exitSubRule(98);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(541, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:543:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE ;
	public final void page() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(543, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE
			{
			dbg.location(544,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page1884); if (state.failed) return;dbg.location(544,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:16: ( ws )?
			int alt99=2;
			try { dbg.enterSubRule(99);
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			int LA99_0 = input.LA(1);
			if ( (LA99_0==COMMENT||LA99_0==NL||LA99_0==WS) ) {
				alt99=1;
			}
			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:16: ws
					{
					dbg.location(544,16);
					pushFollow(FOLLOW_ws_in_page1886);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(99);}
			dbg.location(544,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:20: ( IDENT ( ws )? )?
			int alt101=2;
			try { dbg.enterSubRule(101);
			try { dbg.enterDecision(101, decisionCanBacktrack[101]);

			int LA101_0 = input.LA(1);
			if ( (LA101_0==IDENT) ) {
				alt101=1;
			}
			} finally {dbg.exitDecision(101);}

			switch (alt101) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:22: IDENT ( ws )?
					{
					dbg.location(544,22);
					match(input,IDENT,FOLLOW_IDENT_in_page1891); if (state.failed) return;dbg.location(544,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:28: ( ws )?
					int alt100=2;
					try { dbg.enterSubRule(100);
					try { dbg.enterDecision(100, decisionCanBacktrack[100]);

					int LA100_0 = input.LA(1);
					if ( (LA100_0==COMMENT||LA100_0==NL||LA100_0==WS) ) {
						alt100=1;
					}
					} finally {dbg.exitDecision(100);}

					switch (alt100) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:28: ws
							{
							dbg.location(544,28);
							pushFollow(FOLLOW_ws_in_page1893);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(100);}

					}
					break;

			}
			} finally {dbg.exitSubRule(101);}
			dbg.location(544,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:35: ( pseudoPage ( ws )? )?
			int alt103=2;
			try { dbg.enterSubRule(103);
			try { dbg.enterDecision(103, decisionCanBacktrack[103]);

			int LA103_0 = input.LA(1);
			if ( (LA103_0==COLON) ) {
				alt103=1;
			}
			} finally {dbg.exitDecision(103);}

			switch (alt103) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:36: pseudoPage ( ws )?
					{
					dbg.location(544,36);
					pushFollow(FOLLOW_pseudoPage_in_page1900);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(544,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:47: ( ws )?
					int alt102=2;
					try { dbg.enterSubRule(102);
					try { dbg.enterDecision(102, decisionCanBacktrack[102]);

					int LA102_0 = input.LA(1);
					if ( (LA102_0==COMMENT||LA102_0==NL||LA102_0==WS) ) {
						alt102=1;
					}
					} finally {dbg.exitDecision(102);}

					switch (alt102) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:47: ws
							{
							dbg.location(544,47);
							pushFollow(FOLLOW_ws_in_page1902);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(102);}

					}
					break;

			}
			} finally {dbg.exitSubRule(103);}
			dbg.location(545,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page1915); if (state.failed) return;dbg.location(545,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:16: ( ws )?
			int alt104=2;
			try { dbg.enterSubRule(104);
			try { dbg.enterDecision(104, decisionCanBacktrack[104]);

			int LA104_0 = input.LA(1);
			if ( (LA104_0==COMMENT||LA104_0==NL||LA104_0==WS) ) {
				alt104=1;
			}
			} finally {dbg.exitDecision(104);}

			switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:16: ws
					{
					dbg.location(545,16);
					pushFollow(FOLLOW_ws_in_page1917);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(104);}
			dbg.location(548,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:13: ( ( propertyDeclaration | margin ) ( ws )? )?
			int alt107=2;
			try { dbg.enterSubRule(107);
			try { dbg.enterDecision(107, decisionCanBacktrack[107]);

			int LA107_0 = input.LA(1);
			if ( (LA107_0==AT_IDENT||(LA107_0 >= BOTTOMCENTER_SYM && LA107_0 <= BOTTOMRIGHT_SYM)||LA107_0==CHARSET_SYM||LA107_0==COUNTER_STYLE_SYM||LA107_0==FONT_FACE_SYM||LA107_0==GEN||LA107_0==HASH_SYMBOL||LA107_0==IDENT||LA107_0==IMPORT_SYM||(LA107_0 >= LEFTBOTTOM_SYM && LA107_0 <= LEFTTOP_SYM)||(LA107_0 >= MEDIA_SYM && LA107_0 <= MOZ_DOCUMENT_SYM)||LA107_0==NAMESPACE_SYM||LA107_0==PAGE_SYM||(LA107_0 >= RIGHTBOTTOM_SYM && LA107_0 <= RIGHTTOP_SYM)||(LA107_0 >= SASS_AT_ROOT && LA107_0 <= SASS_DEBUG)||(LA107_0 >= SASS_EACH && LA107_0 <= SASS_ELSE)||LA107_0==SASS_EXTEND||(LA107_0 >= SASS_FOR && LA107_0 <= SASS_FUNCTION)||(LA107_0 >= SASS_IF && LA107_0 <= SASS_MIXIN)||(LA107_0 >= SASS_RETURN && LA107_0 <= SASS_WHILE)||LA107_0==STAR||(LA107_0 >= TOPCENTER_SYM && LA107_0 <= TOPRIGHT_SYM)||LA107_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt107=1;
			}
			} finally {dbg.exitDecision(107);}

			switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:14: ( propertyDeclaration | margin ) ( ws )?
					{
					dbg.location(548,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:14: ( propertyDeclaration | margin )
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					try {
						isCyclicDecision = true;
						alt105 = dfa105.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:15: propertyDeclaration
							{
							dbg.location(548,15);
							pushFollow(FOLLOW_propertyDeclaration_in_page1960);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:35: margin
							{
							dbg.location(548,35);
							pushFollow(FOLLOW_margin_in_page1962);
							margin();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}
					dbg.location(548,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:43: ( ws )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					int LA106_0 = input.LA(1);
					if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
						alt106=1;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:43: ws
							{
							dbg.location(548,43);
							pushFollow(FOLLOW_ws_in_page1965);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}

					}
					break;

			}
			} finally {dbg.exitSubRule(107);}
			dbg.location(548,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:49: ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )*
			try { dbg.enterSubRule(112);

			loop112:
			while (true) {
				int alt112=2;
				try { dbg.enterDecision(112, decisionCanBacktrack[112]);

				int LA112_0 = input.LA(1);
				if ( (LA112_0==SEMI) ) {
					alt112=1;
				}

				} finally {dbg.exitDecision(112);}

				switch (alt112) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:50: SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )?
					{
					dbg.location(548,50);
					match(input,SEMI,FOLLOW_SEMI_in_page1971); if (state.failed) return;dbg.location(548,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:55: ( ws )?
					int alt108=2;
					try { dbg.enterSubRule(108);
					try { dbg.enterDecision(108, decisionCanBacktrack[108]);

					int LA108_0 = input.LA(1);
					if ( (LA108_0==COMMENT||LA108_0==NL||LA108_0==WS) ) {
						alt108=1;
					}
					} finally {dbg.exitDecision(108);}

					switch (alt108) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:55: ws
							{
							dbg.location(548,55);
							pushFollow(FOLLOW_ws_in_page1973);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(108);}
					dbg.location(548,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:59: ( ( propertyDeclaration | margin ) ( ws )? )?
					int alt111=2;
					try { dbg.enterSubRule(111);
					try { dbg.enterDecision(111, decisionCanBacktrack[111]);

					int LA111_0 = input.LA(1);
					if ( (LA111_0==AT_IDENT||(LA111_0 >= BOTTOMCENTER_SYM && LA111_0 <= BOTTOMRIGHT_SYM)||LA111_0==CHARSET_SYM||LA111_0==COUNTER_STYLE_SYM||LA111_0==FONT_FACE_SYM||LA111_0==GEN||LA111_0==HASH_SYMBOL||LA111_0==IDENT||LA111_0==IMPORT_SYM||(LA111_0 >= LEFTBOTTOM_SYM && LA111_0 <= LEFTTOP_SYM)||(LA111_0 >= MEDIA_SYM && LA111_0 <= MOZ_DOCUMENT_SYM)||LA111_0==NAMESPACE_SYM||LA111_0==PAGE_SYM||(LA111_0 >= RIGHTBOTTOM_SYM && LA111_0 <= RIGHTTOP_SYM)||(LA111_0 >= SASS_AT_ROOT && LA111_0 <= SASS_DEBUG)||(LA111_0 >= SASS_EACH && LA111_0 <= SASS_ELSE)||LA111_0==SASS_EXTEND||(LA111_0 >= SASS_FOR && LA111_0 <= SASS_FUNCTION)||(LA111_0 >= SASS_IF && LA111_0 <= SASS_MIXIN)||(LA111_0 >= SASS_RETURN && LA111_0 <= SASS_WHILE)||LA111_0==STAR||(LA111_0 >= TOPCENTER_SYM && LA111_0 <= TOPRIGHT_SYM)||LA111_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt111=1;
					}
					} finally {dbg.exitDecision(111);}

					switch (alt111) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:60: ( propertyDeclaration | margin ) ( ws )?
							{
							dbg.location(548,60);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:60: ( propertyDeclaration | margin )
							int alt109=2;
							try { dbg.enterSubRule(109);
							try { dbg.enterDecision(109, decisionCanBacktrack[109]);

							try {
								isCyclicDecision = true;
								alt109 = dfa109.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(109);}

							switch (alt109) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:61: propertyDeclaration
									{
									dbg.location(548,61);
									pushFollow(FOLLOW_propertyDeclaration_in_page1978);
									propertyDeclaration();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:81: margin
									{
									dbg.location(548,81);
									pushFollow(FOLLOW_margin_in_page1980);
									margin();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(109);}
							dbg.location(548,89);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:89: ( ws )?
							int alt110=2;
							try { dbg.enterSubRule(110);
							try { dbg.enterDecision(110, decisionCanBacktrack[110]);

							int LA110_0 = input.LA(1);
							if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
								alt110=1;
							}
							} finally {dbg.exitDecision(110);}

							switch (alt110) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:89: ws
									{
									dbg.location(548,89);
									pushFollow(FOLLOW_ws_in_page1983);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(110);}

							}
							break;

					}
					} finally {dbg.exitSubRule(111);}

					}
					break;

				default :
					break loop112;
				}
			}
			} finally {dbg.exitSubRule(112);}
			dbg.location(549,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page1998); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(550, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(552, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(553,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2015); if (state.failed) return;dbg.location(553,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:25: ( ws )?
			int alt113=2;
			try { dbg.enterSubRule(113);
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			int LA113_0 = input.LA(1);
			if ( (LA113_0==COMMENT||LA113_0==NL||LA113_0==WS) ) {
				alt113=1;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:25: ws
					{
					dbg.location(553,25);
					pushFollow(FOLLOW_ws_in_counterStyle2017);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(553,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2020); if (state.failed) return;dbg.location(553,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:35: ( ws )?
			int alt114=2;
			try { dbg.enterSubRule(114);
			try { dbg.enterDecision(114, decisionCanBacktrack[114]);

			int LA114_0 = input.LA(1);
			if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
				alt114=1;
			}
			} finally {dbg.exitDecision(114);}

			switch (alt114) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:35: ws
					{
					dbg.location(553,35);
					pushFollow(FOLLOW_ws_in_counterStyle2022);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(114);}
			dbg.location(554,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2033); if (state.failed) return;dbg.location(554,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:16: ( ws )?
			int alt115=2;
			try { dbg.enterSubRule(115);
			try { dbg.enterDecision(115, decisionCanBacktrack[115]);

			int LA115_0 = input.LA(1);
			if ( (LA115_0==COMMENT||LA115_0==NL||LA115_0==WS) ) {
				alt115=1;
			}
			} finally {dbg.exitDecision(115);}

			switch (alt115) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:16: ws
					{
					dbg.location(554,16);
					pushFollow(FOLLOW_ws_in_counterStyle2035);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(115);}
			dbg.location(554,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2038);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(555,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:3: ( declarations )?
			int alt116=2;
			try { dbg.enterSubRule(116);
			try { dbg.enterDecision(116, decisionCanBacktrack[116]);

			int LA116_0 = input.LA(1);
			if ( ((LA116_0 >= AT_IDENT && LA116_0 <= AT_SIGN)||(LA116_0 >= BOTTOMCENTER_SYM && LA116_0 <= BOTTOMRIGHT_SYM)||(LA116_0 >= CHARSET_SYM && LA116_0 <= COLON)||LA116_0==COUNTER_STYLE_SYM||LA116_0==DCOLON||LA116_0==DOT||LA116_0==FONT_FACE_SYM||(LA116_0 >= GEN && LA116_0 <= GREATER)||(LA116_0 >= HASH && LA116_0 <= HASH_SYMBOL)||LA116_0==IDENT||LA116_0==IMPORT_SYM||(LA116_0 >= LBRACKET && LA116_0 <= LEFTTOP_SYM)||LA116_0==LESS_AND||(LA116_0 >= MEDIA_SYM && LA116_0 <= MOZ_DOCUMENT_SYM)||LA116_0==NAMESPACE_SYM||LA116_0==PAGE_SYM||(LA116_0 >= PIPE && LA116_0 <= PLUS)||(LA116_0 >= RIGHTBOTTOM_SYM && LA116_0 <= RIGHTTOP_SYM)||(LA116_0 >= SASS_AT_ROOT && LA116_0 <= SASS_DEBUG)||(LA116_0 >= SASS_EACH && LA116_0 <= SASS_ELSE)||(LA116_0 >= SASS_EXTEND && LA116_0 <= SASS_FUNCTION)||(LA116_0 >= SASS_IF && LA116_0 <= SASS_MIXIN)||(LA116_0 >= SASS_RETURN && LA116_0 <= SEMI)||LA116_0==STAR||LA116_0==TILDE||(LA116_0 >= TOPCENTER_SYM && LA116_0 <= TOPRIGHT_SYM)||LA116_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt116=1;
			}
			} finally {dbg.exitDecision(116);}

			switch (alt116) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:3: declarations
					{
					dbg.location(555,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2042);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(116);}
			dbg.location(556,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2053); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(557, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(559, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(560,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2070); if (state.failed) return;dbg.location(560,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:21: ( ws )?
			int alt117=2;
			try { dbg.enterSubRule(117);
			try { dbg.enterDecision(117, decisionCanBacktrack[117]);

			int LA117_0 = input.LA(1);
			if ( (LA117_0==COMMENT||LA117_0==NL||LA117_0==WS) ) {
				alt117=1;
			}
			} finally {dbg.exitDecision(117);}

			switch (alt117) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:21: ws
					{
					dbg.location(560,21);
					pushFollow(FOLLOW_ws_in_fontFace2072);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(117);}
			dbg.location(561,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace2083); if (state.failed) return;dbg.location(561,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:16: ( ws )?
			int alt118=2;
			try { dbg.enterSubRule(118);
			try { dbg.enterDecision(118, decisionCanBacktrack[118]);

			int LA118_0 = input.LA(1);
			if ( (LA118_0==COMMENT||LA118_0==NL||LA118_0==WS) ) {
				alt118=1;
			}
			} finally {dbg.exitDecision(118);}

			switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:16: ws
					{
					dbg.location(561,16);
					pushFollow(FOLLOW_ws_in_fontFace2085);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(561,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace2088);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(562,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:562:3: ( declarations )?
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( ((LA119_0 >= AT_IDENT && LA119_0 <= AT_SIGN)||(LA119_0 >= BOTTOMCENTER_SYM && LA119_0 <= BOTTOMRIGHT_SYM)||(LA119_0 >= CHARSET_SYM && LA119_0 <= COLON)||LA119_0==COUNTER_STYLE_SYM||LA119_0==DCOLON||LA119_0==DOT||LA119_0==FONT_FACE_SYM||(LA119_0 >= GEN && LA119_0 <= GREATER)||(LA119_0 >= HASH && LA119_0 <= HASH_SYMBOL)||LA119_0==IDENT||LA119_0==IMPORT_SYM||(LA119_0 >= LBRACKET && LA119_0 <= LEFTTOP_SYM)||LA119_0==LESS_AND||(LA119_0 >= MEDIA_SYM && LA119_0 <= MOZ_DOCUMENT_SYM)||LA119_0==NAMESPACE_SYM||LA119_0==PAGE_SYM||(LA119_0 >= PIPE && LA119_0 <= PLUS)||(LA119_0 >= RIGHTBOTTOM_SYM && LA119_0 <= RIGHTTOP_SYM)||(LA119_0 >= SASS_AT_ROOT && LA119_0 <= SASS_DEBUG)||(LA119_0 >= SASS_EACH && LA119_0 <= SASS_ELSE)||(LA119_0 >= SASS_EXTEND && LA119_0 <= SASS_FUNCTION)||(LA119_0 >= SASS_IF && LA119_0 <= SASS_MIXIN)||(LA119_0 >= SASS_RETURN && LA119_0 <= SEMI)||LA119_0==STAR||LA119_0==TILDE||(LA119_0 >= TOPCENTER_SYM && LA119_0 <= TOPRIGHT_SYM)||LA119_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt119=1;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:562:3: declarations
					{
					dbg.location(562,3);
					pushFollow(FOLLOW_declarations_in_fontFace2092);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(563,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace2103); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(564, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(566, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(567,4);
			pushFollow(FOLLOW_margin_sym_in_margin2117);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(567,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:15: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:15: ws
					{
					dbg.location(567,15);
					pushFollow(FOLLOW_ws_in_margin2119);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(567,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin2122); if (state.failed) return;dbg.location(567,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:26: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:26: ws
					{
					dbg.location(567,26);
					pushFollow(FOLLOW_ws_in_margin2124);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(567,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin2127);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(567,53);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:53: ( declarations )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( ((LA122_0 >= AT_IDENT && LA122_0 <= AT_SIGN)||(LA122_0 >= BOTTOMCENTER_SYM && LA122_0 <= BOTTOMRIGHT_SYM)||(LA122_0 >= CHARSET_SYM && LA122_0 <= COLON)||LA122_0==COUNTER_STYLE_SYM||LA122_0==DCOLON||LA122_0==DOT||LA122_0==FONT_FACE_SYM||(LA122_0 >= GEN && LA122_0 <= GREATER)||(LA122_0 >= HASH && LA122_0 <= HASH_SYMBOL)||LA122_0==IDENT||LA122_0==IMPORT_SYM||(LA122_0 >= LBRACKET && LA122_0 <= LEFTTOP_SYM)||LA122_0==LESS_AND||(LA122_0 >= MEDIA_SYM && LA122_0 <= MOZ_DOCUMENT_SYM)||LA122_0==NAMESPACE_SYM||LA122_0==PAGE_SYM||(LA122_0 >= PIPE && LA122_0 <= PLUS)||(LA122_0 >= RIGHTBOTTOM_SYM && LA122_0 <= RIGHTTOP_SYM)||(LA122_0 >= SASS_AT_ROOT && LA122_0 <= SASS_DEBUG)||(LA122_0 >= SASS_EACH && LA122_0 <= SASS_ELSE)||(LA122_0 >= SASS_EXTEND && LA122_0 <= SASS_FUNCTION)||(LA122_0 >= SASS_IF && LA122_0 <= SASS_MIXIN)||(LA122_0 >= SASS_RETURN && LA122_0 <= SEMI)||LA122_0==STAR||LA122_0==TILDE||(LA122_0 >= TOPCENTER_SYM && LA122_0 <= TOPRIGHT_SYM)||LA122_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:53: declarations
					{
					dbg.location(567,53);
					pushFollow(FOLLOW_declarations_in_margin2129);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(567,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin2132); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(568, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(570, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:571:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(571,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(588, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:590:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(590, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:7: COLON IDENT
			{
			dbg.location(591,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage2341); if (state.failed) return;dbg.location(591,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage2343); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(592, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:594:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(594, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(595,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(597, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:599:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(599, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:600:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(600,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(602, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:1: property : ({...}? sass_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(604, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:605:5: ({...}? sass_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable )
			int alt123=4;
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA123_1 = input.LA(2);
				if ( (LA123_1==HASH_SYMBOL) ) {
					alt123=1;
				}
				else if ( (LA123_1==COLON||LA123_1==COMMENT||LA123_1==NL||LA123_1==WS) ) {
					alt123=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 123, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
			case MINUS:
				{
				alt123=1;
				}
				break;
			case GEN:
				{
				alt123=3;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt123=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 123, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:609:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(609,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(609,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property2427);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:7: IDENT
					{
					dbg.location(610,7);
					match(input,IDENT,FOLLOW_IDENT_in_property2435); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:7: GEN
					{
					dbg.location(611,7);
					match(input,GEN,FOLLOW_GEN_in_property2443); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:7: {...}? cp_variable
					{
					dbg.location(612,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(612,36);
					pushFollow(FOLLOW_cp_variable_in_property2453);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(614, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:619:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(619, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(621,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map2480);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(621,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map2482); if (state.failed) return;dbg.location(621,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:25: ( ws )?
			int alt124=2;
			try { dbg.enterSubRule(124);
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			int LA124_0 = input.LA(1);
			if ( (LA124_0==COMMENT||LA124_0==NL||LA124_0==WS) ) {
				alt124=1;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:25: ws
					{
					dbg.location(621,25);
					pushFollow(FOLLOW_ws_in_sass_map2484);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(124);}
			dbg.location(621,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map2487); if (state.failed) return;dbg.location(621,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:36: ( ws )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( (LA125_0==COMMENT||LA125_0==NL||LA125_0==WS) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:36: ws
					{
					dbg.location(621,36);
					pushFollow(FOLLOW_ws_in_sass_map2489);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(621,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map2492);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(623,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:623:9: ( sass_map_pairs )?
			int alt126=2;
			try { dbg.enterSubRule(126);
			try { dbg.enterDecision(126, decisionCanBacktrack[126]);

			int LA126_0 = input.LA(1);
			if ( (LA126_0==AT_IDENT||(LA126_0 >= BOTTOMCENTER_SYM && LA126_0 <= BOTTOMRIGHT_SYM)||LA126_0==CHARSET_SYM||LA126_0==COMMA||LA126_0==COUNTER_STYLE_SYM||LA126_0==FONT_FACE_SYM||LA126_0==GEN||LA126_0==HASH_SYMBOL||LA126_0==IDENT||LA126_0==IMPORT_SYM||(LA126_0 >= LEFTBOTTOM_SYM && LA126_0 <= LEFTTOP_SYM)||(LA126_0 >= MEDIA_SYM && LA126_0 <= MOZ_DOCUMENT_SYM)||LA126_0==NAMESPACE_SYM||LA126_0==PAGE_SYM||(LA126_0 >= RIGHTBOTTOM_SYM && LA126_0 <= RIGHTTOP_SYM)||(LA126_0 >= SASS_AT_ROOT && LA126_0 <= SASS_DEBUG)||(LA126_0 >= SASS_EACH && LA126_0 <= SASS_ELSE)||LA126_0==SASS_EXTEND||(LA126_0 >= SASS_FOR && LA126_0 <= SASS_FUNCTION)||(LA126_0 >= SASS_IF && LA126_0 <= SASS_MIXIN)||(LA126_0 >= SASS_RETURN && LA126_0 <= SASS_WHILE)||LA126_0==STRING||(LA126_0 >= TOPCENTER_SYM && LA126_0 <= TOPRIGHT_SYM)||LA126_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt126=1;
			}
			} finally {dbg.exitDecision(126);}

			switch (alt126) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:623:9: sass_map_pairs
					{
					dbg.location(623,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map2511);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(126);}
			dbg.location(624,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map2518); if (state.failed) return;dbg.location(624,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(129);

			loop129:
			while (true) {
				int alt129=3;
				try { dbg.enterDecision(129, decisionCanBacktrack[129]);

				try {
					isCyclicDecision = true;
					alt129 = dfa129.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(129);}

				switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(624,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(624,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:14: ( ws )?
					int alt127=2;
					try { dbg.enterSubRule(127);
					try { dbg.enterDecision(127, decisionCanBacktrack[127]);

					int LA127_0 = input.LA(1);
					if ( (LA127_0==COMMENT||LA127_0==NL||LA127_0==WS) ) {
						alt127=1;
					}
					} finally {dbg.exitDecision(127);}

					switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:14: ws
							{
							dbg.location(624,14);
							pushFollow(FOLLOW_ws_in_sass_map2522);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(127);}
					dbg.location(624,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map2525); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(624,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(624,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:35: ( ws )?
					int alt128=2;
					try { dbg.enterSubRule(128);
					try { dbg.enterDecision(128, decisionCanBacktrack[128]);

					int LA128_0 = input.LA(1);
					if ( (LA128_0==COMMENT||LA128_0==NL||LA128_0==WS) ) {
						alt128=1;
					}
					} finally {dbg.exitDecision(128);}

					switch (alt128) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:35: ws
							{
							dbg.location(624,35);
							pushFollow(FOLLOW_ws_in_sass_map2531);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(128);}
					dbg.location(624,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map2534); if (state.failed) return;
					}

					}
					break;

				default :
					break loop129;
				}
			}
			} finally {dbg.exitSubRule(129);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(625, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(627, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:5: cp_variable
			{
			dbg.location(629,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name2558);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(630, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:632:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(632, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:633:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(634,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt134=0;
			try { dbg.enterSubRule(134);

			loop134:
			while (true) {
				int alt134=3;
				try { dbg.enterDecision(134, decisionCanBacktrack[134]);

				int LA134_0 = input.LA(1);
				if ( (LA134_0==AT_IDENT||(LA134_0 >= BOTTOMCENTER_SYM && LA134_0 <= BOTTOMRIGHT_SYM)||LA134_0==CHARSET_SYM||LA134_0==COUNTER_STYLE_SYM||LA134_0==FONT_FACE_SYM||LA134_0==GEN||LA134_0==HASH_SYMBOL||LA134_0==IDENT||LA134_0==IMPORT_SYM||(LA134_0 >= LEFTBOTTOM_SYM && LA134_0 <= LEFTTOP_SYM)||(LA134_0 >= MEDIA_SYM && LA134_0 <= MOZ_DOCUMENT_SYM)||LA134_0==NAMESPACE_SYM||LA134_0==PAGE_SYM||(LA134_0 >= RIGHTBOTTOM_SYM && LA134_0 <= RIGHTTOP_SYM)||(LA134_0 >= SASS_AT_ROOT && LA134_0 <= SASS_DEBUG)||(LA134_0 >= SASS_EACH && LA134_0 <= SASS_ELSE)||LA134_0==SASS_EXTEND||(LA134_0 >= SASS_FOR && LA134_0 <= SASS_FUNCTION)||(LA134_0 >= SASS_IF && LA134_0 <= SASS_MIXIN)||(LA134_0 >= SASS_RETURN && LA134_0 <= SASS_WHILE)||LA134_0==STRING||(LA134_0 >= TOPCENTER_SYM && LA134_0 <= TOPRIGHT_SYM)||LA134_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt134=1;
				}
				else if ( (LA134_0==COMMA) ) {
					alt134=2;
				}

				} finally {dbg.exitDecision(134);}

				switch (alt134) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(635,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(635,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs2592);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(635,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt131=2;
					try { dbg.enterSubRule(131);
					try { dbg.enterDecision(131, decisionCanBacktrack[131]);

					try {
						isCyclicDecision = true;
						alt131 = dfa131.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(131);}

					switch (alt131) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(635,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:40: ( ws )?
							int alt130=2;
							try { dbg.enterSubRule(130);
							try { dbg.enterDecision(130, decisionCanBacktrack[130]);

							int LA130_0 = input.LA(1);
							if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
								alt130=1;
							}
							} finally {dbg.exitDecision(130);}

							switch (alt130) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:40: ws
									{
									dbg.location(635,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs2602);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(130);}
							dbg.location(635,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2605); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(131);}
					dbg.location(635,52);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:52: ( ws )?
					int alt132=2;
					try { dbg.enterSubRule(132);
					try { dbg.enterDecision(132, decisionCanBacktrack[132]);

					int LA132_0 = input.LA(1);
					if ( (LA132_0==COMMENT||LA132_0==NL||LA132_0==WS) ) {
						alt132=1;
					}
					} finally {dbg.exitDecision(132);}

					switch (alt132) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:52: ws
							{
							dbg.location(635,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2609);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(132);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:10: ( COMMA ( ws )? )
					{
					dbg.location(637,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:12: COMMA ( ws )?
					{
					dbg.location(637,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2636); if (state.failed) return;dbg.location(637,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:18: ( ws )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:18: ws
							{
							dbg.location(637,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2638);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}

					}

					}
					break;

				default :
					if ( cnt134 >= 1 ) break loop134;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(134, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt134++;
			}
			} finally {dbg.exitSubRule(134);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(639, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:1: sass_map_pair : ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(641, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:5: ( ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:9: ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(643,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:9: ( property | STRING )
			int alt135=2;
			try { dbg.enterSubRule(135);
			try { dbg.enterDecision(135, decisionCanBacktrack[135]);

			int LA135_0 = input.LA(1);
			if ( (LA135_0==AT_IDENT||(LA135_0 >= BOTTOMCENTER_SYM && LA135_0 <= BOTTOMRIGHT_SYM)||LA135_0==CHARSET_SYM||LA135_0==COUNTER_STYLE_SYM||LA135_0==FONT_FACE_SYM||LA135_0==GEN||LA135_0==HASH_SYMBOL||LA135_0==IDENT||LA135_0==IMPORT_SYM||(LA135_0 >= LEFTBOTTOM_SYM && LA135_0 <= LEFTTOP_SYM)||(LA135_0 >= MEDIA_SYM && LA135_0 <= MOZ_DOCUMENT_SYM)||LA135_0==NAMESPACE_SYM||LA135_0==PAGE_SYM||(LA135_0 >= RIGHTBOTTOM_SYM && LA135_0 <= RIGHTTOP_SYM)||(LA135_0 >= SASS_AT_ROOT && LA135_0 <= SASS_DEBUG)||(LA135_0 >= SASS_EACH && LA135_0 <= SASS_ELSE)||LA135_0==SASS_EXTEND||(LA135_0 >= SASS_FOR && LA135_0 <= SASS_FUNCTION)||(LA135_0 >= SASS_IF && LA135_0 <= SASS_MIXIN)||(LA135_0 >= SASS_RETURN && LA135_0 <= SASS_WHILE)||(LA135_0 >= TOPCENTER_SYM && LA135_0 <= TOPRIGHT_SYM)||LA135_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt135=1;
			}
			else if ( (LA135_0==STRING) ) {
				alt135=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 135, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(135);}

			switch (alt135) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:10: property
					{
					dbg.location(643,10);
					pushFollow(FOLLOW_property_in_sass_map_pair2674);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:19: STRING
					{
					dbg.location(643,19);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair2676); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(135);}
			dbg.location(643,27);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:27: ( ws )?
			int alt136=2;
			try { dbg.enterSubRule(136);
			try { dbg.enterDecision(136, decisionCanBacktrack[136]);

			int LA136_0 = input.LA(1);
			if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
				alt136=1;
			}
			} finally {dbg.exitDecision(136);}

			switch (alt136) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:27: ws
					{
					dbg.location(643,27);
					pushFollow(FOLLOW_ws_in_sass_map_pair2679);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(136);}
			dbg.location(643,31);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair2682); if (state.failed) return;dbg.location(643,37);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:37: ( ws )?
			int alt137=2;
			try { dbg.enterSubRule(137);
			try { dbg.enterDecision(137, decisionCanBacktrack[137]);

			int LA137_0 = input.LA(1);
			if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
				alt137=1;
			}
			} finally {dbg.exitDecision(137);}

			switch (alt137) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:37: ws
					{
					dbg.location(643,37);
					pushFollow(FOLLOW_ws_in_sass_map_pair2684);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(137);}
			dbg.location(643,41);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair2687);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(643,55);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:55: ( ( ws )? prio )?
			int alt139=2;
			try { dbg.enterSubRule(139);
			try { dbg.enterDecision(139, decisionCanBacktrack[139]);

			try {
				isCyclicDecision = true;
				alt139 = dfa139.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(139);}

			switch (alt139) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:56: ( ws )? prio
					{
					dbg.location(643,56);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:56: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:56: ws
							{
							dbg.location(643,56);
							pushFollow(FOLLOW_ws_in_sass_map_pair2690);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}
					dbg.location(643,60);
					pushFollow(FOLLOW_prio_in_sass_map_pair2693);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(139);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(644, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(646, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:647:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:5: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(648,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:5: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup )
			int alt141=2;
			try { dbg.enterSubRule(141);
			try { dbg.enterDecision(141, decisionCanBacktrack[141]);

			int LA141_0 = input.LA(1);
			if ( (LA141_0==SASS_AT_ROOT) ) {
				alt141=1;
			}
			else if ( (LA141_0==AT_SIGN||LA141_0==COLON||LA141_0==DCOLON||LA141_0==DOT||(LA141_0 >= GEN && LA141_0 <= GREATER)||(LA141_0 >= HASH && LA141_0 <= HASH_SYMBOL)||LA141_0==IDENT||LA141_0==LBRACKET||LA141_0==LESS_AND||LA141_0==MINUS||(LA141_0 >= PIPE && LA141_0 <= PLUS)||LA141_0==SASS_EXTEND_ONLY_SELECTOR||LA141_0==STAR||LA141_0==TILDE) ) {
				alt141=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 141, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(141);}

			switch (alt141) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:6: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(648,6);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:6: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:7: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(648,7);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2718); if (state.failed) return;dbg.location(648,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:20: ( ws selectorsGroup )?
					int alt140=2;
					try { dbg.enterSubRule(140);
					try { dbg.enterDecision(140, decisionCanBacktrack[140]);

					try {
						isCyclicDecision = true;
						alt140 = dfa140.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(140);}

					switch (alt140) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:21: ws selectorsGroup
							{
							dbg.location(648,21);
							pushFollow(FOLLOW_ws_in_rule2721);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(648,24);
							pushFollow(FOLLOW_selectorsGroup_in_rule2723);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(140);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:44: selectorsGroup
					{
					dbg.location(648,44);
					pushFollow(FOLLOW_selectorsGroup_in_rule2730);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(141);}
			dbg.location(648,60);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:60: ( ws )?
			int alt142=2;
			try { dbg.enterSubRule(142);
			try { dbg.enterDecision(142, decisionCanBacktrack[142]);

			int LA142_0 = input.LA(1);
			if ( (LA142_0==COMMENT||LA142_0==NL||LA142_0==WS) ) {
				alt142=1;
			}
			} finally {dbg.exitDecision(142);}

			switch (alt142) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:60: ws
					{
					dbg.location(648,60);
					pushFollow(FOLLOW_ws_in_rule2733);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(142);}
			dbg.location(649,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule2740); if (state.failed) return;dbg.location(649,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:12: ( ws )?
			int alt143=2;
			try { dbg.enterSubRule(143);
			try { dbg.enterDecision(143, decisionCanBacktrack[143]);

			int LA143_0 = input.LA(1);
			if ( (LA143_0==COMMENT||LA143_0==NL||LA143_0==WS) ) {
				alt143=1;
			}
			} finally {dbg.exitDecision(143);}

			switch (alt143) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:12: ws
					{
					dbg.location(649,12);
					pushFollow(FOLLOW_ws_in_rule2742);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(143);}
			dbg.location(649,16);
			pushFollow(FOLLOW_syncToFollow_in_rule2745);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(650,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:9: ( declarations )?
			int alt144=2;
			try { dbg.enterSubRule(144);
			try { dbg.enterDecision(144, decisionCanBacktrack[144]);

			int LA144_0 = input.LA(1);
			if ( ((LA144_0 >= AT_IDENT && LA144_0 <= AT_SIGN)||(LA144_0 >= BOTTOMCENTER_SYM && LA144_0 <= BOTTOMRIGHT_SYM)||(LA144_0 >= CHARSET_SYM && LA144_0 <= COLON)||LA144_0==COUNTER_STYLE_SYM||LA144_0==DCOLON||LA144_0==DOT||LA144_0==FONT_FACE_SYM||(LA144_0 >= GEN && LA144_0 <= GREATER)||(LA144_0 >= HASH && LA144_0 <= HASH_SYMBOL)||LA144_0==IDENT||LA144_0==IMPORT_SYM||(LA144_0 >= LBRACKET && LA144_0 <= LEFTTOP_SYM)||LA144_0==LESS_AND||(LA144_0 >= MEDIA_SYM && LA144_0 <= MOZ_DOCUMENT_SYM)||LA144_0==NAMESPACE_SYM||LA144_0==PAGE_SYM||(LA144_0 >= PIPE && LA144_0 <= PLUS)||(LA144_0 >= RIGHTBOTTOM_SYM && LA144_0 <= RIGHTTOP_SYM)||(LA144_0 >= SASS_AT_ROOT && LA144_0 <= SASS_DEBUG)||(LA144_0 >= SASS_EACH && LA144_0 <= SASS_ELSE)||(LA144_0 >= SASS_EXTEND && LA144_0 <= SASS_FUNCTION)||(LA144_0 >= SASS_IF && LA144_0 <= SASS_MIXIN)||(LA144_0 >= SASS_RETURN && LA144_0 <= SEMI)||LA144_0==STAR||LA144_0==TILDE||(LA144_0 >= TOPCENTER_SYM && LA144_0 <= TOPRIGHT_SYM)||LA144_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt144=1;
			}
			} finally {dbg.exitDecision(144);}

			switch (alt144) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:9: declarations
					{
					dbg.location(650,9);
					pushFollow(FOLLOW_declarations_in_rule2755);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(144);}
			dbg.location(651,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule2762); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(652, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(659, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt158=2;
			try { dbg.enterDecision(158, decisionCanBacktrack[158]);

			try {
				isCyclicDecision = true;
				alt158 = dfa158.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(158);}

			switch (alt158) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(661,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(146);

					loop146:
					while (true) {
						int alt146=2;
						try { dbg.enterDecision(146, decisionCanBacktrack[146]);

						int LA146_0 = input.LA(1);
						if ( (LA146_0==SEMI) ) {
							alt146=1;
						}

						} finally {dbg.exitDecision(146);}

						switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:9: SEMI ( ws )?
							{
							dbg.location(661,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations2796); if (state.failed) return;dbg.location(661,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:14: ( ws )?
							int alt145=2;
							try { dbg.enterSubRule(145);
							try { dbg.enterDecision(145, decisionCanBacktrack[145]);

							int LA145_0 = input.LA(1);
							if ( (LA145_0==COMMENT||LA145_0==NL||LA145_0==WS) ) {
								alt145=1;
							}
							} finally {dbg.exitDecision(145);}

							switch (alt145) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:14: ws
									{
									dbg.location(661,14);
									pushFollow(FOLLOW_ws_in_declarations2798);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(145);}

							}
							break;

						default :
							break loop146;
						}
					}
					} finally {dbg.exitSubRule(146);}
					dbg.location(661,21);
					pushFollow(FOLLOW_declaration_in_declarations2804);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(661,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(151);

					loop151:
					while (true) {
						int alt151=2;
						try { dbg.enterDecision(151, decisionCanBacktrack[151]);

						try {
							isCyclicDecision = true;
							alt151 = dfa151.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(151);}

						switch (alt151) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(661,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt150=2;
							try { dbg.enterSubRule(150);
							try { dbg.enterDecision(150, decisionCanBacktrack[150]);

							try {
								isCyclicDecision = true;
								alt150 = dfa150.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(150);}

							switch (alt150) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(661,35);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(661,36);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:36: ( ws )?
									int alt147=2;
									try { dbg.enterSubRule(147);
									try { dbg.enterDecision(147, decisionCanBacktrack[147]);

									int LA147_0 = input.LA(1);
									if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
										alt147=1;
									}
									} finally {dbg.exitDecision(147);}

									switch (alt147) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:36: ws
											{
											dbg.location(661,36);
											pushFollow(FOLLOW_ws_in_declarations2809);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(147);}
									dbg.location(661,40);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:40: ( SEMI ( ws )? )+
									int cnt149=0;
									try { dbg.enterSubRule(149);

									loop149:
									while (true) {
										int alt149=2;
										try { dbg.enterDecision(149, decisionCanBacktrack[149]);

										int LA149_0 = input.LA(1);
										if ( (LA149_0==SEMI) ) {
											alt149=1;
										}

										} finally {dbg.exitDecision(149);}

										switch (alt149) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:41: SEMI ( ws )?
											{
											dbg.location(661,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations2813); if (state.failed) return;dbg.location(661,46);
											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:46: ( ws )?
											int alt148=2;
											try { dbg.enterSubRule(148);
											try { dbg.enterDecision(148, decisionCanBacktrack[148]);

											int LA148_0 = input.LA(1);
											if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
												alt148=1;
											}
											} finally {dbg.exitDecision(148);}

											switch (alt148) {
												case 1 :
													dbg.enterAlt(1);

													// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:46: ws
													{
													dbg.location(661,46);
													pushFollow(FOLLOW_ws_in_declarations2815);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(148);}

											}
											break;

										default :
											if ( cnt149 >= 1 ) break loop149;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(149, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt149++;
									}
									} finally {dbg.exitSubRule(149);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:53: ws
									{
									dbg.location(661,53);
									pushFollow(FOLLOW_ws_in_declarations2821);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(150);}
							dbg.location(661,57);
							pushFollow(FOLLOW_declaration_in_declarations2824);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop151;
						}
					}
					} finally {dbg.exitSubRule(151);}
					dbg.location(661,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt155=3;
					try { dbg.enterSubRule(155);
					try { dbg.enterDecision(155, decisionCanBacktrack[155]);

					try {
						isCyclicDecision = true;
						alt155 = dfa155.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(155);}

					switch (alt155) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(661,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(661,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:73: ( ws )?
							int alt152=2;
							try { dbg.enterSubRule(152);
							try { dbg.enterDecision(152, decisionCanBacktrack[152]);

							int LA152_0 = input.LA(1);
							if ( (LA152_0==COMMENT||LA152_0==NL||LA152_0==WS) ) {
								alt152=1;
							}
							} finally {dbg.exitDecision(152);}

							switch (alt152) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:73: ws
									{
									dbg.location(661,73);
									pushFollow(FOLLOW_ws_in_declarations2830);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(152);}
							dbg.location(661,77);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:77: ( SEMI ( ws )? )+
							int cnt154=0;
							try { dbg.enterSubRule(154);

							loop154:
							while (true) {
								int alt154=2;
								try { dbg.enterDecision(154, decisionCanBacktrack[154]);

								int LA154_0 = input.LA(1);
								if ( (LA154_0==SEMI) ) {
									alt154=1;
								}

								} finally {dbg.exitDecision(154);}

								switch (alt154) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:78: SEMI ( ws )?
									{
									dbg.location(661,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations2834); if (state.failed) return;dbg.location(661,83);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:83: ( ws )?
									int alt153=2;
									try { dbg.enterSubRule(153);
									try { dbg.enterDecision(153, decisionCanBacktrack[153]);

									int LA153_0 = input.LA(1);
									if ( (LA153_0==COMMENT||LA153_0==NL||LA153_0==WS) ) {
										alt153=1;
									}
									} finally {dbg.exitDecision(153);}

									switch (alt153) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:83: ws
											{
											dbg.location(661,83);
											pushFollow(FOLLOW_ws_in_declarations2836);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(153);}

									}
									break;

								default :
									if ( cnt154 >= 1 ) break loop154;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(154, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt154++;
							}
							} finally {dbg.exitSubRule(154);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:90: ws
							{
							dbg.location(661,90);
							pushFollow(FOLLOW_ws_in_declarations2842);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(155);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:8: ( SEMI ( ws )? )+
					{
					dbg.location(662,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:8: ( SEMI ( ws )? )+
					int cnt157=0;
					try { dbg.enterSubRule(157);

					loop157:
					while (true) {
						int alt157=2;
						try { dbg.enterDecision(157, decisionCanBacktrack[157]);

						int LA157_0 = input.LA(1);
						if ( (LA157_0==SEMI) ) {
							alt157=1;
						}

						} finally {dbg.exitDecision(157);}

						switch (alt157) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:9: SEMI ( ws )?
							{
							dbg.location(662,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations2854); if (state.failed) return;dbg.location(662,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:14: ( ws )?
							int alt156=2;
							try { dbg.enterSubRule(156);
							try { dbg.enterDecision(156, decisionCanBacktrack[156]);

							int LA156_0 = input.LA(1);
							if ( (LA156_0==COMMENT||LA156_0==NL||LA156_0==WS) ) {
								alt156=1;
							}
							} finally {dbg.exitDecision(156);}

							switch (alt156) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:14: ws
									{
									dbg.location(662,14);
									pushFollow(FOLLOW_ws_in_declarations2856);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(156);}

							}
							break;

						default :
							if ( cnt157 >= 1 ) break loop157;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(157, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt157++;
					}
					} finally {dbg.exitSubRule(157);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(663, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(665, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? importItem | GEN )
			int alt163=17;
			try { dbg.enterDecision(163, decisionCanBacktrack[163]);

			int LA163_0 = input.LA(1);
			if ( (LA163_0==SASS_MIXIN) ) {
				int LA163_1 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred22_Css3())) ) {
					alt163=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_VAR) ) {
				int LA163_2 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==IDENT) ) {
				int LA163_3 = input.LA(2);
				if ( (synpred19_Css3()) ) {
					alt163=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt163=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt163=5;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==HASH_SYMBOL) ) {
				int LA163_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( ((synpred20_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=4;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=5;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==MINUS) ) {
				int LA163_5 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( ((synpred20_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=4;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt163=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred25_Css3())) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==GEN) ) {
				int LA163_6 = input.LA(2);
				if ( (synpred19_Css3()) ) {
					alt163=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt163=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt163=5;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}
				else if ( (true) ) {
					alt163=17;
				}

			}
			else if ( (LA163_0==STAR) ) {
				int LA163_7 = input.LA(2);
				if ( (synpred20_Css3()) ) {
					alt163=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt163=5;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==DOT) ) {
				int LA163_8 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred22_Css3())) ) {
					alt163=6;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred23_Css3())) ) {
					alt163=7;
				}
				else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt163=8;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_INCLUDE) ) {
				int LA163_9 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt163=7;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt163=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_AT_ROOT) ) {
				int LA163_10 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (synpred25_Css3()) ) {
					alt163=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==MEDIA_SYM) ) {
				int LA163_11 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==GREATER||LA163_0==PLUS||LA163_0==TILDE) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==AT_SIGN) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==HASH) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==LBRACKET) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==COLON||LA163_0==DCOLON) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==PIPE) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==LESS_AND) && (synpred25_Css3())) {
				alt163=9;
			}
			else if ( (LA163_0==PAGE_SYM) ) {
				int LA163_20 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==COUNTER_STYLE_SYM) ) {
				int LA163_21 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==FONT_FACE_SYM) ) {
				int LA163_22 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==MOZ_DOCUMENT_SYM) ) {
				int LA163_23 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA163_24 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==AT_IDENT) ) {
				int LA163_25 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt163=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_IF) ) {
				int LA163_26 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_FOR) ) {
				int LA163_27 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_EACH) ) {
				int LA163_28 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_WHILE) ) {
				int LA163_29 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_EXTEND) ) {
				int LA163_30 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_DEBUG||LA163_0==SASS_WARN) ) {
				int LA163_31 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_CONTENT) ) {
				int LA163_32 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==SASS_RETURN) ) {
				int LA163_33 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA163_0==IMPORT_SYM) ) {
				int LA163_34 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt163=16;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( ((LA163_0 >= BOTTOMCENTER_SYM && LA163_0 <= BOTTOMRIGHT_SYM)||LA163_0==CHARSET_SYM||(LA163_0 >= LEFTBOTTOM_SYM && LA163_0 <= LEFTTOP_SYM)||LA163_0==NAMESPACE_SYM||(LA163_0 >= RIGHTBOTTOM_SYM && LA163_0 <= RIGHTTOP_SYM)||LA163_0==SASS_ELSE||LA163_0==SASS_FUNCTION||(LA163_0 >= TOPCENTER_SYM && LA163_0 <= TOPRIGHT_SYM)) ) {
				int LA163_35 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred19_Css3())) ) {
					alt163=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred20_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt163=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 163, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 163, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(163);}

			switch (alt163) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(667,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration2885);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:7: ( sass_map )=> sass_map
					{
					dbg.location(668,20);
					pushFollow(FOLLOW_sass_map_in_declaration2898);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(669,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration2910);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(670,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration2922);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(672,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration2961);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:7: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(673,94);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration3006);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(675,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isLessSource()");
					}dbg.location(675,73);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3039);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(675,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:87: ( ( ws )? IMPORTANT_SYM )?
					int alt160=2;
					try { dbg.enterSubRule(160);
					try { dbg.enterDecision(160, decisionCanBacktrack[160]);

					try {
						isCyclicDecision = true;
						alt160 = dfa160.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(160);}

					switch (alt160) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(675,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:88: ( ws )?
							int alt159=2;
							try { dbg.enterSubRule(159);
							try { dbg.enterDecision(159, decisionCanBacktrack[159]);

							int LA159_0 = input.LA(1);
							if ( (LA159_0==COMMENT||LA159_0==NL||LA159_0==WS) ) {
								alt159=1;
							}
							} finally {dbg.exitDecision(159);}

							switch (alt159) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:88: ws
									{
									dbg.location(675,88);
									pushFollow(FOLLOW_ws_in_declaration3042);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(159);}
							dbg.location(675,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3045); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(160);}

					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(676,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(676,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3062);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(676,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:57: ( ( ws )? IMPORTANT_SYM )?
					int alt162=2;
					try { dbg.enterSubRule(162);
					try { dbg.enterDecision(162, decisionCanBacktrack[162]);

					try {
						isCyclicDecision = true;
						alt162 = dfa162.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(162);}

					switch (alt162) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(676,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:58: ( ws )?
							int alt161=2;
							try { dbg.enterSubRule(161);
							try { dbg.enterDecision(161, decisionCanBacktrack[161]);

							int LA161_0 = input.LA(1);
							if ( (LA161_0==COMMENT||LA161_0==NL||LA161_0==WS) ) {
								alt161=1;
							}
							} finally {dbg.exitDecision(161);}

							switch (alt161) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:58: ws
									{
									dbg.location(676,58);
									pushFollow(FOLLOW_ws_in_declaration3065);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(161);}
							dbg.location(676,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3068); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(162);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(677,76);
					pushFollow(FOLLOW_rule_in_declaration3102);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:678:7: {...}? at_rule
					{
					dbg.location(678,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(678,36);
					pushFollow(FOLLOW_at_rule_in_declaration3112);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:7: {...}? sass_control
					{
					dbg.location(679,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(679,25);
					pushFollow(FOLLOW_sass_control_in_declaration3122);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:7: {...}? sass_extend
					{
					dbg.location(680,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(680,25);
					pushFollow(FOLLOW_sass_extend_in_declaration3132);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:7: {...}? sass_debug
					{
					dbg.location(681,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(681,25);
					pushFollow(FOLLOW_sass_debug_in_declaration3142);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:7: {...}? sass_content
					{
					dbg.location(682,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(682,25);
					pushFollow(FOLLOW_sass_content_in_declaration3152);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:7: {...}? sass_function_return
					{
					dbg.location(683,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(683,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration3162);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:684:7: {...}? importItem
					{
					dbg.location(684,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(684,25);
					pushFollow(FOLLOW_importItem_in_declaration3172);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:7: GEN
					{
					dbg.location(685,7);
					match(input,GEN,FOLLOW_GEN_in_declaration3180); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(686, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(692, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(694,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup3214);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(694,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(166);

			loop166:
			while (true) {
				int alt166=2;
				try { dbg.enterDecision(166, decisionCanBacktrack[166]);

				try {
					isCyclicDecision = true;
					alt166 = dfa166.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(166);}

				switch (alt166) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(694,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:19: ( ws )?
					int alt164=2;
					try { dbg.enterSubRule(164);
					try { dbg.enterDecision(164, decisionCanBacktrack[164]);

					int LA164_0 = input.LA(1);
					if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
						alt164=1;
					}
					} finally {dbg.exitDecision(164);}

					switch (alt164) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:19: ws
							{
							dbg.location(694,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup3217);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(164);}
					dbg.location(694,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3220); if (state.failed) return;dbg.location(694,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:29: ( ws )?
					int alt165=2;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					int LA165_0 = input.LA(1);
					if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
						alt165=1;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:29: ws
							{
							dbg.location(694,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup3222);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}
					dbg.location(694,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup3225);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop166;
				}
			}
			} finally {dbg.exitSubRule(166);}
			dbg.location(694,44);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:44: ({...}? COMMA )?
			int alt167=2;
			try { dbg.enterSubRule(167);
			try { dbg.enterDecision(167, decisionCanBacktrack[167]);

			int LA167_0 = input.LA(1);
			if ( (LA167_0==COMMA) ) {
				alt167=1;
			}
			} finally {dbg.exitDecision(167);}

			switch (alt167) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:45: {...}? COMMA
					{
					dbg.location(694,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(694,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3232); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(167);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(695, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:1: selector : ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* ;
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(697, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
			{
			dbg.location(698,8);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:8: ( combinator ( ws )? )?
			int alt169=2;
			try { dbg.enterSubRule(169);
			try { dbg.enterDecision(169, decisionCanBacktrack[169]);

			int LA169_0 = input.LA(1);
			if ( (LA169_0==GREATER||LA169_0==PLUS||LA169_0==TILDE) ) {
				alt169=1;
			}
			} finally {dbg.exitDecision(169);}

			switch (alt169) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:9: combinator ( ws )?
					{
					dbg.location(698,9);
					pushFollow(FOLLOW_combinator_in_selector3253);
					combinator();
					state._fsp--;
					if (state.failed) return;dbg.location(698,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:20: ( ws )?
					int alt168=2;
					try { dbg.enterSubRule(168);
					try { dbg.enterDecision(168, decisionCanBacktrack[168]);

					int LA168_0 = input.LA(1);
					if ( (LA168_0==COMMENT||LA168_0==NL||LA168_0==WS) ) {
						alt168=1;
					}
					} finally {dbg.exitDecision(168);}

					switch (alt168) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:20: ws
							{
							dbg.location(698,20);
							pushFollow(FOLLOW_ws_in_selector3255);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(168);}

					}
					break;

			}
			} finally {dbg.exitSubRule(169);}
			dbg.location(698,26);
			pushFollow(FOLLOW_simpleSelectorSequence_in_selector3260);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(698,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
			try { dbg.enterSubRule(173);

			loop173:
			while (true) {
				int alt173=2;
				try { dbg.enterDecision(173, decisionCanBacktrack[173]);

				try {
					isCyclicDecision = true;
					alt173 = dfa173.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(173);}

				switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
					{
					dbg.location(698,51);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:51: ( ( ( ws )? combinator ( ws )? ) | ws )
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					try {
						isCyclicDecision = true;
						alt172 = dfa172.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:52: ( ( ws )? combinator ( ws )? )
							{
							dbg.location(698,52);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:52: ( ( ws )? combinator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:53: ( ws )? combinator ( ws )?
							{
							dbg.location(698,53);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:53: ( ws )?
							int alt170=2;
							try { dbg.enterSubRule(170);
							try { dbg.enterDecision(170, decisionCanBacktrack[170]);

							int LA170_0 = input.LA(1);
							if ( (LA170_0==COMMENT||LA170_0==NL||LA170_0==WS) ) {
								alt170=1;
							}
							} finally {dbg.exitDecision(170);}

							switch (alt170) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:53: ws
									{
									dbg.location(698,53);
									pushFollow(FOLLOW_ws_in_selector3266);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(170);}
							dbg.location(698,57);
							pushFollow(FOLLOW_combinator_in_selector3269);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(698,68);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:68: ( ws )?
							int alt171=2;
							try { dbg.enterSubRule(171);
							try { dbg.enterDecision(171, decisionCanBacktrack[171]);

							int LA171_0 = input.LA(1);
							if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
								alt171=1;
							}
							} finally {dbg.exitDecision(171);}

							switch (alt171) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:68: ws
									{
									dbg.location(698,68);
									pushFollow(FOLLOW_ws_in_selector3271);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(171);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:73: ws
							{
							dbg.location(698,73);
							pushFollow(FOLLOW_ws_in_selector3275);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}
					dbg.location(698,77);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector3278);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop173;
				}
			}
			} finally {dbg.exitSubRule(173);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(699, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(701, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(702,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(704, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:706:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(706, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:707:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt181=2;
			try { dbg.enterDecision(181, decisionCanBacktrack[181]);

			int LA181_0 = input.LA(1);
			if ( (LA181_0==AT_SIGN||LA181_0==COLON||LA181_0==DCOLON||LA181_0==DOT||(LA181_0 >= HASH && LA181_0 <= HASH_SYMBOL)||LA181_0==LBRACKET||LA181_0==MINUS||LA181_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt181=1;
			}
			else if ( (LA181_0==IDENT) ) {
				int LA181_2 = input.LA(2);
				if ( (LA181_2==HASH_SYMBOL) ) {
					int LA181_7 = input.LA(3);
					if ( (LA181_7==LBRACE) ) {
						alt181=1;
					}
					else if ( (LA181_7==NAME) && (synpred27_Css3())) {
						alt181=2;
					}
					else if ( (LA181_7==AT_SIGN) && (synpred27_Css3())) {
						alt181=2;
					}

				}
				else if ( (LA181_2==PIPE) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==COMMENT||LA181_2==NL||LA181_2==WS) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==SASS_EXTEND_ONLY_SELECTOR) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==AT_SIGN) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==HASH) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==DOT) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==LBRACKET) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==COLON||LA181_2==DCOLON) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==GREATER||LA181_2==PLUS||LA181_2==TILDE) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==COMMA) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==LBRACE) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==RPAREN) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==SEMI) && (synpred27_Css3())) {
					alt181=2;
				}
				else if ( (LA181_2==RBRACE) && (synpred27_Css3())) {
					alt181=2;
				}

			}
			else if ( (LA181_0==STAR) && (synpred27_Css3())) {
				alt181=2;
			}
			else if ( (LA181_0==PIPE) && (synpred27_Css3())) {
				alt181=2;
			}
			else if ( (LA181_0==GEN) && (synpred27_Css3())) {
				alt181=2;
			}
			else if ( (LA181_0==LESS_AND) && (synpred27_Css3())) {
				alt181=2;
			}

			} finally {dbg.exitDecision(181);}

			switch (alt181) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) ) )*
					{
					dbg.location(708,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp )
					int alt174=2;
					try { dbg.enterSubRule(174);
					try { dbg.enterDecision(174, decisionCanBacktrack[174]);

					switch ( input.LA(1) ) {
					case AT_SIGN:
					case COLON:
					case DCOLON:
					case DOT:
					case HASH:
					case LBRACKET:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt174=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA174_2 = input.LA(2);
						if ( (LA174_2==LBRACE) ) {
							alt174=2;
						}
						else if ( (LA174_2==AT_SIGN||LA174_2==NAME) ) {
							alt174=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 174, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						alt174=2;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 174, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(174);}

					switch (alt174) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:10: elementSubsequent
							{
							dbg.location(708,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3332);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:29: {...}? sass_selector_interpolation_exp
							{
							dbg.location(708,29);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(708,47);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3337);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(174);}
					dbg.location(708,80);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:80: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) ) )*
					try { dbg.enterSubRule(177);

					loop177:
					while (true) {
						int alt177=2;
						try { dbg.enterDecision(177, decisionCanBacktrack[177]);

						int LA177_0 = input.LA(1);
						if ( (LA177_0==COMMENT||LA177_0==NL||LA177_0==WS) ) {
							int LA177_1 = input.LA(2);
							if ( (synpred26_Css3()) ) {
								alt177=1;
							}

						}
						else if ( (LA177_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==AT_SIGN) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==HASH) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==HASH_SYMBOL) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==DOT) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==LBRACKET) && (synpred26_Css3())) {
							alt177=1;
						}
						else if ( (LA177_0==COLON||LA177_0==DCOLON) && (synpred26_Css3())) {
							alt177=1;
						}

						} finally {dbg.exitDecision(177);}

						switch (alt177) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:81: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) )
							{
							dbg.location(708,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:95: ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) )
							int alt176=2;
							try { dbg.enterSubRule(176);
							try { dbg.enterDecision(176, decisionCanBacktrack[176]);

							try {
								isCyclicDecision = true;
								alt176 = dfa176.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(176);}

							switch (alt176) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:96: ( ( ws )? elementSubsequent )
									{
									dbg.location(708,96);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:96: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:97: ( ws )? elementSubsequent
									{
									dbg.location(708,97);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:97: ( ws )?
									int alt175=2;
									try { dbg.enterSubRule(175);
									try { dbg.enterDecision(175, decisionCanBacktrack[175]);

									int LA175_0 = input.LA(1);
									if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
										alt175=1;
									}
									} finally {dbg.exitDecision(175);}

									switch (alt175) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:97: ws
											{
											dbg.location(708,97);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3350);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(175);}
									dbg.location(708,101);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3353);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:121: ( ws sass_selector_interpolation_exp )
									{
									dbg.location(708,121);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:121: ( ws sass_selector_interpolation_exp )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:122: ws sass_selector_interpolation_exp
									{
									dbg.location(708,122);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3358);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(708,125);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3360);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;

							}
							} finally {dbg.exitSubRule(176);}

							}
							break;

						default :
							break loop177;
						}
					}
					} finally {dbg.exitSubRule(177);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(709,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence3373);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(709,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(180);

					loop180:
					while (true) {
						int alt180=2;
						try { dbg.enterDecision(180, decisionCanBacktrack[180]);

						int LA180_0 = input.LA(1);
						if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
							int LA180_1 = input.LA(2);
							if ( (synpred28_Css3()) ) {
								alt180=1;
							}

						}
						else if ( (LA180_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==AT_SIGN) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==HASH) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==HASH_SYMBOL) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==DOT) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==LBRACKET) && (synpred28_Css3())) {
							alt180=1;
						}
						else if ( (LA180_0==COLON||LA180_0==DCOLON) && (synpred28_Css3())) {
							alt180=1;
						}

						} finally {dbg.exitDecision(180);}

						switch (alt180) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(709,48);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt179=2;
							try { dbg.enterSubRule(179);
							try { dbg.enterDecision(179, decisionCanBacktrack[179]);

							try {
								isCyclicDecision = true;
								alt179 = dfa179.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(179);}

							switch (alt179) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(709,49);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:50: ( ws )? elementSubsequent
									{
									dbg.location(709,50);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:50: ( ws )?
									int alt178=2;
									try { dbg.enterSubRule(178);
									try { dbg.enterDecision(178, decisionCanBacktrack[178]);

									int LA178_0 = input.LA(1);
									if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
										alt178=1;
									}
									} finally {dbg.exitDecision(178);}

									switch (alt178) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:50: ws
											{
											dbg.location(709,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3385);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(178);}
									dbg.location(709,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3388);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(709,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(709,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3395);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(709,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3397);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(179);}

							}
							break;

						default :
							break loop180;
						}
					}
					} finally {dbg.exitSubRule(180);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(710, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(717, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:718:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(718,5);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON||input.LA(1)==DOT||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==LBRACKET||input.LA(1)==SASS_EXTEND_ONLY_SELECTOR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(719, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:721:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(721, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(723,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt182=2;
			try { dbg.enterSubRule(182);
			try { dbg.enterDecision(182, decisionCanBacktrack[182]);

			int LA182_0 = input.LA(1);
			if ( (LA182_0==IDENT) ) {
				int LA182_1 = input.LA(2);
				if ( (LA182_1==PIPE) && (synpred29_Css3())) {
					alt182=1;
				}
			}
			else if ( (LA182_0==STAR) ) {
				int LA182_2 = input.LA(2);
				if ( (LA182_2==PIPE) && (synpred29_Css3())) {
					alt182=1;
				}
			}
			else if ( (LA182_0==PIPE) && (synpred29_Css3())) {
				alt182=1;
			}
			} finally {dbg.exitDecision(182);}

			switch (alt182) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(723,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector3488);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(182);}
			dbg.location(723,49);
			pushFollow(FOLLOW_elementName_in_typeSelector3492);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(724, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:726:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(726, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(727,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:5: ( namespacePrefixName | STAR )?
			int alt183=3;
			try { dbg.enterSubRule(183);
			try { dbg.enterDecision(183, decisionCanBacktrack[183]);

			int LA183_0 = input.LA(1);
			if ( (LA183_0==IDENT) ) {
				alt183=1;
			}
			else if ( (LA183_0==STAR) ) {
				alt183=2;
			}
			} finally {dbg.exitDecision(183);}

			switch (alt183) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:7: namespacePrefixName
					{
					dbg.location(727,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix3507);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:29: STAR
					{
					dbg.location(727,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix3511); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(183);}
			dbg.location(727,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix3515); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(728, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(731, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:5: ( ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(733,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo )
			int alt184=6;
			try { dbg.enterSubRule(184);
			try { dbg.enterDecision(184, decisionCanBacktrack[184]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt184=1;
				}
				break;
			case AT_SIGN:
				{
				alt184=2;
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt184=3;
				}
				break;
			case DOT:
				{
				alt184=4;
				}
				break;
			case LBRACKET:
				{
				alt184=5;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt184=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 184, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(184);}

			switch (alt184) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:9: {...}? sass_extend_only_selector
					{
					dbg.location(734,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(734,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent3547);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:11: {...}? less_selector_interpolation
					{
					dbg.location(735,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(735,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_elementSubsequent3561);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:8: cssId
					{
					dbg.location(736,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent3571);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:8: cssClass
					{
					dbg.location(737,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent3580);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:11: slAttribute
					{
					dbg.location(738,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent3592);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:11: pseudo
					{
					dbg.location(739,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent3604);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(184);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(741, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(744, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) ) )
			int alt187=2;
			try { dbg.enterDecision(187, decisionCanBacktrack[187]);

			int LA187_0 = input.LA(1);
			if ( (LA187_0==HASH) ) {
				alt187=1;
			}
			else if ( (LA187_0==HASH_SYMBOL) ) {
				alt187=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 187, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(187);}

			switch (alt187) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(745,7);
					match(input,HASH,FOLLOW_HASH_in_cssId3628); if (state.failed) return;dbg.location(745,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:12: ({...}? sass_selector_interpolation_exp )?
					int alt185=2;
					try { dbg.enterSubRule(185);
					try { dbg.enterDecision(185, decisionCanBacktrack[185]);

					int LA185_0 = input.LA(1);
					if ( (LA185_0==IDENT||LA185_0==MINUS) ) {
						alt185=1;
					}
					else if ( (LA185_0==HASH_SYMBOL) ) {
						int LA185_2 = input.LA(2);
						if ( (LA185_2==LBRACE) ) {
							alt185=1;
						}
					}
					} finally {dbg.exitDecision(185);}

					switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(745,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(745,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId3633);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(185);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) )
					{
					dbg.location(747,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation )
					{
					dbg.location(747,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId3655); if (state.failed) return;dbg.location(748,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:748:13: ( NAME |{...}? less_selector_interpolation )
					int alt186=2;
					try { dbg.enterSubRule(186);
					try { dbg.enterDecision(186, decisionCanBacktrack[186]);

					int LA186_0 = input.LA(1);
					if ( (LA186_0==NAME) ) {
						alt186=1;
					}
					else if ( (LA186_0==AT_SIGN) ) {
						alt186=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 186, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(186);}

					switch (alt186) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:748:15: NAME
							{
							dbg.location(748,15);
							match(input,NAME,FOLLOW_NAME_in_cssId3671); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:17: {...}? less_selector_interpolation
							{
							dbg.location(749,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(749,35);
							pushFollow(FOLLOW_less_selector_interpolation_in_cssId3691);
							less_selector_interpolation();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(186);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(752, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:1: cssClass : DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation ) ;
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(758, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:5: ( DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:7: DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation )
			{
			dbg.location(759,7);
			match(input,DOT,FOLLOW_DOT_in_cssClass3742); if (state.failed) return;dbg.location(760,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:9: ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation )
			int alt188=5;
			try { dbg.enterSubRule(188);
			try { dbg.enterDecision(188, decisionCanBacktrack[188]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA188_1 = input.LA(2);
				if ( (LA188_1==HASH_SYMBOL) ) {
					int LA188_6 = input.LA(3);
					if ( (LA188_6==LBRACE) ) {
						alt188=1;
					}
					else if ( (LA188_6==AT_SIGN||LA188_6==NAME) ) {
						alt188=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 188, 6, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA188_1==AT_SIGN||(LA188_1 >= COLON && LA188_1 <= COMMENT)||LA188_1==DCOLON||LA188_1==DOT||LA188_1==GREATER||LA188_1==HASH||(LA188_1 >= LBRACE && LA188_1 <= LBRACKET)||LA188_1==NL||LA188_1==PLUS||LA188_1==RBRACE||LA188_1==RPAREN||LA188_1==SASS_EXTEND_ONLY_SELECTOR||LA188_1==SEMI||LA188_1==TILDE||LA188_1==WS) ) {
					alt188=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 188, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
			case MINUS:
				{
				alt188=1;
				}
				break;
			case NOT:
				{
				alt188=3;
				}
				break;
			case GEN:
				{
				alt188=4;
				}
				break;
			case AT_SIGN:
				{
				alt188=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 188, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(188);}

			switch (alt188) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:14: {...}? sass_selector_interpolation_exp
					{
					dbg.location(761,14);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isScssSource()");
					}dbg.location(761,33);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass3770);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:15: IDENT
					{
					dbg.location(762,15);
					match(input,IDENT,FOLLOW_IDENT_in_cssClass3786); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:15: NOT
					{
					dbg.location(763,15);
					match(input,NOT,FOLLOW_NOT_in_cssClass3802); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:15: GEN
					{
					dbg.location(764,15);
					match(input,GEN,FOLLOW_GEN_in_cssClass3818); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:15: {...}? less_selector_interpolation
					{
					dbg.location(765,15);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isLessSource()");
					}dbg.location(765,33);
					pushFollow(FOLLOW_less_selector_interpolation_in_cssClass3836);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(188);}

			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(767, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:1: elementName : ( IDENT | GEN | ( LESS_AND ( IDENT | MINUS | NUMBER )* ) | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(774, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:5: ( IDENT | GEN | ( LESS_AND ( IDENT | MINUS | NUMBER )* ) | STAR )
			int alt190=4;
			try { dbg.enterDecision(190, decisionCanBacktrack[190]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt190=1;
				}
				break;
			case GEN:
				{
				alt190=2;
				}
				break;
			case LESS_AND:
				{
				alt190=3;
				}
				break;
			case STAR:
				{
				alt190=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 190, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(190);}

			switch (alt190) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:7: IDENT
					{
					dbg.location(775,7);
					match(input,IDENT,FOLLOW_IDENT_in_elementName3874); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:15: GEN
					{
					dbg.location(775,15);
					match(input,GEN,FOLLOW_GEN_in_elementName3878); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:21: ( LESS_AND ( IDENT | MINUS | NUMBER )* )
					{
					dbg.location(775,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:21: ( LESS_AND ( IDENT | MINUS | NUMBER )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:22: LESS_AND ( IDENT | MINUS | NUMBER )*
					{
					dbg.location(775,22);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementName3883); if (state.failed) return;dbg.location(775,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:31: ( IDENT | MINUS | NUMBER )*
					try { dbg.enterSubRule(189);

					loop189:
					while (true) {
						int alt189=2;
						try { dbg.enterDecision(189, decisionCanBacktrack[189]);

						int LA189_0 = input.LA(1);
						if ( (LA189_0==IDENT||LA189_0==MINUS||LA189_0==NUMBER) ) {
							alt189=1;
						}

						} finally {dbg.exitDecision(189);}

						switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(775,31);
							if ( input.LA(1)==IDENT||input.LA(1)==MINUS||input.LA(1)==NUMBER ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							break loop189;
						}
					}
					} finally {dbg.exitSubRule(189);}

					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:60: STAR
					{
					dbg.location(775,60);
					match(input,STAR,FOLLOW_STAR_in_elementName3901); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(776, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:778:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(778, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(779,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute3918); if (state.failed) return;dbg.location(780,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:6: ( namespacePrefix )?
			int alt191=2;
			try { dbg.enterSubRule(191);
			try { dbg.enterDecision(191, decisionCanBacktrack[191]);

			int LA191_0 = input.LA(1);
			if ( (LA191_0==IDENT) ) {
				int LA191_1 = input.LA(2);
				if ( (LA191_1==PIPE) ) {
					alt191=1;
				}
			}
			else if ( (LA191_0==PIPE||LA191_0==STAR) ) {
				alt191=1;
			}
			} finally {dbg.exitDecision(191);}

			switch (alt191) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:6: namespacePrefix
					{
					dbg.location(780,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute3925);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(191);}
			dbg.location(780,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:23: ( ws )?
			int alt192=2;
			try { dbg.enterSubRule(192);
			try { dbg.enterDecision(192, decisionCanBacktrack[192]);

			int LA192_0 = input.LA(1);
			if ( (LA192_0==COMMENT||LA192_0==NL||LA192_0==WS) ) {
				alt192=1;
			}
			} finally {dbg.exitDecision(192);}

			switch (alt192) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:23: ws
					{
					dbg.location(780,23);
					pushFollow(FOLLOW_ws_in_slAttribute3928);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(192);}
			dbg.location(781,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute3939);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(781,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:25: ( ws )?
			int alt193=2;
			try { dbg.enterSubRule(193);
			try { dbg.enterDecision(193, decisionCanBacktrack[193]);

			int LA193_0 = input.LA(1);
			if ( (LA193_0==COMMENT||LA193_0==NL||LA193_0==WS) ) {
				alt193=1;
			}
			} finally {dbg.exitDecision(193);}

			switch (alt193) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:25: ws
					{
					dbg.location(781,25);
					pushFollow(FOLLOW_ws_in_slAttribute3941);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(193);}
			dbg.location(783,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt196=2;
			try { dbg.enterSubRule(196);
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			int LA196_0 = input.LA(1);
			if ( (LA196_0==BEGINS||LA196_0==CONTAINS||LA196_0==DASHMATCH||LA196_0==ENDS||LA196_0==INCLUDES||LA196_0==OPEQ) ) {
				alt196=1;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:784:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(784,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(792,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:792:17: ( ws )?
					int alt194=2;
					try { dbg.enterSubRule(194);
					try { dbg.enterDecision(194, decisionCanBacktrack[194]);

					int LA194_0 = input.LA(1);
					if ( (LA194_0==COMMENT||LA194_0==NL||LA194_0==WS) ) {
						alt194=1;
					}
					} finally {dbg.exitDecision(194);}

					switch (alt194) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:792:17: ws
							{
							dbg.location(792,17);
							pushFollow(FOLLOW_ws_in_slAttribute4155);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(194);}
					dbg.location(793,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute4174);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(794,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:794:17: ( ws )?
					int alt195=2;
					try { dbg.enterSubRule(195);
					try { dbg.enterDecision(195, decisionCanBacktrack[195]);

					int LA195_0 = input.LA(1);
					if ( (LA195_0==COMMENT||LA195_0==NL||LA195_0==WS) ) {
						alt195=1;
					}
					} finally {dbg.exitDecision(195);}

					switch (alt195) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:794:17: ws
							{
							dbg.location(794,17);
							pushFollow(FOLLOW_ws_in_slAttribute4192);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(195);}

					}
					break;

			}
			} finally {dbg.exitSubRule(196);}
			dbg.location(797,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute4217); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(798, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:805:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(805, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:806:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:806:4: IDENT
			{
			dbg.location(806,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName4233); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(807, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:809:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(809, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(810,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(815, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(817, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:818:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:818:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) )
			{
			dbg.location(818,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(819,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:819:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) )
			int alt205=2;
			try { dbg.enterSubRule(205);
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==GEN||LA205_0==IDENT) ) {
				alt205=1;
			}
			else if ( (LA205_0==NOT) ) {
				alt205=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 205, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:820:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(820,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:820:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:821:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(821,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(822,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:822:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt201=2;
					try { dbg.enterSubRule(201);
					try { dbg.enterDecision(201, decisionCanBacktrack[201]);

					try {
						isCyclicDecision = true;
						alt201 = dfa201.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(201);}

					switch (alt201) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(823,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:25: ( ws )?
							int alt197=2;
							try { dbg.enterSubRule(197);
							try { dbg.enterDecision(197, decisionCanBacktrack[197]);

							int LA197_0 = input.LA(1);
							if ( (LA197_0==COMMENT||LA197_0==NL||LA197_0==WS) ) {
								alt197=1;
							}
							} finally {dbg.exitDecision(197);}

							switch (alt197) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:25: ws
									{
									dbg.location(823,25);
									pushFollow(FOLLOW_ws_in_pseudo4425);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(197);}
							dbg.location(823,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4428); if (state.failed) return;dbg.location(823,36);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:36: ( ws )?
							int alt198=2;
							try { dbg.enterSubRule(198);
							try { dbg.enterDecision(198, decisionCanBacktrack[198]);

							int LA198_0 = input.LA(1);
							if ( (LA198_0==COMMENT||LA198_0==NL||LA198_0==WS) ) {
								alt198=1;
							}
							} finally {dbg.exitDecision(198);}

							switch (alt198) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:36: ws
									{
									dbg.location(823,36);
									pushFollow(FOLLOW_ws_in_pseudo4430);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(198);}
							dbg.location(823,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:40: ( ( expression ( ws )? ) | STAR )?
							int alt200=3;
							try { dbg.enterSubRule(200);
							try { dbg.enterDecision(200, decisionCanBacktrack[200]);

							int LA200_0 = input.LA(1);
							if ( ((LA200_0 >= ANGLE && LA200_0 <= AT_IDENT)||(LA200_0 >= BOTTOMCENTER_SYM && LA200_0 <= BOTTOMRIGHT_SYM)||LA200_0==CHARSET_SYM||LA200_0==COUNTER_STYLE_SYM||LA200_0==DIMENSION||LA200_0==EMS||LA200_0==EXS||(LA200_0 >= FONT_FACE_SYM && LA200_0 <= FREQ)||LA200_0==GEN||(LA200_0 >= HASH && LA200_0 <= HASH_SYMBOL)||LA200_0==IDENT||LA200_0==IMPORT_SYM||(LA200_0 >= LEFTBOTTOM_SYM && LA200_0 <= LENGTH)||LA200_0==LESS_JS_STRING||(LA200_0 >= MEDIA_SYM && LA200_0 <= MOZ_DOCUMENT_SYM)||LA200_0==NAMESPACE_SYM||LA200_0==NUMBER||(LA200_0 >= PAGE_SYM && LA200_0 <= PERCENTAGE_SYMBOL)||LA200_0==PLUS||(LA200_0 >= REM && LA200_0 <= RIGHTTOP_SYM)||(LA200_0 >= SASS_AT_ROOT && LA200_0 <= SASS_DEBUG)||(LA200_0 >= SASS_EACH && LA200_0 <= SASS_ELSE)||LA200_0==SASS_EXTEND||(LA200_0 >= SASS_FOR && LA200_0 <= SASS_FUNCTION)||(LA200_0 >= SASS_IF && LA200_0 <= SASS_MIXIN)||(LA200_0 >= SASS_RETURN && LA200_0 <= SASS_WHILE)||LA200_0==STRING||(LA200_0 >= TILDE && LA200_0 <= TOPRIGHT_SYM)||LA200_0==URI||LA200_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt200=1;
							}
							else if ( (LA200_0==STAR) ) {
								alt200=2;
							}
							} finally {dbg.exitDecision(200);}

							switch (alt200) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:42: ( expression ( ws )? )
									{
									dbg.location(823,42);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:43: expression ( ws )?
									{
									dbg.location(823,43);
									pushFollow(FOLLOW_expression_in_pseudo4436);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(823,54);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:54: ( ws )?
									int alt199=2;
									try { dbg.enterSubRule(199);
									try { dbg.enterDecision(199, decisionCanBacktrack[199]);

									int LA199_0 = input.LA(1);
									if ( (LA199_0==COMMENT||LA199_0==NL||LA199_0==WS) ) {
										alt199=1;
									}
									} finally {dbg.exitDecision(199);}

									switch (alt199) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:54: ws
											{
											dbg.location(823,54);
											pushFollow(FOLLOW_ws_in_pseudo4438);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(199);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:61: STAR
									{
									dbg.location(823,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo4444); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(200);}
							dbg.location(823,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4449); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(201);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					{
					dbg.location(827,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:19: NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN
					{
					dbg.location(827,19);
					match(input,NOT,FOLLOW_NOT_in_pseudo4528); if (state.failed) return;dbg.location(827,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:23: ( ws )?
					int alt202=2;
					try { dbg.enterSubRule(202);
					try { dbg.enterDecision(202, decisionCanBacktrack[202]);

					int LA202_0 = input.LA(1);
					if ( (LA202_0==COMMENT||LA202_0==NL||LA202_0==WS) ) {
						alt202=1;
					}
					} finally {dbg.exitDecision(202);}

					switch (alt202) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:23: ws
							{
							dbg.location(827,23);
							pushFollow(FOLLOW_ws_in_pseudo4530);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(202);}
					dbg.location(827,27);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4533); if (state.failed) return;dbg.location(827,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:34: ( ws )?
					int alt203=2;
					try { dbg.enterSubRule(203);
					try { dbg.enterDecision(203, decisionCanBacktrack[203]);

					int LA203_0 = input.LA(1);
					if ( (LA203_0==COMMENT||LA203_0==NL||LA203_0==WS) ) {
						alt203=1;
					}
					} finally {dbg.exitDecision(203);}

					switch (alt203) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:34: ws
							{
							dbg.location(827,34);
							pushFollow(FOLLOW_ws_in_pseudo4535);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(203);}
					dbg.location(827,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:38: ( simpleSelectorSequence )?
					int alt204=2;
					try { dbg.enterSubRule(204);
					try { dbg.enterDecision(204, decisionCanBacktrack[204]);

					int LA204_0 = input.LA(1);
					if ( (LA204_0==AT_SIGN||LA204_0==COLON||LA204_0==DCOLON||LA204_0==DOT||LA204_0==GEN||(LA204_0 >= HASH && LA204_0 <= HASH_SYMBOL)||LA204_0==IDENT||LA204_0==LBRACKET||LA204_0==LESS_AND||LA204_0==MINUS||LA204_0==PIPE||LA204_0==SASS_EXTEND_ONLY_SELECTOR||LA204_0==STAR) ) {
						alt204=1;
					}
					} finally {dbg.exitDecision(204);}

					switch (alt204) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:38: simpleSelectorSequence
							{
							dbg.location(827,38);
							pushFollow(FOLLOW_simpleSelectorSequence_in_pseudo4538);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(204);}
					dbg.location(827,62);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4541); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(205);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(829, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:831:1: propertyDeclaration : ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(831, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:832:5: ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue )
			int alt214=2;
			try { dbg.enterDecision(214, decisionCanBacktrack[214]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA214_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt214=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA214_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt214=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA214_3 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt214=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUS:
				{
				int LA214_4 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt214=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA214_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt214=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA214_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt214=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA214_7 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt214=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt214=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 214, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 214, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(214);}

			switch (alt214) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:5: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(833,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:5: ( STAR )?
					int alt206=2;
					try { dbg.enterSubRule(206);
					try { dbg.enterDecision(206, decisionCanBacktrack[206]);

					int LA206_0 = input.LA(1);
					if ( (LA206_0==STAR) ) {
						alt206=1;
					}
					} finally {dbg.exitDecision(206);}

					switch (alt206) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:5: STAR
							{
							dbg.location(833,5);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4579); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(206);}
					dbg.location(833,11);
					pushFollow(FOLLOW_property_in_propertyDeclaration4582);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(833,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:20: ( ws )?
					int alt207=2;
					try { dbg.enterSubRule(207);
					try { dbg.enterDecision(207, decisionCanBacktrack[207]);

					int LA207_0 = input.LA(1);
					if ( (LA207_0==COMMENT||LA207_0==NL||LA207_0==WS) ) {
						alt207=1;
					}
					} finally {dbg.exitDecision(207);}

					switch (alt207) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:20: ws
							{
							dbg.location(833,20);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4584);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(207);}
					dbg.location(833,24);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4587); if (state.failed) return;dbg.location(833,30);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:30: ( ws )?
					int alt208=2;
					try { dbg.enterSubRule(208);
					try { dbg.enterDecision(208, decisionCanBacktrack[208]);

					int LA208_0 = input.LA(1);
					if ( (LA208_0==COMMENT||LA208_0==NL||LA208_0==WS) ) {
						alt208=1;
					}
					} finally {dbg.exitDecision(208);}

					switch (alt208) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:30: ws
							{
							dbg.location(833,30);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4589);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(208);}
					dbg.location(833,34);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration4592);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(833,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:48: ( ( ws )? prio )?
					int alt210=2;
					try { dbg.enterSubRule(210);
					try { dbg.enterDecision(210, decisionCanBacktrack[210]);

					try {
						isCyclicDecision = true;
						alt210 = dfa210.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(210);}

					switch (alt210) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:49: ( ws )? prio
							{
							dbg.location(833,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:49: ( ws )?
							int alt209=2;
							try { dbg.enterSubRule(209);
							try { dbg.enterDecision(209, decisionCanBacktrack[209]);

							int LA209_0 = input.LA(1);
							if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
								alt209=1;
							}
							} finally {dbg.exitDecision(209);}

							switch (alt209) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:49: ws
									{
									dbg.location(833,49);
									pushFollow(FOLLOW_ws_in_propertyDeclaration4595);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(209);}
							dbg.location(833,53);
							pushFollow(FOLLOW_prio_in_propertyDeclaration4598);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(210);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(834,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(834,36);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:36: ( STAR )?
					int alt211=2;
					try { dbg.enterSubRule(211);
					try { dbg.enterDecision(211, decisionCanBacktrack[211]);

					int LA211_0 = input.LA(1);
					if ( (LA211_0==STAR) ) {
						alt211=1;
					}
					} finally {dbg.exitDecision(211);}

					switch (alt211) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:36: STAR
							{
							dbg.location(834,36);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4610); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(211);}
					dbg.location(834,42);
					pushFollow(FOLLOW_property_in_propertyDeclaration4613);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(834,51);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:51: ( ws )?
					int alt212=2;
					try { dbg.enterSubRule(212);
					try { dbg.enterDecision(212, decisionCanBacktrack[212]);

					int LA212_0 = input.LA(1);
					if ( (LA212_0==COMMENT||LA212_0==NL||LA212_0==WS) ) {
						alt212=1;
					}
					} finally {dbg.exitDecision(212);}

					switch (alt212) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:51: ws
							{
							dbg.location(834,51);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4615);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(212);}
					dbg.location(834,55);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4618); if (state.failed) return;dbg.location(834,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:61: ( ws )?
					int alt213=2;
					try { dbg.enterSubRule(213);
					try { dbg.enterDecision(213, decisionCanBacktrack[213]);

					int LA213_0 = input.LA(1);
					if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
						alt213=1;
					}
					} finally {dbg.exitDecision(213);}

					switch (alt213) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:61: ws
							{
							dbg.location(834,61);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4620);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(213);}
					dbg.location(834,65);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration4623);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(835, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(844, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:5: ({...}? cp_expression_list | propertyValue )
			int alt215=2;
			try { dbg.enterDecision(215, decisionCanBacktrack[215]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LPAREN:
			case NOT:
				{
				alt215=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA215_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case IDENT:
				{
				int LA215_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA215_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA215_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA215_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case EMS:
				{
				int LA215_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case REM:
				{
				int LA215_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case EXS:
				{
				int LA215_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA215_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case TIME:
				{
				int LA215_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case FREQ:
				{
				int LA215_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA215_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA215_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case STRING:
				{
				int LA215_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case TILDE:
				{
				int LA215_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA215_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case GEN:
				{
				int LA215_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case URI:
				{
				int LA215_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case HASH:
				{
				int LA215_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (true) ) {
					alt215=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA215_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt215=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt215=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 215, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA215_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt215=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt215=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 215, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA215_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 215, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA215_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt215=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 215, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 215, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(215);}

			switch (alt215) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:5: {...}? cp_expression_list
					{
					dbg.location(846,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(846,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue4657);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:847:7: propertyValue
					{
					dbg.location(847,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue4665);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(848, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(850, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:2: ( expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:852:9: expression
			{
			dbg.location(852,9);
			pushFollow(FOLLOW_expression_in_propertyValue4687);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(853, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(856, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(859,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt216=0;
			try { dbg.enterSubRule(216);

			loop216:
			while (true) {
				int alt216=2;
				try { dbg.enterDecision(216, decisionCanBacktrack[216]);

				int LA216_0 = input.LA(1);
				if ( ((LA216_0 >= A && LA216_0 <= ANGLE)||(LA216_0 >= AT_SIGN && LA216_0 <= L)||(LA216_0 >= LBRACKET && LA216_0 <= R)||(LA216_0 >= RBRACKET && LA216_0 <= SASS_RETURN)||(LA216_0 >= SASS_WARN && LA216_0 <= SASS_WHILE)||(LA216_0 >= STRING && LA216_0 <= Z)) ) {
					alt216=1;
				}

				} finally {dbg.exitDecision(216);}

				switch (alt216) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(859,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_RETURN)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt216 >= 1 ) break loop216;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(216, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt216++;
			}
			} finally {dbg.exitSubRule(216);}
			dbg.location(859,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(860, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(864, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:869:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(870, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:872:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(872, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:876:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:877:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(877, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:879:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(879, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:13: SEMI
			{
			dbg.location(884,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI4857); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(885, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:888:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(888, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(893, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(895, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:7: IMPORTANT_SYM
			{
			dbg.location(896,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio4902); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(897, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(899, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(900,7);
			pushFollow(FOLLOW_term_in_expression4919);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(900,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(220);

			loop220:
			while (true) {
				int alt220=2;
				try { dbg.enterDecision(220, decisionCanBacktrack[220]);

				try {
					isCyclicDecision = true;
					alt220 = dfa220.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(220);}

				switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(900,66);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt219=3;
					try { dbg.enterSubRule(219);
					try { dbg.enterDecision(219, decisionCanBacktrack[219]);

					try {
						isCyclicDecision = true;
						alt219 = dfa219.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(219);}

					switch (alt219) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:68: ws
							{
							dbg.location(900,68);
							pushFollow(FOLLOW_ws_in_expression4951);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(900,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:74: ( ws )? operator ( ws )?
							{
							dbg.location(900,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:74: ( ws )?
							int alt217=2;
							try { dbg.enterSubRule(217);
							try { dbg.enterDecision(217, decisionCanBacktrack[217]);

							int LA217_0 = input.LA(1);
							if ( (LA217_0==COMMENT||LA217_0==NL||LA217_0==WS) ) {
								alt217=1;
							}
							} finally {dbg.exitDecision(217);}

							switch (alt217) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:74: ws
									{
									dbg.location(900,74);
									pushFollow(FOLLOW_ws_in_expression4956);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(217);}
							dbg.location(900,78);
							pushFollow(FOLLOW_operator_in_expression4959);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(900,87);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:87: ( ws )?
							int alt218=2;
							try { dbg.enterSubRule(218);
							try { dbg.enterDecision(218, decisionCanBacktrack[218]);

							int LA218_0 = input.LA(1);
							if ( (LA218_0==COMMENT||LA218_0==NL||LA218_0==WS) ) {
								alt218=1;
							}
							} finally {dbg.exitDecision(218);}

							switch (alt218) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:87: ws
									{
									dbg.location(900,87);
									pushFollow(FOLLOW_ws_in_expression4961);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(218);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(219);}
					dbg.location(900,109);
					pushFollow(FOLLOW_term_in_expression4970);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop220;
				}
			}
			} finally {dbg.exitSubRule(220);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(901, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(903, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol )
			{
			dbg.location(905,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:5: ( unaryOperator ( ws )? )?
			int alt222=2;
			try { dbg.enterSubRule(222);
			try { dbg.enterDecision(222, decisionCanBacktrack[222]);

			int LA222_0 = input.LA(1);
			if ( (LA222_0==MINUS||LA222_0==PLUS) ) {
				alt222=1;
			}
			} finally {dbg.exitDecision(222);}

			switch (alt222) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:7: unaryOperator ( ws )?
					{
					dbg.location(905,7);
					pushFollow(FOLLOW_unaryOperator_in_term4995);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(905,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:21: ( ws )?
					int alt221=2;
					try { dbg.enterSubRule(221);
					try { dbg.enterDecision(221, decisionCanBacktrack[221]);

					int LA221_0 = input.LA(1);
					if ( (LA221_0==COMMENT||LA221_0==NL||LA221_0==WS) ) {
						alt221=1;
					}
					} finally {dbg.exitDecision(221);}

					switch (alt221) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:21: ws
							{
							dbg.location(905,21);
							pushFollow(FOLLOW_ws_in_term4997);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(221);}

					}
					break;

			}
			} finally {dbg.exitSubRule(222);}
			dbg.location(906,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:5: ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol )
			int alt223=22;
			try { dbg.enterSubRule(223);
			try { dbg.enterDecision(223, decisionCanBacktrack[223]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA223_1 = input.LA(2);
				if ( (synpred31_Css3()) ) {
					alt223=1;
				}
				else if ( (true) ) {
					alt223=2;
				}

				}
				break;
			case NUMBER:
				{
				alt223=3;
				}
				break;
			case PERCENTAGE:
				{
				alt223=4;
				}
				break;
			case LENGTH:
				{
				alt223=5;
				}
				break;
			case EMS:
				{
				alt223=6;
				}
				break;
			case REM:
				{
				alt223=7;
				}
				break;
			case EXS:
				{
				alt223=8;
				}
				break;
			case ANGLE:
				{
				alt223=9;
				}
				break;
			case TIME:
				{
				alt223=10;
				}
				break;
			case FREQ:
				{
				alt223=11;
				}
				break;
			case RESOLUTION:
				{
				alt223=12;
				}
				break;
			case DIMENSION:
				{
				alt223=13;
				}
				break;
			case STRING:
				{
				alt223=14;
				}
				break;
			case TILDE:
				{
				alt223=15;
				}
				break;
			case LESS_JS_STRING:
				{
				alt223=16;
				}
				break;
			case GEN:
				{
				alt223=17;
				}
				break;
			case URI:
				{
				alt223=18;
				}
				break;
			case HASH:
				{
				alt223=19;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt223=20;
				}
				break;
			case HASH_SYMBOL:
				{
				alt223=21;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt223=22;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 223, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(223);}

			switch (alt223) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(907,36);
					pushFollow(FOLLOW_function_in_term5026);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:908:11: IDENT
					{
					dbg.location(908,11);
					match(input,IDENT,FOLLOW_IDENT_in_term5039); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:909:11: NUMBER
					{
					dbg.location(909,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term5051); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:910:11: PERCENTAGE
					{
					dbg.location(910,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term5063); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:911:11: LENGTH
					{
					dbg.location(911,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term5075); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:11: EMS
					{
					dbg.location(912,11);
					match(input,EMS,FOLLOW_EMS_in_term5087); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:913:11: REM
					{
					dbg.location(913,11);
					match(input,REM,FOLLOW_REM_in_term5099); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:11: EXS
					{
					dbg.location(914,11);
					match(input,EXS,FOLLOW_EXS_in_term5111); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:915:11: ANGLE
					{
					dbg.location(915,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term5123); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:11: TIME
					{
					dbg.location(916,11);
					match(input,TIME,FOLLOW_TIME_in_term5135); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:11: FREQ
					{
					dbg.location(917,11);
					match(input,FREQ,FOLLOW_FREQ_in_term5147); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:918:11: RESOLUTION
					{
					dbg.location(918,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term5159); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:11: DIMENSION
					{
					dbg.location(919,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term5171); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:11: STRING
					{
					dbg.location(920,11);
					match(input,STRING,FOLLOW_STRING_in_term5188); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:921:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(921,11);
					match(input,TILDE,FOLLOW_TILDE_in_term5200); if (state.failed) return;dbg.location(921,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:922:11: LESS_JS_STRING
					{
					dbg.location(922,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term5223); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:11: GEN
					{
					dbg.location(923,11);
					match(input,GEN,FOLLOW_GEN_in_term5238); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:11: URI
					{
					dbg.location(924,11);
					match(input,URI,FOLLOW_URI_in_term5250); if (state.failed) return;
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:925:11: hexColor
					{
					dbg.location(925,11);
					pushFollow(FOLLOW_hexColor_in_term5262);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:926:11: {...}? cp_variable
					{
					dbg.location(926,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(926,40);
					pushFollow(FOLLOW_cp_variable_in_term5276);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(927,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(927,40);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term5290);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:928:11: {...}? cp_term_symbol
					{
					dbg.location(928,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(928,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term5304);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(223);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(930, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(935, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:7: PERCENTAGE_SYMBOL
			{
			dbg.location(936,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5331); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(937, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(939, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(940,5);
			pushFollow(FOLLOW_functionName_in_function5347);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(940,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:18: ( ws )?
			int alt224=2;
			try { dbg.enterSubRule(224);
			try { dbg.enterDecision(224, decisionCanBacktrack[224]);

			int LA224_0 = input.LA(1);
			if ( (LA224_0==COMMENT||LA224_0==NL||LA224_0==WS) ) {
				alt224=1;
			}
			} finally {dbg.exitDecision(224);}

			switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:18: ws
					{
					dbg.location(940,18);
					pushFollow(FOLLOW_ws_in_function5349);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(224);}
			dbg.location(941,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function5354); if (state.failed) return;dbg.location(941,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:10: ( ws )?
			int alt225=2;
			try { dbg.enterSubRule(225);
			try { dbg.enterDecision(225, decisionCanBacktrack[225]);

			int LA225_0 = input.LA(1);
			if ( (LA225_0==COMMENT||LA225_0==NL||LA225_0==WS) ) {
				alt225=1;
			}
			} finally {dbg.exitDecision(225);}

			switch (alt225) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:10: ws
					{
					dbg.location(941,10);
					pushFollow(FOLLOW_ws_in_function5356);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(225);}
			dbg.location(942,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:3: ( fnAttributes |)
			int alt226=2;
			try { dbg.enterSubRule(226);
			try { dbg.enterDecision(226, decisionCanBacktrack[226]);

			int LA226_0 = input.LA(1);
			if ( ((LA226_0 >= ANGLE && LA226_0 <= AT_IDENT)||(LA226_0 >= BOTTOMCENTER_SYM && LA226_0 <= BOTTOMRIGHT_SYM)||LA226_0==CHARSET_SYM||LA226_0==COUNTER_STYLE_SYM||LA226_0==DIMENSION||LA226_0==EMS||LA226_0==EXS||(LA226_0 >= FONT_FACE_SYM && LA226_0 <= FREQ)||LA226_0==GEN||(LA226_0 >= HASH && LA226_0 <= HASH_SYMBOL)||(LA226_0 >= IDENT && LA226_0 <= IMPORT_SYM)||(LA226_0 >= LEFTBOTTOM_SYM && LA226_0 <= LENGTH)||LA226_0==LESS_JS_STRING||LA226_0==LPAREN||(LA226_0 >= MEDIA_SYM && LA226_0 <= MOZ_DOCUMENT_SYM)||LA226_0==NAMESPACE_SYM||(LA226_0 >= NOT && LA226_0 <= NUMBER)||(LA226_0 >= PAGE_SYM && LA226_0 <= PERCENTAGE_SYMBOL)||LA226_0==PLUS||(LA226_0 >= REM && LA226_0 <= RIGHTTOP_SYM)||(LA226_0 >= SASS_AT_ROOT && LA226_0 <= SASS_DEBUG)||(LA226_0 >= SASS_EACH && LA226_0 <= SASS_ELSE)||LA226_0==SASS_EXTEND||(LA226_0 >= SASS_FOR && LA226_0 <= SASS_FUNCTION)||(LA226_0 >= SASS_IF && LA226_0 <= SASS_MIXIN)||(LA226_0 >= SASS_RETURN && LA226_0 <= SASS_WHILE)||LA226_0==STRING||(LA226_0 >= TILDE && LA226_0 <= TOPRIGHT_SYM)||LA226_0==URI||LA226_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt226=1;
			}
			else if ( (LA226_0==RPAREN) ) {
				alt226=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 226, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(226);}

			switch (alt226) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:21: fnAttributes
					{
					dbg.location(943,21);
					pushFollow(FOLLOW_fnAttributes_in_function5383);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(226);}
			dbg.location(946,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function5414); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(947, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:953:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(953, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(958,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:9: ( IDENT COLON )?
			int alt227=2;
			try { dbg.enterSubRule(227);
			try { dbg.enterDecision(227, decisionCanBacktrack[227]);

			int LA227_0 = input.LA(1);
			if ( (LA227_0==IDENT) ) {
				int LA227_1 = input.LA(2);
				if ( (LA227_1==COLON) ) {
					alt227=1;
				}
			}
			} finally {dbg.exitDecision(227);}

			switch (alt227) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:10: IDENT COLON
					{
					dbg.location(958,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5466); if (state.failed) return;dbg.location(958,16);
					match(input,COLON,FOLLOW_COLON_in_functionName5468); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(227);}
			dbg.location(958,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName5472); if (state.failed) return;dbg.location(958,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:30: ( DOT IDENT )*
			try { dbg.enterSubRule(228);

			loop228:
			while (true) {
				int alt228=2;
				try { dbg.enterDecision(228, decisionCanBacktrack[228]);

				int LA228_0 = input.LA(1);
				if ( (LA228_0==DOT) ) {
					alt228=1;
				}

				} finally {dbg.exitDecision(228);}

				switch (alt228) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:31: DOT IDENT
					{
					dbg.location(958,31);
					match(input,DOT,FOLLOW_DOT_in_functionName5475); if (state.failed) return;dbg.location(958,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5477); if (state.failed) return;
					}
					break;

				default :
					break loop228;
				}
			}
			} finally {dbg.exitSubRule(228);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(959, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:1: fnAttributes : fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(961, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:5: ( fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:5: fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(963,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes5501);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(963,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:17: ( ( ws )? COMMA ( ws )? fnAttribute )*
			try { dbg.enterSubRule(231);

			loop231:
			while (true) {
				int alt231=2;
				try { dbg.enterDecision(231, decisionCanBacktrack[231]);

				try {
					isCyclicDecision = true;
					alt231 = dfa231.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(231);}

				switch (alt231) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:18: ( ws )? COMMA ( ws )? fnAttribute
					{
					dbg.location(963,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:18: ( ws )?
					int alt229=2;
					try { dbg.enterSubRule(229);
					try { dbg.enterDecision(229, decisionCanBacktrack[229]);

					int LA229_0 = input.LA(1);
					if ( (LA229_0==COMMENT||LA229_0==NL||LA229_0==WS) ) {
						alt229=1;
					}
					} finally {dbg.exitDecision(229);}

					switch (alt229) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:18: ws
							{
							dbg.location(963,18);
							pushFollow(FOLLOW_ws_in_fnAttributes5504);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(229);}
					dbg.location(963,22);
					match(input,COMMA,FOLLOW_COMMA_in_fnAttributes5507); if (state.failed) return;dbg.location(963,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:28: ( ws )?
					int alt230=2;
					try { dbg.enterSubRule(230);
					try { dbg.enterDecision(230, decisionCanBacktrack[230]);

					int LA230_0 = input.LA(1);
					if ( (LA230_0==COMMENT||LA230_0==NL||LA230_0==WS) ) {
						alt230=1;
					}
					} finally {dbg.exitDecision(230);}

					switch (alt230) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:28: ws
							{
							dbg.location(963,28);
							pushFollow(FOLLOW_ws_in_fnAttributes5509);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(230);}
					dbg.location(963,32);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes5512);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop231;
				}
			}
			} finally {dbg.exitSubRule(231);}
			dbg.location(963,46);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:46: ( ws )?
			int alt232=2;
			try { dbg.enterSubRule(232);
			try { dbg.enterDecision(232, decisionCanBacktrack[232]);

			int LA232_0 = input.LA(1);
			if ( (LA232_0==COMMENT||LA232_0==NL||LA232_0==WS) ) {
				alt232=1;
			}
			} finally {dbg.exitDecision(232);}

			switch (alt232) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:46: ws
					{
					dbg.location(963,46);
					pushFollow(FOLLOW_ws_in_fnAttributes5516);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(232);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(964, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(966, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:967:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt235=3;
			try { dbg.enterDecision(235, decisionCanBacktrack[235]);

			int LA235_0 = input.LA(1);
			if ( (LA235_0==IDENT) ) {
				int LA235_1 = input.LA(2);
				if ( (synpred32_Css3()) ) {
					alt235=1;
				}
				else if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==AT_IDENT||(LA235_0 >= BOTTOMCENTER_SYM && LA235_0 <= BOTTOMRIGHT_SYM)||LA235_0==CHARSET_SYM||LA235_0==COUNTER_STYLE_SYM||LA235_0==FONT_FACE_SYM||LA235_0==IMPORT_SYM||(LA235_0 >= LEFTBOTTOM_SYM && LA235_0 <= LEFTTOP_SYM)||LA235_0==MEDIA_SYM||LA235_0==MOZ_DOCUMENT_SYM||LA235_0==NAMESPACE_SYM||LA235_0==PAGE_SYM||(LA235_0 >= RIGHTBOTTOM_SYM && LA235_0 <= RIGHTTOP_SYM)||(LA235_0 >= SASS_AT_ROOT && LA235_0 <= SASS_DEBUG)||(LA235_0 >= SASS_EACH && LA235_0 <= SASS_ELSE)||LA235_0==SASS_EXTEND||(LA235_0 >= SASS_FOR && LA235_0 <= SASS_FUNCTION)||(LA235_0 >= SASS_IF && LA235_0 <= SASS_MIXIN)||LA235_0==SASS_RETURN||(LA235_0 >= SASS_WARN && LA235_0 <= SASS_WHILE)||(LA235_0 >= TOPCENTER_SYM && LA235_0 <= TOPRIGHT_SYM)||LA235_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA235_2 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred32_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt235=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {
					alt235=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt235=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 235, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA235_0==SASS_VAR) ) {
				int LA235_3 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred32_Css3())) ) {
					alt235=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred33_Css3())) ) {
					alt235=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt235=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 235, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA235_0==NOT) && (synpred33_Css3())) {
				alt235=2;
			}
			else if ( (LA235_0==MINUS||LA235_0==PLUS) ) {
				int LA235_5 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==NUMBER) ) {
				int LA235_6 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==PERCENTAGE) ) {
				int LA235_7 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==LENGTH) ) {
				int LA235_8 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==EMS) ) {
				int LA235_9 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==REM) ) {
				int LA235_10 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==EXS) ) {
				int LA235_11 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==ANGLE) ) {
				int LA235_12 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==TIME) ) {
				int LA235_13 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==FREQ) ) {
				int LA235_14 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==RESOLUTION) ) {
				int LA235_15 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==DIMENSION) ) {
				int LA235_16 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==STRING) ) {
				int LA235_17 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==TILDE) ) {
				int LA235_18 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==LESS_JS_STRING) ) {
				int LA235_19 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==GEN) ) {
				int LA235_20 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==URI) ) {
				int LA235_21 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==HASH) ) {
				int LA235_22 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt235=2;
				}
				else if ( (true) ) {
					alt235=3;
				}

			}
			else if ( (LA235_0==HASH_SYMBOL) ) {
				int LA235_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred33_Css3())) ) {
					alt235=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt235=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 235, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA235_0==PERCENTAGE_SYMBOL) ) {
				int LA235_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred33_Css3())) ) {
					alt235=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt235=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 235, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA235_0==IMPORTANT_SYM) && (synpred33_Css3())) {
				alt235=2;
			}
			else if ( (LA235_0==LPAREN) && (synpred33_Css3())) {
				alt235=2;
			}

			} finally {dbg.exitDecision(235);}

			switch (alt235) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(968,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute5553);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(968,62);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:62: ( ws )?
					int alt233=2;
					try { dbg.enterSubRule(233);
					try { dbg.enterDecision(233, decisionCanBacktrack[233]);

					int LA233_0 = input.LA(1);
					if ( (LA233_0==COMMENT||LA233_0==NL||LA233_0==WS) ) {
						alt233=1;
					}
					} finally {dbg.exitDecision(233);}

					switch (alt233) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:62: ws
							{
							dbg.location(968,62);
							pushFollow(FOLLOW_ws_in_fnAttribute5555);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(233);}
					dbg.location(968,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(968,79);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:79: ( ws )?
					int alt234=2;
					try { dbg.enterSubRule(234);
					try { dbg.enterDecision(234, decisionCanBacktrack[234]);

					int LA234_0 = input.LA(1);
					if ( (LA234_0==COMMENT||LA234_0==NL||LA234_0==WS) ) {
						alt234=1;
					}
					} finally {dbg.exitDecision(234);}

					switch (alt234) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:79: ws
							{
							dbg.location(968,79);
							pushFollow(FOLLOW_ws_in_fnAttribute5564);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(234);}
					dbg.location(968,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute5567);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:11: ( cp_expression )=> cp_expression
					{
					dbg.location(969,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute5584);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:11: expression
					{
					dbg.location(970,11);
					pushFollow(FOLLOW_expression_in_fnAttribute5596);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(971, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(973, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:974:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt237=2;
			try { dbg.enterDecision(237, decisionCanBacktrack[237]);

			int LA237_0 = input.LA(1);
			if ( (LA237_0==IDENT) ) {
				alt237=1;
			}
			else if ( (LA237_0==AT_IDENT||(LA237_0 >= BOTTOMCENTER_SYM && LA237_0 <= BOTTOMRIGHT_SYM)||LA237_0==CHARSET_SYM||LA237_0==COUNTER_STYLE_SYM||LA237_0==FONT_FACE_SYM||LA237_0==IMPORT_SYM||(LA237_0 >= LEFTBOTTOM_SYM && LA237_0 <= LEFTTOP_SYM)||LA237_0==MEDIA_SYM||LA237_0==MOZ_DOCUMENT_SYM||LA237_0==NAMESPACE_SYM||LA237_0==PAGE_SYM||(LA237_0 >= RIGHTBOTTOM_SYM && LA237_0 <= RIGHTTOP_SYM)||(LA237_0 >= SASS_AT_ROOT && LA237_0 <= SASS_DEBUG)||(LA237_0 >= SASS_EACH && LA237_0 <= SASS_ELSE)||LA237_0==SASS_EXTEND||(LA237_0 >= SASS_FOR && LA237_0 <= SASS_FUNCTION)||(LA237_0 >= SASS_IF && LA237_0 <= SASS_MIXIN)||(LA237_0 >= SASS_RETURN && LA237_0 <= SASS_WHILE)||(LA237_0 >= TOPCENTER_SYM && LA237_0 <= TOPRIGHT_SYM)||LA237_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt237=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 237, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(237);}

			switch (alt237) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:13: IDENT ( DOT IDENT )*
					{
					dbg.location(975,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5619); if (state.failed) return;dbg.location(975,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:19: ( DOT IDENT )*
					try { dbg.enterSubRule(236);

					loop236:
					while (true) {
						int alt236=2;
						try { dbg.enterDecision(236, decisionCanBacktrack[236]);

						int LA236_0 = input.LA(1);
						if ( (LA236_0==DOT) ) {
							alt236=1;
						}

						} finally {dbg.exitDecision(236);}

						switch (alt236) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:20: DOT IDENT
							{
							dbg.location(975,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName5622); if (state.failed) return;dbg.location(975,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5624); if (state.failed) return;
							}
							break;

						default :
							break loop236;
						}
					}
					} finally {dbg.exitSubRule(236);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:15: {...}? cp_variable
					{
					dbg.location(976,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(976,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName5644);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(977, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:979:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(979, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt242=2;
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA242_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA242_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA242_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA242_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA242_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA242_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA242_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA242_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA242_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA242_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA242_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA242_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA242_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA242_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA242_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA242_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA242_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA242_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA242_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA242_20 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt242=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA242_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt242=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA242_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA242_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt242=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt242=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 242, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(981,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue5667);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(981,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(241);

					loop241:
					while (true) {
						int alt241=2;
						try { dbg.enterDecision(241, decisionCanBacktrack[241]);

						try {
							isCyclicDecision = true;
							alt241 = dfa241.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(241);}

						switch (alt241) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(981,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt240=3;
							try { dbg.enterSubRule(240);
							try { dbg.enterDecision(240, decisionCanBacktrack[240]);

							try {
								isCyclicDecision = true;
								alt240 = dfa240.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(240);}

							switch (alt240) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:73: ws
									{
									dbg.location(981,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue5699);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(981,78);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(981,79);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:79: ( ws )?
									int alt238=2;
									try { dbg.enterSubRule(238);
									try { dbg.enterDecision(238, decisionCanBacktrack[238]);

									int LA238_0 = input.LA(1);
									if ( (LA238_0==COMMENT||LA238_0==NL||LA238_0==WS) ) {
										alt238=1;
									}
									} finally {dbg.exitDecision(238);}

									switch (alt238) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:79: ws
											{
											dbg.location(981,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue5704);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(238);}
									dbg.location(981,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue5707); if (state.failed) return;dbg.location(981,91);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:91: ( ws )?
									int alt239=2;
									try { dbg.enterSubRule(239);
									try { dbg.enterDecision(239, decisionCanBacktrack[239]);

									int LA239_0 = input.LA(1);
									if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
										alt239=1;
									}
									} finally {dbg.exitDecision(239);}

									switch (alt239) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:91: ws
											{
											dbg.location(981,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue5709);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(239);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(240);}
							dbg.location(981,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue5718);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop241;
						}
					}
					} finally {dbg.exitSubRule(241);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:15: {...}? cp_math_expression
					{
					dbg.location(982,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(982,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue5739);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(983, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:985:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(985, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:5: ( HASH )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:7: HASH
			{
			dbg.location(986,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor5753); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(987, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(989, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:7: ( WS | NL | COMMENT )+
			{
			dbg.location(990,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:7: ( WS | NL | COMMENT )+
			int cnt243=0;
			try { dbg.enterSubRule(243);

			loop243:
			while (true) {
				int alt243=2;
				try { dbg.enterDecision(243, decisionCanBacktrack[243]);

				int LA243_0 = input.LA(1);
				if ( (LA243_0==COMMENT||LA243_0==NL||LA243_0==WS) ) {
					alt243=1;
				}

				} finally {dbg.exitDecision(243);}

				switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(990,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt243 >= 1 ) break loop243;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(243, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt243++;
			}
			} finally {dbg.exitSubRule(243);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(991, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:996:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(996, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt251=2;
			try { dbg.enterDecision(251, decisionCanBacktrack[251]);

			int LA251_0 = input.LA(1);
			if ( (LA251_0==AT_IDENT||(LA251_0 >= BOTTOMCENTER_SYM && LA251_0 <= BOTTOMRIGHT_SYM)||LA251_0==CHARSET_SYM||LA251_0==COUNTER_STYLE_SYM||LA251_0==FONT_FACE_SYM||LA251_0==IMPORT_SYM||(LA251_0 >= LEFTBOTTOM_SYM && LA251_0 <= LEFTTOP_SYM)||LA251_0==MEDIA_SYM||LA251_0==MOZ_DOCUMENT_SYM||LA251_0==NAMESPACE_SYM||LA251_0==PAGE_SYM||(LA251_0 >= RIGHTBOTTOM_SYM && LA251_0 <= RIGHTTOP_SYM)||(LA251_0 >= SASS_AT_ROOT && LA251_0 <= SASS_DEBUG)||(LA251_0 >= SASS_EACH && LA251_0 <= SASS_ELSE)||LA251_0==SASS_EXTEND||(LA251_0 >= SASS_FOR && LA251_0 <= SASS_FUNCTION)||(LA251_0 >= SASS_IF && LA251_0 <= SASS_MIXIN)||LA251_0==SASS_RETURN||(LA251_0 >= SASS_WARN && LA251_0 <= SASS_WHILE)||(LA251_0 >= TOPCENTER_SYM && LA251_0 <= TOPRIGHT_SYM)||LA251_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA251_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt251=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt251=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==SASS_VAR) ) {
				int LA251_2 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt251=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt251=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 251, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(251);}

			switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(998,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(998,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration5813);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(998,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:39: ( ws )?
					int alt244=2;
					try { dbg.enterSubRule(244);
					try { dbg.enterDecision(244, decisionCanBacktrack[244]);

					int LA244_0 = input.LA(1);
					if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
						alt244=1;
					}
					} finally {dbg.exitDecision(244);}

					switch (alt244) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:39: ws
							{
							dbg.location(998,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5815);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(244);}
					dbg.location(998,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration5818); if (state.failed) return;dbg.location(998,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:49: ( ws )?
					int alt245=2;
					try { dbg.enterSubRule(245);
					try { dbg.enterDecision(245, decisionCanBacktrack[245]);

					int LA245_0 = input.LA(1);
					if ( (LA245_0==COMMENT||LA245_0==NL||LA245_0==WS) ) {
						alt245=1;
					}
					} finally {dbg.exitDecision(245);}

					switch (alt245) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:49: ws
							{
							dbg.location(998,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5820);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(245);}
					dbg.location(998,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration5823);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1000,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1000,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration5845);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1000,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:39: ( ws )?
					int alt246=2;
					try { dbg.enterSubRule(246);
					try { dbg.enterDecision(246, decisionCanBacktrack[246]);

					int LA246_0 = input.LA(1);
					if ( (LA246_0==COMMENT||LA246_0==NL||LA246_0==WS) ) {
						alt246=1;
					}
					} finally {dbg.exitDecision(246);}

					switch (alt246) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:39: ws
							{
							dbg.location(1000,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5847);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(246);}
					dbg.location(1000,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration5850); if (state.failed) return;dbg.location(1000,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:49: ( ws )?
					int alt247=2;
					try { dbg.enterSubRule(247);
					try { dbg.enterDecision(247, decisionCanBacktrack[247]);

					int LA247_0 = input.LA(1);
					if ( (LA247_0==COMMENT||LA247_0==NL||LA247_0==WS) ) {
						alt247=1;
					}
					} finally {dbg.exitDecision(247);}

					switch (alt247) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:49: ws
							{
							dbg.location(1000,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5852);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(247);}
					dbg.location(1000,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration5855);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1000,72);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(250);

					loop250:
					while (true) {
						int alt250=3;
						try { dbg.enterDecision(250, decisionCanBacktrack[250]);

						try {
							isCyclicDecision = true;
							alt250 = dfa250.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(250);}

						switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1000,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1000,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:74: ( ws )?
							int alt248=2;
							try { dbg.enterSubRule(248);
							try { dbg.enterDecision(248, decisionCanBacktrack[248]);

							int LA248_0 = input.LA(1);
							if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
								alt248=1;
							}
							} finally {dbg.exitDecision(248);}

							switch (alt248) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:74: ws
									{
									dbg.location(1000,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration5859);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(248);}
							dbg.location(1000,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration5862); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1000,94);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1000,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:95: ( ws )?
							int alt249=2;
							try { dbg.enterSubRule(249);
							try { dbg.enterDecision(249, decisionCanBacktrack[249]);

							int LA249_0 = input.LA(1);
							if ( (LA249_0==COMMENT||LA249_0==NL||LA249_0==WS) ) {
								alt249=1;
							}
							} finally {dbg.exitDecision(249);}

							switch (alt249) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:95: ws
									{
									dbg.location(1000,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration5868);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(249);}
							dbg.location(1000,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration5871); if (state.failed) return;
							}

							}
							break;

						default :
							break loop250;
						}
					}
					} finally {dbg.exitSubRule(250);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1001, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1004, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) )
			int alt252=2;
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==AT_IDENT||(LA252_0 >= BOTTOMCENTER_SYM && LA252_0 <= BOTTOMRIGHT_SYM)||LA252_0==CHARSET_SYM||LA252_0==COUNTER_STYLE_SYM||LA252_0==FONT_FACE_SYM||LA252_0==IMPORT_SYM||(LA252_0 >= LEFTBOTTOM_SYM && LA252_0 <= LEFTTOP_SYM)||LA252_0==MEDIA_SYM||LA252_0==MOZ_DOCUMENT_SYM||LA252_0==NAMESPACE_SYM||LA252_0==PAGE_SYM||(LA252_0 >= RIGHTBOTTOM_SYM && LA252_0 <= RIGHTTOP_SYM)||(LA252_0 >= SASS_AT_ROOT && LA252_0 <= SASS_DEBUG)||(LA252_0 >= SASS_EACH && LA252_0 <= SASS_ELSE)||LA252_0==SASS_EXTEND||(LA252_0 >= SASS_FOR && LA252_0 <= SASS_FUNCTION)||(LA252_0 >= SASS_IF && LA252_0 <= SASS_MIXIN)||LA252_0==SASS_RETURN||(LA252_0 >= SASS_WARN && LA252_0 <= SASS_WHILE)||(LA252_0 >= TOPCENTER_SYM && LA252_0 <= TOPRIGHT_SYM)||LA252_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt252=1;
			}
			else if ( (LA252_0==SASS_VAR) ) {
				alt252=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 252, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1007,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1007,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:9: {...}? ( SASS_VAR )
					{
					dbg.location(1009,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1009,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:27: ( SASS_VAR )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:29: SASS_VAR
					{
					dbg.location(1009,29);
					match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable6095); if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1010, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1013:1: cp_expression_list : cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1013, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1014:5: ( cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1015:5: cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1015,5);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list6119);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1016,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(255);

			loop255:
			while (true) {
				int alt255=2;
				try { dbg.enterDecision(255, decisionCanBacktrack[255]);

				try {
					isCyclicDecision = true;
					alt255 = dfa255.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(255);}

				switch (alt255) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1016,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:37: ( ws )?
					int alt253=2;
					try { dbg.enterSubRule(253);
					try { dbg.enterDecision(253, decisionCanBacktrack[253]);

					int LA253_0 = input.LA(1);
					if ( (LA253_0==COMMENT||LA253_0==NL||LA253_0==WS) ) {
						alt253=1;
					}
					} finally {dbg.exitDecision(253);}

					switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:37: ws
							{
							dbg.location(1016,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list6138);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(253);}
					dbg.location(1016,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list6141); if (state.failed) return;dbg.location(1016,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:47: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:47: ws
							{
							dbg.location(1016,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list6143);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(1016,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list6146);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop255;
				}
			}
			} finally {dbg.exitSubRule(255);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1017, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:1: cp_expression : cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ;
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1029, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1030:5: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1031:5: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
			{
			dbg.location(1031,5);
			pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6179);
			cp_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1032,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1032:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
			try { dbg.enterSubRule(259);

			loop259:
			while (true) {
				int alt259=3;
				try { dbg.enterDecision(259, decisionCanBacktrack[259]);

				try {
					isCyclicDecision = true;
					alt259 = dfa259.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(259);}

				switch (alt259) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
					{
					dbg.location(1033,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:39: ( ( ws )? cp_expression_operator ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:40: ( ws )? cp_expression_operator ( ws )?
					{
					dbg.location(1033,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:40: ( ws )?
					int alt256=2;
					try { dbg.enterSubRule(256);
					try { dbg.enterDecision(256, decisionCanBacktrack[256]);

					int LA256_0 = input.LA(1);
					if ( (LA256_0==COMMENT||LA256_0==NL||LA256_0==WS) ) {
						alt256=1;
					}
					} finally {dbg.exitDecision(256);}

					switch (alt256) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:40: ws
							{
							dbg.location(1033,40);
							pushFollow(FOLLOW_ws_in_cp_expression6203);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(256);}
					dbg.location(1033,44);
					pushFollow(FOLLOW_cp_expression_operator_in_cp_expression6206);
					cp_expression_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1033,67);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:67: ( ws )?
					int alt257=2;
					try { dbg.enterSubRule(257);
					try { dbg.enterDecision(257, decisionCanBacktrack[257]);

					int LA257_0 = input.LA(1);
					if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {
						alt257=1;
					}
					} finally {dbg.exitDecision(257);}

					switch (alt257) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:67: ws
							{
							dbg.location(1033,67);
							pushFollow(FOLLOW_ws_in_cp_expression6208);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(257);}

					}
					dbg.location(1033,72);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6212);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
					{
					dbg.location(1034,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:37: ( ws )?
					int alt258=2;
					try { dbg.enterSubRule(258);
					try { dbg.enterDecision(258, decisionCanBacktrack[258]);

					int LA258_0 = input.LA(1);
					if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
						alt258=1;
					}
					} finally {dbg.exitDecision(258);}

					switch (alt258) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:37: ws
							{
							dbg.location(1034,37);
							pushFollow(FOLLOW_ws_in_cp_expression6231);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(258);}
					dbg.location(1034,41);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6234);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop259;
				}
			}
			} finally {dbg.exitSubRule(259);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1036, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1038, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1039:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt260=8;
			try { dbg.enterDecision(260, decisionCanBacktrack[260]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA260_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt260=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt260=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 260, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt260=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt260=4;
				}
				break;
			case LESS:
				{
				alt260=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt260=6;
				}
				break;
			case GREATER:
				{
				alt260=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt260=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 260, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(260);}

			switch (alt260) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:5: key_or
					{
					dbg.location(1040,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator6262);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:14: key_and
					{
					dbg.location(1040,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator6266);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:25: CP_EQ
					{
					dbg.location(1040,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator6271); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:33: CP_NOT_EQ
					{
					dbg.location(1040,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator6275); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:45: LESS
					{
					dbg.location(1040,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator6279); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:52: LESS_OR_EQ
					{
					dbg.location(1040,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator6283); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:65: GREATER
					{
					dbg.location(1040,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator6287); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:75: GREATER_OR_EQ
					{
					dbg.location(1040,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6291); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1041, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1043:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1043, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1044:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1045,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:9: ( NOT ( ws )? )?
			int alt262=2;
			try { dbg.enterSubRule(262);
			try { dbg.enterDecision(262, decisionCanBacktrack[262]);

			int LA262_0 = input.LA(1);
			if ( (LA262_0==NOT) ) {
				alt262=1;
			}
			} finally {dbg.exitDecision(262);}

			switch (alt262) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:10: NOT ( ws )?
					{
					dbg.location(1045,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom6317); if (state.failed) return;dbg.location(1045,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:14: ( ws )?
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					int LA261_0 = input.LA(1);
					if ( (LA261_0==COMMENT||LA261_0==NL||LA261_0==WS) ) {
						alt261=1;
					}
					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:14: ws
							{
							dbg.location(1045,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6319);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(261);}

					}
					break;

			}
			} finally {dbg.exitSubRule(262);}
			dbg.location(1046,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt266=2;
			try { dbg.enterSubRule(266);
			try { dbg.enterDecision(266, decisionCanBacktrack[266]);

			int LA266_0 = input.LA(1);
			if ( (LA266_0==MINUS||LA266_0==PLUS) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==IDENT) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==NUMBER) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==PERCENTAGE) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==LENGTH) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==EMS) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==REM) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==EXS) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==ANGLE) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==TIME) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==FREQ) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==RESOLUTION) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==DIMENSION) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==STRING) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==TILDE) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==LESS_JS_STRING) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==GEN) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==URI) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==HASH) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==AT_IDENT||(LA266_0 >= BOTTOMCENTER_SYM && LA266_0 <= BOTTOMRIGHT_SYM)||LA266_0==CHARSET_SYM||LA266_0==COUNTER_STYLE_SYM||LA266_0==FONT_FACE_SYM||LA266_0==IMPORT_SYM||(LA266_0 >= LEFTBOTTOM_SYM && LA266_0 <= LEFTTOP_SYM)||LA266_0==MEDIA_SYM||LA266_0==MOZ_DOCUMENT_SYM||LA266_0==NAMESPACE_SYM||LA266_0==PAGE_SYM||(LA266_0 >= RIGHTBOTTOM_SYM && LA266_0 <= RIGHTTOP_SYM)||(LA266_0 >= SASS_AT_ROOT && LA266_0 <= SASS_DEBUG)||(LA266_0 >= SASS_EACH && LA266_0 <= SASS_ELSE)||LA266_0==SASS_EXTEND||(LA266_0 >= SASS_FOR && LA266_0 <= SASS_FUNCTION)||(LA266_0 >= SASS_IF && LA266_0 <= SASS_MIXIN)||LA266_0==SASS_RETURN||(LA266_0 >= SASS_WARN && LA266_0 <= SASS_WHILE)||(LA266_0 >= TOPCENTER_SYM && LA266_0 <= TOPRIGHT_SYM)||LA266_0==WEBKIT_KEYFRAMES_SYM) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==SASS_VAR) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==HASH_SYMBOL) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==PERCENTAGE_SYMBOL) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==IMPORTANT_SYM) && (synpred38_Css3())) {
				alt266=1;
			}
			else if ( (LA266_0==LPAREN) ) {
				int LA266_25 = input.LA(2);
				if ( (synpred38_Css3()) ) {
					alt266=1;
				}
				else if ( (true) ) {
					alt266=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 266, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(266);}

			switch (alt266) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1047,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom6350);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1048,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom6366); if (state.failed) return;dbg.location(1048,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:22: ( ws )?
					int alt263=2;
					try { dbg.enterSubRule(263);
					try { dbg.enterDecision(263, decisionCanBacktrack[263]);

					int LA263_0 = input.LA(1);
					if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
						alt263=1;
					}
					} finally {dbg.exitDecision(263);}

					switch (alt263) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:22: ws
							{
							dbg.location(1048,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6368);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(263);}
					dbg.location(1048,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:26: ( cp_expression_list ( ws )? )?
					int alt265=2;
					try { dbg.enterSubRule(265);
					try { dbg.enterDecision(265, decisionCanBacktrack[265]);

					int LA265_0 = input.LA(1);
					if ( ((LA265_0 >= ANGLE && LA265_0 <= AT_IDENT)||(LA265_0 >= BOTTOMCENTER_SYM && LA265_0 <= BOTTOMRIGHT_SYM)||LA265_0==CHARSET_SYM||LA265_0==COUNTER_STYLE_SYM||LA265_0==DIMENSION||LA265_0==EMS||LA265_0==EXS||(LA265_0 >= FONT_FACE_SYM && LA265_0 <= FREQ)||LA265_0==GEN||(LA265_0 >= HASH && LA265_0 <= HASH_SYMBOL)||(LA265_0 >= IDENT && LA265_0 <= IMPORT_SYM)||(LA265_0 >= LEFTBOTTOM_SYM && LA265_0 <= LENGTH)||LA265_0==LESS_JS_STRING||LA265_0==LPAREN||(LA265_0 >= MEDIA_SYM && LA265_0 <= MOZ_DOCUMENT_SYM)||LA265_0==NAMESPACE_SYM||(LA265_0 >= NOT && LA265_0 <= NUMBER)||(LA265_0 >= PAGE_SYM && LA265_0 <= PERCENTAGE_SYMBOL)||LA265_0==PLUS||(LA265_0 >= REM && LA265_0 <= RIGHTTOP_SYM)||(LA265_0 >= SASS_AT_ROOT && LA265_0 <= SASS_DEBUG)||(LA265_0 >= SASS_EACH && LA265_0 <= SASS_ELSE)||LA265_0==SASS_EXTEND||(LA265_0 >= SASS_FOR && LA265_0 <= SASS_FUNCTION)||(LA265_0 >= SASS_IF && LA265_0 <= SASS_MIXIN)||(LA265_0 >= SASS_RETURN && LA265_0 <= SASS_WHILE)||LA265_0==STRING||(LA265_0 >= TILDE && LA265_0 <= TOPRIGHT_SYM)||LA265_0==URI||LA265_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt265=1;
					}
					} finally {dbg.exitDecision(265);}

					switch (alt265) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:27: cp_expression_list ( ws )?
							{
							dbg.location(1048,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom6372);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1048,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:46: ( ws )?
							int alt264=2;
							try { dbg.enterSubRule(264);
							try { dbg.enterDecision(264, decisionCanBacktrack[264]);

							int LA264_0 = input.LA(1);
							if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
								alt264=1;
							}
							} finally {dbg.exitDecision(264);}

							switch (alt264) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:46: ws
									{
									dbg.location(1048,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom6374);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(264);}

							}
							break;

					}
					} finally {dbg.exitSubRule(265);}
					dbg.location(1048,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom6379); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(266);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1050, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1053, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1055,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6411);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1056,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(267);

			loop267:
			while (true) {
				int alt267=2;
				try { dbg.enterDecision(267, decisionCanBacktrack[267]);

				int LA267_0 = input.LA(1);
				if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
					alt267=1;
				}

				} finally {dbg.exitDecision(267);}

				switch (alt267) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:6: ws cp_math_expression
					{
					dbg.location(1056,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions6418);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1056,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6420);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop267;
				}
			}
			} finally {dbg.exitSubRule(267);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1057, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1071, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1072:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1072:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1072,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6454);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1073,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(270);

			loop270:
			while (true) {
				int alt270=2;
				try { dbg.enterDecision(270, decisionCanBacktrack[270]);

				try {
					isCyclicDecision = true;
					alt270 = dfa270.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(270);}

				switch (alt270) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1074,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:48: ( ws )?
					int alt268=2;
					try { dbg.enterSubRule(268);
					try { dbg.enterDecision(268, decisionCanBacktrack[268]);

					int LA268_0 = input.LA(1);
					if ( (LA268_0==COMMENT||LA268_0==NL||LA268_0==WS) ) {
						alt268=1;
					}
					} finally {dbg.exitDecision(268);}

					switch (alt268) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:48: ws
							{
							dbg.location(1074,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression6496);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(268);}
					dbg.location(1074,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1074,78);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:78: ( ws )?
					int alt269=2;
					try { dbg.enterSubRule(269);
					try { dbg.enterDecision(269, decisionCanBacktrack[269]);

					int LA269_0 = input.LA(1);
					if ( (LA269_0==COMMENT||LA269_0==NL||LA269_0==WS) ) {
						alt269=1;
					}
					} finally {dbg.exitDecision(269);}

					switch (alt269) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:78: ws
							{
							dbg.location(1074,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression6509);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(269);}
					dbg.location(1074,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6512);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop270;
				}
			}
			} finally {dbg.exitSubRule(270);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1076, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1078, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt275=3;
			try { dbg.enterDecision(275, decisionCanBacktrack[275]);

			try {
				isCyclicDecision = true;
				alt275 = dfa275.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(275);}

			switch (alt275) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1080:5: term
					{
					dbg.location(1080,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom6545);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:7: IMPORTANT_SYM
					{
					dbg.location(1081,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6553); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1082,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:7: ( unaryOperator ( ws )? )?
					int alt272=2;
					try { dbg.enterSubRule(272);
					try { dbg.enterDecision(272, decisionCanBacktrack[272]);

					int LA272_0 = input.LA(1);
					if ( (LA272_0==MINUS||LA272_0==PLUS) ) {
						alt272=1;
					}
					} finally {dbg.exitDecision(272);}

					switch (alt272) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:9: unaryOperator ( ws )?
							{
							dbg.location(1082,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom6564);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1082,23);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:23: ( ws )?
							int alt271=2;
							try { dbg.enterSubRule(271);
							try { dbg.enterDecision(271, decisionCanBacktrack[271]);

							int LA271_0 = input.LA(1);
							if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
								alt271=1;
							}
							} finally {dbg.exitDecision(271);}

							switch (alt271) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:23: ws
									{
									dbg.location(1082,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom6566);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(271);}

							}
							break;

					}
					} finally {dbg.exitSubRule(272);}
					dbg.location(1082,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom6572); if (state.failed) return;dbg.location(1082,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:37: ( ws )?
					int alt273=2;
					try { dbg.enterSubRule(273);
					try { dbg.enterDecision(273, decisionCanBacktrack[273]);

					int LA273_0 = input.LA(1);
					if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
						alt273=1;
					}
					} finally {dbg.exitDecision(273);}

					switch (alt273) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:37: ws
							{
							dbg.location(1082,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6574);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(273);}
					dbg.location(1082,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom6577);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1082,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:60: ( ws )?
					int alt274=2;
					try { dbg.enterSubRule(274);
					try { dbg.enterDecision(274, decisionCanBacktrack[274]);

					int LA274_0 = input.LA(1);
					if ( (LA274_0==COMMENT||LA274_0==NL||LA274_0==WS) ) {
						alt274=1;
					}
					} finally {dbg.exitDecision(274);}

					switch (alt274) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:60: ws
							{
							dbg.location(1082,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6579);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(274);}
					dbg.location(1082,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom6582); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1083, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1091:1: cp_mixin_declaration : ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1091, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:5: ( ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1093:5: ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1093,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1093:5: ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt285=2;
			try { dbg.enterSubRule(285);
			try { dbg.enterDecision(285, decisionCanBacktrack[285]);

			int LA285_0 = input.LA(1);
			if ( (LA285_0==DOT) ) {
				alt285=1;
			}
			else if ( (LA285_0==SASS_MIXIN) ) {
				alt285=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 285, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(285);}

			switch (alt285) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:9: {...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1094,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1094,27);
					match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration6621); if (state.failed) return;dbg.location(1094,31);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration6623);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1094,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:45: ( ws )?
					int alt276=2;
					try { dbg.enterSubRule(276);
					try { dbg.enterDecision(276, decisionCanBacktrack[276]);

					int LA276_0 = input.LA(1);
					if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
						alt276=1;
					}
					} finally {dbg.exitDecision(276);}

					switch (alt276) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:45: ws
							{
							dbg.location(1094,45);
							pushFollow(FOLLOW_ws_in_cp_mixin_declaration6625);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(276);}
					dbg.location(1094,49);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration6628); if (state.failed) return;dbg.location(1094,56);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:56: ( ws )?
					int alt277=2;
					try { dbg.enterSubRule(277);
					try { dbg.enterDecision(277, decisionCanBacktrack[277]);

					int LA277_0 = input.LA(1);
					if ( (LA277_0==COMMENT||LA277_0==NL||LA277_0==WS) ) {
						alt277=1;
					}
					} finally {dbg.exitDecision(277);}

					switch (alt277) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:56: ws
							{
							dbg.location(1094,56);
							pushFollow(FOLLOW_ws_in_cp_mixin_declaration6630);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(277);}
					dbg.location(1094,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:60: ( cp_args_list )?
					int alt278=2;
					try { dbg.enterSubRule(278);
					try { dbg.enterDecision(278, decisionCanBacktrack[278]);

					int LA278_0 = input.LA(1);
					if ( (LA278_0==AT_IDENT||(LA278_0 >= BOTTOMCENTER_SYM && LA278_0 <= BOTTOMRIGHT_SYM)||LA278_0==CHARSET_SYM||(LA278_0 >= COUNTER_STYLE_SYM && LA278_0 <= CP_DOTS)||LA278_0==FONT_FACE_SYM||LA278_0==IMPORT_SYM||(LA278_0 >= LEFTBOTTOM_SYM && LA278_0 <= LEFTTOP_SYM)||LA278_0==LESS_REST||LA278_0==MEDIA_SYM||LA278_0==MOZ_DOCUMENT_SYM||LA278_0==NAMESPACE_SYM||LA278_0==PAGE_SYM||(LA278_0 >= RIGHTBOTTOM_SYM && LA278_0 <= RIGHTTOP_SYM)||(LA278_0 >= SASS_AT_ROOT && LA278_0 <= SASS_DEBUG)||(LA278_0 >= SASS_EACH && LA278_0 <= SASS_ELSE)||LA278_0==SASS_EXTEND||(LA278_0 >= SASS_FOR && LA278_0 <= SASS_FUNCTION)||(LA278_0 >= SASS_IF && LA278_0 <= SASS_MIXIN)||(LA278_0 >= SASS_RETURN && LA278_0 <= SASS_WHILE)||(LA278_0 >= TOPCENTER_SYM && LA278_0 <= TOPRIGHT_SYM)||LA278_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt278=1;
					}
					} finally {dbg.exitDecision(278);}

					switch (alt278) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:60: cp_args_list
							{
							dbg.location(1094,60);
							pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration6633);
							cp_args_list();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(278);}
					dbg.location(1094,74);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration6636); if (state.failed) return;dbg.location(1094,81);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:81: ( ( ws )? less_mixin_guarded )?
					int alt280=2;
					try { dbg.enterSubRule(280);
					try { dbg.enterDecision(280, decisionCanBacktrack[280]);

					try {
						isCyclicDecision = true;
						alt280 = dfa280.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(280);}

					switch (alt280) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:82: ( ws )? less_mixin_guarded
							{
							dbg.location(1094,82);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:82: ( ws )?
							int alt279=2;
							try { dbg.enterSubRule(279);
							try { dbg.enterDecision(279, decisionCanBacktrack[279]);

							int LA279_0 = input.LA(1);
							if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
								alt279=1;
							}
							} finally {dbg.exitDecision(279);}

							switch (alt279) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:82: ws
									{
									dbg.location(1094,82);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6639);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(279);}
							dbg.location(1094,86);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration6642);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(280);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1096,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1096,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration6666); if (state.failed) return;dbg.location(1096,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration6668);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1096,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration6670);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1096,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt284=2;
					try { dbg.enterSubRule(284);
					try { dbg.enterDecision(284, decisionCanBacktrack[284]);

					try {
						isCyclicDecision = true;
						alt284 = dfa284.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(284);}

					switch (alt284) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1096,56);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:56: ( ws )?
							int alt281=2;
							try { dbg.enterSubRule(281);
							try { dbg.enterDecision(281, decisionCanBacktrack[281]);

							int LA281_0 = input.LA(1);
							if ( (LA281_0==COMMENT||LA281_0==NL||LA281_0==WS) ) {
								alt281=1;
							}
							} finally {dbg.exitDecision(281);}

							switch (alt281) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:56: ws
									{
									dbg.location(1096,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6673);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(281);}
							dbg.location(1096,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration6676); if (state.failed) return;dbg.location(1096,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:67: ( ws )?
							int alt282=2;
							try { dbg.enterSubRule(282);
							try { dbg.enterDecision(282, decisionCanBacktrack[282]);

							int LA282_0 = input.LA(1);
							if ( (LA282_0==COMMENT||LA282_0==NL||LA282_0==WS) ) {
								alt282=1;
							}
							} finally {dbg.exitDecision(282);}

							switch (alt282) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:67: ws
									{
									dbg.location(1096,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6678);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(282);}
							dbg.location(1096,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:71: ( cp_args_list )?
							int alt283=2;
							try { dbg.enterSubRule(283);
							try { dbg.enterDecision(283, decisionCanBacktrack[283]);

							int LA283_0 = input.LA(1);
							if ( (LA283_0==AT_IDENT||(LA283_0 >= BOTTOMCENTER_SYM && LA283_0 <= BOTTOMRIGHT_SYM)||LA283_0==CHARSET_SYM||(LA283_0 >= COUNTER_STYLE_SYM && LA283_0 <= CP_DOTS)||LA283_0==FONT_FACE_SYM||LA283_0==IMPORT_SYM||(LA283_0 >= LEFTBOTTOM_SYM && LA283_0 <= LEFTTOP_SYM)||LA283_0==LESS_REST||LA283_0==MEDIA_SYM||LA283_0==MOZ_DOCUMENT_SYM||LA283_0==NAMESPACE_SYM||LA283_0==PAGE_SYM||(LA283_0 >= RIGHTBOTTOM_SYM && LA283_0 <= RIGHTTOP_SYM)||(LA283_0 >= SASS_AT_ROOT && LA283_0 <= SASS_DEBUG)||(LA283_0 >= SASS_EACH && LA283_0 <= SASS_ELSE)||LA283_0==SASS_EXTEND||(LA283_0 >= SASS_FOR && LA283_0 <= SASS_FUNCTION)||(LA283_0 >= SASS_IF && LA283_0 <= SASS_MIXIN)||(LA283_0 >= SASS_RETURN && LA283_0 <= SASS_WHILE)||(LA283_0 >= TOPCENTER_SYM && LA283_0 <= TOPRIGHT_SYM)||LA283_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt283=1;
							}
							} finally {dbg.exitDecision(283);}

							switch (alt283) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1096:71: cp_args_list
									{
									dbg.location(1096,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration6681);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(283);}
							dbg.location(1096,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration6684); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(284);}

					}
					break;

			}
			} finally {dbg.exitSubRule(285);}
			dbg.location(1098,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:5: ( ws )?
			int alt286=2;
			try { dbg.enterSubRule(286);
			try { dbg.enterDecision(286, decisionCanBacktrack[286]);

			int LA286_0 = input.LA(1);
			if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
				alt286=1;
			}
			} finally {dbg.exitDecision(286);}

			switch (alt286) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:5: ws
					{
					dbg.location(1098,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration6698);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(286);}
			dbg.location(1098,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration6701);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1099, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:1: cp_mixin_call : ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1103, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:5: ( ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:5: ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1105,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:5: ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt297=2;
			try { dbg.enterSubRule(297);
			try { dbg.enterDecision(297, decisionCanBacktrack[297]);

			int LA297_0 = input.LA(1);
			if ( (LA297_0==DOT) ) {
				alt297=1;
			}
			else if ( (LA297_0==SASS_INCLUDE) ) {
				alt297=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 297, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(297);}

			switch (alt297) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:9: {...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					{
					dbg.location(1106,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1106,27);
					match(input,DOT,FOLLOW_DOT_in_cp_mixin_call6736); if (state.failed) return;dbg.location(1106,31);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call6738);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1106,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:45: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt290=2;
					try { dbg.enterSubRule(290);
					try { dbg.enterDecision(290, decisionCanBacktrack[290]);

					try {
						isCyclicDecision = true;
						alt290 = dfa290.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(290);}

					switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:46: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1106,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:46: ( ws )?
							int alt287=2;
							try { dbg.enterSubRule(287);
							try { dbg.enterDecision(287, decisionCanBacktrack[287]);

							int LA287_0 = input.LA(1);
							if ( (LA287_0==COMMENT||LA287_0==NL||LA287_0==WS) ) {
								alt287=1;
							}
							} finally {dbg.exitDecision(287);}

							switch (alt287) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:46: ws
									{
									dbg.location(1106,46);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6741);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(287);}
							dbg.location(1106,50);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call6744); if (state.failed) return;dbg.location(1106,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:57: ( ws )?
							int alt288=2;
							try { dbg.enterSubRule(288);
							try { dbg.enterDecision(288, decisionCanBacktrack[288]);

							int LA288_0 = input.LA(1);
							if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
								alt288=1;
							}
							} finally {dbg.exitDecision(288);}

							switch (alt288) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:57: ws
									{
									dbg.location(1106,57);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6746);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(288);}
							dbg.location(1106,61);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:61: ( cp_mixin_call_args )?
							int alt289=2;
							try { dbg.enterSubRule(289);
							try { dbg.enterDecision(289, decisionCanBacktrack[289]);

							int LA289_0 = input.LA(1);
							if ( ((LA289_0 >= ANGLE && LA289_0 <= AT_IDENT)||(LA289_0 >= BOTTOMCENTER_SYM && LA289_0 <= BOTTOMRIGHT_SYM)||LA289_0==CHARSET_SYM||LA289_0==COUNTER_STYLE_SYM||LA289_0==DIMENSION||LA289_0==EMS||LA289_0==EXS||(LA289_0 >= FONT_FACE_SYM && LA289_0 <= FREQ)||LA289_0==GEN||(LA289_0 >= HASH && LA289_0 <= HASH_SYMBOL)||(LA289_0 >= IDENT && LA289_0 <= IMPORT_SYM)||(LA289_0 >= LEFTBOTTOM_SYM && LA289_0 <= LENGTH)||LA289_0==LESS_JS_STRING||LA289_0==LPAREN||(LA289_0 >= MEDIA_SYM && LA289_0 <= MOZ_DOCUMENT_SYM)||LA289_0==NAMESPACE_SYM||(LA289_0 >= NOT && LA289_0 <= NUMBER)||(LA289_0 >= PAGE_SYM && LA289_0 <= PERCENTAGE_SYMBOL)||LA289_0==PLUS||(LA289_0 >= REM && LA289_0 <= RIGHTTOP_SYM)||(LA289_0 >= SASS_AT_ROOT && LA289_0 <= SASS_DEBUG)||(LA289_0 >= SASS_EACH && LA289_0 <= SASS_ELSE)||LA289_0==SASS_EXTEND||(LA289_0 >= SASS_FOR && LA289_0 <= SASS_FUNCTION)||(LA289_0 >= SASS_IF && LA289_0 <= SASS_MIXIN)||(LA289_0 >= SASS_RETURN && LA289_0 <= SASS_WHILE)||LA289_0==STRING||(LA289_0 >= TILDE && LA289_0 <= TOPRIGHT_SYM)||LA289_0==URI||LA289_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt289=1;
							}
							} finally {dbg.exitDecision(289);}

							switch (alt289) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:61: cp_mixin_call_args
									{
									dbg.location(1106,61);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call6749);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(289);}
							dbg.location(1106,81);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call6752); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(290);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1108,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1108,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call6776); if (state.failed) return;dbg.location(1108,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call6778);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1108,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call6780);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1108,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					try {
						isCyclicDecision = true;
						alt294 = dfa294.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1108,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:58: ( ws )?
							int alt291=2;
							try { dbg.enterSubRule(291);
							try { dbg.enterDecision(291, decisionCanBacktrack[291]);

							int LA291_0 = input.LA(1);
							if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {
								alt291=1;
							}
							} finally {dbg.exitDecision(291);}

							switch (alt291) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:58: ws
									{
									dbg.location(1108,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6783);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(291);}
							dbg.location(1108,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call6786); if (state.failed) return;dbg.location(1108,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:69: ( ws )?
							int alt292=2;
							try { dbg.enterSubRule(292);
							try { dbg.enterDecision(292, decisionCanBacktrack[292]);

							int LA292_0 = input.LA(1);
							if ( (LA292_0==COMMENT||LA292_0==NL||LA292_0==WS) ) {
								alt292=1;
							}
							} finally {dbg.exitDecision(292);}

							switch (alt292) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:69: ws
									{
									dbg.location(1108,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6788);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(292);}
							dbg.location(1108,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:73: ( cp_mixin_call_args )?
							int alt293=2;
							try { dbg.enterSubRule(293);
							try { dbg.enterDecision(293, decisionCanBacktrack[293]);

							int LA293_0 = input.LA(1);
							if ( ((LA293_0 >= ANGLE && LA293_0 <= AT_IDENT)||(LA293_0 >= BOTTOMCENTER_SYM && LA293_0 <= BOTTOMRIGHT_SYM)||LA293_0==CHARSET_SYM||LA293_0==COUNTER_STYLE_SYM||LA293_0==DIMENSION||LA293_0==EMS||LA293_0==EXS||(LA293_0 >= FONT_FACE_SYM && LA293_0 <= FREQ)||LA293_0==GEN||(LA293_0 >= HASH && LA293_0 <= HASH_SYMBOL)||(LA293_0 >= IDENT && LA293_0 <= IMPORT_SYM)||(LA293_0 >= LEFTBOTTOM_SYM && LA293_0 <= LENGTH)||LA293_0==LESS_JS_STRING||LA293_0==LPAREN||(LA293_0 >= MEDIA_SYM && LA293_0 <= MOZ_DOCUMENT_SYM)||LA293_0==NAMESPACE_SYM||(LA293_0 >= NOT && LA293_0 <= NUMBER)||(LA293_0 >= PAGE_SYM && LA293_0 <= PERCENTAGE_SYMBOL)||LA293_0==PLUS||(LA293_0 >= REM && LA293_0 <= RIGHTTOP_SYM)||(LA293_0 >= SASS_AT_ROOT && LA293_0 <= SASS_DEBUG)||(LA293_0 >= SASS_EACH && LA293_0 <= SASS_ELSE)||LA293_0==SASS_EXTEND||(LA293_0 >= SASS_FOR && LA293_0 <= SASS_FUNCTION)||(LA293_0 >= SASS_IF && LA293_0 <= SASS_MIXIN)||(LA293_0 >= SASS_RETURN && LA293_0 <= SASS_WHILE)||LA293_0==STRING||(LA293_0 >= TILDE && LA293_0 <= TOPRIGHT_SYM)||LA293_0==URI||LA293_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt293=1;
							}
							} finally {dbg.exitDecision(293);}

							switch (alt293) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:73: cp_mixin_call_args
									{
									dbg.location(1108,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call6791);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(293);}
							dbg.location(1108,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call6794); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(294);}
					dbg.location(1108,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:102: ( ( ws )? cp_mixin_block )?
					int alt296=2;
					try { dbg.enterSubRule(296);
					try { dbg.enterDecision(296, decisionCanBacktrack[296]);

					try {
						isCyclicDecision = true;
						alt296 = dfa296.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(296);}

					switch (alt296) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:103: ( ws )? cp_mixin_block
							{
							dbg.location(1108,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:103: ( ws )?
							int alt295=2;
							try { dbg.enterSubRule(295);
							try { dbg.enterDecision(295, decisionCanBacktrack[295]);

							int LA295_0 = input.LA(1);
							if ( (LA295_0==COMMENT||LA295_0==NL||LA295_0==WS) ) {
								alt295=1;
							}
							} finally {dbg.exitDecision(295);}

							switch (alt295) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:103: ws
									{
									dbg.location(1108,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6799);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(295);}
							dbg.location(1108,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call6802);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(296);}

					}
					break;

			}
			} finally {dbg.exitSubRule(297);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1110, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1112, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:5: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1114:5: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1114,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block6831); if (state.failed) return;dbg.location(1114,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1114:12: ( ws )?
			int alt298=2;
			try { dbg.enterSubRule(298);
			try { dbg.enterDecision(298, decisionCanBacktrack[298]);

			int LA298_0 = input.LA(1);
			if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
				alt298=1;
			}
			} finally {dbg.exitDecision(298);}

			switch (alt298) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1114:12: ws
					{
					dbg.location(1114,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block6833);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(298);}
			dbg.location(1114,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block6836);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1115,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:9: ( declarations )?
			int alt299=2;
			try { dbg.enterSubRule(299);
			try { dbg.enterDecision(299, decisionCanBacktrack[299]);

			int LA299_0 = input.LA(1);
			if ( ((LA299_0 >= AT_IDENT && LA299_0 <= AT_SIGN)||(LA299_0 >= BOTTOMCENTER_SYM && LA299_0 <= BOTTOMRIGHT_SYM)||(LA299_0 >= CHARSET_SYM && LA299_0 <= COLON)||LA299_0==COUNTER_STYLE_SYM||LA299_0==DCOLON||LA299_0==DOT||LA299_0==FONT_FACE_SYM||(LA299_0 >= GEN && LA299_0 <= GREATER)||(LA299_0 >= HASH && LA299_0 <= HASH_SYMBOL)||LA299_0==IDENT||LA299_0==IMPORT_SYM||(LA299_0 >= LBRACKET && LA299_0 <= LEFTTOP_SYM)||LA299_0==LESS_AND||(LA299_0 >= MEDIA_SYM && LA299_0 <= MOZ_DOCUMENT_SYM)||LA299_0==NAMESPACE_SYM||LA299_0==PAGE_SYM||(LA299_0 >= PIPE && LA299_0 <= PLUS)||(LA299_0 >= RIGHTBOTTOM_SYM && LA299_0 <= RIGHTTOP_SYM)||(LA299_0 >= SASS_AT_ROOT && LA299_0 <= SASS_DEBUG)||(LA299_0 >= SASS_EACH && LA299_0 <= SASS_ELSE)||(LA299_0 >= SASS_EXTEND && LA299_0 <= SASS_FUNCTION)||(LA299_0 >= SASS_IF && LA299_0 <= SASS_MIXIN)||(LA299_0 >= SASS_RETURN && LA299_0 <= SEMI)||LA299_0==STAR||LA299_0==TILDE||(LA299_0 >= TOPCENTER_SYM && LA299_0 <= TOPRIGHT_SYM)||LA299_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt299=1;
			}
			} finally {dbg.exitDecision(299);}

			switch (alt299) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:9: declarations
					{
					dbg.location(1115,9);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block6846);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(299);}
			dbg.location(1116,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block6853); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1117, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1119, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:5: IDENT
			{
			dbg.location(1121,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name6874); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1122, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1124, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )?
			{
			dbg.location(1128,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6905);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1128,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(301);

			loop301:
			while (true) {
				int alt301=2;
				try { dbg.enterDecision(301, decisionCanBacktrack[301]);

				int LA301_0 = input.LA(1);
				if ( (LA301_0==COMMA||LA301_0==SEMI) ) {
					alt301=1;
				}

				} finally {dbg.exitDecision(301);}

				switch (alt301) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1128,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1128,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:40: ( ws )?
					int alt300=2;
					try { dbg.enterSubRule(300);
					try { dbg.enterDecision(300, decisionCanBacktrack[300]);

					int LA300_0 = input.LA(1);
					if ( (LA300_0==COMMENT||LA300_0==NL||LA300_0==WS) ) {
						alt300=1;
					}
					} finally {dbg.exitDecision(300);}

					switch (alt300) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:40: ws
							{
							dbg.location(1128,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args6917);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(300);}
					dbg.location(1128,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6920);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop301;
				}
			}
			} finally {dbg.exitSubRule(301);}
			dbg.location(1128,65);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:65: ( CP_DOTS ( ws )? )?
			int alt303=2;
			try { dbg.enterSubRule(303);
			try { dbg.enterDecision(303, decisionCanBacktrack[303]);

			int LA303_0 = input.LA(1);
			if ( (LA303_0==CP_DOTS) ) {
				alt303=1;
			}
			} finally {dbg.exitDecision(303);}

			switch (alt303) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:66: CP_DOTS ( ws )?
					{
					dbg.location(1128,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args6926); if (state.failed) return;dbg.location(1128,74);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:74: ( ws )?
					int alt302=2;
					try { dbg.enterSubRule(302);
					try { dbg.enterDecision(302, decisionCanBacktrack[302]);

					int LA302_0 = input.LA(1);
					if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
						alt302=1;
					}
					} finally {dbg.exitDecision(302);}

					switch (alt302) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:74: ws
							{
							dbg.location(1128,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args6928);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(302);}

					}
					break;

			}
			} finally {dbg.exitSubRule(303);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1129, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1131, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1133:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1133,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1133:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt306=2;
			try { dbg.enterSubRule(306);
			try { dbg.enterDecision(306, decisionCanBacktrack[306]);

			try {
				isCyclicDecision = true;
				alt306 = dfa306.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(306);}

			switch (alt306) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1134,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg6962);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1134,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:21: ( ws )?
					int alt304=2;
					try { dbg.enterSubRule(304);
					try { dbg.enterDecision(304, decisionCanBacktrack[304]);

					int LA304_0 = input.LA(1);
					if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
						alt304=1;
					}
					} finally {dbg.exitDecision(304);}

					switch (alt304) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:21: ws
							{
							dbg.location(1134,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6964);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(304);}
					dbg.location(1134,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg6967); if (state.failed) return;dbg.location(1134,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:31: ( ws )?
					int alt305=2;
					try { dbg.enterSubRule(305);
					try { dbg.enterDecision(305, decisionCanBacktrack[305]);

					int LA305_0 = input.LA(1);
					if ( (LA305_0==COMMENT||LA305_0==NL||LA305_0==WS) ) {
						alt305=1;
					}
					} finally {dbg.exitDecision(305);}

					switch (alt305) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:31: ws
							{
							dbg.location(1134,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6969);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(305);}
					dbg.location(1134,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg6972);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:11: cp_expression
					{
					dbg.location(1135,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg6984);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(306);}
			dbg.location(1136,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:7: ( ws )?
			int alt307=2;
			try { dbg.enterSubRule(307);
			try { dbg.enterDecision(307, decisionCanBacktrack[307]);

			int LA307_0 = input.LA(1);
			if ( (LA307_0==COMMENT||LA307_0==NL||LA307_0==WS) ) {
				alt307=1;
			}
			} finally {dbg.exitDecision(307);}

			switch (alt307) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:7: ws
					{
					dbg.location(1136,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6992);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(307);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1137, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1140, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt315=2;
			try { dbg.enterDecision(315, decisionCanBacktrack[315]);

			int LA315_0 = input.LA(1);
			if ( (LA315_0==AT_IDENT||(LA315_0 >= BOTTOMCENTER_SYM && LA315_0 <= BOTTOMRIGHT_SYM)||LA315_0==CHARSET_SYM||LA315_0==COUNTER_STYLE_SYM||LA315_0==FONT_FACE_SYM||LA315_0==IMPORT_SYM||(LA315_0 >= LEFTBOTTOM_SYM && LA315_0 <= LEFTTOP_SYM)||LA315_0==MEDIA_SYM||LA315_0==MOZ_DOCUMENT_SYM||LA315_0==NAMESPACE_SYM||LA315_0==PAGE_SYM||(LA315_0 >= RIGHTBOTTOM_SYM && LA315_0 <= RIGHTTOP_SYM)||(LA315_0 >= SASS_AT_ROOT && LA315_0 <= SASS_DEBUG)||(LA315_0 >= SASS_EACH && LA315_0 <= SASS_ELSE)||LA315_0==SASS_EXTEND||(LA315_0 >= SASS_FOR && LA315_0 <= SASS_FUNCTION)||(LA315_0 >= SASS_IF && LA315_0 <= SASS_MIXIN)||(LA315_0 >= SASS_RETURN && LA315_0 <= SASS_WHILE)||(LA315_0 >= TOPCENTER_SYM && LA315_0 <= TOPRIGHT_SYM)||LA315_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt315=1;
			}
			else if ( (LA315_0==CP_DOTS||LA315_0==LESS_REST) ) {
				alt315=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 315, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(315);}

			switch (alt315) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1148,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1148,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list7039);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1148,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(309);

					loop309:
					while (true) {
						int alt309=2;
						try { dbg.enterDecision(309, decisionCanBacktrack[309]);

						try {
							isCyclicDecision = true;
							alt309 = dfa309.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(309);}

						switch (alt309) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1148,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1148,33);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:33: ( ws )?
							int alt308=2;
							try { dbg.enterSubRule(308);
							try { dbg.enterDecision(308, decisionCanBacktrack[308]);

							int LA308_0 = input.LA(1);
							if ( (LA308_0==COMMENT||LA308_0==NL||LA308_0==WS) ) {
								alt308=1;
							}
							} finally {dbg.exitDecision(308);}

							switch (alt308) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:33: ws
									{
									dbg.location(1148,33);
									pushFollow(FOLLOW_ws_in_cp_args_list7053);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(308);}
							dbg.location(1148,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list7056);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop309;
						}
					}
					} finally {dbg.exitSubRule(309);}
					dbg.location(1148,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt311=2;
					try { dbg.enterSubRule(311);
					try { dbg.enterDecision(311, decisionCanBacktrack[311]);

					int LA311_0 = input.LA(1);
					if ( (LA311_0==COMMA||LA311_0==SEMI) ) {
						alt311=1;
					}
					} finally {dbg.exitDecision(311);}

					switch (alt311) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1148,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1148,64);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:64: ( ws )?
							int alt310=2;
							try { dbg.enterSubRule(310);
							try { dbg.enterDecision(310, decisionCanBacktrack[310]);

							int LA310_0 = input.LA(1);
							if ( (LA310_0==COMMENT||LA310_0==NL||LA310_0==WS) ) {
								alt310=1;
							}
							} finally {dbg.exitDecision(310);}

							switch (alt310) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:64: ws
									{
									dbg.location(1148,64);
									pushFollow(FOLLOW_ws_in_cp_args_list7071);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(310);}

							}
							break;

					}
					} finally {dbg.exitSubRule(311);}
					dbg.location(1148,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt313=2;
					try { dbg.enterSubRule(313);
					try { dbg.enterDecision(313, decisionCanBacktrack[313]);

					int LA313_0 = input.LA(1);
					if ( (LA313_0==CP_DOTS||LA313_0==LESS_REST) ) {
						alt313=1;
					}
					} finally {dbg.exitDecision(313);}

					switch (alt313) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1148,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1148,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:95: ( ws )?
							int alt312=2;
							try { dbg.enterSubRule(312);
							try { dbg.enterDecision(312, decisionCanBacktrack[312]);

							int LA312_0 = input.LA(1);
							if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
								alt312=1;
							}
							} finally {dbg.exitDecision(312);}

							switch (alt312) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:95: ws
									{
									dbg.location(1148,95);
									pushFollow(FOLLOW_ws_in_cp_args_list7087);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(312);}

							}
							break;

					}
					} finally {dbg.exitSubRule(313);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1150,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1150,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:27: ( ws )?
					int alt314=2;
					try { dbg.enterSubRule(314);
					try { dbg.enterDecision(314, decisionCanBacktrack[314]);

					int LA314_0 = input.LA(1);
					if ( (LA314_0==COMMENT||LA314_0==NL||LA314_0==WS) ) {
						alt314=1;
					}
					} finally {dbg.exitDecision(314);}

					switch (alt314) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:27: ws
							{
							dbg.location(1150,27);
							pushFollow(FOLLOW_ws_in_cp_args_list7112);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(314);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1151, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:1: cp_arg : cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? ;
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1154, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
			{
			dbg.location(1156,5);
			pushFollow(FOLLOW_cp_variable_in_cp_arg7135);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1156,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:17: ( ws )?
			int alt316=2;
			try { dbg.enterSubRule(316);
			try { dbg.enterDecision(316, decisionCanBacktrack[316]);

			int LA316_0 = input.LA(1);
			if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
				alt316=1;
			}
			} finally {dbg.exitDecision(316);}

			switch (alt316) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:17: ws
					{
					dbg.location(1156,17);
					pushFollow(FOLLOW_ws_in_cp_arg7137);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(316);}
			dbg.location(1156,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:21: ( COLON ( ws )? cp_expression ( ws )? )?
			int alt319=2;
			try { dbg.enterSubRule(319);
			try { dbg.enterDecision(319, decisionCanBacktrack[319]);

			int LA319_0 = input.LA(1);
			if ( (LA319_0==COLON) ) {
				alt319=1;
			}
			} finally {dbg.exitDecision(319);}

			switch (alt319) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:23: COLON ( ws )? cp_expression ( ws )?
					{
					dbg.location(1156,23);
					match(input,COLON,FOLLOW_COLON_in_cp_arg7142); if (state.failed) return;dbg.location(1156,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:29: ( ws )?
					int alt317=2;
					try { dbg.enterSubRule(317);
					try { dbg.enterDecision(317, decisionCanBacktrack[317]);

					int LA317_0 = input.LA(1);
					if ( (LA317_0==COMMENT||LA317_0==NL||LA317_0==WS) ) {
						alt317=1;
					}
					} finally {dbg.exitDecision(317);}

					switch (alt317) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:29: ws
							{
							dbg.location(1156,29);
							pushFollow(FOLLOW_ws_in_cp_arg7144);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(317);}
					dbg.location(1156,33);
					pushFollow(FOLLOW_cp_expression_in_cp_arg7147);
					cp_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1156,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:47: ( ws )?
					int alt318=2;
					try { dbg.enterSubRule(318);
					try { dbg.enterDecision(318, decisionCanBacktrack[318]);

					int LA318_0 = input.LA(1);
					if ( (LA318_0==COMMENT||LA318_0==NL||LA318_0==WS) ) {
						alt318=1;
					}
					} finally {dbg.exitDecision(318);}

					switch (alt318) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:47: ws
							{
							dbg.location(1156,47);
							pushFollow(FOLLOW_ws_in_cp_arg7149);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(318);}

					}
					break;

			}
			} finally {dbg.exitSubRule(319);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1157, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1161, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1163,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded7175);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1163,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:15: ( ws )?
			int alt320=2;
			try { dbg.enterSubRule(320);
			try { dbg.enterDecision(320, decisionCanBacktrack[320]);

			int LA320_0 = input.LA(1);
			if ( (LA320_0==COMMENT||LA320_0==NL||LA320_0==WS) ) {
				alt320=1;
			}
			} finally {dbg.exitDecision(320);}

			switch (alt320) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:15: ws
					{
					dbg.location(1163,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded7177);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(320);}
			dbg.location(1163,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7180);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1163,34);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(324);

			loop324:
			while (true) {
				int alt324=2;
				try { dbg.enterDecision(324, decisionCanBacktrack[324]);

				try {
					isCyclicDecision = true;
					alt324 = dfa324.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(324);}

				switch (alt324) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1163,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:35: ( ws )?
					int alt321=2;
					try { dbg.enterSubRule(321);
					try { dbg.enterDecision(321, decisionCanBacktrack[321]);

					int LA321_0 = input.LA(1);
					if ( (LA321_0==COMMENT||LA321_0==NL||LA321_0==WS) ) {
						alt321=1;
					}
					} finally {dbg.exitDecision(321);}

					switch (alt321) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:35: ws
							{
							dbg.location(1163,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7183);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(321);}
					dbg.location(1163,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:39: ( COMMA | key_and )
					int alt322=2;
					try { dbg.enterSubRule(322);
					try { dbg.enterDecision(322, decisionCanBacktrack[322]);

					int LA322_0 = input.LA(1);
					if ( (LA322_0==COMMA) ) {
						alt322=1;
					}
					else if ( (LA322_0==IDENT) ) {
						alt322=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 322, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(322);}

					switch (alt322) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:40: COMMA
							{
							dbg.location(1163,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded7187); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:48: key_and
							{
							dbg.location(1163,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded7191);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(322);}
					dbg.location(1163,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:57: ( ws )?
					int alt323=2;
					try { dbg.enterSubRule(323);
					try { dbg.enterDecision(323, decisionCanBacktrack[323]);

					int LA323_0 = input.LA(1);
					if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
						alt323=1;
					}
					} finally {dbg.exitDecision(323);}

					switch (alt323) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:57: ws
							{
							dbg.location(1163,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7194);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(323);}
					dbg.location(1163,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7197);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop324;
				}
			}
			} finally {dbg.exitSubRule(324);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1164, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1168, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1169:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1170,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:5: ( NOT ( ws )? )?
			int alt326=2;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==NOT) ) {
				alt326=1;
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:6: NOT ( ws )?
					{
					dbg.location(1170,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition7223); if (state.failed) return;dbg.location(1170,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:10: ( ws )?
					int alt325=2;
					try { dbg.enterSubRule(325);
					try { dbg.enterDecision(325, decisionCanBacktrack[325]);

					int LA325_0 = input.LA(1);
					if ( (LA325_0==COMMENT||LA325_0==NL||LA325_0==WS) ) {
						alt325=1;
					}
					} finally {dbg.exitDecision(325);}

					switch (alt325) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:10: ws
							{
							dbg.location(1170,10);
							pushFollow(FOLLOW_ws_in_less_condition7225);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(325);}

					}
					break;

			}
			} finally {dbg.exitSubRule(326);}
			dbg.location(1171,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition7234); if (state.failed) return;dbg.location(1171,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:12: ( ws )?
			int alt327=2;
			try { dbg.enterSubRule(327);
			try { dbg.enterDecision(327, decisionCanBacktrack[327]);

			int LA327_0 = input.LA(1);
			if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
				alt327=1;
			}
			} finally {dbg.exitDecision(327);}

			switch (alt327) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:12: ws
					{
					dbg.location(1171,12);
					pushFollow(FOLLOW_ws_in_less_condition7236);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(327);}
			dbg.location(1172,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1173,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:14: ( cp_variable | less_function_in_condition )
			int alt328=2;
			try { dbg.enterSubRule(328);
			try { dbg.enterDecision(328, decisionCanBacktrack[328]);

			int LA328_0 = input.LA(1);
			if ( (LA328_0==AT_IDENT||(LA328_0 >= BOTTOMCENTER_SYM && LA328_0 <= BOTTOMRIGHT_SYM)||LA328_0==CHARSET_SYM||LA328_0==COUNTER_STYLE_SYM||LA328_0==FONT_FACE_SYM||LA328_0==IMPORT_SYM||(LA328_0 >= LEFTBOTTOM_SYM && LA328_0 <= LEFTTOP_SYM)||LA328_0==MEDIA_SYM||LA328_0==MOZ_DOCUMENT_SYM||LA328_0==NAMESPACE_SYM||LA328_0==PAGE_SYM||(LA328_0 >= RIGHTBOTTOM_SYM && LA328_0 <= RIGHTTOP_SYM)||(LA328_0 >= SASS_AT_ROOT && LA328_0 <= SASS_DEBUG)||(LA328_0 >= SASS_EACH && LA328_0 <= SASS_ELSE)||LA328_0==SASS_EXTEND||(LA328_0 >= SASS_FOR && LA328_0 <= SASS_FUNCTION)||(LA328_0 >= SASS_IF && LA328_0 <= SASS_MIXIN)||(LA328_0 >= SASS_RETURN && LA328_0 <= SASS_WHILE)||(LA328_0 >= TOPCENTER_SYM && LA328_0 <= TOPRIGHT_SYM)||LA328_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt328=1;
			}
			else if ( (LA328_0==IDENT) ) {
				alt328=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 328, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(328);}

			switch (alt328) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:15: cp_variable
					{
					dbg.location(1173,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition7263);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:29: less_function_in_condition
					{
					dbg.location(1173,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition7267);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(328);}
			dbg.location(1173,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:57: ( ws )?
			int alt329=2;
			try { dbg.enterSubRule(329);
			try { dbg.enterDecision(329, decisionCanBacktrack[329]);

			int LA329_0 = input.LA(1);
			if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
				alt329=1;
			}
			} finally {dbg.exitDecision(329);}

			switch (alt329) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:57: ws
					{
					dbg.location(1173,57);
					pushFollow(FOLLOW_ws_in_less_condition7270);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(329);}
			dbg.location(1173,61);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt331=2;
			try { dbg.enterSubRule(331);
			try { dbg.enterDecision(331, decisionCanBacktrack[331]);

			int LA331_0 = input.LA(1);
			if ( ((LA331_0 >= GREATER && LA331_0 <= GREATER_OR_EQ)||LA331_0==LESS||LA331_0==LESS_OR_EQ||LA331_0==OPEQ) ) {
				alt331=1;
			}
			} finally {dbg.exitDecision(331);}

			switch (alt331) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1173,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition7274);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1173,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:86: ( ws )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:86: ws
							{
							dbg.location(1173,86);
							pushFollow(FOLLOW_ws_in_less_condition7276);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}
					dbg.location(1173,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition7279);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(331);}

			}
			dbg.location(1175,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition7297); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1176, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1179, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1181,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition7319);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1181,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:18: ( ws )?
			int alt332=2;
			try { dbg.enterSubRule(332);
			try { dbg.enterDecision(332, decisionCanBacktrack[332]);

			int LA332_0 = input.LA(1);
			if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
				alt332=1;
			}
			} finally {dbg.exitDecision(332);}

			switch (alt332) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:18: ws
					{
					dbg.location(1181,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7321);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(332);}
			dbg.location(1181,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition7324); if (state.failed) return;dbg.location(1181,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:29: ( ws )?
			int alt333=2;
			try { dbg.enterSubRule(333);
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			int LA333_0 = input.LA(1);
			if ( (LA333_0==COMMENT||LA333_0==NL||LA333_0==WS) ) {
				alt333=1;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:29: ws
					{
					dbg.location(1181,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7326);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(333);}
			dbg.location(1181,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition7329);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1181,45);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:45: ( ws )?
			int alt334=2;
			try { dbg.enterSubRule(334);
			try { dbg.enterDecision(334, decisionCanBacktrack[334]);

			int LA334_0 = input.LA(1);
			if ( (LA334_0==COMMENT||LA334_0==NL||LA334_0==WS) ) {
				alt334=1;
			}
			} finally {dbg.exitDecision(334);}

			switch (alt334) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:45: ws
					{
					dbg.location(1181,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7331);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(334);}
			dbg.location(1181,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition7334); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1182, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1185, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:5: IDENT
			{
			dbg.location(1187,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name7356); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1188, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1190:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1190, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1191:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1191,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1193, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1195, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1197,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation7414); if (state.failed) return;dbg.location(1197,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation7416); if (state.failed) return;dbg.location(1197,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:20: ( ws )?
			int alt335=2;
			try { dbg.enterSubRule(335);
			try { dbg.enterDecision(335, decisionCanBacktrack[335]);

			int LA335_0 = input.LA(1);
			if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
				alt335=1;
			}
			} finally {dbg.exitDecision(335);}

			switch (alt335) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:20: ws
					{
					dbg.location(1197,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7418);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(335);}
			dbg.location(1197,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation7421); if (state.failed) return;dbg.location(1197,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:30: ( ws )?
			int alt336=2;
			try { dbg.enterSubRule(336);
			try { dbg.enterDecision(336, decisionCanBacktrack[336]);

			int LA336_0 = input.LA(1);
			if ( (LA336_0==COMMENT||LA336_0==NL||LA336_0==WS) ) {
				alt336=1;
			}
			} finally {dbg.exitDecision(336);}

			switch (alt336) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:30: ws
					{
					dbg.location(1197,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7423);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(336);}
			dbg.location(1197,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation7426); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1198, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | IDENT | MINUS )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1201, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | IDENT | MINUS )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | IDENT | MINUS )?
			{
			dbg.location(1202,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:5: ( IDENT | MINUS )?
			int alt337=2;
			try { dbg.enterSubRule(337);
			try { dbg.enterDecision(337, decisionCanBacktrack[337]);

			int LA337_0 = input.LA(1);
			if ( (LA337_0==IDENT||LA337_0==MINUS) ) {
				alt337=1;
			}
			} finally {dbg.exitDecision(337);}

			switch (alt337) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1202,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(337);}
			dbg.location(1202,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp7453);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1202,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:56: ( sass_selector_interpolation_exp | IDENT | MINUS )?
			int alt338=4;
			try { dbg.enterSubRule(338);
			try { dbg.enterDecision(338, decisionCanBacktrack[338]);

			switch ( input.LA(1) ) {
				case IDENT:
					{
					int LA338_1 = input.LA(2);
					if ( (LA338_1==HASH_SYMBOL) ) {
						int LA338_5 = input.LA(3);
						if ( (LA338_5==LBRACE) ) {
							alt338=1;
						}
						else if ( (LA338_5==AT_SIGN||LA338_5==NAME) ) {
							alt338=2;
						}
					}
					else if ( (LA338_1==AT_SIGN||(LA338_1 >= COLON && LA338_1 <= COMMENT)||LA338_1==DCOLON||LA338_1==DOT||LA338_1==GREATER||LA338_1==HASH||(LA338_1 >= LBRACE && LA338_1 <= LBRACKET)||LA338_1==NL||LA338_1==PLUS||LA338_1==RBRACE||LA338_1==RPAREN||LA338_1==SASS_EXTEND_ONLY_SELECTOR||LA338_1==SEMI||LA338_1==TILDE||LA338_1==WS) ) {
						alt338=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA338_2 = input.LA(2);
					if ( (LA338_2==LBRACE) ) {
						alt338=1;
					}
					}
					break;
				case MINUS:
					{
					int LA338_3 = input.LA(2);
					if ( (LA338_3==HASH_SYMBOL) ) {
						int LA338_8 = input.LA(3);
						if ( (LA338_8==LBRACE) ) {
							alt338=1;
						}
						else if ( (LA338_8==AT_SIGN||LA338_8==NAME) ) {
							alt338=3;
						}
					}
					else if ( (LA338_3==AT_SIGN||(LA338_3 >= COLON && LA338_3 <= COMMENT)||LA338_3==DCOLON||LA338_3==DOT||LA338_3==GREATER||LA338_3==HASH||(LA338_3 >= LBRACE && LA338_3 <= LBRACKET)||LA338_3==NL||LA338_3==PLUS||LA338_3==RBRACE||LA338_3==RPAREN||LA338_3==SASS_EXTEND_ONLY_SELECTOR||LA338_3==SEMI||LA338_3==TILDE||LA338_3==WS) ) {
						alt338=3;
					}
					}
					break;
			}
			} finally {dbg.exitDecision(338);}

			switch (alt338) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:57: sass_selector_interpolation_exp
					{
					dbg.location(1202,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp7456);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:91: IDENT
					{
					dbg.location(1202,91);
					match(input,IDENT,FOLLOW_IDENT_in_sass_selector_interpolation_exp7460); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:99: MINUS
					{
					dbg.location(1202,99);
					match(input,MINUS,FOLLOW_MINUS_in_sass_selector_interpolation_exp7464); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(338);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1203, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1205:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE cp_expression RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1205, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:5: ( HASH_SYMBOL LBRACE cp_expression RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1207:9: HASH_SYMBOL LBRACE cp_expression RBRACE
			{
			dbg.location(1207,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7491); if (state.failed) return;dbg.location(1207,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var7493); if (state.failed) return;dbg.location(1207,28);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var7495);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1207,42);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var7497); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1208, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1228:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1228, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1230,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties7537);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1230,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:14: ( ws )?
			int alt339=2;
			try { dbg.enterSubRule(339);
			try { dbg.enterDecision(339, decisionCanBacktrack[339]);

			int LA339_0 = input.LA(1);
			if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
				alt339=1;
			}
			} finally {dbg.exitDecision(339);}

			switch (alt339) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:14: ws
					{
					dbg.location(1230,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties7539);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(339);}
			dbg.location(1230,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties7542); if (state.failed) return;dbg.location(1230,24);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:24: ( ws )?
			int alt340=2;
			try { dbg.enterSubRule(340);
			try { dbg.enterDecision(340, decisionCanBacktrack[340]);

			int LA340_0 = input.LA(1);
			if ( (LA340_0==COMMENT||LA340_0==NL||LA340_0==WS) ) {
				alt340=1;
			}
			} finally {dbg.exitDecision(340);}

			switch (alt340) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:24: ws
					{
					dbg.location(1230,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties7544);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(340);}
			dbg.location(1230,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:28: ( propertyValue ( ws )? )?
			int alt342=2;
			try { dbg.enterSubRule(342);
			try { dbg.enterDecision(342, decisionCanBacktrack[342]);

			int LA342_0 = input.LA(1);
			if ( ((LA342_0 >= ANGLE && LA342_0 <= AT_IDENT)||(LA342_0 >= BOTTOMCENTER_SYM && LA342_0 <= BOTTOMRIGHT_SYM)||LA342_0==CHARSET_SYM||LA342_0==COUNTER_STYLE_SYM||LA342_0==DIMENSION||LA342_0==EMS||LA342_0==EXS||(LA342_0 >= FONT_FACE_SYM && LA342_0 <= FREQ)||LA342_0==GEN||(LA342_0 >= HASH && LA342_0 <= HASH_SYMBOL)||LA342_0==IDENT||LA342_0==IMPORT_SYM||(LA342_0 >= LEFTBOTTOM_SYM && LA342_0 <= LENGTH)||LA342_0==LESS_JS_STRING||(LA342_0 >= MEDIA_SYM && LA342_0 <= MOZ_DOCUMENT_SYM)||LA342_0==NAMESPACE_SYM||LA342_0==NUMBER||(LA342_0 >= PAGE_SYM && LA342_0 <= PERCENTAGE_SYMBOL)||LA342_0==PLUS||(LA342_0 >= REM && LA342_0 <= RIGHTTOP_SYM)||(LA342_0 >= SASS_AT_ROOT && LA342_0 <= SASS_DEBUG)||(LA342_0 >= SASS_EACH && LA342_0 <= SASS_ELSE)||LA342_0==SASS_EXTEND||(LA342_0 >= SASS_FOR && LA342_0 <= SASS_FUNCTION)||(LA342_0 >= SASS_IF && LA342_0 <= SASS_MIXIN)||(LA342_0 >= SASS_RETURN && LA342_0 <= SASS_WHILE)||LA342_0==STRING||(LA342_0 >= TILDE && LA342_0 <= TOPRIGHT_SYM)||LA342_0==URI||LA342_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt342=1;
			}
			} finally {dbg.exitDecision(342);}

			switch (alt342) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:29: propertyValue ( ws )?
					{
					dbg.location(1230,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties7548);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1230,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:43: ( ws )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:43: ws
							{
							dbg.location(1230,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties7550);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(341);}

					}
					break;

			}
			} finally {dbg.exitSubRule(342);}
			dbg.location(1230,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties7555); if (state.failed) return;dbg.location(1230,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:56: ( ws )?
			int alt343=2;
			try { dbg.enterSubRule(343);
			try { dbg.enterDecision(343, decisionCanBacktrack[343]);

			int LA343_0 = input.LA(1);
			if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
				alt343=1;
			}
			} finally {dbg.exitDecision(343);}

			switch (alt343) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:56: ws
					{
					dbg.location(1230,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties7557);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(343);}
			dbg.location(1230,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties7560);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1230,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:73: ( declarations )?
			int alt344=2;
			try { dbg.enterSubRule(344);
			try { dbg.enterDecision(344, decisionCanBacktrack[344]);

			int LA344_0 = input.LA(1);
			if ( ((LA344_0 >= AT_IDENT && LA344_0 <= AT_SIGN)||(LA344_0 >= BOTTOMCENTER_SYM && LA344_0 <= BOTTOMRIGHT_SYM)||(LA344_0 >= CHARSET_SYM && LA344_0 <= COLON)||LA344_0==COUNTER_STYLE_SYM||LA344_0==DCOLON||LA344_0==DOT||LA344_0==FONT_FACE_SYM||(LA344_0 >= GEN && LA344_0 <= GREATER)||(LA344_0 >= HASH && LA344_0 <= HASH_SYMBOL)||LA344_0==IDENT||LA344_0==IMPORT_SYM||(LA344_0 >= LBRACKET && LA344_0 <= LEFTTOP_SYM)||LA344_0==LESS_AND||(LA344_0 >= MEDIA_SYM && LA344_0 <= MOZ_DOCUMENT_SYM)||LA344_0==NAMESPACE_SYM||LA344_0==PAGE_SYM||(LA344_0 >= PIPE && LA344_0 <= PLUS)||(LA344_0 >= RIGHTBOTTOM_SYM && LA344_0 <= RIGHTTOP_SYM)||(LA344_0 >= SASS_AT_ROOT && LA344_0 <= SASS_DEBUG)||(LA344_0 >= SASS_EACH && LA344_0 <= SASS_ELSE)||(LA344_0 >= SASS_EXTEND && LA344_0 <= SASS_FUNCTION)||(LA344_0 >= SASS_IF && LA344_0 <= SASS_MIXIN)||(LA344_0 >= SASS_RETURN && LA344_0 <= SEMI)||LA344_0==STAR||LA344_0==TILDE||(LA344_0 >= TOPCENTER_SYM && LA344_0 <= TOPRIGHT_SYM)||LA344_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt344=1;
			}
			} finally {dbg.exitDecision(344);}

			switch (alt344) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:73: declarations
					{
					dbg.location(1230,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties7562);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(344);}
			dbg.location(1230,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties7565); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1231, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1233, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:5: ( SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:5: SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )?
			{
			dbg.location(1235,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend7586); if (state.failed) return;dbg.location(1235,17);
			pushFollow(FOLLOW_ws_in_sass_extend7588);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1235,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend7590);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1235,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:43: ( ws SASS_OPTIONAL )?
			int alt345=2;
			try { dbg.enterSubRule(345);
			try { dbg.enterDecision(345, decisionCanBacktrack[345]);

			try {
				isCyclicDecision = true;
				alt345 = dfa345.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(345);}

			switch (alt345) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:44: ws SASS_OPTIONAL
					{
					dbg.location(1235,44);
					pushFollow(FOLLOW_ws_in_sass_extend7593);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1235,47);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend7595); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(345);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1236, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1238, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:5: ( SASS_EXTEND_ONLY_SELECTOR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:5: SASS_EXTEND_ONLY_SELECTOR
			{
			dbg.location(1240,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector7618); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1241, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1243:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1243, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1245,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1245,32);
			pushFollow(FOLLOW_ws_in_sass_debug7649);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1245,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug7651);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1246, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_control"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1248:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1248, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1249:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt346=4;
			try { dbg.enterDecision(346, decisionCanBacktrack[346]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt346=1;
				}
				break;
			case SASS_FOR:
				{
				alt346=2;
				}
				break;
			case SASS_EACH:
				{
				alt346=3;
				}
				break;
			case SASS_WHILE:
				{
				alt346=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 346, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(346);}

			switch (alt346) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:5: sass_if
					{
					dbg.location(1250,5);
					pushFollow(FOLLOW_sass_if_in_sass_control7672);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:15: sass_for
					{
					dbg.location(1250,15);
					pushFollow(FOLLOW_sass_for_in_sass_control7676);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:26: sass_each
					{
					dbg.location(1250,26);
					pushFollow(FOLLOW_sass_each_in_sass_control7680);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:38: sass_while
					{
					dbg.location(1250,38);
					pushFollow(FOLLOW_sass_while_in_sass_control7684);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1251, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1253:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1253, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1254:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1255,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if7705); if (state.failed) return;dbg.location(1255,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:13: ( ws )?
			int alt347=2;
			try { dbg.enterSubRule(347);
			try { dbg.enterDecision(347, decisionCanBacktrack[347]);

			int LA347_0 = input.LA(1);
			if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
				alt347=1;
			}
			} finally {dbg.exitDecision(347);}

			switch (alt347) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:13: ws
					{
					dbg.location(1255,13);
					pushFollow(FOLLOW_ws_in_sass_if7707);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(347);}
			dbg.location(1255,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if7710);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1255,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:41: ( ws )?
			int alt348=2;
			try { dbg.enterSubRule(348);
			try { dbg.enterDecision(348, decisionCanBacktrack[348]);

			int LA348_0 = input.LA(1);
			if ( (LA348_0==COMMENT||LA348_0==NL||LA348_0==WS) ) {
				alt348=1;
			}
			} finally {dbg.exitDecision(348);}

			switch (alt348) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:41: ws
					{
					dbg.location(1255,41);
					pushFollow(FOLLOW_ws_in_sass_if7712);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(348);}
			dbg.location(1255,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if7715);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1255,64);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:64: ( ( ws )? sass_else )?
			int alt350=2;
			try { dbg.enterSubRule(350);
			try { dbg.enterDecision(350, decisionCanBacktrack[350]);

			try {
				isCyclicDecision = true;
				alt350 = dfa350.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(350);}

			switch (alt350) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:65: ( ws )? sass_else
					{
					dbg.location(1255,65);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:65: ( ws )?
					int alt349=2;
					try { dbg.enterSubRule(349);
					try { dbg.enterDecision(349, decisionCanBacktrack[349]);

					int LA349_0 = input.LA(1);
					if ( (LA349_0==COMMENT||LA349_0==NL||LA349_0==WS) ) {
						alt349=1;
					}
					} finally {dbg.exitDecision(349);}

					switch (alt349) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:65: ws
							{
							dbg.location(1255,65);
							pushFollow(FOLLOW_ws_in_sass_if7718);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(349);}
					dbg.location(1255,69);
					pushFollow(FOLLOW_sass_else_in_sass_if7721);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(350);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1256, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1258:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1258, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1259:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt358=2;
			try { dbg.enterDecision(358, decisionCanBacktrack[358]);

			try {
				isCyclicDecision = true;
				alt358 = dfa358.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(358);}

			switch (alt358) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1260:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1260,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else7744); if (state.failed) return;dbg.location(1260,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1260:15: ( ws )?
					int alt351=2;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					int LA351_0 = input.LA(1);
					if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
						alt351=1;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1260:15: ws
							{
							dbg.location(1260,15);
							pushFollow(FOLLOW_ws_in_sass_else7746);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}
					dbg.location(1260,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else7749);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1262,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt353=2;
					try { dbg.enterSubRule(353);
					try { dbg.enterDecision(353, decisionCanBacktrack[353]);

					int LA353_0 = input.LA(1);
					if ( (LA353_0==SASS_ELSE) ) {
						alt353=1;
					}
					else if ( (LA353_0==SASS_ELSEIF) ) {
						alt353=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 353, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(353);}

					switch (alt353) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1262,6);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1262,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else7763); if (state.failed) return;dbg.location(1262,17);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:17: ( ws )?
							int alt352=2;
							try { dbg.enterSubRule(352);
							try { dbg.enterDecision(352, decisionCanBacktrack[352]);

							int LA352_0 = input.LA(1);
							if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
								alt352=1;
							}
							} finally {dbg.exitDecision(352);}

							switch (alt352) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:17: ws
									{
									dbg.location(1262,17);
									pushFollow(FOLLOW_ws_in_sass_else7765);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(352);}
							dbg.location(1262,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1262,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else7770); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:64: SASS_ELSEIF
							{
							dbg.location(1262,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else7777); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(353);}
					dbg.location(1262,77);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:77: ( ws )?
					int alt354=2;
					try { dbg.enterSubRule(354);
					try { dbg.enterDecision(354, decisionCanBacktrack[354]);

					int LA354_0 = input.LA(1);
					if ( (LA354_0==COMMENT||LA354_0==NL||LA354_0==WS) ) {
						alt354=1;
					}
					} finally {dbg.exitDecision(354);}

					switch (alt354) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:77: ws
							{
							dbg.location(1262,77);
							pushFollow(FOLLOW_ws_in_sass_else7780);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(354);}
					dbg.location(1262,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else7783);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1262,105);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:105: ( ws )?
					int alt355=2;
					try { dbg.enterSubRule(355);
					try { dbg.enterDecision(355, decisionCanBacktrack[355]);

					int LA355_0 = input.LA(1);
					if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
						alt355=1;
					}
					} finally {dbg.exitDecision(355);}

					switch (alt355) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:105: ws
							{
							dbg.location(1262,105);
							pushFollow(FOLLOW_ws_in_sass_else7785);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(355);}
					dbg.location(1262,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else7788);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1262,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:128: ( ( ws )? sass_else )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					try {
						isCyclicDecision = true;
						alt357 = dfa357.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:129: ( ws )? sass_else
							{
							dbg.location(1262,129);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:129: ( ws )?
							int alt356=2;
							try { dbg.enterSubRule(356);
							try { dbg.enterDecision(356, decisionCanBacktrack[356]);

							int LA356_0 = input.LA(1);
							if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
								alt356=1;
							}
							} finally {dbg.exitDecision(356);}

							switch (alt356) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:129: ws
									{
									dbg.location(1262,129);
									pushFollow(FOLLOW_ws_in_sass_else7791);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(356);}
							dbg.location(1262,133);
							pushFollow(FOLLOW_sass_else_in_sass_else7794);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1263, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1265:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1265, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:5: cp_expression
			{
			dbg.location(1267,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression7817);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1268, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1270:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1270, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1271:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1272,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for7838); if (state.failed) return;dbg.location(1272,14);
			pushFollow(FOLLOW_ws_in_sass_for7840);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for7842);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,29);
			pushFollow(FOLLOW_ws_in_sass_for7844);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1272,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for7848); if (state.failed) return;dbg.location(1272,74);
			pushFollow(FOLLOW_ws_in_sass_for7852);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for7854);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,96);
			pushFollow(FOLLOW_ws_in_sass_for7856);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1272,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for7860); if (state.failed) return;dbg.location(1272,173);
			pushFollow(FOLLOW_ws_in_sass_for7864);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for7866);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,195);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:195: ( ws )?
			int alt359=2;
			try { dbg.enterSubRule(359);
			try { dbg.enterDecision(359, decisionCanBacktrack[359]);

			int LA359_0 = input.LA(1);
			if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
				alt359=1;
			}
			} finally {dbg.exitDecision(359);}

			switch (alt359) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:195: ws
					{
					dbg.location(1272,195);
					pushFollow(FOLLOW_ws_in_sass_for7868);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(359);}
			dbg.location(1272,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for7871);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1273, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1275:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1275, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1276:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block
			{
			dbg.location(1277,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each7892); if (state.failed) return;dbg.location(1277,15);
			pushFollow(FOLLOW_ws_in_sass_each7894);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1277,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each7896);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1277,38);
			pushFollow(FOLLOW_ws_in_sass_each7898);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1277,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1277,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each7902); if (state.failed) return;dbg.location(1277,79);
			pushFollow(FOLLOW_ws_in_sass_each7906);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1277,82);
			pushFollow(FOLLOW_cp_expression_list_in_sass_each7908);
			cp_expression_list();
			state._fsp--;
			if (state.failed) return;dbg.location(1277,101);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:101: ( ws )?
			int alt360=2;
			try { dbg.enterSubRule(360);
			try { dbg.enterDecision(360, decisionCanBacktrack[360]);

			int LA360_0 = input.LA(1);
			if ( (LA360_0==COMMENT||LA360_0==NL||LA360_0==WS) ) {
				alt360=1;
			}
			} finally {dbg.exitDecision(360);}

			switch (alt360) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:101: ws
					{
					dbg.location(1277,101);
					pushFollow(FOLLOW_ws_in_sass_each7910);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(360);}
			dbg.location(1277,105);
			pushFollow(FOLLOW_sass_control_block_in_sass_each7913);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1278, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1280:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1280, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1281:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1282,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables7934);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1282,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(363);

			loop363:
			while (true) {
				int alt363=2;
				try { dbg.enterDecision(363, decisionCanBacktrack[363]);

				try {
					isCyclicDecision = true;
					alt363 = dfa363.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(363);}

				switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1282,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:33: ( ws )?
					int alt361=2;
					try { dbg.enterSubRule(361);
					try { dbg.enterDecision(361, decisionCanBacktrack[361]);

					int LA361_0 = input.LA(1);
					if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
						alt361=1;
					}
					} finally {dbg.exitDecision(361);}

					switch (alt361) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:33: ws
							{
							dbg.location(1282,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables7946);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(361);}
					dbg.location(1282,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables7949); if (state.failed) return;dbg.location(1282,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:43: ( ws )?
					int alt362=2;
					try { dbg.enterSubRule(362);
					try { dbg.enterDecision(362, decisionCanBacktrack[362]);

					int LA362_0 = input.LA(1);
					if ( (LA362_0==COMMENT||LA362_0==NL||LA362_0==WS) ) {
						alt362=1;
					}
					} finally {dbg.exitDecision(362);}

					switch (alt362) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:43: ws
							{
							dbg.location(1282,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables7951);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(362);}
					dbg.location(1282,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables7954);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop363;
				}
			}
			} finally {dbg.exitSubRule(363);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1283, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1285:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1285, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1287,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while7979); if (state.failed) return;dbg.location(1287,16);
			pushFollow(FOLLOW_ws_in_sass_while7981);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1287,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while7983);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1287,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:43: ( ws )?
			int alt364=2;
			try { dbg.enterSubRule(364);
			try { dbg.enterDecision(364, decisionCanBacktrack[364]);

			int LA364_0 = input.LA(1);
			if ( (LA364_0==COMMENT||LA364_0==NL||LA364_0==WS) ) {
				alt364=1;
			}
			} finally {dbg.exitDecision(364);}

			switch (alt364) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:43: ws
					{
					dbg.location(1287,43);
					pushFollow(FOLLOW_ws_in_sass_while7985);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(364);}
			dbg.location(1287,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while7988);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1288, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1290:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1290, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1292,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block8009); if (state.failed) return;dbg.location(1292,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:12: ( ws )?
			int alt365=2;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			int LA365_0 = input.LA(1);
			if ( (LA365_0==COMMENT||LA365_0==NL||LA365_0==WS) ) {
				alt365=1;
			}
			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:12: ws
					{
					dbg.location(1292,12);
					pushFollow(FOLLOW_ws_in_sass_control_block8011);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1292,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:16: ( declarations )?
			int alt366=2;
			try { dbg.enterSubRule(366);
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			int LA366_0 = input.LA(1);
			if ( ((LA366_0 >= AT_IDENT && LA366_0 <= AT_SIGN)||(LA366_0 >= BOTTOMCENTER_SYM && LA366_0 <= BOTTOMRIGHT_SYM)||(LA366_0 >= CHARSET_SYM && LA366_0 <= COLON)||LA366_0==COUNTER_STYLE_SYM||LA366_0==DCOLON||LA366_0==DOT||LA366_0==FONT_FACE_SYM||(LA366_0 >= GEN && LA366_0 <= GREATER)||(LA366_0 >= HASH && LA366_0 <= HASH_SYMBOL)||LA366_0==IDENT||LA366_0==IMPORT_SYM||(LA366_0 >= LBRACKET && LA366_0 <= LEFTTOP_SYM)||LA366_0==LESS_AND||(LA366_0 >= MEDIA_SYM && LA366_0 <= MOZ_DOCUMENT_SYM)||LA366_0==NAMESPACE_SYM||LA366_0==PAGE_SYM||(LA366_0 >= PIPE && LA366_0 <= PLUS)||(LA366_0 >= RIGHTBOTTOM_SYM && LA366_0 <= RIGHTTOP_SYM)||(LA366_0 >= SASS_AT_ROOT && LA366_0 <= SASS_DEBUG)||(LA366_0 >= SASS_EACH && LA366_0 <= SASS_ELSE)||(LA366_0 >= SASS_EXTEND && LA366_0 <= SASS_FUNCTION)||(LA366_0 >= SASS_IF && LA366_0 <= SASS_MIXIN)||(LA366_0 >= SASS_RETURN && LA366_0 <= SEMI)||LA366_0==STAR||LA366_0==TILDE||(LA366_0 >= TOPCENTER_SYM && LA366_0 <= TOPRIGHT_SYM)||LA366_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt366=1;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:16: declarations
					{
					dbg.location(1292,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block8014);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1292,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block8017); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1293, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1295:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1295, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1296:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1301,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration8059); if (state.failed) return;dbg.location(1301,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration8061);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1301,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration8063);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1301,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:41: ( ws )?
			int alt367=2;
			try { dbg.enterSubRule(367);
			try { dbg.enterDecision(367, decisionCanBacktrack[367]);

			int LA367_0 = input.LA(1);
			if ( (LA367_0==COMMENT||LA367_0==NL||LA367_0==WS) ) {
				alt367=1;
			}
			} finally {dbg.exitDecision(367);}

			switch (alt367) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:41: ws
					{
					dbg.location(1301,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8065);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(367);}
			dbg.location(1301,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration8068); if (state.failed) return;dbg.location(1301,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:52: ( ws )?
			int alt368=2;
			try { dbg.enterSubRule(368);
			try { dbg.enterDecision(368, decisionCanBacktrack[368]);

			int LA368_0 = input.LA(1);
			if ( (LA368_0==COMMENT||LA368_0==NL||LA368_0==WS) ) {
				alt368=1;
			}
			} finally {dbg.exitDecision(368);}

			switch (alt368) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:52: ws
					{
					dbg.location(1301,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8070);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(368);}
			dbg.location(1301,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:56: ( cp_args_list )?
			int alt369=2;
			try { dbg.enterSubRule(369);
			try { dbg.enterDecision(369, decisionCanBacktrack[369]);

			int LA369_0 = input.LA(1);
			if ( (LA369_0==AT_IDENT||(LA369_0 >= BOTTOMCENTER_SYM && LA369_0 <= BOTTOMRIGHT_SYM)||LA369_0==CHARSET_SYM||(LA369_0 >= COUNTER_STYLE_SYM && LA369_0 <= CP_DOTS)||LA369_0==FONT_FACE_SYM||LA369_0==IMPORT_SYM||(LA369_0 >= LEFTBOTTOM_SYM && LA369_0 <= LEFTTOP_SYM)||LA369_0==LESS_REST||LA369_0==MEDIA_SYM||LA369_0==MOZ_DOCUMENT_SYM||LA369_0==NAMESPACE_SYM||LA369_0==PAGE_SYM||(LA369_0 >= RIGHTBOTTOM_SYM && LA369_0 <= RIGHTTOP_SYM)||(LA369_0 >= SASS_AT_ROOT && LA369_0 <= SASS_DEBUG)||(LA369_0 >= SASS_EACH && LA369_0 <= SASS_ELSE)||LA369_0==SASS_EXTEND||(LA369_0 >= SASS_FOR && LA369_0 <= SASS_FUNCTION)||(LA369_0 >= SASS_IF && LA369_0 <= SASS_MIXIN)||(LA369_0 >= SASS_RETURN && LA369_0 <= SASS_WHILE)||(LA369_0 >= TOPCENTER_SYM && LA369_0 <= TOPRIGHT_SYM)||LA369_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt369=1;
			}
			} finally {dbg.exitDecision(369);}

			switch (alt369) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:56: cp_args_list
					{
					dbg.location(1301,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration8073);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(369);}
			dbg.location(1301,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration8076); if (state.failed) return;dbg.location(1301,77);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:77: ( ws )?
			int alt370=2;
			try { dbg.enterSubRule(370);
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			int LA370_0 = input.LA(1);
			if ( (LA370_0==COMMENT||LA370_0==NL||LA370_0==WS) ) {
				alt370=1;
			}
			} finally {dbg.exitDecision(370);}

			switch (alt370) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:77: ws
					{
					dbg.location(1301,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8078);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(370);}
			dbg.location(1301,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration8081); if (state.failed) return;dbg.location(1301,88);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:88: ( ws )?
			int alt371=2;
			try { dbg.enterSubRule(371);
			try { dbg.enterDecision(371, decisionCanBacktrack[371]);

			int LA371_0 = input.LA(1);
			if ( (LA371_0==COMMENT||LA371_0==NL||LA371_0==WS) ) {
				alt371=1;
			}
			} finally {dbg.exitDecision(371);}

			switch (alt371) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:88: ws
					{
					dbg.location(1301,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8083);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(371);}
			dbg.location(1301,92);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:92: ( declarations )?
			int alt372=2;
			try { dbg.enterSubRule(372);
			try { dbg.enterDecision(372, decisionCanBacktrack[372]);

			int LA372_0 = input.LA(1);
			if ( ((LA372_0 >= AT_IDENT && LA372_0 <= AT_SIGN)||(LA372_0 >= BOTTOMCENTER_SYM && LA372_0 <= BOTTOMRIGHT_SYM)||(LA372_0 >= CHARSET_SYM && LA372_0 <= COLON)||LA372_0==COUNTER_STYLE_SYM||LA372_0==DCOLON||LA372_0==DOT||LA372_0==FONT_FACE_SYM||(LA372_0 >= GEN && LA372_0 <= GREATER)||(LA372_0 >= HASH && LA372_0 <= HASH_SYMBOL)||LA372_0==IDENT||LA372_0==IMPORT_SYM||(LA372_0 >= LBRACKET && LA372_0 <= LEFTTOP_SYM)||LA372_0==LESS_AND||(LA372_0 >= MEDIA_SYM && LA372_0 <= MOZ_DOCUMENT_SYM)||LA372_0==NAMESPACE_SYM||LA372_0==PAGE_SYM||(LA372_0 >= PIPE && LA372_0 <= PLUS)||(LA372_0 >= RIGHTBOTTOM_SYM && LA372_0 <= RIGHTTOP_SYM)||(LA372_0 >= SASS_AT_ROOT && LA372_0 <= SASS_DEBUG)||(LA372_0 >= SASS_EACH && LA372_0 <= SASS_ELSE)||(LA372_0 >= SASS_EXTEND && LA372_0 <= SASS_FUNCTION)||(LA372_0 >= SASS_IF && LA372_0 <= SASS_MIXIN)||(LA372_0 >= SASS_RETURN && LA372_0 <= SEMI)||LA372_0==STAR||LA372_0==TILDE||(LA372_0 >= TOPCENTER_SYM && LA372_0 <= TOPRIGHT_SYM)||LA372_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt372=1;
			}
			} finally {dbg.exitDecision(372);}

			switch (alt372) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:92: declarations
					{
					dbg.location(1301,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration8086);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(372);}
			dbg.location(1301,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration8089); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1302, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1304, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1306:5: IDENT
			{
			dbg.location(1306,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name8110); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1307, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1309, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1310:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1311,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return8131); if (state.failed) return;dbg.location(1311,17);
			pushFollow(FOLLOW_ws_in_sass_function_return8133);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return8135);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1312, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1314, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:5: SASS_CONTENT
			{
			dbg.location(1316,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content8156); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1317, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1319, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:5: {...}? IDENT
			{
			dbg.location(1320,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1320,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types8175); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1321, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1326, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1327:5: {...}? IDENT
			{
			dbg.location(1327,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1327,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when8198); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1328, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1330, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:5: {...}? IDENT
			{
			dbg.location(1331,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1331,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and8217); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1332, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1334, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:5: {...}? IDENT
			{
			dbg.location(1335,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1335,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or8235); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1336, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1338:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1338, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1338:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1339:5: {...}? IDENT
			{
			dbg.location(1339,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1339,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only8253); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1340, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ( ws )? mediaQueryList
		{
		dbg.location(372,45);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ( ws )?
		int alt373=2;
		try { dbg.enterSubRule(373);
		try { dbg.enterDecision(373, decisionCanBacktrack[373]);

		int LA373_0 = input.LA(1);
		if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
			alt373=1;
		}
		} finally {dbg.exitDecision(373);}

		switch (alt373) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ws
				{
				dbg.location(372,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3356);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(373);}
		dbg.location(372,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3359);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ( ws )? mediaQueryList
		{
		dbg.location(375,99);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ( ws )?
		int alt374=2;
		try { dbg.enterSubRule(374);
		try { dbg.enterDecision(374, decisionCanBacktrack[374]);

		int LA374_0 = input.LA(1);
		if ( (LA374_0==COMMENT||LA374_0==NL||LA374_0==WS) ) {
			alt374=1;
		}
		} finally {dbg.exitDecision(374);}

		switch (alt374) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ws
				{
				dbg.location(375,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3420);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(374);}
		dbg.location(375,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3423);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ( ws )? mediaQueryList
		{
		dbg.location(377,102);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ( ws )?
		int alt375=2;
		try { dbg.enterSubRule(375);
		try { dbg.enterDecision(375, decisionCanBacktrack[375]);

		int LA375_0 = input.LA(1);
		if ( (LA375_0==COMMENT||LA375_0==NL||LA375_0==WS) ) {
			alt375=1;
		}
		} finally {dbg.exitDecision(375);}

		switch (alt375) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ws
				{
				dbg.location(377,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3474);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(375);}
		dbg.location(377,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3477);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ( ws )? SEMI
		{
		dbg.location(392,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ( ws )?
		int alt376=2;
		try { dbg.enterSubRule(376);
		try { dbg.enterDecision(376, decisionCanBacktrack[376]);

		int LA376_0 = input.LA(1);
		if ( (LA376_0==COMMENT||LA376_0==NL||LA376_0==WS) ) {
			alt376=1;
		}
		} finally {dbg.exitDecision(376);}

		switch (alt376) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ws
				{
				dbg.location(392,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css3596);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(376);}
		dbg.location(392,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css3599); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:5: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt380=2;
		try { dbg.enterDecision(380, decisionCanBacktrack[380]);

		int LA380_0 = input.LA(1);
		if ( (LA380_0==SASS_MIXIN) ) {
			alt380=1;
		}
		else if ( (LA380_0==DOT) ) {
			alt380=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 380, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(380);}

		switch (alt380) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:6: SASS_MIXIN
				{
				dbg.location(401,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css3697); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:19: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(401,19);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:19: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:20: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(401,20);
				match(input,DOT,FOLLOW_DOT_in_synpred5_Css3702); if (state.failed) return;dbg.location(401,24);
				match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css3704); if (state.failed) return;dbg.location(401,30);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:30: ( ws )?
				int alt377=2;
				try { dbg.enterSubRule(377);
				try { dbg.enterDecision(377, decisionCanBacktrack[377]);

				int LA377_0 = input.LA(1);
				if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
					alt377=1;
				}
				} finally {dbg.exitDecision(377);}

				switch (alt377) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:30: ws
						{
						dbg.location(401,30);
						pushFollow(FOLLOW_ws_in_synpred5_Css3706);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(377);}
				dbg.location(401,34);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css3709); if (state.failed) return;dbg.location(401,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:41: (~ RPAREN )*
				try { dbg.enterSubRule(378);

				loop378:
				while (true) {
					int alt378=2;
					try { dbg.enterDecision(378, decisionCanBacktrack[378]);

					int LA378_0 = input.LA(1);
					if ( ((LA378_0 >= A && LA378_0 <= RIGHTTOP_SYM)||(LA378_0 >= S && LA378_0 <= Z)) ) {
						alt378=1;
					}

					} finally {dbg.exitDecision(378);}

					switch (alt378) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(401,41);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop378;
					}
				}
				} finally {dbg.exitSubRule(378);}
				dbg.location(401,52);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css3717); if (state.failed) return;dbg.location(401,59);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:59: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(379);

				loop379:
				while (true) {
					int alt379=2;
					try { dbg.enterDecision(379, decisionCanBacktrack[379]);

					int LA379_0 = input.LA(1);
					if ( ((LA379_0 >= A && LA379_0 <= L)||(LA379_0 >= LBRACKET && LA379_0 <= SASS_WHILE)||(LA379_0 >= SOLIDUS && LA379_0 <= Z)) ) {
						alt379=1;
					}

					} finally {dbg.exitDecision(379);}

					switch (alt379) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(401,59);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop379;
					}
				}
				} finally {dbg.exitSubRule(379);}
				dbg.location(401,75);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css3727); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(403,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css3745);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(403,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:22: ( ( ws )? IMPORTANT_SYM )?
		int alt382=2;
		try { dbg.enterSubRule(382);
		try { dbg.enterDecision(382, decisionCanBacktrack[382]);

		try {
			isCyclicDecision = true;
			alt382 = dfa382.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(382);}

		switch (alt382) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(403,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:23: ( ws )?
				int alt381=2;
				try { dbg.enterSubRule(381);
				try { dbg.enterDecision(381, decisionCanBacktrack[381]);

				int LA381_0 = input.LA(1);
				if ( (LA381_0==COMMENT||LA381_0==NL||LA381_0==WS) ) {
					alt381=1;
				}
				} finally {dbg.exitDecision(381);}

				switch (alt381) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:23: ws
						{
						dbg.location(403,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css3748);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(381);}
				dbg.location(403,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css3751); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(382);}
		dbg.location(403,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:43: ( ws )?
		int alt383=2;
		try { dbg.enterSubRule(383);
		try { dbg.enterDecision(383, decisionCanBacktrack[383]);

		int LA383_0 = input.LA(1);
		if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
			alt383=1;
		}
		} finally {dbg.exitDecision(383);}

		switch (alt383) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:43: ws
				{
				dbg.location(403,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css3755);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(383);}
		dbg.location(403,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css3758); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:8: cp_mixin_call
		{
		dbg.location(404,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css3781);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI
		{
		dbg.location(405,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+
		int cnt384=0;
		try { dbg.enterSubRule(384);

		loop384:
		while (true) {
			int alt384=2;
			try { dbg.enterDecision(384, decisionCanBacktrack[384]);

			int LA384_0 = input.LA(1);
			if ( ((LA384_0 >= A && LA384_0 <= CHARSET_SYM)||(LA384_0 >= COMMA && LA384_0 <= L)||(LA384_0 >= LBRACKET && LA384_0 <= R)||(LA384_0 >= RBRACKET && LA384_0 <= SASS_WHILE)||(LA384_0 >= SOLIDUS && LA384_0 <= Z)) ) {
				alt384=1;
			}

			} finally {dbg.exitDecision(384);}

			switch (alt384) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(405,8);
				if ( (input.LA(1) >= A && input.LA(1) <= CHARSET_SYM)||(input.LA(1) >= COMMA && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt384 >= 1 ) break loop384;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(384, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt384++;
		}
		} finally {dbg.exitSubRule(384);}
		dbg.location(405,37);
		match(input,COLON,FOLLOW_COLON_in_synpred8_Css3816); if (state.failed) return;dbg.location(405,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:43: (~ ( SEMI | LBRACE | RBRACE ) )+
		int cnt385=0;
		try { dbg.enterSubRule(385);

		loop385:
		while (true) {
			int alt385=2;
			try { dbg.enterDecision(385, decisionCanBacktrack[385]);

			int LA385_0 = input.LA(1);
			if ( ((LA385_0 >= A && LA385_0 <= L)||(LA385_0 >= LBRACKET && LA385_0 <= R)||(LA385_0 >= RBRACKET && LA385_0 <= SASS_WHILE)||(LA385_0 >= SOLIDUS && LA385_0 <= Z)) ) {
				alt385=1;
			}

			} finally {dbg.exitDecision(385);}

			switch (alt385) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(405,43);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt385 >= 1 ) break loop385;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(385, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt385++;
		}
		} finally {dbg.exitSubRule(385);}
		dbg.location(405,66);
		match(input,SEMI,FOLLOW_SEMI_in_synpred8_Css3828); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:18: ( ws )? COMMA
		{
		dbg.location(419,18);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:18: ( ws )?
		int alt386=2;
		try { dbg.enterSubRule(386);
		try { dbg.enterDecision(386, decisionCanBacktrack[386]);

		int LA386_0 = input.LA(1);
		if ( (LA386_0==COMMENT||LA386_0==NL||LA386_0==WS) ) {
			alt386=1;
		}
		} finally {dbg.exitDecision(386);}

		switch (alt386) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:18: ws
				{
				dbg.location(419,18);
				pushFollow(FOLLOW_ws_in_synpred9_Css3936);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(386);}
		dbg.location(419,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred9_Css3939); if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:23: ( ws )? SEMI
		{
		dbg.location(459,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:23: ( ws )?
		int alt387=2;
		try { dbg.enterSubRule(387);
		try { dbg.enterDecision(387, decisionCanBacktrack[387]);

		int LA387_0 = input.LA(1);
		if ( (LA387_0==COMMENT||LA387_0==NL||LA387_0==WS) ) {
			alt387=1;
		}
		} finally {dbg.exitDecision(387);}

		switch (alt387) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:23: ws
				{
				dbg.location(459,23);
				pushFollow(FOLLOW_ws_in_synpred10_Css31235);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(387);}
		dbg.location(459,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred10_Css31238); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:9: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt391=2;
		try { dbg.enterDecision(391, decisionCanBacktrack[391]);

		int LA391_0 = input.LA(1);
		if ( (LA391_0==SASS_MIXIN) ) {
			alt391=1;
		}
		else if ( (LA391_0==DOT) ) {
			alt391=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 391, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(391);}

		switch (alt391) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:10: SASS_MIXIN
				{
				dbg.location(467,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred11_Css31313); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:23: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(467,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:23: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:24: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(467,24);
				match(input,DOT,FOLLOW_DOT_in_synpred11_Css31318); if (state.failed) return;dbg.location(467,28);
				match(input,IDENT,FOLLOW_IDENT_in_synpred11_Css31320); if (state.failed) return;dbg.location(467,34);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:34: ( ws )?
				int alt388=2;
				try { dbg.enterSubRule(388);
				try { dbg.enterDecision(388, decisionCanBacktrack[388]);

				int LA388_0 = input.LA(1);
				if ( (LA388_0==COMMENT||LA388_0==NL||LA388_0==WS) ) {
					alt388=1;
				}
				} finally {dbg.exitDecision(388);}

				switch (alt388) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:34: ws
						{
						dbg.location(467,34);
						pushFollow(FOLLOW_ws_in_synpred11_Css31322);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(388);}
				dbg.location(467,38);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred11_Css31325); if (state.failed) return;dbg.location(467,45);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:45: (~ RPAREN )*
				try { dbg.enterSubRule(389);

				loop389:
				while (true) {
					int alt389=2;
					try { dbg.enterDecision(389, decisionCanBacktrack[389]);

					int LA389_0 = input.LA(1);
					if ( ((LA389_0 >= A && LA389_0 <= RIGHTTOP_SYM)||(LA389_0 >= S && LA389_0 <= Z)) ) {
						alt389=1;
					}

					} finally {dbg.exitDecision(389);}

					switch (alt389) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(467,45);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop389;
					}
				}
				} finally {dbg.exitSubRule(389);}
				dbg.location(467,56);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred11_Css31333); if (state.failed) return;dbg.location(467,63);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:63: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(390);

				loop390:
				while (true) {
					int alt390=2;
					try { dbg.enterDecision(390, decisionCanBacktrack[390]);

					int LA390_0 = input.LA(1);
					if ( ((LA390_0 >= A && LA390_0 <= L)||(LA390_0 >= LBRACKET && LA390_0 <= R)||(LA390_0 >= RBRACKET && LA390_0 <= SASS_WHILE)||(LA390_0 >= SOLIDUS && LA390_0 <= Z)) ) {
						alt390=1;
					}

					} finally {dbg.exitDecision(390);}

					switch (alt390) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(467,63);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop390;
					}
				}
				} finally {dbg.exitSubRule(390);}
				dbg.location(467,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred11_Css31345); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(469,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred12_Css31371);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(469,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:26: ( ws )?
		int alt392=2;
		try { dbg.enterSubRule(392);
		try { dbg.enterDecision(392, decisionCanBacktrack[392]);

		int LA392_0 = input.LA(1);
		if ( (LA392_0==COMMENT||LA392_0==NL||LA392_0==WS) ) {
			alt392=1;
		}
		} finally {dbg.exitDecision(392);}

		switch (alt392) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:26: ws
				{
				dbg.location(469,26);
				pushFollow(FOLLOW_ws_in_synpred12_Css31373);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(392);}
		dbg.location(469,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred12_Css31376); if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:12: cp_mixin_call
		{
		dbg.location(470,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred13_Css31395);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:12: sass_map
		{
		dbg.location(472,12);
		pushFollow(FOLLOW_sass_map_in_synpred14_Css31423);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:12: cp_variable ( ws )? COLON
		{
		dbg.location(473,12);
		pushFollow(FOLLOW_cp_variable_in_synpred15_Css31440);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(473,24);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:24: ( ws )?
		int alt393=2;
		try { dbg.enterSubRule(393);
		try { dbg.enterDecision(393, decisionCanBacktrack[393]);

		int LA393_0 = input.LA(1);
		if ( (LA393_0==COMMENT||LA393_0==NL||LA393_0==WS) ) {
			alt393=1;
		}
		} finally {dbg.exitDecision(393);}

		switch (alt393) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:24: ws
				{
				dbg.location(473,24);
				pushFollow(FOLLOW_ws_in_synpred15_Css31442);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(393);}
		dbg.location(473,28);
		match(input,COLON,FOLLOW_COLON_in_synpred15_Css31445); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:28: ( ws )? COMMA
		{
		dbg.location(635,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:28: ( ws )?
		int alt394=2;
		try { dbg.enterSubRule(394);
		try { dbg.enterDecision(394, decisionCanBacktrack[394]);

		int LA394_0 = input.LA(1);
		if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
			alt394=1;
		}
		} finally {dbg.exitDecision(394);}

		switch (alt394) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:28: ws
				{
				dbg.location(635,28);
				pushFollow(FOLLOW_ws_in_synpred16_Css32596);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(394);}
		dbg.location(635,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred16_Css32599); if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:6: cp_variable_declaration
		{
		dbg.location(667,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred17_Css32882);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:8: sass_map
		{
		dbg.location(668,8);
		pushFollow(FOLLOW_sass_map_in_synpred18_Css32894);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:8: sass_nested_properties
		{
		dbg.location(669,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred19_Css32907);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:8: propertyDeclaration
		{
		dbg.location(670,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred20_Css32919);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(672,8);
		pushFollow(FOLLOW_property_in_synpred21_Css32936);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(672,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:17: ( ws )?
		int alt395=2;
		try { dbg.enterSubRule(395);
		try { dbg.enterDecision(395, decisionCanBacktrack[395]);

		int LA395_0 = input.LA(1);
		if ( (LA395_0==COMMENT||LA395_0==NL||LA395_0==WS) ) {
			alt395=1;
		}
		} finally {dbg.exitDecision(395);}

		switch (alt395) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:17: ws
				{
				dbg.location(672,17);
				pushFollow(FOLLOW_ws_in_synpred21_Css32938);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(395);}
		dbg.location(672,21);
		match(input,COLON,FOLLOW_COLON_in_synpred21_Css32941); if (state.failed) return;dbg.location(672,27);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(396);

		loop396:
		while (true) {
			int alt396=2;
			try { dbg.enterDecision(396, decisionCanBacktrack[396]);

			int LA396_0 = input.LA(1);
			if ( ((LA396_0 >= A && LA396_0 <= L)||(LA396_0 >= LBRACKET && LA396_0 <= R)||(LA396_0 >= RBRACKET && LA396_0 <= SASS_WHILE)||(LA396_0 >= SOLIDUS && LA396_0 <= Z)) ) {
				alt396=1;
			}

			} finally {dbg.exitDecision(396);}

			switch (alt396) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(672,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop396;
			}
		}
		} finally {dbg.exitSubRule(396);}
		dbg.location(672,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:7: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )
		int alt400=2;
		try { dbg.enterDecision(400, decisionCanBacktrack[400]);

		int LA400_0 = input.LA(1);
		if ( (LA400_0==SASS_MIXIN) ) {
			alt400=1;
		}
		else if ( (LA400_0==DOT) ) {
			alt400=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 400, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(400);}

		switch (alt400) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:8: SASS_MIXIN
				{
				dbg.location(673,8);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred22_Css32970); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:21: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE )
				{
				dbg.location(673,21);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:21: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:22: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE
				{
				dbg.location(673,22);
				match(input,DOT,FOLLOW_DOT_in_synpred22_Css32975); if (state.failed) return;dbg.location(673,26);
				match(input,IDENT,FOLLOW_IDENT_in_synpred22_Css32977); if (state.failed) return;dbg.location(673,32);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:32: ( ws )?
				int alt397=2;
				try { dbg.enterSubRule(397);
				try { dbg.enterDecision(397, decisionCanBacktrack[397]);

				int LA397_0 = input.LA(1);
				if ( (LA397_0==COMMENT||LA397_0==NL||LA397_0==WS) ) {
					alt397=1;
				}
				} finally {dbg.exitDecision(397);}

				switch (alt397) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:32: ws
						{
						dbg.location(673,32);
						pushFollow(FOLLOW_ws_in_synpred22_Css32979);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(397);}
				dbg.location(673,36);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred22_Css32982); if (state.failed) return;dbg.location(673,43);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:43: (~ RPAREN )*
				try { dbg.enterSubRule(398);

				loop398:
				while (true) {
					int alt398=2;
					try { dbg.enterDecision(398, decisionCanBacktrack[398]);

					int LA398_0 = input.LA(1);
					if ( ((LA398_0 >= A && LA398_0 <= RIGHTTOP_SYM)||(LA398_0 >= S && LA398_0 <= Z)) ) {
						alt398=1;
					}

					} finally {dbg.exitDecision(398);}

					switch (alt398) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(673,43);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop398;
					}
				}
				} finally {dbg.exitSubRule(398);}
				dbg.location(673,54);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred22_Css32990); if (state.failed) return;dbg.location(673,61);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:61: (~ ( LBRACE | SEMI | RBRACE ) )*
				try { dbg.enterSubRule(399);

				loop399:
				while (true) {
					int alt399=2;
					try { dbg.enterDecision(399, decisionCanBacktrack[399]);

					int LA399_0 = input.LA(1);
					if ( ((LA399_0 >= A && LA399_0 <= L)||(LA399_0 >= LBRACKET && LA399_0 <= R)||(LA399_0 >= RBRACKET && LA399_0 <= SASS_WHILE)||(LA399_0 >= SOLIDUS && LA399_0 <= Z)) ) {
						alt399=1;
					}

					} finally {dbg.exitDecision(399);}

					switch (alt399) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(673,61);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop399;
					}
				}
				} finally {dbg.exitSubRule(399);}
				dbg.location(673,84);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred22_Css33002); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(675,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred23_Css33020);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(675,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:22: ( ( ws )? IMPORTANT_SYM )?
		int alt402=2;
		try { dbg.enterSubRule(402);
		try { dbg.enterDecision(402, decisionCanBacktrack[402]);

		try {
			isCyclicDecision = true;
			alt402 = dfa402.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(402);}

		switch (alt402) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(675,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:23: ( ws )?
				int alt401=2;
				try { dbg.enterSubRule(401);
				try { dbg.enterDecision(401, decisionCanBacktrack[401]);

				int LA401_0 = input.LA(1);
				if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {
					alt401=1;
				}
				} finally {dbg.exitDecision(401);}

				switch (alt401) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:23: ws
						{
						dbg.location(675,23);
						pushFollow(FOLLOW_ws_in_synpred23_Css33023);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(401);}
				dbg.location(675,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred23_Css33026); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(402);}
		dbg.location(675,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:43: ( ws )?
		int alt403=2;
		try { dbg.enterSubRule(403);
		try { dbg.enterDecision(403, decisionCanBacktrack[403]);

		int LA403_0 = input.LA(1);
		if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
			alt403=1;
		}
		} finally {dbg.exitDecision(403);}

		switch (alt403) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:43: ws
				{
				dbg.location(675,43);
				pushFollow(FOLLOW_ws_in_synpred23_Css33030);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(403);}
		dbg.location(675,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred23_Css33033); if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:8: cp_mixin_call
		{
		dbg.location(676,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred24_Css33056);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(677,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup )
		int alt405=2;
		try { dbg.enterSubRule(405);
		try { dbg.enterDecision(405, decisionCanBacktrack[405]);

		int LA405_0 = input.LA(1);
		if ( (LA405_0==SASS_AT_ROOT) ) {
			alt405=1;
		}
		else if ( (LA405_0==AT_SIGN||LA405_0==COLON||LA405_0==DCOLON||LA405_0==DOT||(LA405_0 >= GEN && LA405_0 <= GREATER)||(LA405_0 >= HASH && LA405_0 <= HASH_SYMBOL)||LA405_0==IDENT||LA405_0==LBRACKET||LA405_0==LESS_AND||LA405_0==MINUS||(LA405_0 >= PIPE && LA405_0 <= PLUS)||LA405_0==SASS_EXTEND_ONLY_SELECTOR||LA405_0==STAR||LA405_0==TILDE) ) {
			alt405=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 405, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(405);}

		switch (alt405) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(677,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(677,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred25_Css33081); if (state.failed) return;dbg.location(677,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:23: ( ws selectorsGroup )?
				int alt404=2;
				try { dbg.enterSubRule(404);
				try { dbg.enterDecision(404, decisionCanBacktrack[404]);

				try {
					isCyclicDecision = true;
					alt404 = dfa404.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(404);}

				switch (alt404) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:24: ws selectorsGroup
						{
						dbg.location(677,24);
						pushFollow(FOLLOW_ws_in_synpred25_Css33084);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(677,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred25_Css33086);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(404);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:47: selectorsGroup
				{
				dbg.location(677,47);
				pushFollow(FOLLOW_selectorsGroup_in_synpred25_Css33093);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(405);}
		dbg.location(677,63);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:63: ( ws )?
		int alt406=2;
		try { dbg.enterSubRule(406);
		try { dbg.enterDecision(406, decisionCanBacktrack[406]);

		int LA406_0 = input.LA(1);
		if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
			alt406=1;
		}
		} finally {dbg.exitDecision(406);}

		switch (alt406) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:63: ws
				{
				dbg.location(677,63);
				pushFollow(FOLLOW_ws_in_synpred25_Css33096);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(406);}
		dbg.location(677,67);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred25_Css33099); if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:81: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:82: ( ws )? esPred
		{
		dbg.location(708,82);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:82: ( ws )?
		int alt407=2;
		try { dbg.enterSubRule(407);
		try { dbg.enterDecision(407, decisionCanBacktrack[407]);

		int LA407_0 = input.LA(1);
		if ( (LA407_0==COMMENT||LA407_0==NL||LA407_0==WS) ) {
			alt407=1;
		}
		} finally {dbg.exitDecision(407);}

		switch (alt407) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:82: ws
				{
				dbg.location(708,82);
				pushFollow(FOLLOW_ws_in_synpred26_Css33342);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(407);}
		dbg.location(708,86);
		pushFollow(FOLLOW_esPred_in_synpred26_Css33345);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:5: typeSelector
		{
		dbg.location(709,5);
		pushFollow(FOLLOW_typeSelector_in_synpred27_Css33370);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:35: ( ws )? esPred
		{
		dbg.location(709,35);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:35: ( ws )?
		int alt408=2;
		try { dbg.enterSubRule(408);
		try { dbg.enterDecision(408, decisionCanBacktrack[408]);

		int LA408_0 = input.LA(1);
		if ( (LA408_0==COMMENT||LA408_0==NL||LA408_0==WS) ) {
			alt408=1;
		}
		} finally {dbg.exitDecision(408);}

		switch (alt408) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:35: ws
				{
				dbg.location(709,35);
				pushFollow(FOLLOW_ws_in_synpred28_Css33377);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(408);}
		dbg.location(709,39);
		pushFollow(FOLLOW_esPred_in_synpred28_Css33380);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(723,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:8: ( IDENT | STAR )?
		int alt409=2;
		try { dbg.enterSubRule(409);
		try { dbg.enterDecision(409, decisionCanBacktrack[409]);

		int LA409_0 = input.LA(1);
		if ( (LA409_0==IDENT||LA409_0==STAR) ) {
			alt409=1;
		}
		} finally {dbg.exitDecision(409);}

		switch (alt409) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(723,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(409);}
		dbg.location(723,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred29_Css33485); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(900,15);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt412=3;
		try { dbg.enterSubRule(412);
		try { dbg.enterDecision(412, decisionCanBacktrack[412]);

		try {
			isCyclicDecision = true;
			alt412 = dfa412.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(412);}

		switch (alt412) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:17: ws
				{
				dbg.location(900,17);
				pushFollow(FOLLOW_ws_in_synpred30_Css34926);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(900,22);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:23: ( ws )? operator ( ws )?
				{
				dbg.location(900,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:23: ( ws )?
				int alt410=2;
				try { dbg.enterSubRule(410);
				try { dbg.enterDecision(410, decisionCanBacktrack[410]);

				int LA410_0 = input.LA(1);
				if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
					alt410=1;
				}
				} finally {dbg.exitDecision(410);}

				switch (alt410) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:23: ws
						{
						dbg.location(900,23);
						pushFollow(FOLLOW_ws_in_synpred30_Css34931);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(410);}
				dbg.location(900,27);
				pushFollow(FOLLOW_operator_in_synpred30_Css34934);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(900,36);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:36: ( ws )?
				int alt411=2;
				try { dbg.enterSubRule(411);
				try { dbg.enterDecision(411, decisionCanBacktrack[411]);

				int LA411_0 = input.LA(1);
				if ( (LA411_0==COMMENT||LA411_0==NL||LA411_0==WS) ) {
					alt411=1;
				}
				} finally {dbg.exitDecision(411);}

				switch (alt411) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:36: ws
						{
						dbg.location(900,36);
						pushFollow(FOLLOW_ws_in_synpred30_Css34936);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(411);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(412);}
		dbg.location(900,58);
		pushFollow(FOLLOW_term_in_synpred30_Css34945);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:10: functionName ( ws )? LPAREN
		{
		dbg.location(907,10);
		pushFollow(FOLLOW_functionName_in_synpred31_Css35018);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(907,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:23: ( ws )?
		int alt413=2;
		try { dbg.enterSubRule(413);
		try { dbg.enterDecision(413, decisionCanBacktrack[413]);

		int LA413_0 = input.LA(1);
		if ( (LA413_0==COMMENT||LA413_0==NL||LA413_0==WS) ) {
			alt413=1;
		}
		} finally {dbg.exitDecision(413);}

		switch (alt413) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:23: ws
				{
				dbg.location(907,23);
				pushFollow(FOLLOW_ws_in_synpred31_Css35020);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(413);}
		dbg.location(907,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred31_Css35023); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(968,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred32_Css35540);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(968,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:26: ( ws )?
		int alt414=2;
		try { dbg.enterSubRule(414);
		try { dbg.enterDecision(414, decisionCanBacktrack[414]);

		int LA414_0 = input.LA(1);
		if ( (LA414_0==COMMENT||LA414_0==NL||LA414_0==WS) ) {
			alt414=1;
		}
		} finally {dbg.exitDecision(414);}

		switch (alt414) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:26: ws
				{
				dbg.location(968,26);
				pushFollow(FOLLOW_ws_in_synpred32_Css35542);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(414);}
		dbg.location(968,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:12: cp_expression
		{
		dbg.location(969,12);
		pushFollow(FOLLOW_cp_expression_in_synpred33_Css35580);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(981,21);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt417=3;
		try { dbg.enterSubRule(417);
		try { dbg.enterDecision(417, decisionCanBacktrack[417]);

		try {
			isCyclicDecision = true;
			alt417 = dfa417.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(417);}

		switch (alt417) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:23: ws
				{
				dbg.location(981,23);
				pushFollow(FOLLOW_ws_in_synpred34_Css35674);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(981,28);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(981,29);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:29: ( ws )?
				int alt415=2;
				try { dbg.enterSubRule(415);
				try { dbg.enterDecision(415, decisionCanBacktrack[415]);

				int LA415_0 = input.LA(1);
				if ( (LA415_0==COMMENT||LA415_0==NL||LA415_0==WS) ) {
					alt415=1;
				}
				} finally {dbg.exitDecision(415);}

				switch (alt415) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:29: ws
						{
						dbg.location(981,29);
						pushFollow(FOLLOW_ws_in_synpred34_Css35679);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(415);}
				dbg.location(981,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred34_Css35682); if (state.failed) return;dbg.location(981,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:41: ( ws )?
				int alt416=2;
				try { dbg.enterSubRule(416);
				try { dbg.enterDecision(416, decisionCanBacktrack[416]);

				int LA416_0 = input.LA(1);
				if ( (LA416_0==COMMENT||LA416_0==NL||LA416_0==WS) ) {
					alt416=1;
				}
				} finally {dbg.exitDecision(416);}

				switch (alt416) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:41: ws
						{
						dbg.location(981,41);
						pushFollow(FOLLOW_ws_in_synpred34_Css35684);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(416);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(417);}
		dbg.location(981,63);
		pushFollow(FOLLOW_term_in_synpred34_Css35693);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1016,7);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:7: ( ws )?
		int alt418=2;
		try { dbg.enterSubRule(418);
		try { dbg.enterDecision(418, decisionCanBacktrack[418]);

		int LA418_0 = input.LA(1);
		if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
			alt418=1;
		}
		} finally {dbg.exitDecision(418);}

		switch (alt418) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:7: ws
				{
				dbg.location(1016,7);
				pushFollow(FOLLOW_ws_in_synpred35_Css36127);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(418);}
		dbg.location(1016,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred35_Css36130); if (state.failed) return;dbg.location(1016,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:17: ( ws )?
		int alt419=2;
		try { dbg.enterSubRule(419);
		try { dbg.enterDecision(419, decisionCanBacktrack[419]);

		int LA419_0 = input.LA(1);
		if ( (LA419_0==COMMENT||LA419_0==NL||LA419_0==WS) ) {
			alt419=1;
		}
		} finally {dbg.exitDecision(419);}

		switch (alt419) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:17: ws
				{
				dbg.location(1016,17);
				pushFollow(FOLLOW_ws_in_synpred35_Css36132);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(419);}
		dbg.location(1016,21);
		pushFollow(FOLLOW_cp_expression_in_synpred35_Css36135);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:10: ( ws )? cp_expression_operator
		{
		dbg.location(1033,10);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:10: ( ws )?
		int alt420=2;
		try { dbg.enterSubRule(420);
		try { dbg.enterDecision(420, decisionCanBacktrack[420]);

		int LA420_0 = input.LA(1);
		if ( (LA420_0==COMMENT||LA420_0==NL||LA420_0==WS) ) {
			alt420=1;
		}
		} finally {dbg.exitDecision(420);}

		switch (alt420) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:10: ws
				{
				dbg.location(1033,10);
				pushFollow(FOLLOW_ws_in_synpred36_Css36196);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(420);}
		dbg.location(1033,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred36_Css36199);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:12: ( ws )? cp_expression_atom
		{
		dbg.location(1034,12);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:12: ( ws )?
		int alt421=2;
		try { dbg.enterSubRule(421);
		try { dbg.enterDecision(421, decisionCanBacktrack[421]);

		int LA421_0 = input.LA(1);
		if ( (LA421_0==COMMENT||LA421_0==NL||LA421_0==WS) ) {
			alt421=1;
		}
		} finally {dbg.exitDecision(421);}

		switch (alt421) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:12: ws
				{
				dbg.location(1034,12);
				pushFollow(FOLLOW_ws_in_synpred37_Css36225);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(421);}
		dbg.location(1034,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred37_Css36228);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:14: cp_math_expression
		{
		dbg.location(1047,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred38_Css36347);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1074,14);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:14: ( ws )?
		int alt422=2;
		try { dbg.enterSubRule(422);
		try { dbg.enterDecision(422, decisionCanBacktrack[422]);

		int LA422_0 = input.LA(1);
		if ( (LA422_0==COMMENT||LA422_0==NL||LA422_0==WS) ) {
			alt422=1;
		}
		} finally {dbg.exitDecision(422);}

		switch (alt422) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:14: ws
				{
				dbg.location(1074,14);
				pushFollow(FOLLOW_ws_in_synpred39_Css36480);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(422);}
		dbg.location(1074,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:20: ( ws )? COMMA
		{
		dbg.location(1282,20);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:20: ( ws )?
		int alt423=2;
		try { dbg.enterSubRule(423);
		try { dbg.enterDecision(423, decisionCanBacktrack[423]);

		int LA423_0 = input.LA(1);
		if ( (LA423_0==COMMENT||LA423_0==NL||LA423_0==WS) ) {
			alt423=1;
		}
		} finally {dbg.exitDecision(423);}

		switch (alt423) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:20: ws
				{
				dbg.location(1282,20);
				pushFollow(FOLLOW_ws_in_synpred40_Css37939);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(423);}
		dbg.location(1282,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred40_Css37942); if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// Delegated rules

	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA24 dfa24 = new DFA24(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA46 dfa46 = new DFA46(this);
	protected DFA50 dfa50 = new DFA50(this);
	protected DFA55 dfa55 = new DFA55(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA63 dfa63 = new DFA63(this);
	protected DFA71 dfa71 = new DFA71(this);
	protected DFA98 dfa98 = new DFA98(this);
	protected DFA105 dfa105 = new DFA105(this);
	protected DFA109 dfa109 = new DFA109(this);
	protected DFA129 dfa129 = new DFA129(this);
	protected DFA131 dfa131 = new DFA131(this);
	protected DFA139 dfa139 = new DFA139(this);
	protected DFA140 dfa140 = new DFA140(this);
	protected DFA158 dfa158 = new DFA158(this);
	protected DFA151 dfa151 = new DFA151(this);
	protected DFA150 dfa150 = new DFA150(this);
	protected DFA155 dfa155 = new DFA155(this);
	protected DFA160 dfa160 = new DFA160(this);
	protected DFA162 dfa162 = new DFA162(this);
	protected DFA166 dfa166 = new DFA166(this);
	protected DFA173 dfa173 = new DFA173(this);
	protected DFA172 dfa172 = new DFA172(this);
	protected DFA176 dfa176 = new DFA176(this);
	protected DFA179 dfa179 = new DFA179(this);
	protected DFA201 dfa201 = new DFA201(this);
	protected DFA210 dfa210 = new DFA210(this);
	protected DFA220 dfa220 = new DFA220(this);
	protected DFA219 dfa219 = new DFA219(this);
	protected DFA231 dfa231 = new DFA231(this);
	protected DFA241 dfa241 = new DFA241(this);
	protected DFA240 dfa240 = new DFA240(this);
	protected DFA250 dfa250 = new DFA250(this);
	protected DFA255 dfa255 = new DFA255(this);
	protected DFA259 dfa259 = new DFA259(this);
	protected DFA270 dfa270 = new DFA270(this);
	protected DFA275 dfa275 = new DFA275(this);
	protected DFA280 dfa280 = new DFA280(this);
	protected DFA284 dfa284 = new DFA284(this);
	protected DFA290 dfa290 = new DFA290(this);
	protected DFA294 dfa294 = new DFA294(this);
	protected DFA296 dfa296 = new DFA296(this);
	protected DFA306 dfa306 = new DFA306(this);
	protected DFA309 dfa309 = new DFA309(this);
	protected DFA324 dfa324 = new DFA324(this);
	protected DFA345 dfa345 = new DFA345(this);
	protected DFA350 dfa350 = new DFA350(this);
	protected DFA358 dfa358 = new DFA358(this);
	protected DFA357 dfa357 = new DFA357(this);
	protected DFA363 dfa363 = new DFA363(this);
	protected DFA382 dfa382 = new DFA382(this);
	protected DFA402 dfa402 = new DFA402(this);
	protected DFA404 dfa404 = new DFA404(this);
	protected DFA412 dfa412 = new DFA412(this);
	protected DFA417 dfa417 = new DFA417(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0090\1\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\73\uffff\1\3\57\uffff\1\4\17\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\73\uffff\1\3\57\uffff\1\4\17\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "333:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u0090\1\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\57\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\57\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "335:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u0090\1\uffff\2\u0091\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\3\uffff\1\1\5\uffff\1\1\1\uffff\1\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff"+
			"\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff\3\1\2\uffff"+
			"\3\1\1\uffff\2\1\1\uffff\4\1\1\uffff\3\1\1\uffff\5\1\1\uffff\1\1\2\uffff"+
			"\1\1\1\uffff\5\1\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\57\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\57\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 342:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA32_eotS =
		"\10\uffff";
	static final String DFA32_eofS =
		"\10\uffff";
	static final String DFA32_minS =
		"\1\64\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_maxS =
		"\1\64\2\u0091\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA32_specialS =
		"\3\uffff\1\1\1\uffff\1\0\2\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\1",
			"\1\2\60\uffff\1\4\12\uffff\1\2\57\uffff\1\3\12\uffff\1\3\4\uffff\1\2",
			"\1\2\60\uffff\1\4\12\uffff\1\2\57\uffff\1\5\12\uffff\1\5\4\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "370:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA32_5 = input.LA(1);
						 
						int index32_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_5);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA32_3 = input.LA(1);
						 
						int index32_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 32, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA24_eotS =
		"\4\uffff";
	static final String DFA24_eofS =
		"\2\2\2\uffff";
	static final String DFA24_minS =
		"\2\6\2\uffff";
	static final String DFA24_maxS =
		"\2\u0091\2\uffff";
	static final String DFA24_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA24_specialS =
		"\4\uffff}>";
	static final String[] DFA24_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
	static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
	static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
	static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
	static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
	static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
	static final short[][] DFA24_transition;

	static {
		int numStates = DFA24_transitionS.length;
		DFA24_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
		}
	}

	protected class DFA24 extends DFA {

		public DFA24(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 24;
			this.eot = DFA24_eot;
			this.eof = DFA24_eof;
			this.min = DFA24_min;
			this.max = DFA24_max;
			this.accept = DFA24_accept;
			this.special = DFA24_special;
			this.transition = DFA24_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 375:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\6\uffff";
	static final String DFA38_eofS =
		"\6\uffff";
	static final String DFA38_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_maxS =
		"\2\u0091\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA38_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA38_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "392:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA38_4 = input.LA(1);
						 
						int index38_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA38_2 = input.LA(1);
						 
						int index38_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 38, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA44_eotS =
		"\4\uffff";
	static final String DFA44_eofS =
		"\4\uffff";
	static final String DFA44_minS =
		"\2\6\2\uffff";
	static final String DFA44_maxS =
		"\2\u0091\2\uffff";
	static final String DFA44_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\4\uffff}>";
	static final String[] DFA44_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "403:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA46_eotS =
		"\4\uffff";
	static final String DFA46_eofS =
		"\4\uffff";
	static final String DFA46_minS =
		"\2\6\2\uffff";
	static final String DFA46_maxS =
		"\2\u0091\2\uffff";
	static final String DFA46_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA46_specialS =
		"\4\uffff}>";
	static final String[] DFA46_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
	static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
	static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
	static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
	static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
	static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
	static final short[][] DFA46_transition;

	static {
		int numStates = DFA46_transitionS.length;
		DFA46_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
		}
	}

	protected class DFA46 extends DFA {

		public DFA46(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 46;
			this.eot = DFA46_eot;
			this.eof = DFA46_eof;
			this.min = DFA46_min;
			this.max = DFA46_max;
			this.accept = DFA46_accept;
			this.special = DFA46_special;
			this.transition = DFA46_transition;
		}
		@Override
		public String getDescription() {
			return "404:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA50_eotS =
		"\4\uffff";
	static final String DFA50_eofS =
		"\2\2\2\uffff";
	static final String DFA50_minS =
		"\2\6\2\uffff";
	static final String DFA50_maxS =
		"\2\u0091\2\uffff";
	static final String DFA50_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA50_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA50_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 419:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA50_1 = input.LA(1);
						 
						int index50_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_1==EOF||(LA50_1 >= AT_IDENT && LA50_1 <= AT_SIGN)||(LA50_1 >= BOTTOMCENTER_SYM && LA50_1 <= BOTTOMRIGHT_SYM)||(LA50_1 >= CHARSET_SYM && LA50_1 <= COLON)||LA50_1==COUNTER_STYLE_SYM||LA50_1==DCOLON||LA50_1==DOT||LA50_1==FONT_FACE_SYM||(LA50_1 >= GEN && LA50_1 <= GREATER)||(LA50_1 >= HASH && LA50_1 <= HASH_SYMBOL)||LA50_1==IDENT||LA50_1==IMPORT_SYM||(LA50_1 >= LBRACE && LA50_1 <= LEFTTOP_SYM)||LA50_1==LESS_AND||(LA50_1 >= MEDIA_SYM && LA50_1 <= MOZ_DOCUMENT_SYM)||LA50_1==NAMESPACE_SYM||LA50_1==PAGE_SYM||(LA50_1 >= PIPE && LA50_1 <= PLUS)||LA50_1==RBRACE||(LA50_1 >= RIGHTBOTTOM_SYM && LA50_1 <= RIGHTTOP_SYM)||(LA50_1 >= SASS_AT_ROOT && LA50_1 <= SASS_DEBUG)||(LA50_1 >= SASS_EACH && LA50_1 <= SASS_ELSE)||(LA50_1 >= SASS_EXTEND && LA50_1 <= SASS_FUNCTION)||(LA50_1 >= SASS_IF && LA50_1 <= SASS_MIXIN)||(LA50_1 >= SASS_RETURN && LA50_1 <= SEMI)||LA50_1==STAR||LA50_1==TILDE||(LA50_1 >= TOPCENTER_SYM && LA50_1 <= TOPRIGHT_SYM)||LA50_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_1==COMMENT||LA50_1==NL||LA50_1==WS) ) {s = 1;}
						else if ( (LA50_1==COMMA) && (synpred9_Css3())) {s = 3;}
						 
						input.seek(index50_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA50_0 = input.LA(1);
						 
						int index50_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {s = 1;}
						else if ( (LA50_0==EOF||(LA50_0 >= AT_IDENT && LA50_0 <= AT_SIGN)||(LA50_0 >= BOTTOMCENTER_SYM && LA50_0 <= BOTTOMRIGHT_SYM)||(LA50_0 >= CHARSET_SYM && LA50_0 <= COLON)||LA50_0==COUNTER_STYLE_SYM||LA50_0==DCOLON||LA50_0==DOT||LA50_0==FONT_FACE_SYM||(LA50_0 >= GEN && LA50_0 <= GREATER)||(LA50_0 >= HASH && LA50_0 <= HASH_SYMBOL)||LA50_0==IDENT||LA50_0==IMPORT_SYM||(LA50_0 >= LBRACE && LA50_0 <= LEFTTOP_SYM)||LA50_0==LESS_AND||(LA50_0 >= MEDIA_SYM && LA50_0 <= MOZ_DOCUMENT_SYM)||LA50_0==NAMESPACE_SYM||LA50_0==PAGE_SYM||(LA50_0 >= PIPE && LA50_0 <= PLUS)||LA50_0==RBRACE||(LA50_0 >= RIGHTBOTTOM_SYM && LA50_0 <= RIGHTTOP_SYM)||(LA50_0 >= SASS_AT_ROOT && LA50_0 <= SASS_DEBUG)||(LA50_0 >= SASS_EACH && LA50_0 <= SASS_ELSE)||(LA50_0 >= SASS_EXTEND && LA50_0 <= SASS_FUNCTION)||(LA50_0 >= SASS_IF && LA50_0 <= SASS_MIXIN)||(LA50_0 >= SASS_RETURN && LA50_0 <= SEMI)||LA50_0==STAR||LA50_0==TILDE||(LA50_0 >= TOPCENTER_SYM && LA50_0 <= TOPRIGHT_SYM)||LA50_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_0==COMMA) && (synpred9_Css3())) {s = 3;}
						 
						input.seek(index50_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 50, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA55_eotS =
		"\10\uffff";
	static final String DFA55_eofS =
		"\2\2\6\uffff";
	static final String DFA55_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA55_maxS =
		"\2\u0091\1\uffff\3\u0091\1\uffff\1\u0091";
	static final String DFA55_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA55_specialS =
		"\10\uffff}>";
	static final String[] DFA55_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\12\uffff\1\6\12\uffff\1\5\13\uffff\2\2\23\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\12\uffff\1\6\12\uffff\1\7\13\uffff\2\2\23\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\23\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\23\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
	static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
	static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
	static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
	static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
	static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
	static final short[][] DFA55_transition;

	static {
		int numStates = DFA55_transitionS.length;
		DFA55_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
		}
	}

	protected class DFA55 extends DFA {

		public DFA55(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 55;
			this.eot = DFA55_eot;
			this.eof = DFA55_eof;
			this.min = DFA55_min;
			this.max = DFA55_max;
			this.accept = DFA55_accept;
			this.special = DFA55_special;
			this.transition = DFA55_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 424:43: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA58_eotS =
		"\10\uffff";
	static final String DFA58_eofS =
		"\2\2\6\uffff";
	static final String DFA58_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA58_maxS =
		"\2\u0091\1\uffff\3\u0091\1\uffff\1\u0091";
	static final String DFA58_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA58_specialS =
		"\10\uffff}>";
	static final String[] DFA58_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\12\uffff\1\6\12\uffff\1\5\13\uffff\2\2\23\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\12\uffff\1\6\12\uffff\1\7\13\uffff\2\2\23\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\23\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\23\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 425:23: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA63_eotS =
		"\4\uffff";
	static final String DFA63_eofS =
		"\4\uffff";
	static final String DFA63_minS =
		"\2\23\2\uffff";
	static final String DFA63_maxS =
		"\2\u0091\2\uffff";
	static final String DFA63_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA63_specialS =
		"\4\uffff}>";
	static final String[] DFA63_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\50\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\50\uffff\1\1",
			"",
			""
	};

	static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
	static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
	static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
	static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
	static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
	static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
	static final short[][] DFA63_transition;

	static {
		int numStates = DFA63_transitionS.length;
		DFA63_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
		}
	}

	protected class DFA63 extends DFA {

		public DFA63(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 63;
			this.eot = DFA63_eot;
			this.eof = DFA63_eof;
			this.min = DFA63_min;
			this.max = DFA63_max;
			this.accept = DFA63_accept;
			this.special = DFA63_special;
			this.transition = DFA63_transition;
		}
		@Override
		public String getDescription() {
			return "439:29: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA71_eotS =
		"\6\uffff";
	static final String DFA71_eofS =
		"\2\3\4\uffff";
	static final String DFA71_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_maxS =
		"\2\u0091\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA71_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA71_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
	static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
	static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
	static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
	static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
	static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
	static final short[][] DFA71_transition;

	static {
		int numStates = DFA71_transitionS.length;
		DFA71_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
		}
	}

	protected class DFA71 extends DFA {

		public DFA71(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}
		@Override
		public String getDescription() {
			return "459:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA71_4 = input.LA(1);
						 
						int index71_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred10_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA71_2 = input.LA(1);
						 
						int index71_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred10_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 71, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA98_eotS =
		"\4\uffff";
	static final String DFA98_eofS =
		"\4\uffff";
	static final String DFA98_minS =
		"\2\24\2\uffff";
	static final String DFA98_maxS =
		"\2\u0091\2\uffff";
	static final String DFA98_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA98_specialS =
		"\4\uffff}>";
	static final String[] DFA98_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"",
			""
	};

	static final short[] DFA98_eot = DFA.unpackEncodedString(DFA98_eotS);
	static final short[] DFA98_eof = DFA.unpackEncodedString(DFA98_eofS);
	static final char[] DFA98_min = DFA.unpackEncodedStringToUnsignedChars(DFA98_minS);
	static final char[] DFA98_max = DFA.unpackEncodedStringToUnsignedChars(DFA98_maxS);
	static final short[] DFA98_accept = DFA.unpackEncodedString(DFA98_acceptS);
	static final short[] DFA98_special = DFA.unpackEncodedString(DFA98_specialS);
	static final short[][] DFA98_transition;

	static {
		int numStates = DFA98_transitionS.length;
		DFA98_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA98_transition[i] = DFA.unpackEncodedString(DFA98_transitionS[i]);
		}
	}

	protected class DFA98 extends DFA {

		public DFA98(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 98;
			this.eot = DFA98_eot;
			this.eof = DFA98_eof;
			this.min = DFA98_min;
			this.max = DFA98_max;
			this.accept = DFA98_accept;
			this.special = DFA98_special;
			this.transition = DFA98_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 540:25: ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA105_eotS =
		"\5\uffff";
	static final String DFA105_eofS =
		"\5\uffff";
	static final String DFA105_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA105_maxS =
		"\1\u0090\1\uffff\2\u0091\1\uffff";
	static final String DFA105_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA105_specialS =
		"\5\uffff}>";
	static final String[] DFA105_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			""
	};

	static final short[] DFA105_eot = DFA.unpackEncodedString(DFA105_eotS);
	static final short[] DFA105_eof = DFA.unpackEncodedString(DFA105_eofS);
	static final char[] DFA105_min = DFA.unpackEncodedStringToUnsignedChars(DFA105_minS);
	static final char[] DFA105_max = DFA.unpackEncodedStringToUnsignedChars(DFA105_maxS);
	static final short[] DFA105_accept = DFA.unpackEncodedString(DFA105_acceptS);
	static final short[] DFA105_special = DFA.unpackEncodedString(DFA105_specialS);
	static final short[][] DFA105_transition;

	static {
		int numStates = DFA105_transitionS.length;
		DFA105_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA105_transition[i] = DFA.unpackEncodedString(DFA105_transitionS[i]);
		}
	}

	protected class DFA105 extends DFA {

		public DFA105(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 105;
			this.eot = DFA105_eot;
			this.eof = DFA105_eof;
			this.min = DFA105_min;
			this.max = DFA105_max;
			this.accept = DFA105_accept;
			this.special = DFA105_special;
			this.transition = DFA105_transition;
		}
		@Override
		public String getDescription() {
			return "548:14: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA109_eotS =
		"\5\uffff";
	static final String DFA109_eofS =
		"\5\uffff";
	static final String DFA109_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA109_maxS =
		"\1\u0090\1\uffff\2\u0091\1\uffff";
	static final String DFA109_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA109_specialS =
		"\5\uffff}>";
	static final String[] DFA109_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			""
	};

	static final short[] DFA109_eot = DFA.unpackEncodedString(DFA109_eotS);
	static final short[] DFA109_eof = DFA.unpackEncodedString(DFA109_eofS);
	static final char[] DFA109_min = DFA.unpackEncodedStringToUnsignedChars(DFA109_minS);
	static final char[] DFA109_max = DFA.unpackEncodedStringToUnsignedChars(DFA109_maxS);
	static final short[] DFA109_accept = DFA.unpackEncodedString(DFA109_acceptS);
	static final short[] DFA109_special = DFA.unpackEncodedString(DFA109_specialS);
	static final short[][] DFA109_transition;

	static {
		int numStates = DFA109_transitionS.length;
		DFA109_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA109_transition[i] = DFA.unpackEncodedString(DFA109_transitionS[i]);
		}
	}

	protected class DFA109 extends DFA {

		public DFA109(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 109;
			this.eot = DFA109_eot;
			this.eof = DFA109_eof;
			this.min = DFA109_min;
			this.max = DFA109_max;
			this.accept = DFA109_accept;
			this.special = DFA109_special;
			this.transition = DFA109_transition;
		}
		@Override
		public String getDescription() {
			return "548:60: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA129_eotS =
		"\5\uffff";
	static final String DFA129_eofS =
		"\2\2\3\uffff";
	static final String DFA129_minS =
		"\2\6\3\uffff";
	static final String DFA129_maxS =
		"\2\u0091\3\uffff";
	static final String DFA129_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA129_specialS =
		"\5\uffff}>";
	static final String[] DFA129_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA129_eot = DFA.unpackEncodedString(DFA129_eotS);
	static final short[] DFA129_eof = DFA.unpackEncodedString(DFA129_eofS);
	static final char[] DFA129_min = DFA.unpackEncodedStringToUnsignedChars(DFA129_minS);
	static final char[] DFA129_max = DFA.unpackEncodedStringToUnsignedChars(DFA129_maxS);
	static final short[] DFA129_accept = DFA.unpackEncodedString(DFA129_acceptS);
	static final short[] DFA129_special = DFA.unpackEncodedString(DFA129_specialS);
	static final short[][] DFA129_transition;

	static {
		int numStates = DFA129_transitionS.length;
		DFA129_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA129_transition[i] = DFA.unpackEncodedString(DFA129_transitionS[i]);
		}
	}

	protected class DFA129 extends DFA {

		public DFA129(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 129;
			this.eot = DFA129_eot;
			this.eof = DFA129_eof;
			this.min = DFA129_min;
			this.max = DFA129_max;
			this.accept = DFA129_accept;
			this.special = DFA129_special;
			this.transition = DFA129_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 624:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA131_eotS =
		"\6\uffff";
	static final String DFA131_eofS =
		"\6\uffff";
	static final String DFA131_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA131_maxS =
		"\2\u0091\1\0\1\uffff\1\0\1\uffff";
	static final String DFA131_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA131_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA131_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2"+
			"\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2"+
			"\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA131_eot = DFA.unpackEncodedString(DFA131_eotS);
	static final short[] DFA131_eof = DFA.unpackEncodedString(DFA131_eofS);
	static final char[] DFA131_min = DFA.unpackEncodedStringToUnsignedChars(DFA131_minS);
	static final char[] DFA131_max = DFA.unpackEncodedStringToUnsignedChars(DFA131_maxS);
	static final short[] DFA131_accept = DFA.unpackEncodedString(DFA131_acceptS);
	static final short[] DFA131_special = DFA.unpackEncodedString(DFA131_specialS);
	static final short[][] DFA131_transition;

	static {
		int numStates = DFA131_transitionS.length;
		DFA131_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA131_transition[i] = DFA.unpackEncodedString(DFA131_transitionS[i]);
		}
	}

	protected class DFA131 extends DFA {

		public DFA131(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 131;
			this.eot = DFA131_eot;
			this.eof = DFA131_eof;
			this.min = DFA131_min;
			this.max = DFA131_max;
			this.accept = DFA131_accept;
			this.special = DFA131_special;
			this.transition = DFA131_transition;
		}
		@Override
		public String getDescription() {
			return "635:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA131_4 = input.LA(1);
						 
						int index131_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index131_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA131_2 = input.LA(1);
						 
						int index131_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index131_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 131, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA139_eotS =
		"\4\uffff";
	static final String DFA139_eofS =
		"\4\uffff";
	static final String DFA139_minS =
		"\2\6\2\uffff";
	static final String DFA139_maxS =
		"\2\u0091\2\uffff";
	static final String DFA139_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA139_specialS =
		"\4\uffff}>";
	static final String[] DFA139_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3\3"+
			"\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1"+
			"\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff\5"+
			"\3\6\uffff\1\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2\3"+
			"\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA139_eot = DFA.unpackEncodedString(DFA139_eotS);
	static final short[] DFA139_eof = DFA.unpackEncodedString(DFA139_eofS);
	static final char[] DFA139_min = DFA.unpackEncodedStringToUnsignedChars(DFA139_minS);
	static final char[] DFA139_max = DFA.unpackEncodedStringToUnsignedChars(DFA139_maxS);
	static final short[] DFA139_accept = DFA.unpackEncodedString(DFA139_acceptS);
	static final short[] DFA139_special = DFA.unpackEncodedString(DFA139_specialS);
	static final short[][] DFA139_transition;

	static {
		int numStates = DFA139_transitionS.length;
		DFA139_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA139_transition[i] = DFA.unpackEncodedString(DFA139_transitionS[i]);
		}
	}

	protected class DFA139 extends DFA {

		public DFA139(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 139;
			this.eot = DFA139_eot;
			this.eof = DFA139_eof;
			this.min = DFA139_min;
			this.max = DFA139_max;
			this.accept = DFA139_accept;
			this.special = DFA139_special;
			this.transition = DFA139_transition;
		}
		@Override
		public String getDescription() {
			return "643:55: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA140_eotS =
		"\4\uffff";
	static final String DFA140_eofS =
		"\4\uffff";
	static final String DFA140_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA140_maxS =
		"\2\u0091\2\uffff";
	static final String DFA140_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA140_specialS =
		"\4\uffff}>";
	static final String[] DFA140_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\23\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA140_eot = DFA.unpackEncodedString(DFA140_eotS);
	static final short[] DFA140_eof = DFA.unpackEncodedString(DFA140_eofS);
	static final char[] DFA140_min = DFA.unpackEncodedStringToUnsignedChars(DFA140_minS);
	static final char[] DFA140_max = DFA.unpackEncodedStringToUnsignedChars(DFA140_maxS);
	static final short[] DFA140_accept = DFA.unpackEncodedString(DFA140_acceptS);
	static final short[] DFA140_special = DFA.unpackEncodedString(DFA140_specialS);
	static final short[][] DFA140_transition;

	static {
		int numStates = DFA140_transitionS.length;
		DFA140_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA140_transition[i] = DFA.unpackEncodedString(DFA140_transitionS[i]);
		}
	}

	protected class DFA140 extends DFA {

		public DFA140(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 140;
			this.eot = DFA140_eot;
			this.eof = DFA140_eof;
			this.min = DFA140_min;
			this.max = DFA140_max;
			this.accept = DFA140_accept;
			this.special = DFA140_special;
			this.transition = DFA140_transition;
		}
		@Override
		public String getDescription() {
			return "648:20: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA158_eotS =
		"\5\uffff";
	static final String DFA158_eofS =
		"\5\uffff";
	static final String DFA158_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA158_maxS =
		"\1\u0090\1\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA158_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA158_specialS =
		"\5\uffff}>";
	static final String[] DFA158_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff\4\2\1\1\1\uffff\1\2"+
			"\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			""
	};

	static final short[] DFA158_eot = DFA.unpackEncodedString(DFA158_eotS);
	static final short[] DFA158_eof = DFA.unpackEncodedString(DFA158_eofS);
	static final char[] DFA158_min = DFA.unpackEncodedStringToUnsignedChars(DFA158_minS);
	static final char[] DFA158_max = DFA.unpackEncodedStringToUnsignedChars(DFA158_maxS);
	static final short[] DFA158_accept = DFA.unpackEncodedString(DFA158_acceptS);
	static final short[] DFA158_special = DFA.unpackEncodedString(DFA158_specialS);
	static final short[][] DFA158_transition;

	static {
		int numStates = DFA158_transitionS.length;
		DFA158_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA158_transition[i] = DFA.unpackEncodedString(DFA158_transitionS[i]);
		}
	}

	protected class DFA158 extends DFA {

		public DFA158(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 158;
			this.eot = DFA158_eot;
			this.eof = DFA158_eof;
			this.min = DFA158_min;
			this.max = DFA158_max;
			this.accept = DFA158_accept;
			this.special = DFA158_special;
			this.transition = DFA158_transition;
		}
		@Override
		public String getDescription() {
			return "659:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA151_eotS =
		"\6\uffff";
	static final String DFA151_eofS =
		"\6\uffff";
	static final String DFA151_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA151_maxS =
		"\3\u0091\2\uffff\1\u0091";
	static final String DFA151_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA151_specialS =
		"\6\uffff}>";
	static final String[] DFA151_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\34\uffff\1\2\22\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5"
	};

	static final short[] DFA151_eot = DFA.unpackEncodedString(DFA151_eotS);
	static final short[] DFA151_eof = DFA.unpackEncodedString(DFA151_eofS);
	static final char[] DFA151_min = DFA.unpackEncodedStringToUnsignedChars(DFA151_minS);
	static final char[] DFA151_max = DFA.unpackEncodedStringToUnsignedChars(DFA151_maxS);
	static final short[] DFA151_accept = DFA.unpackEncodedString(DFA151_acceptS);
	static final short[] DFA151_special = DFA.unpackEncodedString(DFA151_specialS);
	static final short[][] DFA151_transition;

	static {
		int numStates = DFA151_transitionS.length;
		DFA151_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA151_transition[i] = DFA.unpackEncodedString(DFA151_transitionS[i]);
		}
	}

	protected class DFA151 extends DFA {

		public DFA151(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 151;
			this.eot = DFA151_eot;
			this.eof = DFA151_eof;
			this.min = DFA151_min;
			this.max = DFA151_max;
			this.accept = DFA151_accept;
			this.special = DFA151_special;
			this.transition = DFA151_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 661:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA150_eotS =
		"\4\uffff";
	static final String DFA150_eofS =
		"\4\uffff";
	static final String DFA150_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA150_maxS =
		"\2\u0091\2\uffff";
	static final String DFA150_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA150_specialS =
		"\4\uffff}>";
	static final String[] DFA150_transitionS = {
			"\1\1\73\uffff\1\1\54\uffff\1\2\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA150_eot = DFA.unpackEncodedString(DFA150_eotS);
	static final short[] DFA150_eof = DFA.unpackEncodedString(DFA150_eofS);
	static final char[] DFA150_min = DFA.unpackEncodedStringToUnsignedChars(DFA150_minS);
	static final char[] DFA150_max = DFA.unpackEncodedStringToUnsignedChars(DFA150_maxS);
	static final short[] DFA150_accept = DFA.unpackEncodedString(DFA150_acceptS);
	static final short[] DFA150_special = DFA.unpackEncodedString(DFA150_specialS);
	static final short[][] DFA150_transition;

	static {
		int numStates = DFA150_transitionS.length;
		DFA150_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA150_transition[i] = DFA.unpackEncodedString(DFA150_transitionS[i]);
		}
	}

	protected class DFA150 extends DFA {

		public DFA150(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 150;
			this.eot = DFA150_eot;
			this.eof = DFA150_eof;
			this.min = DFA150_min;
			this.max = DFA150_max;
			this.accept = DFA150_accept;
			this.special = DFA150_special;
			this.transition = DFA150_transition;
		}
		@Override
		public String getDescription() {
			return "661:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA155_eotS =
		"\5\uffff";
	static final String DFA155_eofS =
		"\5\uffff";
	static final String DFA155_minS =
		"\2\25\3\uffff";
	static final String DFA155_maxS =
		"\2\u0091\3\uffff";
	static final String DFA155_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA155_specialS =
		"\5\uffff}>";
	static final String[] DFA155_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\34\uffff\1\2\22\uffff\1\1",
			"\1\1\73\uffff\1\1\17\uffff\1\4\34\uffff\1\2\22\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
	static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
	static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
	static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
	static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
	static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
	static final short[][] DFA155_transition;

	static {
		int numStates = DFA155_transitionS.length;
		DFA155_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
		}
	}

	protected class DFA155 extends DFA {

		public DFA155(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 155;
			this.eot = DFA155_eot;
			this.eof = DFA155_eof;
			this.min = DFA155_min;
			this.max = DFA155_max;
			this.accept = DFA155_accept;
			this.special = DFA155_special;
			this.transition = DFA155_transition;
		}
		@Override
		public String getDescription() {
			return "661:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA160_eotS =
		"\4\uffff";
	static final String DFA160_eofS =
		"\4\uffff";
	static final String DFA160_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA160_maxS =
		"\2\u0091\2\uffff";
	static final String DFA160_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA160_specialS =
		"\4\uffff}>";
	static final String[] DFA160_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\34\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
	static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
	static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
	static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
	static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
	static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
	static final short[][] DFA160_transition;

	static {
		int numStates = DFA160_transitionS.length;
		DFA160_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
		}
	}

	protected class DFA160 extends DFA {

		public DFA160(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 160;
			this.eot = DFA160_eot;
			this.eof = DFA160_eof;
			this.min = DFA160_min;
			this.max = DFA160_max;
			this.accept = DFA160_accept;
			this.special = DFA160_special;
			this.transition = DFA160_transition;
		}
		@Override
		public String getDescription() {
			return "675:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA162_eotS =
		"\4\uffff";
	static final String DFA162_eofS =
		"\4\uffff";
	static final String DFA162_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA162_maxS =
		"\2\u0091\2\uffff";
	static final String DFA162_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA162_specialS =
		"\4\uffff}>";
	static final String[] DFA162_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\34\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA162_eot = DFA.unpackEncodedString(DFA162_eotS);
	static final short[] DFA162_eof = DFA.unpackEncodedString(DFA162_eofS);
	static final char[] DFA162_min = DFA.unpackEncodedStringToUnsignedChars(DFA162_minS);
	static final char[] DFA162_max = DFA.unpackEncodedStringToUnsignedChars(DFA162_maxS);
	static final short[] DFA162_accept = DFA.unpackEncodedString(DFA162_acceptS);
	static final short[] DFA162_special = DFA.unpackEncodedString(DFA162_specialS);
	static final short[][] DFA162_transition;

	static {
		int numStates = DFA162_transitionS.length;
		DFA162_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA162_transition[i] = DFA.unpackEncodedString(DFA162_transitionS[i]);
		}
	}

	protected class DFA162 extends DFA {

		public DFA162(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 162;
			this.eot = DFA162_eot;
			this.eof = DFA162_eof;
			this.min = DFA162_min;
			this.max = DFA162_max;
			this.accept = DFA162_accept;
			this.special = DFA162_special;
			this.transition = DFA162_transition;
		}
		@Override
		public String getDescription() {
			return "676:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA166_eotS =
		"\6\uffff";
	static final String DFA166_eofS =
		"\6\uffff";
	static final String DFA166_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA166_maxS =
		"\3\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA166_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA166_specialS =
		"\6\uffff}>";
	static final String[] DFA166_transitionS = {
			"\1\1\1\2\44\uffff\1\3\26\uffff\1\2\77\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\23\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			"\1\5\1\2\44\uffff\1\3\26\uffff\1\2\77\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\23\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			""
	};

	static final short[] DFA166_eot = DFA.unpackEncodedString(DFA166_eotS);
	static final short[] DFA166_eof = DFA.unpackEncodedString(DFA166_eofS);
	static final char[] DFA166_min = DFA.unpackEncodedStringToUnsignedChars(DFA166_minS);
	static final char[] DFA166_max = DFA.unpackEncodedStringToUnsignedChars(DFA166_maxS);
	static final short[] DFA166_accept = DFA.unpackEncodedString(DFA166_acceptS);
	static final short[] DFA166_special = DFA.unpackEncodedString(DFA166_specialS);
	static final short[][] DFA166_transition;

	static {
		int numStates = DFA166_transitionS.length;
		DFA166_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA166_transition[i] = DFA.unpackEncodedString(DFA166_transitionS[i]);
		}
	}

	protected class DFA166 extends DFA {

		public DFA166(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 166;
			this.eot = DFA166_eot;
			this.eof = DFA166_eof;
			this.min = DFA166_min;
			this.max = DFA166_max;
			this.accept = DFA166_accept;
			this.special = DFA166_special;
			this.transition = DFA166_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 694:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA173_eotS =
		"\4\uffff";
	static final String DFA173_eofS =
		"\4\uffff";
	static final String DFA173_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA173_maxS =
		"\2\u0091\2\uffff";
	static final String DFA173_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA173_specialS =
		"\4\uffff}>";
	static final String[] DFA173_transitionS = {
			"\1\2\1\1\25\uffff\1\3\16\uffff\1\2\26\uffff\1\1\14\uffff\1\3\44\uffff"+
			"\1\3\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1"+
			"\13\uffff\2\3\23\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA173_eot = DFA.unpackEncodedString(DFA173_eotS);
	static final short[] DFA173_eof = DFA.unpackEncodedString(DFA173_eofS);
	static final char[] DFA173_min = DFA.unpackEncodedStringToUnsignedChars(DFA173_minS);
	static final char[] DFA173_max = DFA.unpackEncodedStringToUnsignedChars(DFA173_maxS);
	static final short[] DFA173_accept = DFA.unpackEncodedString(DFA173_acceptS);
	static final short[] DFA173_special = DFA.unpackEncodedString(DFA173_specialS);
	static final short[][] DFA173_transition;

	static {
		int numStates = DFA173_transitionS.length;
		DFA173_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA173_transition[i] = DFA.unpackEncodedString(DFA173_transitionS[i]);
		}
	}

	protected class DFA173 extends DFA {

		public DFA173(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 173;
			this.eot = DFA173_eot;
			this.eof = DFA173_eof;
			this.min = DFA173_min;
			this.max = DFA173_max;
			this.accept = DFA173_accept;
			this.special = DFA173_special;
			this.transition = DFA173_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 698:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA172_eotS =
		"\4\uffff";
	static final String DFA172_eofS =
		"\4\uffff";
	static final String DFA172_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA172_maxS =
		"\2\u0091\2\uffff";
	static final String DFA172_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA172_specialS =
		"\4\uffff}>";
	static final String[] DFA172_transitionS = {
			"\1\1\25\uffff\1\2\45\uffff\1\1\14\uffff\1\2\44\uffff\1\2\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\1\3\1"+
			"\2\2\uffff\2\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\1\3\1\2\23\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff"+
			"\1\1",
			"",
			""
	};

	static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
	static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
	static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
	static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
	static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
	static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
	static final short[][] DFA172_transition;

	static {
		int numStates = DFA172_transitionS.length;
		DFA172_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
		}
	}

	protected class DFA172 extends DFA {

		public DFA172(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 172;
			this.eot = DFA172_eot;
			this.eof = DFA172_eof;
			this.min = DFA172_min;
			this.max = DFA172_max;
			this.accept = DFA172_accept;
			this.special = DFA172_special;
			this.transition = DFA172_transition;
		}
		@Override
		public String getDescription() {
			return "698:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA176_eotS =
		"\5\uffff";
	static final String DFA176_eofS =
		"\5\uffff";
	static final String DFA176_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA176_maxS =
		"\2\u0091\1\uffff\1\117\1\uffff";
	static final String DFA176_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA176_specialS =
		"\5\uffff}>";
	static final String[] DFA176_transitionS = {
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13"+
			"\uffff\1\2\25\uffff\1\1\40\uffff\1\2\36\uffff\1\1",
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1"+
			"\3\2\uffff\1\4\10\uffff\1\2\15\uffff\1\4\7\uffff\1\1\40\uffff\1\2\36"+
			"\uffff\1\1",
			"",
			"\1\2\62\uffff\1\4\24\uffff\1\2",
			""
	};

	static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
	static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
	static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
	static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
	static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
	static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
	static final short[][] DFA176_transition;

	static {
		int numStates = DFA176_transitionS.length;
		DFA176_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
		}
	}

	protected class DFA176 extends DFA {

		public DFA176(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 176;
			this.eot = DFA176_eot;
			this.eof = DFA176_eof;
			this.min = DFA176_min;
			this.max = DFA176_max;
			this.accept = DFA176_accept;
			this.special = DFA176_special;
			this.transition = DFA176_transition;
		}
		@Override
		public String getDescription() {
			return "708:95: ( ( ( ws )? elementSubsequent ) | ( ws sass_selector_interpolation_exp ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA179_eotS =
		"\5\uffff";
	static final String DFA179_eofS =
		"\5\uffff";
	static final String DFA179_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA179_maxS =
		"\2\u0091\1\uffff\1\117\1\uffff";
	static final String DFA179_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA179_specialS =
		"\5\uffff}>";
	static final String[] DFA179_transitionS = {
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13"+
			"\uffff\1\2\25\uffff\1\1\40\uffff\1\2\36\uffff\1\1",
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1"+
			"\3\2\uffff\1\4\10\uffff\1\2\15\uffff\1\4\7\uffff\1\1\40\uffff\1\2\36"+
			"\uffff\1\1",
			"",
			"\1\2\62\uffff\1\4\24\uffff\1\2",
			""
	};

	static final short[] DFA179_eot = DFA.unpackEncodedString(DFA179_eotS);
	static final short[] DFA179_eof = DFA.unpackEncodedString(DFA179_eofS);
	static final char[] DFA179_min = DFA.unpackEncodedStringToUnsignedChars(DFA179_minS);
	static final char[] DFA179_max = DFA.unpackEncodedStringToUnsignedChars(DFA179_maxS);
	static final short[] DFA179_accept = DFA.unpackEncodedString(DFA179_acceptS);
	static final short[] DFA179_special = DFA.unpackEncodedString(DFA179_specialS);
	static final short[][] DFA179_transition;

	static {
		int numStates = DFA179_transitionS.length;
		DFA179_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA179_transition[i] = DFA.unpackEncodedString(DFA179_transitionS[i]);
		}
	}

	protected class DFA179 extends DFA {

		public DFA179(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 179;
			this.eot = DFA179_eot;
			this.eof = DFA179_eof;
			this.min = DFA179_min;
			this.max = DFA179_max;
			this.accept = DFA179_accept;
			this.special = DFA179_special;
			this.transition = DFA179_transition;
		}
		@Override
		public String getDescription() {
			return "709:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA201_eotS =
		"\4\uffff";
	static final String DFA201_eofS =
		"\4\uffff";
	static final String DFA201_minS =
		"\1\7\1\6\2\uffff";
	static final String DFA201_maxS =
		"\2\u0091\2\uffff";
	static final String DFA201_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA201_specialS =
		"\4\uffff}>";
	static final String[] DFA201_transitionS = {
			"\1\3\13\uffff\2\3\1\1\7\uffff\1\3\1\uffff\1\3\13\uffff\1\3\2\uffff\2"+
			"\3\12\uffff\2\3\12\uffff\1\2\12\uffff\1\1\14\uffff\1\3\2\uffff\1\3\6"+
			"\uffff\1\3\11\uffff\1\3\13\uffff\1\3\4\uffff\1\3\15\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\5\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\4\3\1\uffff\11\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA201_eot = DFA.unpackEncodedString(DFA201_eotS);
	static final short[] DFA201_eof = DFA.unpackEncodedString(DFA201_eofS);
	static final char[] DFA201_min = DFA.unpackEncodedStringToUnsignedChars(DFA201_minS);
	static final char[] DFA201_max = DFA.unpackEncodedStringToUnsignedChars(DFA201_maxS);
	static final short[] DFA201_accept = DFA.unpackEncodedString(DFA201_acceptS);
	static final short[] DFA201_special = DFA.unpackEncodedString(DFA201_specialS);
	static final short[][] DFA201_transition;

	static {
		int numStates = DFA201_transitionS.length;
		DFA201_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA201_transition[i] = DFA.unpackEncodedString(DFA201_transitionS[i]);
		}
	}

	protected class DFA201 extends DFA {

		public DFA201(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 201;
			this.eot = DFA201_eot;
			this.eof = DFA201_eof;
			this.min = DFA201_min;
			this.max = DFA201_max;
			this.accept = DFA201_accept;
			this.special = DFA201_special;
			this.transition = DFA201_transition;
		}
		@Override
		public String getDescription() {
			return "822:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA210_eotS =
		"\4\uffff";
	static final String DFA210_eofS =
		"\1\3\3\uffff";
	static final String DFA210_minS =
		"\2\6\2\uffff";
	static final String DFA210_maxS =
		"\2\u0091\2\uffff";
	static final String DFA210_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA210_specialS =
		"\4\uffff}>";
	static final String[] DFA210_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA210_eot = DFA.unpackEncodedString(DFA210_eotS);
	static final short[] DFA210_eof = DFA.unpackEncodedString(DFA210_eofS);
	static final char[] DFA210_min = DFA.unpackEncodedStringToUnsignedChars(DFA210_minS);
	static final char[] DFA210_max = DFA.unpackEncodedStringToUnsignedChars(DFA210_maxS);
	static final short[] DFA210_accept = DFA.unpackEncodedString(DFA210_acceptS);
	static final short[] DFA210_special = DFA.unpackEncodedString(DFA210_specialS);
	static final short[][] DFA210_transition;

	static {
		int numStates = DFA210_transitionS.length;
		DFA210_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA210_transition[i] = DFA.unpackEncodedString(DFA210_transitionS[i]);
		}
	}

	protected class DFA210 extends DFA {

		public DFA210(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 210;
			this.eot = DFA210_eot;
			this.eof = DFA210_eof;
			this.min = DFA210_min;
			this.max = DFA210_max;
			this.accept = DFA210_accept;
			this.special = DFA210_special;
			this.transition = DFA210_transition;
		}
		@Override
		public String getDescription() {
			return "833:48: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA220_eotS =
		"\74\uffff";
	static final String DFA220_eofS =
		"\1\2\73\uffff";
	static final String DFA220_minS =
		"\1\5\1\0\5\uffff\2\0\1\uffff\17\0\2\uffff\1\0\4\uffff\7\0\2\uffff\1\0"+
		"\1\uffff\1\0\20\uffff";
	static final String DFA220_maxS =
		"\1\u0091\1\0\5\uffff\2\0\1\uffff\17\0\2\uffff\1\0\4\uffff\7\0\2\uffff"+
		"\1\0\1\uffff\1\0\20\uffff";
	static final String DFA220_acceptS =
		"\2\uffff\1\2\47\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA220_specialS =
		"\1\0\1\1\5\uffff\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
		"\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff\1\23\4\uffff\1\24\1\25\1\26"+
		"\1\27\1\30\1\31\1\32\2\uffff\1\33\1\uffff\1\34\20\uffff}>";
	static final String[] DFA220_transitionS = {
			"\1\62\1\43\1\2\2\uffff\5\46\3\uffff\1\46\1\2\1\51\1\1\1\uffff\1\46\5"+
			"\uffff\1\2\1\66\1\2\1\uffff\1\57\3\uffff\1\61\1\uffff\1\40\1\64\1\uffff"+
			"\1\15\1\2\2\uffff\1\33\1\13\2\uffff\1\12\1\2\1\25\5\uffff\2\2\3\46\1"+
			"\56\1\uffff\1\2\1\71\5\uffff\1\44\1\14\1\41\5\uffff\1\46\1\1\4\uffff"+
			"\1\54\3\uffff\1\27\1\55\1\73\1\2\1\30\2\uffff\1\2\1\uffff\1\60\1\65\3"+
			"\46\1\2\1\uffff\1\26\1\24\1\16\1\uffff\1\22\1\46\1\uffff\1\45\1\2\1\21"+
			"\1\46\1\uffff\1\20\1\10\1\7\1\uffff\1\46\1\17\1\16\1\23\1\2\1\52\1\2"+
			"\1\67\1\uffff\1\53\1\63\5\46\2\uffff\1\72\3\uffff\1\42\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA220_eot = DFA.unpackEncodedString(DFA220_eotS);
	static final short[] DFA220_eof = DFA.unpackEncodedString(DFA220_eofS);
	static final char[] DFA220_min = DFA.unpackEncodedStringToUnsignedChars(DFA220_minS);
	static final char[] DFA220_max = DFA.unpackEncodedStringToUnsignedChars(DFA220_maxS);
	static final short[] DFA220_accept = DFA.unpackEncodedString(DFA220_acceptS);
	static final short[] DFA220_special = DFA.unpackEncodedString(DFA220_specialS);
	static final short[][] DFA220_transition;

	static {
		int numStates = DFA220_transitionS.length;
		DFA220_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA220_transition[i] = DFA.unpackEncodedString(DFA220_transitionS[i]);
		}
	}

	protected class DFA220 extends DFA {

		public DFA220(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 220;
			this.eot = DFA220_eot;
			this.eof = DFA220_eof;
			this.min = DFA220_min;
			this.max = DFA220_max;
			this.accept = DFA220_accept;
			this.special = DFA220_special;
			this.transition = DFA220_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 900:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA220_0 = input.LA(1);
						 
						int index220_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA220_0==COMMENT||LA220_0==NL||LA220_0==WS) ) {s = 1;}
						else if ( (LA220_0==EOF||LA220_0==AT_SIGN||LA220_0==COLON||LA220_0==DCOLON||LA220_0==DOT||LA220_0==GREATER||LA220_0==IMPORTANT_SYM||(LA220_0 >= LBRACE && LA220_0 <= LBRACKET)||LA220_0==LESS_AND||LA220_0==PIPE||LA220_0==RBRACE||LA220_0==RPAREN||LA220_0==SASS_EXTEND_ONLY_SELECTOR||LA220_0==SEMI||LA220_0==STAR) ) {s = 2;}
						else if ( (LA220_0==SASS_MIXIN) ) {s = 7;}
						else if ( (LA220_0==SASS_INCLUDE) ) {s = 8;}
						else if ( (LA220_0==IDENT) ) {s = 10;}
						else if ( (LA220_0==HASH_SYMBOL) ) {s = 11;}
						else if ( (LA220_0==MINUS) ) {s = 12;}
						else if ( (LA220_0==GEN) ) {s = 13;}
						else if ( (LA220_0==SASS_DEBUG||LA220_0==SASS_WARN) ) {s = 14;}
						else if ( (LA220_0==SASS_VAR) ) {s = 15;}
						else if ( (LA220_0==SASS_IF) ) {s = 16;}
						else if ( (LA220_0==SASS_FOR) ) {s = 17;}
						else if ( (LA220_0==SASS_EACH) ) {s = 18;}
						else if ( (LA220_0==SASS_WHILE) ) {s = 19;}
						else if ( (LA220_0==SASS_CONTENT) ) {s = 20;}
						else if ( (LA220_0==IMPORT_SYM) ) {s = 21;}
						else if ( (LA220_0==SASS_AT_ROOT) ) {s = 22;}
						else if ( (LA220_0==PAGE_SYM) ) {s = 23;}
						else if ( (LA220_0==PLUS) ) {s = 24;}
						else if ( (LA220_0==HASH) ) {s = 27;}
						else if ( (LA220_0==FONT_FACE_SYM) ) {s = 32;}
						else if ( (LA220_0==MOZ_DOCUMENT_SYM) ) {s = 33;}
						else if ( (LA220_0==WEBKIT_KEYFRAMES_SYM) ) {s = 34;}
						else if ( (LA220_0==AT_IDENT) ) {s = 35;}
						else if ( (LA220_0==MEDIA_SYM) ) {s = 36;}
						else if ( (LA220_0==SASS_EXTEND) ) {s = 37;}
						else if ( ((LA220_0 >= BOTTOMCENTER_SYM && LA220_0 <= BOTTOMRIGHT_SYM)||LA220_0==CHARSET_SYM||LA220_0==COUNTER_STYLE_SYM||(LA220_0 >= LEFTBOTTOM_SYM && LA220_0 <= LEFTTOP_SYM)||LA220_0==NAMESPACE_SYM||(LA220_0 >= RIGHTBOTTOM_SYM && LA220_0 <= RIGHTTOP_SYM)||LA220_0==SASS_ELSE||LA220_0==SASS_FUNCTION||LA220_0==SASS_RETURN||(LA220_0 >= TOPCENTER_SYM && LA220_0 <= TOPRIGHT_SYM)) ) {s = 38;}
						else if ( (LA220_0==COMMA) ) {s = 41;}
						else if ( (LA220_0==SOLIDUS) && (synpred30_Css3())) {s = 42;}
						else if ( (LA220_0==TILDE) ) {s = 43;}
						else if ( (LA220_0==NUMBER) && (synpred30_Css3())) {s = 44;}
						else if ( (LA220_0==PERCENTAGE) && (synpred30_Css3())) {s = 45;}
						else if ( (LA220_0==LENGTH) && (synpred30_Css3())) {s = 46;}
						else if ( (LA220_0==EMS) && (synpred30_Css3())) {s = 47;}
						else if ( (LA220_0==REM) && (synpred30_Css3())) {s = 48;}
						else if ( (LA220_0==EXS) && (synpred30_Css3())) {s = 49;}
						else if ( (LA220_0==ANGLE) && (synpred30_Css3())) {s = 50;}
						else if ( (LA220_0==TIME) && (synpred30_Css3())) {s = 51;}
						else if ( (LA220_0==FREQ) && (synpred30_Css3())) {s = 52;}
						else if ( (LA220_0==RESOLUTION) && (synpred30_Css3())) {s = 53;}
						else if ( (LA220_0==DIMENSION) && (synpred30_Css3())) {s = 54;}
						else if ( (LA220_0==STRING) && (synpred30_Css3())) {s = 55;}
						else if ( (LA220_0==LESS_JS_STRING) && (synpred30_Css3())) {s = 57;}
						else if ( (LA220_0==URI) && (synpred30_Css3())) {s = 58;}
						else if ( (LA220_0==PERCENTAGE_SYMBOL) && (synpred30_Css3())) {s = 59;}
						 
						input.seek(index220_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA220_1 = input.LA(1);
						 
						int index220_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA220_7 = input.LA(1);
						 
						int index220_7 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index220_7);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA220_8 = input.LA(1);
						 
						int index220_8 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index220_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA220_10 = input.LA(1);
						 
						int index220_10 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_10);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA220_11 = input.LA(1);
						 
						int index220_11 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_11);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA220_12 = input.LA(1);
						 
						int index220_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index220_12);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA220_13 = input.LA(1);
						 
						int index220_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_13);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA220_14 = input.LA(1);
						 
						int index220_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_14);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA220_15 = input.LA(1);
						 
						int index220_15 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred30_Css3())) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index220_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA220_16 = input.LA(1);
						 
						int index220_16 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA220_17 = input.LA(1);
						 
						int index220_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA220_18 = input.LA(1);
						 
						int index220_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_18);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA220_19 = input.LA(1);
						 
						int index220_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_19);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA220_20 = input.LA(1);
						 
						int index220_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_20);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA220_21 = input.LA(1);
						 
						int index220_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index220_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA220_22 = input.LA(1);
						 
						int index220_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA220_23 = input.LA(1);
						 
						int index220_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA220_24 = input.LA(1);
						 
						int index220_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA220_27 = input.LA(1);
						 
						int index220_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_27);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA220_32 = input.LA(1);
						 
						int index220_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_32);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA220_33 = input.LA(1);
						 
						int index220_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_33);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA220_34 = input.LA(1);
						 
						int index220_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_34);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA220_35 = input.LA(1);
						 
						int index220_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_35);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA220_36 = input.LA(1);
						 
						int index220_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_36);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA220_37 = input.LA(1);
						 
						int index220_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()")))) ) {s = 2;}
						 
						input.seek(index220_37);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA220_38 = input.LA(1);
						 
						int index220_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred30_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index220_38);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA220_41 = input.LA(1);
						 
						int index220_41 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_41);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA220_43 = input.LA(1);
						 
						int index220_43 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index220_43);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 220, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA219_eotS =
		"\5\uffff";
	static final String DFA219_eofS =
		"\5\uffff";
	static final String DFA219_minS =
		"\2\5\3\uffff";
	static final String DFA219_maxS =
		"\2\u0091\3\uffff";
	static final String DFA219_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA219_specialS =
		"\5\uffff}>";
	static final String[] DFA219_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA219_eot = DFA.unpackEncodedString(DFA219_eotS);
	static final short[] DFA219_eof = DFA.unpackEncodedString(DFA219_eofS);
	static final char[] DFA219_min = DFA.unpackEncodedStringToUnsignedChars(DFA219_minS);
	static final char[] DFA219_max = DFA.unpackEncodedStringToUnsignedChars(DFA219_maxS);
	static final short[] DFA219_accept = DFA.unpackEncodedString(DFA219_acceptS);
	static final short[] DFA219_special = DFA.unpackEncodedString(DFA219_specialS);
	static final short[][] DFA219_transition;

	static {
		int numStates = DFA219_transitionS.length;
		DFA219_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA219_transition[i] = DFA.unpackEncodedString(DFA219_transitionS[i]);
		}
	}

	protected class DFA219 extends DFA {

		public DFA219(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 219;
			this.eot = DFA219_eot;
			this.eof = DFA219_eof;
			this.min = DFA219_min;
			this.max = DFA219_max;
			this.accept = DFA219_accept;
			this.special = DFA219_special;
			this.transition = DFA219_transition;
		}
		@Override
		public String getDescription() {
			return "900:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA231_eotS =
		"\4\uffff";
	static final String DFA231_eofS =
		"\4\uffff";
	static final String DFA231_minS =
		"\2\24\2\uffff";
	static final String DFA231_maxS =
		"\2\u0091\2\uffff";
	static final String DFA231_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA231_specialS =
		"\4\uffff}>";
	static final String[] DFA231_transitionS = {
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\50\uffff\1\1",
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\50\uffff\1\1",
			"",
			""
	};

	static final short[] DFA231_eot = DFA.unpackEncodedString(DFA231_eotS);
	static final short[] DFA231_eof = DFA.unpackEncodedString(DFA231_eofS);
	static final char[] DFA231_min = DFA.unpackEncodedStringToUnsignedChars(DFA231_minS);
	static final char[] DFA231_max = DFA.unpackEncodedStringToUnsignedChars(DFA231_maxS);
	static final short[] DFA231_accept = DFA.unpackEncodedString(DFA231_acceptS);
	static final short[] DFA231_special = DFA.unpackEncodedString(DFA231_specialS);
	static final short[][] DFA231_transition;

	static {
		int numStates = DFA231_transitionS.length;
		DFA231_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA231_transition[i] = DFA.unpackEncodedString(DFA231_transitionS[i]);
		}
	}

	protected class DFA231 extends DFA {

		public DFA231(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 231;
			this.eot = DFA231_eot;
			this.eof = DFA231_eof;
			this.min = DFA231_min;
			this.max = DFA231_max;
			this.accept = DFA231_accept;
			this.special = DFA231_special;
			this.transition = DFA231_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 963:17: ( ( ws )? COMMA ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA241_eotS =
		"\37\uffff";
	static final String DFA241_eofS =
		"\37\uffff";
	static final String DFA241_minS =
		"\2\5\35\uffff";
	static final String DFA241_maxS =
		"\2\u0091\35\uffff";
	static final String DFA241_acceptS =
		"\2\uffff\1\2\34\1";
	static final String DFA241_specialS =
		"\1\1\1\0\35\uffff}>";
	static final String[] DFA241_transitionS = {
			"\1\14\1\27\3\uffff\5\27\3\uffff\1\27\1\uffff\1\2\1\1\1\uffff\1\27\6\uffff"+
			"\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\27\1\16\1\uffff\1\24\3\uffff"+
			"\1\26\1\31\2\uffff\1\5\1\uffff\1\27\7\uffff\3\27\1\10\2\uffff\1\23\5"+
			"\uffff\1\27\1\4\1\27\5\uffff\1\27\1\1\4\uffff\1\6\3\uffff\1\27\1\7\1"+
			"\32\1\uffff\1\4\4\uffff\1\12\1\17\3\27\1\2\1\uffff\3\27\1\uffff\2\27"+
			"\1\uffff\1\27\1\uffff\2\27\1\uffff\3\27\1\uffff\1\27\1\30\2\27\1\uffff"+
			"\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\27\2\uffff\1\25\3\uffff\1\27\1"+
			"\1",
			"\1\14\1\33\3\uffff\5\33\3\uffff\1\33\1\uffff\1\2\1\1\1\uffff\1\33\6"+
			"\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\33\1\16\1\uffff\1\24"+
			"\3\uffff\1\26\1\35\2\uffff\1\5\1\uffff\1\33\7\uffff\3\33\1\10\2\uffff"+
			"\1\23\5\uffff\1\33\1\4\1\33\5\uffff\1\33\1\1\4\uffff\1\6\3\uffff\1\33"+
			"\1\7\1\36\1\uffff\1\4\4\uffff\1\12\1\17\3\33\1\2\1\uffff\3\33\1\uffff"+
			"\2\33\1\uffff\1\33\1\uffff\2\33\1\uffff\3\33\1\uffff\1\33\1\34\2\33\1"+
			"\uffff\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\33\2\uffff\1\25\3\uffff\1"+
			"\33\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA241_eot = DFA.unpackEncodedString(DFA241_eotS);
	static final short[] DFA241_eof = DFA.unpackEncodedString(DFA241_eofS);
	static final char[] DFA241_min = DFA.unpackEncodedStringToUnsignedChars(DFA241_minS);
	static final char[] DFA241_max = DFA.unpackEncodedStringToUnsignedChars(DFA241_maxS);
	static final short[] DFA241_accept = DFA.unpackEncodedString(DFA241_acceptS);
	static final short[] DFA241_special = DFA.unpackEncodedString(DFA241_specialS);
	static final short[][] DFA241_transition;

	static {
		int numStates = DFA241_transitionS.length;
		DFA241_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA241_transition[i] = DFA.unpackEncodedString(DFA241_transitionS[i]);
		}
	}

	protected class DFA241 extends DFA {

		public DFA241(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 241;
			this.eot = DFA241_eot;
			this.eof = DFA241_eof;
			this.min = DFA241_min;
			this.max = DFA241_max;
			this.accept = DFA241_accept;
			this.special = DFA241_special;
			this.transition = DFA241_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 981:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA241_1 = input.LA(1);
						 
						int index241_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA241_1==COMMA||LA241_1==RPAREN) ) {s = 2;}
						else if ( (LA241_1==COMMENT||LA241_1==NL||LA241_1==WS) ) {s = 1;}
						else if ( (LA241_1==MINUS||LA241_1==PLUS) && (synpred34_Css3())) {s = 4;}
						else if ( (LA241_1==IDENT) && (synpred34_Css3())) {s = 5;}
						else if ( (LA241_1==NUMBER) && (synpred34_Css3())) {s = 6;}
						else if ( (LA241_1==PERCENTAGE) && (synpred34_Css3())) {s = 7;}
						else if ( (LA241_1==LENGTH) && (synpred34_Css3())) {s = 8;}
						else if ( (LA241_1==EMS) && (synpred34_Css3())) {s = 9;}
						else if ( (LA241_1==REM) && (synpred34_Css3())) {s = 10;}
						else if ( (LA241_1==EXS) && (synpred34_Css3())) {s = 11;}
						else if ( (LA241_1==ANGLE) && (synpred34_Css3())) {s = 12;}
						else if ( (LA241_1==TIME) && (synpred34_Css3())) {s = 13;}
						else if ( (LA241_1==FREQ) && (synpred34_Css3())) {s = 14;}
						else if ( (LA241_1==RESOLUTION) && (synpred34_Css3())) {s = 15;}
						else if ( (LA241_1==DIMENSION) && (synpred34_Css3())) {s = 16;}
						else if ( (LA241_1==STRING) && (synpred34_Css3())) {s = 17;}
						else if ( (LA241_1==TILDE) && (synpred34_Css3())) {s = 18;}
						else if ( (LA241_1==LESS_JS_STRING) && (synpred34_Css3())) {s = 19;}
						else if ( (LA241_1==GEN) && (synpred34_Css3())) {s = 20;}
						else if ( (LA241_1==URI) && (synpred34_Css3())) {s = 21;}
						else if ( (LA241_1==HASH) && (synpred34_Css3())) {s = 22;}
						else if ( (LA241_1==AT_IDENT||(LA241_1 >= BOTTOMCENTER_SYM && LA241_1 <= BOTTOMRIGHT_SYM)||LA241_1==CHARSET_SYM||LA241_1==COUNTER_STYLE_SYM||LA241_1==FONT_FACE_SYM||LA241_1==IMPORT_SYM||(LA241_1 >= LEFTBOTTOM_SYM && LA241_1 <= LEFTTOP_SYM)||LA241_1==MEDIA_SYM||LA241_1==MOZ_DOCUMENT_SYM||LA241_1==NAMESPACE_SYM||LA241_1==PAGE_SYM||(LA241_1 >= RIGHTBOTTOM_SYM && LA241_1 <= RIGHTTOP_SYM)||(LA241_1 >= SASS_AT_ROOT && LA241_1 <= SASS_DEBUG)||(LA241_1 >= SASS_EACH && LA241_1 <= SASS_ELSE)||LA241_1==SASS_EXTEND||(LA241_1 >= SASS_FOR && LA241_1 <= SASS_FUNCTION)||(LA241_1 >= SASS_IF && LA241_1 <= SASS_MIXIN)||LA241_1==SASS_RETURN||(LA241_1 >= SASS_WARN && LA241_1 <= SASS_WHILE)||(LA241_1 >= TOPCENTER_SYM && LA241_1 <= TOPRIGHT_SYM)||LA241_1==WEBKIT_KEYFRAMES_SYM) && (synpred34_Css3())) {s = 27;}
						else if ( (LA241_1==SASS_VAR) && (synpred34_Css3())) {s = 28;}
						else if ( (LA241_1==HASH_SYMBOL) && (synpred34_Css3())) {s = 29;}
						else if ( (LA241_1==PERCENTAGE_SYMBOL) && (synpred34_Css3())) {s = 30;}
						else if ( (LA241_1==SOLIDUS) && (synpred34_Css3())) {s = 3;}
						 
						input.seek(index241_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA241_0 = input.LA(1);
						 
						int index241_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA241_0==COMMENT||LA241_0==NL||LA241_0==WS) ) {s = 1;}
						else if ( (LA241_0==COMMA||LA241_0==RPAREN) ) {s = 2;}
						else if ( (LA241_0==SOLIDUS) && (synpred34_Css3())) {s = 3;}
						else if ( (LA241_0==MINUS||LA241_0==PLUS) && (synpred34_Css3())) {s = 4;}
						else if ( (LA241_0==IDENT) && (synpred34_Css3())) {s = 5;}
						else if ( (LA241_0==NUMBER) && (synpred34_Css3())) {s = 6;}
						else if ( (LA241_0==PERCENTAGE) && (synpred34_Css3())) {s = 7;}
						else if ( (LA241_0==LENGTH) && (synpred34_Css3())) {s = 8;}
						else if ( (LA241_0==EMS) && (synpred34_Css3())) {s = 9;}
						else if ( (LA241_0==REM) && (synpred34_Css3())) {s = 10;}
						else if ( (LA241_0==EXS) && (synpred34_Css3())) {s = 11;}
						else if ( (LA241_0==ANGLE) && (synpred34_Css3())) {s = 12;}
						else if ( (LA241_0==TIME) && (synpred34_Css3())) {s = 13;}
						else if ( (LA241_0==FREQ) && (synpred34_Css3())) {s = 14;}
						else if ( (LA241_0==RESOLUTION) && (synpred34_Css3())) {s = 15;}
						else if ( (LA241_0==DIMENSION) && (synpred34_Css3())) {s = 16;}
						else if ( (LA241_0==STRING) && (synpred34_Css3())) {s = 17;}
						else if ( (LA241_0==TILDE) && (synpred34_Css3())) {s = 18;}
						else if ( (LA241_0==LESS_JS_STRING) && (synpred34_Css3())) {s = 19;}
						else if ( (LA241_0==GEN) && (synpred34_Css3())) {s = 20;}
						else if ( (LA241_0==URI) && (synpred34_Css3())) {s = 21;}
						else if ( (LA241_0==HASH) && (synpred34_Css3())) {s = 22;}
						else if ( (LA241_0==AT_IDENT||(LA241_0 >= BOTTOMCENTER_SYM && LA241_0 <= BOTTOMRIGHT_SYM)||LA241_0==CHARSET_SYM||LA241_0==COUNTER_STYLE_SYM||LA241_0==FONT_FACE_SYM||LA241_0==IMPORT_SYM||(LA241_0 >= LEFTBOTTOM_SYM && LA241_0 <= LEFTTOP_SYM)||LA241_0==MEDIA_SYM||LA241_0==MOZ_DOCUMENT_SYM||LA241_0==NAMESPACE_SYM||LA241_0==PAGE_SYM||(LA241_0 >= RIGHTBOTTOM_SYM && LA241_0 <= RIGHTTOP_SYM)||(LA241_0 >= SASS_AT_ROOT && LA241_0 <= SASS_DEBUG)||(LA241_0 >= SASS_EACH && LA241_0 <= SASS_ELSE)||LA241_0==SASS_EXTEND||(LA241_0 >= SASS_FOR && LA241_0 <= SASS_FUNCTION)||(LA241_0 >= SASS_IF && LA241_0 <= SASS_MIXIN)||LA241_0==SASS_RETURN||(LA241_0 >= SASS_WARN && LA241_0 <= SASS_WHILE)||(LA241_0 >= TOPCENTER_SYM && LA241_0 <= TOPRIGHT_SYM)||LA241_0==WEBKIT_KEYFRAMES_SYM) && (synpred34_Css3())) {s = 23;}
						else if ( (LA241_0==SASS_VAR) && (synpred34_Css3())) {s = 24;}
						else if ( (LA241_0==HASH_SYMBOL) && (synpred34_Css3())) {s = 25;}
						else if ( (LA241_0==PERCENTAGE_SYMBOL) && (synpred34_Css3())) {s = 26;}
						 
						input.seek(index241_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 241, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA240_eotS =
		"\5\uffff";
	static final String DFA240_eofS =
		"\5\uffff";
	static final String DFA240_minS =
		"\2\5\3\uffff";
	static final String DFA240_maxS =
		"\2\u0091\3\uffff";
	static final String DFA240_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA240_specialS =
		"\5\uffff}>";
	static final String[] DFA240_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA240_eot = DFA.unpackEncodedString(DFA240_eotS);
	static final short[] DFA240_eof = DFA.unpackEncodedString(DFA240_eofS);
	static final char[] DFA240_min = DFA.unpackEncodedStringToUnsignedChars(DFA240_minS);
	static final char[] DFA240_max = DFA.unpackEncodedStringToUnsignedChars(DFA240_maxS);
	static final short[] DFA240_accept = DFA.unpackEncodedString(DFA240_acceptS);
	static final short[] DFA240_special = DFA.unpackEncodedString(DFA240_specialS);
	static final short[][] DFA240_transition;

	static {
		int numStates = DFA240_transitionS.length;
		DFA240_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA240_transition[i] = DFA.unpackEncodedString(DFA240_transitionS[i]);
		}
	}

	protected class DFA240 extends DFA {

		public DFA240(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 240;
			this.eot = DFA240_eot;
			this.eof = DFA240_eof;
			this.min = DFA240_min;
			this.max = DFA240_max;
			this.accept = DFA240_accept;
			this.special = DFA240_special;
			this.transition = DFA240_transition;
		}
		@Override
		public String getDescription() {
			return "981:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA250_eotS =
		"\5\uffff";
	static final String DFA250_eofS =
		"\2\2\3\uffff";
	static final String DFA250_minS =
		"\2\6\3\uffff";
	static final String DFA250_maxS =
		"\2\u0091\3\uffff";
	static final String DFA250_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA250_specialS =
		"\5\uffff}>";
	static final String[] DFA250_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA250_eot = DFA.unpackEncodedString(DFA250_eotS);
	static final short[] DFA250_eof = DFA.unpackEncodedString(DFA250_eofS);
	static final char[] DFA250_min = DFA.unpackEncodedStringToUnsignedChars(DFA250_minS);
	static final char[] DFA250_max = DFA.unpackEncodedStringToUnsignedChars(DFA250_maxS);
	static final short[] DFA250_accept = DFA.unpackEncodedString(DFA250_acceptS);
	static final short[] DFA250_special = DFA.unpackEncodedString(DFA250_specialS);
	static final short[][] DFA250_transition;

	static {
		int numStates = DFA250_transitionS.length;
		DFA250_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA250_transition[i] = DFA.unpackEncodedString(DFA250_transitionS[i]);
		}
	}

	protected class DFA250 extends DFA {

		public DFA250(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 250;
			this.eot = DFA250_eot;
			this.eof = DFA250_eof;
			this.min = DFA250_min;
			this.max = DFA250_max;
			this.accept = DFA250_accept;
			this.special = DFA250_special;
			this.transition = DFA250_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1000:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA255_eotS =
		"\4\uffff";
	static final String DFA255_eofS =
		"\2\2\2\uffff";
	static final String DFA255_minS =
		"\2\6\2\uffff";
	static final String DFA255_maxS =
		"\2\u0091\2\uffff";
	static final String DFA255_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA255_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA255_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\1\uffff\10\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\1\uffff\10\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA255_eot = DFA.unpackEncodedString(DFA255_eotS);
	static final short[] DFA255_eof = DFA.unpackEncodedString(DFA255_eofS);
	static final char[] DFA255_min = DFA.unpackEncodedStringToUnsignedChars(DFA255_minS);
	static final char[] DFA255_max = DFA.unpackEncodedStringToUnsignedChars(DFA255_maxS);
	static final short[] DFA255_accept = DFA.unpackEncodedString(DFA255_acceptS);
	static final short[] DFA255_special = DFA.unpackEncodedString(DFA255_specialS);
	static final short[][] DFA255_transition;

	static {
		int numStates = DFA255_transitionS.length;
		DFA255_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA255_transition[i] = DFA.unpackEncodedString(DFA255_transitionS[i]);
		}
	}

	protected class DFA255 extends DFA {

		public DFA255(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 255;
			this.eot = DFA255_eot;
			this.eof = DFA255_eof;
			this.min = DFA255_min;
			this.max = DFA255_max;
			this.accept = DFA255_accept;
			this.special = DFA255_special;
			this.transition = DFA255_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1016:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA255_1 = input.LA(1);
						 
						int index255_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA255_1==EOF||(LA255_1 >= AT_IDENT && LA255_1 <= AT_SIGN)||(LA255_1 >= BOTTOMCENTER_SYM && LA255_1 <= BOTTOMRIGHT_SYM)||(LA255_1 >= CHARSET_SYM && LA255_1 <= COLON)||LA255_1==COUNTER_STYLE_SYM||LA255_1==DCOLON||LA255_1==DOT||LA255_1==FONT_FACE_SYM||(LA255_1 >= GEN && LA255_1 <= GREATER)||(LA255_1 >= HASH && LA255_1 <= HASH_SYMBOL)||LA255_1==IDENT||LA255_1==IMPORT_SYM||(LA255_1 >= LBRACE && LA255_1 <= LEFTTOP_SYM)||LA255_1==LESS_AND||(LA255_1 >= MEDIA_SYM && LA255_1 <= MOZ_DOCUMENT_SYM)||LA255_1==NAMESPACE_SYM||LA255_1==PAGE_SYM||(LA255_1 >= PIPE && LA255_1 <= PLUS)||LA255_1==RBRACE||(LA255_1 >= RIGHTBOTTOM_SYM && LA255_1 <= RPAREN)||(LA255_1 >= SASS_AT_ROOT && LA255_1 <= SASS_ELSE)||(LA255_1 >= SASS_EXTEND && LA255_1 <= SASS_MIXIN)||(LA255_1 >= SASS_RETURN && LA255_1 <= SEMI)||LA255_1==STAR||LA255_1==TILDE||(LA255_1 >= TOPCENTER_SYM && LA255_1 <= TOPRIGHT_SYM)||LA255_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA255_1==COMMENT||LA255_1==NL||LA255_1==WS) ) {s = 1;}
						else if ( (LA255_1==COMMA) && (synpred35_Css3())) {s = 3;}
						 
						input.seek(index255_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA255_0 = input.LA(1);
						 
						int index255_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {s = 1;}
						else if ( (LA255_0==EOF||(LA255_0 >= AT_IDENT && LA255_0 <= AT_SIGN)||(LA255_0 >= BOTTOMCENTER_SYM && LA255_0 <= BOTTOMRIGHT_SYM)||(LA255_0 >= CHARSET_SYM && LA255_0 <= COLON)||LA255_0==COUNTER_STYLE_SYM||LA255_0==DCOLON||LA255_0==DOT||LA255_0==FONT_FACE_SYM||(LA255_0 >= GEN && LA255_0 <= GREATER)||(LA255_0 >= HASH && LA255_0 <= HASH_SYMBOL)||LA255_0==IDENT||LA255_0==IMPORT_SYM||(LA255_0 >= LBRACE && LA255_0 <= LEFTTOP_SYM)||LA255_0==LESS_AND||(LA255_0 >= MEDIA_SYM && LA255_0 <= MOZ_DOCUMENT_SYM)||LA255_0==NAMESPACE_SYM||LA255_0==PAGE_SYM||(LA255_0 >= PIPE && LA255_0 <= PLUS)||LA255_0==RBRACE||(LA255_0 >= RIGHTBOTTOM_SYM && LA255_0 <= RPAREN)||(LA255_0 >= SASS_AT_ROOT && LA255_0 <= SASS_ELSE)||(LA255_0 >= SASS_EXTEND && LA255_0 <= SASS_MIXIN)||(LA255_0 >= SASS_RETURN && LA255_0 <= SEMI)||LA255_0==STAR||LA255_0==TILDE||(LA255_0 >= TOPCENTER_SYM && LA255_0 <= TOPRIGHT_SYM)||LA255_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA255_0==COMMA) && (synpred35_Css3())) {s = 3;}
						 
						input.seek(index255_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 255, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA259_eotS =
		"\110\uffff";
	static final String DFA259_eofS =
		"\1\2\107\uffff";
	static final String DFA259_minS =
		"\1\5\1\0\1\uffff\1\0\1\uffff\7\0\3\uffff\2\0\1\uffff\11\0\2\uffff\1\0"+
		"\4\uffff\7\0\1\uffff\2\0\11\uffff\1\0\2\uffff\1\0\17\uffff";
	static final String DFA259_maxS =
		"\1\u0091\1\0\1\uffff\1\0\1\uffff\7\0\3\uffff\2\0\1\uffff\11\0\2\uffff"+
		"\1\0\4\uffff\7\0\1\uffff\2\0\11\uffff\1\0\2\uffff\1\0\17\uffff";
	static final String DFA259_acceptS =
		"\2\uffff\1\3\56\uffff\4\1\1\uffff\1\1\1\2\1\uffff\17\2";
	static final String DFA259_specialS =
		"\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\3\uffff\1\12"+
		"\1\13\1\uffff\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\2\uffff\1\25"+
		"\4\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\uffff\1\35\1\36\11\uffff"+
		"\1\37\2\uffff\1\40\17\uffff}>";
	static final String[] DFA259_transitionS = {
			"\1\77\1\45\1\2\2\uffff\5\53\3\uffff\1\53\2\2\1\1\1\uffff\1\50\1\2\1\61"+
			"\1\62\2\uffff\1\2\1\103\1\2\1\uffff\1\74\3\uffff\1\76\1\uffff\1\42\1"+
			"\101\1\uffff\1\10\1\32\1\66\1\uffff\1\35\1\6\2\uffff\1\5\1\3\1\27\5\uffff"+
			"\2\2\3\53\1\73\1\63\1\2\1\104\1\64\1\2\1\uffff\1\107\1\uffff\1\46\1\7"+
			"\1\43\5\uffff\1\53\1\1\3\uffff\1\67\1\71\3\uffff\1\31\1\72\1\106\1\2"+
			"\1\65\2\uffff\1\2\1\uffff\1\75\1\102\3\53\1\2\1\uffff\1\30\1\26\1\20"+
			"\1\2\1\24\1\53\1\uffff\1\47\1\2\1\23\1\52\1\2\1\22\1\17\1\11\1\uffff"+
			"\1\53\1\12\1\20\1\25\1\2\1\uffff\1\2\1\13\1\uffff\1\70\1\100\5\53\2\uffff"+
			"\1\105\3\uffff\1\44\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA259_eot = DFA.unpackEncodedString(DFA259_eotS);
	static final short[] DFA259_eof = DFA.unpackEncodedString(DFA259_eofS);
	static final char[] DFA259_min = DFA.unpackEncodedStringToUnsignedChars(DFA259_minS);
	static final char[] DFA259_max = DFA.unpackEncodedStringToUnsignedChars(DFA259_maxS);
	static final short[] DFA259_accept = DFA.unpackEncodedString(DFA259_acceptS);
	static final short[] DFA259_special = DFA.unpackEncodedString(DFA259_specialS);
	static final short[][] DFA259_transition;

	static {
		int numStates = DFA259_transitionS.length;
		DFA259_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA259_transition[i] = DFA.unpackEncodedString(DFA259_transitionS[i]);
		}
	}

	protected class DFA259 extends DFA {

		public DFA259(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 259;
			this.eot = DFA259_eot;
			this.eof = DFA259_eof;
			this.min = DFA259_min;
			this.max = DFA259_max;
			this.accept = DFA259_accept;
			this.special = DFA259_special;
			this.transition = DFA259_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1032:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA259_0 = input.LA(1);
						 
						int index259_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {s = 1;}
						else if ( (LA259_0==EOF||LA259_0==AT_SIGN||(LA259_0 >= COLON && LA259_0 <= COMMA)||LA259_0==CP_DOTS||LA259_0==DCOLON||LA259_0==DOT||(LA259_0 >= LBRACE && LA259_0 <= LBRACKET)||LA259_0==LESS_AND||LA259_0==LESS_REST||LA259_0==PIPE||LA259_0==RBRACE||LA259_0==RPAREN||LA259_0==SASS_DEFAULT||LA259_0==SASS_EXTEND_ONLY_SELECTOR||LA259_0==SASS_GLOBAL||LA259_0==SEMI||LA259_0==STAR) ) {s = 2;}
						else if ( (LA259_0==IMPORTANT_SYM) ) {s = 3;}
						else if ( (LA259_0==IDENT) ) {s = 5;}
						else if ( (LA259_0==HASH_SYMBOL) ) {s = 6;}
						else if ( (LA259_0==MINUS) ) {s = 7;}
						else if ( (LA259_0==GEN) ) {s = 8;}
						else if ( (LA259_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA259_0==SASS_VAR) ) {s = 10;}
						else if ( (LA259_0==STRING) ) {s = 11;}
						else if ( (LA259_0==SASS_INCLUDE) ) {s = 15;}
						else if ( (LA259_0==SASS_DEBUG||LA259_0==SASS_WARN) ) {s = 16;}
						else if ( (LA259_0==SASS_IF) ) {s = 18;}
						else if ( (LA259_0==SASS_FOR) ) {s = 19;}
						else if ( (LA259_0==SASS_EACH) ) {s = 20;}
						else if ( (LA259_0==SASS_WHILE) ) {s = 21;}
						else if ( (LA259_0==SASS_CONTENT) ) {s = 22;}
						else if ( (LA259_0==IMPORT_SYM) ) {s = 23;}
						else if ( (LA259_0==SASS_AT_ROOT) ) {s = 24;}
						else if ( (LA259_0==PAGE_SYM) ) {s = 25;}
						else if ( (LA259_0==GREATER) ) {s = 26;}
						else if ( (LA259_0==HASH) ) {s = 29;}
						else if ( (LA259_0==FONT_FACE_SYM) ) {s = 34;}
						else if ( (LA259_0==MOZ_DOCUMENT_SYM) ) {s = 35;}
						else if ( (LA259_0==WEBKIT_KEYFRAMES_SYM) ) {s = 36;}
						else if ( (LA259_0==AT_IDENT) ) {s = 37;}
						else if ( (LA259_0==MEDIA_SYM) ) {s = 38;}
						else if ( (LA259_0==SASS_EXTEND) ) {s = 39;}
						else if ( (LA259_0==COUNTER_STYLE_SYM) ) {s = 40;}
						else if ( (LA259_0==SASS_FUNCTION) ) {s = 42;}
						else if ( ((LA259_0 >= BOTTOMCENTER_SYM && LA259_0 <= BOTTOMRIGHT_SYM)||LA259_0==CHARSET_SYM||(LA259_0 >= LEFTBOTTOM_SYM && LA259_0 <= LEFTTOP_SYM)||LA259_0==NAMESPACE_SYM||(LA259_0 >= RIGHTBOTTOM_SYM && LA259_0 <= RIGHTTOP_SYM)||LA259_0==SASS_ELSE||LA259_0==SASS_RETURN||(LA259_0 >= TOPCENTER_SYM && LA259_0 <= TOPRIGHT_SYM)) ) {s = 43;}
						else if ( (LA259_0==CP_EQ) && (synpred36_Css3())) {s = 49;}
						else if ( (LA259_0==CP_NOT_EQ) && (synpred36_Css3())) {s = 50;}
						else if ( (LA259_0==LESS) && (synpred36_Css3())) {s = 51;}
						else if ( (LA259_0==LESS_OR_EQ) && (synpred36_Css3())) {s = 52;}
						else if ( (LA259_0==PLUS) ) {s = 53;}
						else if ( (LA259_0==GREATER_OR_EQ) && (synpred36_Css3())) {s = 54;}
						else if ( (LA259_0==NOT) && (synpred37_Css3())) {s = 55;}
						else if ( (LA259_0==TILDE) ) {s = 56;}
						else if ( (LA259_0==NUMBER) && (synpred37_Css3())) {s = 57;}
						else if ( (LA259_0==PERCENTAGE) && (synpred37_Css3())) {s = 58;}
						else if ( (LA259_0==LENGTH) && (synpred37_Css3())) {s = 59;}
						else if ( (LA259_0==EMS) && (synpred37_Css3())) {s = 60;}
						else if ( (LA259_0==REM) && (synpred37_Css3())) {s = 61;}
						else if ( (LA259_0==EXS) && (synpred37_Css3())) {s = 62;}
						else if ( (LA259_0==ANGLE) && (synpred37_Css3())) {s = 63;}
						else if ( (LA259_0==TIME) && (synpred37_Css3())) {s = 64;}
						else if ( (LA259_0==FREQ) && (synpred37_Css3())) {s = 65;}
						else if ( (LA259_0==RESOLUTION) && (synpred37_Css3())) {s = 66;}
						else if ( (LA259_0==DIMENSION) && (synpred37_Css3())) {s = 67;}
						else if ( (LA259_0==LESS_JS_STRING) && (synpred37_Css3())) {s = 68;}
						else if ( (LA259_0==URI) && (synpred37_Css3())) {s = 69;}
						else if ( (LA259_0==PERCENTAGE_SYMBOL) && (synpred37_Css3())) {s = 70;}
						else if ( (LA259_0==LPAREN) && (synpred37_Css3())) {s = 71;}
						 
						input.seek(index259_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA259_1 = input.LA(1);
						 
						int index259_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 54;}
						else if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA259_3 = input.LA(1);
						 
						int index259_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_3);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA259_5 = input.LA(1);
						 
						int index259_5 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")||evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")"))&&synpred36_Css3())) ) {s = 54;}
						else if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA259_6 = input.LA(1);
						 
						int index259_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA259_7 = input.LA(1);
						 
						int index259_7 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index259_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA259_8 = input.LA(1);
						 
						int index259_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA259_9 = input.LA(1);
						 
						int index259_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA259_10 = input.LA(1);
						 
						int index259_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred37_Css3())) ) {s = 71;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index259_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA259_11 = input.LA(1);
						 
						int index259_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA259_15 = input.LA(1);
						 
						int index259_15 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( ((((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_15);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA259_16 = input.LA(1);
						 
						int index259_16 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_16);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA259_18 = input.LA(1);
						 
						int index259_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_18);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA259_19 = input.LA(1);
						 
						int index259_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_19);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA259_20 = input.LA(1);
						 
						int index259_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_20);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA259_21 = input.LA(1);
						 
						int index259_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA259_22 = input.LA(1);
						 
						int index259_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA259_23 = input.LA(1);
						 
						int index259_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA259_24 = input.LA(1);
						 
						int index259_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA259_25 = input.LA(1);
						 
						int index259_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_25);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA259_26 = input.LA(1);
						 
						int index259_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 54;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA259_29 = input.LA(1);
						 
						int index259_29 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_29);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA259_34 = input.LA(1);
						 
						int index259_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_34);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA259_35 = input.LA(1);
						 
						int index259_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_35);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA259_36 = input.LA(1);
						 
						int index259_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_36);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA259_37 = input.LA(1);
						 
						int index259_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_37);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA259_38 = input.LA(1);
						 
						int index259_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_38);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA259_39 = input.LA(1);
						 
						int index259_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_39);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA259_40 = input.LA(1);
						 
						int index259_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_40);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA259_42 = input.LA(1);
						 
						int index259_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index259_42);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA259_43 = input.LA(1);
						 
						int index259_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred37_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 71;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index259_43);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA259_53 = input.LA(1);
						 
						int index259_53 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_53);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA259_56 = input.LA(1);
						 
						int index259_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred37_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index259_56);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 259, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA270_eotS =
		"\111\uffff";
	static final String DFA270_eofS =
		"\1\2\110\uffff";
	static final String DFA270_minS =
		"\1\5\1\0\12\uffff\1\0\27\uffff\1\0\5\uffff\1\0\36\uffff";
	static final String DFA270_maxS =
		"\1\u0091\1\0\12\uffff\1\0\27\uffff\1\0\5\uffff\1\0\36\uffff";
	static final String DFA270_acceptS =
		"\2\uffff\1\2\105\uffff\1\1";
	static final String DFA270_specialS =
		"\1\0\1\1\12\uffff\1\2\27\uffff\1\3\5\uffff\1\4\36\uffff}>";
	static final String[] DFA270_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\4\2\2\uffff\3\2\1\uffff\1\2"+
			"\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\14\1\2\5\uffff\1\2\1\1\3\uffff\2\2\3"+
			"\uffff\4\2\1\44\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\1\uffff\10\2\1\uffff"+
			"\5\2\1\110\1\52\1\2\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA270_eot = DFA.unpackEncodedString(DFA270_eotS);
	static final short[] DFA270_eof = DFA.unpackEncodedString(DFA270_eofS);
	static final char[] DFA270_min = DFA.unpackEncodedStringToUnsignedChars(DFA270_minS);
	static final char[] DFA270_max = DFA.unpackEncodedStringToUnsignedChars(DFA270_maxS);
	static final short[] DFA270_accept = DFA.unpackEncodedString(DFA270_acceptS);
	static final short[] DFA270_special = DFA.unpackEncodedString(DFA270_specialS);
	static final short[][] DFA270_transition;

	static {
		int numStates = DFA270_transitionS.length;
		DFA270_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA270_transition[i] = DFA.unpackEncodedString(DFA270_transitionS[i]);
		}
	}

	protected class DFA270 extends DFA {

		public DFA270(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 270;
			this.eot = DFA270_eot;
			this.eof = DFA270_eof;
			this.min = DFA270_min;
			this.max = DFA270_max;
			this.accept = DFA270_accept;
			this.special = DFA270_special;
			this.transition = DFA270_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1073:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA270_0 = input.LA(1);
						 
						int index270_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {s = 1;}
						else if ( (LA270_0==EOF||(LA270_0 >= ANGLE && LA270_0 <= AT_SIGN)||(LA270_0 >= BOTTOMCENTER_SYM && LA270_0 <= BOTTOMRIGHT_SYM)||(LA270_0 >= CHARSET_SYM && LA270_0 <= COMMA)||(LA270_0 >= COUNTER_STYLE_SYM && LA270_0 <= CP_NOT_EQ)||(LA270_0 >= DCOLON && LA270_0 <= DOT)||LA270_0==EMS||LA270_0==EXS||(LA270_0 >= FONT_FACE_SYM && LA270_0 <= FREQ)||(LA270_0 >= GEN && LA270_0 <= GREATER_OR_EQ)||(LA270_0 >= HASH && LA270_0 <= HASH_SYMBOL)||(LA270_0 >= IDENT && LA270_0 <= IMPORT_SYM)||(LA270_0 >= LBRACE && LA270_0 <= LESS_REST)||LA270_0==LPAREN||LA270_0==MEDIA_SYM||LA270_0==MOZ_DOCUMENT_SYM||LA270_0==NAMESPACE_SYM||(LA270_0 >= NOT && LA270_0 <= NUMBER)||(LA270_0 >= PAGE_SYM && LA270_0 <= PIPE)||LA270_0==RBRACE||(LA270_0 >= REM && LA270_0 <= RPAREN)||(LA270_0 >= SASS_AT_ROOT && LA270_0 <= SASS_ELSE)||(LA270_0 >= SASS_EXTEND && LA270_0 <= SASS_MIXIN)||(LA270_0 >= SASS_RETURN && LA270_0 <= SEMI)||LA270_0==STRING||(LA270_0 >= TILDE && LA270_0 <= TOPRIGHT_SYM)||LA270_0==URI||LA270_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA270_0==MINUS) ) {s = 12;}
						else if ( (LA270_0==PLUS) ) {s = 36;}
						else if ( (LA270_0==STAR) ) {s = 42;}
						else if ( (LA270_0==SOLIDUS) && (synpred39_Css3())) {s = 72;}
						 
						input.seek(index270_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA270_1 = input.LA(1);
						 
						int index270_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index270_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA270_12 = input.LA(1);
						 
						int index270_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index270_12);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA270_36 = input.LA(1);
						 
						int index270_36 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index270_36);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA270_42 = input.LA(1);
						 
						int index270_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index270_42);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 270, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA275_eotS =
		"\6\uffff";
	static final String DFA275_eofS =
		"\6\uffff";
	static final String DFA275_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA275_maxS =
		"\1\u0090\1\u0091\3\uffff\1\u0091";
	static final String DFA275_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA275_specialS =
		"\6\uffff}>";
	static final String[] DFA275_transitionS = {
			"\2\2\3\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\3\1\2\7\uffff"+
			"\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2",
			"\2\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5",
			"",
			"",
			"",
			"\2\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5"
	};

	static final short[] DFA275_eot = DFA.unpackEncodedString(DFA275_eotS);
	static final short[] DFA275_eof = DFA.unpackEncodedString(DFA275_eofS);
	static final char[] DFA275_min = DFA.unpackEncodedStringToUnsignedChars(DFA275_minS);
	static final char[] DFA275_max = DFA.unpackEncodedStringToUnsignedChars(DFA275_maxS);
	static final short[] DFA275_accept = DFA.unpackEncodedString(DFA275_acceptS);
	static final short[] DFA275_special = DFA.unpackEncodedString(DFA275_specialS);
	static final short[][] DFA275_transition;

	static {
		int numStates = DFA275_transitionS.length;
		DFA275_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA275_transition[i] = DFA.unpackEncodedString(DFA275_transitionS[i]);
		}
	}

	protected class DFA275 extends DFA {

		public DFA275(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 275;
			this.eot = DFA275_eot;
			this.eof = DFA275_eof;
			this.min = DFA275_min;
			this.max = DFA275_max;
			this.accept = DFA275_accept;
			this.special = DFA275_special;
			this.transition = DFA275_transition;
		}
		@Override
		public String getDescription() {
			return "1078:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA280_eotS =
		"\4\uffff";
	static final String DFA280_eofS =
		"\4\uffff";
	static final String DFA280_minS =
		"\2\25\2\uffff";
	static final String DFA280_maxS =
		"\2\u0091\2\uffff";
	static final String DFA280_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA280_specialS =
		"\4\uffff}>";
	static final String[] DFA280_transitionS = {
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\77\uffff\1\1",
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\77\uffff\1\1",
			"",
			""
	};

	static final short[] DFA280_eot = DFA.unpackEncodedString(DFA280_eotS);
	static final short[] DFA280_eof = DFA.unpackEncodedString(DFA280_eofS);
	static final char[] DFA280_min = DFA.unpackEncodedStringToUnsignedChars(DFA280_minS);
	static final char[] DFA280_max = DFA.unpackEncodedStringToUnsignedChars(DFA280_maxS);
	static final short[] DFA280_accept = DFA.unpackEncodedString(DFA280_acceptS);
	static final short[] DFA280_special = DFA.unpackEncodedString(DFA280_specialS);
	static final short[][] DFA280_transition;

	static {
		int numStates = DFA280_transitionS.length;
		DFA280_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA280_transition[i] = DFA.unpackEncodedString(DFA280_transitionS[i]);
		}
	}

	protected class DFA280 extends DFA {

		public DFA280(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 280;
			this.eot = DFA280_eot;
			this.eof = DFA280_eof;
			this.min = DFA280_min;
			this.max = DFA280_max;
			this.accept = DFA280_accept;
			this.special = DFA280_special;
			this.transition = DFA280_transition;
		}
		@Override
		public String getDescription() {
			return "1094:81: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA284_eotS =
		"\4\uffff";
	static final String DFA284_eofS =
		"\4\uffff";
	static final String DFA284_minS =
		"\2\25\2\uffff";
	static final String DFA284_maxS =
		"\2\u0091\2\uffff";
	static final String DFA284_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA284_specialS =
		"\4\uffff}>";
	static final String[] DFA284_transitionS = {
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\77\uffff\1\1",
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\77\uffff\1\1",
			"",
			""
	};

	static final short[] DFA284_eot = DFA.unpackEncodedString(DFA284_eotS);
	static final short[] DFA284_eof = DFA.unpackEncodedString(DFA284_eofS);
	static final char[] DFA284_min = DFA.unpackEncodedStringToUnsignedChars(DFA284_minS);
	static final char[] DFA284_max = DFA.unpackEncodedStringToUnsignedChars(DFA284_maxS);
	static final short[] DFA284_accept = DFA.unpackEncodedString(DFA284_acceptS);
	static final short[] DFA284_special = DFA.unpackEncodedString(DFA284_specialS);
	static final short[][] DFA284_transition;

	static {
		int numStates = DFA284_transitionS.length;
		DFA284_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA284_transition[i] = DFA.unpackEncodedString(DFA284_transitionS[i]);
		}
	}

	protected class DFA284 extends DFA {

		public DFA284(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 284;
			this.eot = DFA284_eot;
			this.eof = DFA284_eof;
			this.min = DFA284_min;
			this.max = DFA284_max;
			this.accept = DFA284_accept;
			this.special = DFA284_special;
			this.transition = DFA284_transition;
		}
		@Override
		public String getDescription() {
			return "1096:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA290_eotS =
		"\4\uffff";
	static final String DFA290_eofS =
		"\2\3\2\uffff";
	static final String DFA290_minS =
		"\2\6\2\uffff";
	static final String DFA290_maxS =
		"\2\u0091\2\uffff";
	static final String DFA290_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA290_specialS =
		"\4\uffff}>";
	static final String[] DFA290_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\6\uffff\4\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\6\uffff\4\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA290_eot = DFA.unpackEncodedString(DFA290_eotS);
	static final short[] DFA290_eof = DFA.unpackEncodedString(DFA290_eofS);
	static final char[] DFA290_min = DFA.unpackEncodedStringToUnsignedChars(DFA290_minS);
	static final char[] DFA290_max = DFA.unpackEncodedStringToUnsignedChars(DFA290_maxS);
	static final short[] DFA290_accept = DFA.unpackEncodedString(DFA290_acceptS);
	static final short[] DFA290_special = DFA.unpackEncodedString(DFA290_specialS);
	static final short[][] DFA290_transition;

	static {
		int numStates = DFA290_transitionS.length;
		DFA290_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA290_transition[i] = DFA.unpackEncodedString(DFA290_transitionS[i]);
		}
	}

	protected class DFA290 extends DFA {

		public DFA290(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 290;
			this.eot = DFA290_eot;
			this.eof = DFA290_eof;
			this.min = DFA290_min;
			this.max = DFA290_max;
			this.accept = DFA290_accept;
			this.special = DFA290_special;
			this.transition = DFA290_transition;
		}
		@Override
		public String getDescription() {
			return "1106:45: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA294_eotS =
		"\4\uffff";
	static final String DFA294_eofS =
		"\2\3\2\uffff";
	static final String DFA294_minS =
		"\2\6\2\uffff";
	static final String DFA294_maxS =
		"\2\u0091\2\uffff";
	static final String DFA294_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA294_specialS =
		"\4\uffff}>";
	static final String[] DFA294_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA294_eot = DFA.unpackEncodedString(DFA294_eotS);
	static final short[] DFA294_eof = DFA.unpackEncodedString(DFA294_eofS);
	static final char[] DFA294_min = DFA.unpackEncodedStringToUnsignedChars(DFA294_minS);
	static final char[] DFA294_max = DFA.unpackEncodedStringToUnsignedChars(DFA294_maxS);
	static final short[] DFA294_accept = DFA.unpackEncodedString(DFA294_acceptS);
	static final short[] DFA294_special = DFA.unpackEncodedString(DFA294_specialS);
	static final short[][] DFA294_transition;

	static {
		int numStates = DFA294_transitionS.length;
		DFA294_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA294_transition[i] = DFA.unpackEncodedString(DFA294_transitionS[i]);
		}
	}

	protected class DFA294 extends DFA {

		public DFA294(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 294;
			this.eot = DFA294_eot;
			this.eof = DFA294_eof;
			this.min = DFA294_min;
			this.max = DFA294_max;
			this.accept = DFA294_accept;
			this.special = DFA294_special;
			this.transition = DFA294_transition;
		}
		@Override
		public String getDescription() {
			return "1108:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA296_eotS =
		"\4\uffff";
	static final String DFA296_eofS =
		"\2\3\2\uffff";
	static final String DFA296_minS =
		"\2\6\2\uffff";
	static final String DFA296_maxS =
		"\2\u0091\2\uffff";
	static final String DFA296_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA296_specialS =
		"\4\uffff}>";
	static final String[] DFA296_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA296_eot = DFA.unpackEncodedString(DFA296_eotS);
	static final short[] DFA296_eof = DFA.unpackEncodedString(DFA296_eofS);
	static final char[] DFA296_min = DFA.unpackEncodedStringToUnsignedChars(DFA296_minS);
	static final char[] DFA296_max = DFA.unpackEncodedStringToUnsignedChars(DFA296_maxS);
	static final short[] DFA296_accept = DFA.unpackEncodedString(DFA296_acceptS);
	static final short[] DFA296_special = DFA.unpackEncodedString(DFA296_specialS);
	static final short[][] DFA296_transition;

	static {
		int numStates = DFA296_transitionS.length;
		DFA296_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA296_transition[i] = DFA.unpackEncodedString(DFA296_transitionS[i]);
		}
	}

	protected class DFA296 extends DFA {

		public DFA296(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 296;
			this.eot = DFA296_eot;
			this.eof = DFA296_eof;
			this.min = DFA296_min;
			this.max = DFA296_max;
			this.accept = DFA296_accept;
			this.special = DFA296_special;
			this.transition = DFA296_transition;
		}
		@Override
		public String getDescription() {
			return "1108:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA306_eotS =
		"\7\uffff";
	static final String DFA306_eofS =
		"\7\uffff";
	static final String DFA306_minS =
		"\3\5\1\uffff\1\5\1\uffff\1\5";
	static final String DFA306_maxS =
		"\1\u0090\2\u0091\1\uffff\1\u0091\1\uffff\1\u0091";
	static final String DFA306_acceptS =
		"\3\uffff\1\2\1\uffff\1\1\1\uffff";
	static final String DFA306_specialS =
		"\7\uffff}>";
	static final String[] DFA306_transitionS = {
			"\1\3\1\1\3\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\3\2\uffff\1\3"+
			"\3\uffff\1\3\1\uffff\1\1\1\3\1\uffff\1\3\3\uffff\2\3\2\uffff\2\3\1\1"+
			"\7\uffff\3\1\1\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\1\1\3\1\1\5\uffff"+
			"\1\1\4\uffff\2\3\3\uffff\1\1\2\3\1\uffff\1\3\4\uffff\2\3\3\1\2\uffff"+
			"\3\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\2"+
			"\2\1\3\uffff\1\3\1\uffff\2\3\5\1\2\uffff\1\3\3\uffff\1\1",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff"+
			"\1\3\1\4",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff"+
			"\1\3\1\6",
			"",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff"+
			"\1\3\1\4",
			"",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff"+
			"\1\3\1\6"
	};

	static final short[] DFA306_eot = DFA.unpackEncodedString(DFA306_eotS);
	static final short[] DFA306_eof = DFA.unpackEncodedString(DFA306_eofS);
	static final char[] DFA306_min = DFA.unpackEncodedStringToUnsignedChars(DFA306_minS);
	static final char[] DFA306_max = DFA.unpackEncodedStringToUnsignedChars(DFA306_maxS);
	static final short[] DFA306_accept = DFA.unpackEncodedString(DFA306_acceptS);
	static final short[] DFA306_special = DFA.unpackEncodedString(DFA306_specialS);
	static final short[][] DFA306_transition;

	static {
		int numStates = DFA306_transitionS.length;
		DFA306_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA306_transition[i] = DFA.unpackEncodedString(DFA306_transitionS[i]);
		}
	}

	protected class DFA306 extends DFA {

		public DFA306(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 306;
			this.eot = DFA306_eot;
			this.eof = DFA306_eof;
			this.min = DFA306_min;
			this.max = DFA306_max;
			this.accept = DFA306_accept;
			this.special = DFA306_special;
			this.transition = DFA306_transition;
		}
		@Override
		public String getDescription() {
			return "1133:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA309_eotS =
		"\5\uffff";
	static final String DFA309_eofS =
		"\5\uffff";
	static final String DFA309_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA309_maxS =
		"\1\176\1\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA309_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA309_specialS =
		"\5\uffff}>";
	static final String[] DFA309_transitionS = {
			"\1\1\3\uffff\1\2\53\uffff\1\2\43\uffff\1\2\25\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\14\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\14\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff\1\4\1\3",
			""
	};

	static final short[] DFA309_eot = DFA.unpackEncodedString(DFA309_eotS);
	static final short[] DFA309_eof = DFA.unpackEncodedString(DFA309_eofS);
	static final char[] DFA309_min = DFA.unpackEncodedStringToUnsignedChars(DFA309_minS);
	static final char[] DFA309_max = DFA.unpackEncodedStringToUnsignedChars(DFA309_maxS);
	static final short[] DFA309_accept = DFA.unpackEncodedString(DFA309_acceptS);
	static final short[] DFA309_special = DFA.unpackEncodedString(DFA309_specialS);
	static final short[][] DFA309_transition;

	static {
		int numStates = DFA309_transitionS.length;
		DFA309_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA309_transition[i] = DFA.unpackEncodedString(DFA309_transitionS[i]);
		}
	}

	protected class DFA309 extends DFA {

		public DFA309(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 309;
			this.eot = DFA309_eot;
			this.eof = DFA309_eof;
			this.min = DFA309_min;
			this.max = DFA309_max;
			this.accept = DFA309_accept;
			this.special = DFA309_special;
			this.transition = DFA309_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1148:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA324_eotS =
		"\4\uffff";
	static final String DFA324_eofS =
		"\4\uffff";
	static final String DFA324_minS =
		"\2\24\2\uffff";
	static final String DFA324_maxS =
		"\2\u0091\2\uffff";
	static final String DFA324_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA324_specialS =
		"\4\uffff}>";
	static final String[] DFA324_transitionS = {
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"",
			""
	};

	static final short[] DFA324_eot = DFA.unpackEncodedString(DFA324_eotS);
	static final short[] DFA324_eof = DFA.unpackEncodedString(DFA324_eofS);
	static final char[] DFA324_min = DFA.unpackEncodedStringToUnsignedChars(DFA324_minS);
	static final char[] DFA324_max = DFA.unpackEncodedStringToUnsignedChars(DFA324_maxS);
	static final short[] DFA324_accept = DFA.unpackEncodedString(DFA324_acceptS);
	static final short[] DFA324_special = DFA.unpackEncodedString(DFA324_specialS);
	static final short[][] DFA324_transition;

	static {
		int numStates = DFA324_transitionS.length;
		DFA324_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA324_transition[i] = DFA.unpackEncodedString(DFA324_transitionS[i]);
		}
	}

	protected class DFA324 extends DFA {

		public DFA324(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 324;
			this.eot = DFA324_eot;
			this.eof = DFA324_eof;
			this.min = DFA324_min;
			this.max = DFA324_max;
			this.accept = DFA324_accept;
			this.special = DFA324_special;
			this.transition = DFA324_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1163:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA345_eotS =
		"\4\uffff";
	static final String DFA345_eofS =
		"\4\uffff";
	static final String DFA345_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA345_maxS =
		"\2\u0091\2\uffff";
	static final String DFA345_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA345_specialS =
		"\4\uffff}>";
	static final String[] DFA345_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\2\34\uffff\1\2\22\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\3\2\1\3\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA345_eot = DFA.unpackEncodedString(DFA345_eotS);
	static final short[] DFA345_eof = DFA.unpackEncodedString(DFA345_eofS);
	static final char[] DFA345_min = DFA.unpackEncodedStringToUnsignedChars(DFA345_minS);
	static final char[] DFA345_max = DFA.unpackEncodedStringToUnsignedChars(DFA345_maxS);
	static final short[] DFA345_accept = DFA.unpackEncodedString(DFA345_acceptS);
	static final short[] DFA345_special = DFA.unpackEncodedString(DFA345_specialS);
	static final short[][] DFA345_transition;

	static {
		int numStates = DFA345_transitionS.length;
		DFA345_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA345_transition[i] = DFA.unpackEncodedString(DFA345_transitionS[i]);
		}
	}

	protected class DFA345 extends DFA {

		public DFA345(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 345;
			this.eot = DFA345_eot;
			this.eof = DFA345_eof;
			this.min = DFA345_min;
			this.max = DFA345_max;
			this.accept = DFA345_accept;
			this.special = DFA345_special;
			this.transition = DFA345_transition;
		}
		@Override
		public String getDescription() {
			return "1235:43: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA350_eotS =
		"\10\uffff";
	static final String DFA350_eofS =
		"\2\4\6\uffff";
	static final String DFA350_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA350_maxS =
		"\3\u0091\2\uffff\3\u0091";
	static final String DFA350_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA350_specialS =
		"\10\uffff}>";
	static final String[] DFA350_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\4\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\4\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\77\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\77\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\77\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\77\uffff\1\7"
	};

	static final short[] DFA350_eot = DFA.unpackEncodedString(DFA350_eotS);
	static final short[] DFA350_eof = DFA.unpackEncodedString(DFA350_eofS);
	static final char[] DFA350_min = DFA.unpackEncodedStringToUnsignedChars(DFA350_minS);
	static final char[] DFA350_max = DFA.unpackEncodedStringToUnsignedChars(DFA350_maxS);
	static final short[] DFA350_accept = DFA.unpackEncodedString(DFA350_acceptS);
	static final short[] DFA350_special = DFA.unpackEncodedString(DFA350_specialS);
	static final short[][] DFA350_transition;

	static {
		int numStates = DFA350_transitionS.length;
		DFA350_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA350_transition[i] = DFA.unpackEncodedString(DFA350_transitionS[i]);
		}
	}

	protected class DFA350 extends DFA {

		public DFA350(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 350;
			this.eot = DFA350_eot;
			this.eof = DFA350_eof;
			this.min = DFA350_min;
			this.max = DFA350_max;
			this.accept = DFA350_accept;
			this.special = DFA350_special;
			this.transition = DFA350_transition;
		}
		@Override
		public String getDescription() {
			return "1255:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA358_eotS =
		"\5\uffff";
	static final String DFA358_eofS =
		"\5\uffff";
	static final String DFA358_minS =
		"\1\157\1\25\1\uffff\1\25\1\uffff";
	static final String DFA358_maxS =
		"\1\160\1\u0091\1\uffff\1\u0091\1\uffff";
	static final String DFA358_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA358_specialS =
		"\5\uffff}>";
	static final String[] DFA358_transitionS = {
			"\1\1\1\2",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			"",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\77\uffff\1\3",
			""
	};

	static final short[] DFA358_eot = DFA.unpackEncodedString(DFA358_eotS);
	static final short[] DFA358_eof = DFA.unpackEncodedString(DFA358_eofS);
	static final char[] DFA358_min = DFA.unpackEncodedStringToUnsignedChars(DFA358_minS);
	static final char[] DFA358_max = DFA.unpackEncodedStringToUnsignedChars(DFA358_maxS);
	static final short[] DFA358_accept = DFA.unpackEncodedString(DFA358_acceptS);
	static final short[] DFA358_special = DFA.unpackEncodedString(DFA358_specialS);
	static final short[][] DFA358_transition;

	static {
		int numStates = DFA358_transitionS.length;
		DFA358_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA358_transition[i] = DFA.unpackEncodedString(DFA358_transitionS[i]);
		}
	}

	protected class DFA358 extends DFA {

		public DFA358(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 358;
			this.eot = DFA358_eot;
			this.eof = DFA358_eof;
			this.min = DFA358_min;
			this.max = DFA358_max;
			this.accept = DFA358_accept;
			this.special = DFA358_special;
			this.transition = DFA358_transition;
		}
		@Override
		public String getDescription() {
			return "1258:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA357_eotS =
		"\10\uffff";
	static final String DFA357_eofS =
		"\2\4\6\uffff";
	static final String DFA357_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA357_maxS =
		"\3\u0091\2\uffff\3\u0091";
	static final String DFA357_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA357_specialS =
		"\10\uffff}>";
	static final String[] DFA357_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\4\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\4\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\77\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\77\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\77\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\77\uffff\1\7"
	};

	static final short[] DFA357_eot = DFA.unpackEncodedString(DFA357_eotS);
	static final short[] DFA357_eof = DFA.unpackEncodedString(DFA357_eofS);
	static final char[] DFA357_min = DFA.unpackEncodedStringToUnsignedChars(DFA357_minS);
	static final char[] DFA357_max = DFA.unpackEncodedStringToUnsignedChars(DFA357_maxS);
	static final short[] DFA357_accept = DFA.unpackEncodedString(DFA357_acceptS);
	static final short[] DFA357_special = DFA.unpackEncodedString(DFA357_specialS);
	static final short[][] DFA357_transition;

	static {
		int numStates = DFA357_transitionS.length;
		DFA357_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA357_transition[i] = DFA.unpackEncodedString(DFA357_transitionS[i]);
		}
	}

	protected class DFA357 extends DFA {

		public DFA357(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 357;
			this.eot = DFA357_eot;
			this.eof = DFA357_eof;
			this.min = DFA357_min;
			this.max = DFA357_max;
			this.accept = DFA357_accept;
			this.special = DFA357_special;
			this.transition = DFA357_transition;
		}
		@Override
		public String getDescription() {
			return "1262:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA363_eotS =
		"\4\uffff";
	static final String DFA363_eofS =
		"\4\uffff";
	static final String DFA363_minS =
		"\2\24\2\uffff";
	static final String DFA363_maxS =
		"\2\u0091\2\uffff";
	static final String DFA363_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA363_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA363_transitionS = {
			"\1\2\1\1\73\uffff\1\1\77\uffff\1\1",
			"\1\2\1\1\34\uffff\1\3\36\uffff\1\1\77\uffff\1\1",
			"",
			""
	};

	static final short[] DFA363_eot = DFA.unpackEncodedString(DFA363_eotS);
	static final short[] DFA363_eof = DFA.unpackEncodedString(DFA363_eofS);
	static final char[] DFA363_min = DFA.unpackEncodedStringToUnsignedChars(DFA363_minS);
	static final char[] DFA363_max = DFA.unpackEncodedStringToUnsignedChars(DFA363_maxS);
	static final short[] DFA363_accept = DFA.unpackEncodedString(DFA363_acceptS);
	static final short[] DFA363_special = DFA.unpackEncodedString(DFA363_specialS);
	static final short[][] DFA363_transition;

	static {
		int numStates = DFA363_transitionS.length;
		DFA363_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA363_transition[i] = DFA.unpackEncodedString(DFA363_transitionS[i]);
		}
	}

	protected class DFA363 extends DFA {

		public DFA363(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 363;
			this.eot = DFA363_eot;
			this.eof = DFA363_eof;
			this.min = DFA363_min;
			this.max = DFA363_max;
			this.accept = DFA363_accept;
			this.special = DFA363_special;
			this.transition = DFA363_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1282:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA363_0 = input.LA(1);
						 
						int index363_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA363_0==COMMENT||LA363_0==NL||LA363_0==WS) ) {s = 1;}
						else if ( (LA363_0==COMMA) && (synpred40_Css3())) {s = 2;}
						 
						input.seek(index363_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA363_1 = input.LA(1);
						 
						int index363_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA363_1==IDENT) ) {s = 3;}
						else if ( (LA363_1==COMMENT||LA363_1==NL||LA363_1==WS) ) {s = 1;}
						else if ( (LA363_1==COMMA) && (synpred40_Css3())) {s = 2;}
						 
						input.seek(index363_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 363, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA382_eotS =
		"\4\uffff";
	static final String DFA382_eofS =
		"\4\uffff";
	static final String DFA382_minS =
		"\2\25\2\uffff";
	static final String DFA382_maxS =
		"\2\u0091\2\uffff";
	static final String DFA382_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA382_specialS =
		"\4\uffff}>";
	static final String[] DFA382_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\54\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\54\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA382_eot = DFA.unpackEncodedString(DFA382_eotS);
	static final short[] DFA382_eof = DFA.unpackEncodedString(DFA382_eofS);
	static final char[] DFA382_min = DFA.unpackEncodedStringToUnsignedChars(DFA382_minS);
	static final char[] DFA382_max = DFA.unpackEncodedStringToUnsignedChars(DFA382_maxS);
	static final short[] DFA382_accept = DFA.unpackEncodedString(DFA382_acceptS);
	static final short[] DFA382_special = DFA.unpackEncodedString(DFA382_specialS);
	static final short[][] DFA382_transition;

	static {
		int numStates = DFA382_transitionS.length;
		DFA382_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA382_transition[i] = DFA.unpackEncodedString(DFA382_transitionS[i]);
		}
	}

	protected class DFA382 extends DFA {

		public DFA382(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 382;
			this.eot = DFA382_eot;
			this.eof = DFA382_eof;
			this.min = DFA382_min;
			this.max = DFA382_max;
			this.accept = DFA382_accept;
			this.special = DFA382_special;
			this.transition = DFA382_transition;
		}
		@Override
		public String getDescription() {
			return "403:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA402_eotS =
		"\4\uffff";
	static final String DFA402_eofS =
		"\4\uffff";
	static final String DFA402_minS =
		"\2\25\2\uffff";
	static final String DFA402_maxS =
		"\2\u0091\2\uffff";
	static final String DFA402_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA402_specialS =
		"\4\uffff}>";
	static final String[] DFA402_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\54\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\54\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA402_eot = DFA.unpackEncodedString(DFA402_eotS);
	static final short[] DFA402_eof = DFA.unpackEncodedString(DFA402_eofS);
	static final char[] DFA402_min = DFA.unpackEncodedStringToUnsignedChars(DFA402_minS);
	static final char[] DFA402_max = DFA.unpackEncodedStringToUnsignedChars(DFA402_maxS);
	static final short[] DFA402_accept = DFA.unpackEncodedString(DFA402_acceptS);
	static final short[] DFA402_special = DFA.unpackEncodedString(DFA402_specialS);
	static final short[][] DFA402_transition;

	static {
		int numStates = DFA402_transitionS.length;
		DFA402_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA402_transition[i] = DFA.unpackEncodedString(DFA402_transitionS[i]);
		}
	}

	protected class DFA402 extends DFA {

		public DFA402(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 402;
			this.eot = DFA402_eot;
			this.eof = DFA402_eof;
			this.min = DFA402_min;
			this.max = DFA402_max;
			this.accept = DFA402_accept;
			this.special = DFA402_special;
			this.transition = DFA402_transition;
		}
		@Override
		public String getDescription() {
			return "675:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA404_eotS =
		"\4\uffff";
	static final String DFA404_eofS =
		"\4\uffff";
	static final String DFA404_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA404_maxS =
		"\2\u0091\2\uffff";
	static final String DFA404_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA404_specialS =
		"\4\uffff}>";
	static final String[] DFA404_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\77\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\23\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA404_eot = DFA.unpackEncodedString(DFA404_eotS);
	static final short[] DFA404_eof = DFA.unpackEncodedString(DFA404_eofS);
	static final char[] DFA404_min = DFA.unpackEncodedStringToUnsignedChars(DFA404_minS);
	static final char[] DFA404_max = DFA.unpackEncodedStringToUnsignedChars(DFA404_maxS);
	static final short[] DFA404_accept = DFA.unpackEncodedString(DFA404_acceptS);
	static final short[] DFA404_special = DFA.unpackEncodedString(DFA404_specialS);
	static final short[][] DFA404_transition;

	static {
		int numStates = DFA404_transitionS.length;
		DFA404_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA404_transition[i] = DFA.unpackEncodedString(DFA404_transitionS[i]);
		}
	}

	protected class DFA404 extends DFA {

		public DFA404(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 404;
			this.eot = DFA404_eot;
			this.eof = DFA404_eof;
			this.min = DFA404_min;
			this.max = DFA404_max;
			this.accept = DFA404_accept;
			this.special = DFA404_special;
			this.transition = DFA404_transition;
		}
		@Override
		public String getDescription() {
			return "677:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA412_eotS =
		"\5\uffff";
	static final String DFA412_eofS =
		"\5\uffff";
	static final String DFA412_minS =
		"\2\5\3\uffff";
	static final String DFA412_maxS =
		"\2\u0091\3\uffff";
	static final String DFA412_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA412_specialS =
		"\5\uffff}>";
	static final String[] DFA412_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA412_eot = DFA.unpackEncodedString(DFA412_eotS);
	static final short[] DFA412_eof = DFA.unpackEncodedString(DFA412_eofS);
	static final char[] DFA412_min = DFA.unpackEncodedStringToUnsignedChars(DFA412_minS);
	static final char[] DFA412_max = DFA.unpackEncodedStringToUnsignedChars(DFA412_maxS);
	static final short[] DFA412_accept = DFA.unpackEncodedString(DFA412_acceptS);
	static final short[] DFA412_special = DFA.unpackEncodedString(DFA412_specialS);
	static final short[][] DFA412_transition;

	static {
		int numStates = DFA412_transitionS.length;
		DFA412_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA412_transition[i] = DFA.unpackEncodedString(DFA412_transitionS[i]);
		}
	}

	protected class DFA412 extends DFA {

		public DFA412(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 412;
			this.eot = DFA412_eot;
			this.eof = DFA412_eof;
			this.min = DFA412_min;
			this.max = DFA412_max;
			this.accept = DFA412_accept;
			this.special = DFA412_special;
			this.transition = DFA412_transition;
		}
		@Override
		public String getDescription() {
			return "900:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA417_eotS =
		"\5\uffff";
	static final String DFA417_eofS =
		"\5\uffff";
	static final String DFA417_minS =
		"\2\5\3\uffff";
	static final String DFA417_maxS =
		"\2\u0091\3\uffff";
	static final String DFA417_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA417_specialS =
		"\5\uffff}>";
	static final String[] DFA417_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA417_eot = DFA.unpackEncodedString(DFA417_eotS);
	static final short[] DFA417_eof = DFA.unpackEncodedString(DFA417_eofS);
	static final char[] DFA417_min = DFA.unpackEncodedStringToUnsignedChars(DFA417_minS);
	static final char[] DFA417_max = DFA.unpackEncodedStringToUnsignedChars(DFA417_maxS);
	static final short[] DFA417_accept = DFA.unpackEncodedString(DFA417_acceptS);
	static final short[] DFA417_special = DFA.unpackEncodedString(DFA417_specialS);
	static final short[][] DFA417_transition;

	static {
		int numStates = DFA417_transitionS.length;
		DFA417_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA417_transition[i] = DFA.unpackEncodedString(DFA417_transitionS[i]);
		}
	}

	protected class DFA417 extends DFA {

		public DFA417(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 417;
			this.eot = DFA417_eot;
			this.eof = DFA417_eof;
			this.min = DFA417_min;
			this.max = DFA417_max;
			this.accept = DFA417_accept;
			this.special = DFA417_special;
			this.transition = DFA417_transition;
		}
		@Override
		public String getDescription() {
			return "981:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet120 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_charSet_in_styleSheet130 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_styleSheet132 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_imports_in_styleSheet146 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet157 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_body_in_styleSheet168 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces193 = new BitSet(new long[]{0x0000000000200002L,0x0000000000030000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_namespaces195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace211 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_namespace213 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_namespace219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace224 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_namespace226 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_namespace229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020002L});
	public static final BitSet FOLLOW_ws_in_charSet278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_charSetValue_in_charSet281 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_charSet283 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_charSet286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports314 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_imports316 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_imports319 = new BitSet(new long[]{0x0010000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_imports321 = new BitSet(new long[]{0x0010000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_importItem349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem352 = new BitSet(new long[]{0x7014848000A47C42L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_importItem362 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem398 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_importItem400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem403 = new BitSet(new long[]{0x7014848000B47C42L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_importItem406 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem409 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_importItem411 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem414 = new BitSet(new long[]{0x7014848000B47C42L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_importItem426 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem453 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_importItem455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000001002L});
	public static final BitSet FOLLOW_LPAREN_in_importItem459 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem461 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem463 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000021002L});
	public static final BitSet FOLLOW_ws_in_importItem465 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem470 = new BitSet(new long[]{0x7014848000A47C42L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_importItem480 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media501 = new BitSet(new long[]{0x7014848000A47C40L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_media503 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_media521 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_media529 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media536 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_media538 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToFollow_in_media541 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_mediaBody_in_media551 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_media558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody592 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_mediaBody602 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody605 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_mediaBody609 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody636 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_mediaBody638 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody657 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaBody660 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody665 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem764 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem767 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem787 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem790 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem793 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem832 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem852 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem880 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem888 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem896 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList931 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList943 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList946 = new BitSet(new long[]{0x7014848000A47C40L,0x3DDADCE004230540L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList948 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList951 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery970 = new BitSet(new long[]{0x0004840000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery972 = new BitSet(new long[]{0x0004840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery979 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery983 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery986 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery988 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery991 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1002 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1006 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1009 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1014 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1027 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1039 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1043 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1059 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1065 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1083 = new BitSet(new long[]{0x7014848000A47C40L,0x3DDADCE004030500L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1085 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1088 = new BitSet(new long[]{0x0000000000280000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1090 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1093 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1096 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1117 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1120 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1122 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1161 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1181 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1193 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1231 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_body1241 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_body1244 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_body1248 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_SEMI_in_body1275 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_body1277 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1349 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem1410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem1427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem1449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem1461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem1484 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem1498 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem1512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem1526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule1552 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule1560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule1568 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule1576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule1584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule1597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule1601 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule1605 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule1633 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000020002L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1635 = new BitSet(new long[]{0x0404000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule1640 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1642 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule1656 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule1667 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule1677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1688 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000021000L});
	public static final BitSet FOLLOW_ws_in_moz_document1690 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000001000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1695 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_moz_document1697 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document1703 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000021000L});
	public static final BitSet FOLLOW_ws_in_moz_document1705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000001000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1708 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_moz_document1710 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document1717 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_moz_document1719 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_body_in_moz_document1724 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document1729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1766 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020002L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1768 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes1771 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1773 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes1777 = new BitSet(new long[]{0x0004000000200000L,0x0000000208020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1779 = new BitSet(new long[]{0x0004000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1786 = new BitSet(new long[]{0x0004000000200000L,0x0000000208020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1788 = new BitSet(new long[]{0x0004000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes1795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1807 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1809 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock1813 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1816 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock1819 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock1823 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock1827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_webkitKeyframeSelectors1839 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1851 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors1854 = new BitSet(new long[]{0x0004000000200000L,0x0000000008020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1856 = new BitSet(new long[]{0x0004000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_webkitKeyframeSelectors1859 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page1884 = new BitSet(new long[]{0x0404000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_page1886 = new BitSet(new long[]{0x0404000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page1891 = new BitSet(new long[]{0x0400000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_page1893 = new BitSet(new long[]{0x0400000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page1900 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_page1902 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page1915 = new BitSet(new long[]{0x7014848000A47C40L,0x7DDADCE204030700L,0x00000000000303E1L});
	public static final BitSet FOLLOW_ws_in_page1917 = new BitSet(new long[]{0x7014848000847C40L,0x7DDADCE204010700L,0x00000000000103E1L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page1960 = new BitSet(new long[]{0x0000000000200000L,0x4000000200020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_margin_in_page1962 = new BitSet(new long[]{0x0000000000200000L,0x4000000200020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_page1965 = new BitSet(new long[]{0x0000000000000000L,0x4000000200000000L});
	public static final BitSet FOLLOW_SEMI_in_page1971 = new BitSet(new long[]{0x7014848000A47C40L,0x7DDADCE204030700L,0x00000000000303E1L});
	public static final BitSet FOLLOW_ws_in_page1973 = new BitSet(new long[]{0x7014848000847C40L,0x7DDADCE204010700L,0x00000000000103E1L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page1978 = new BitSet(new long[]{0x0000000000200000L,0x4000000200020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_margin_in_page1980 = new BitSet(new long[]{0x0000000000200000L,0x4000000200020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_page1983 = new BitSet(new long[]{0x0000000000000000L,0x4000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_page1998 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2015 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2017 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2020 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2022 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2033 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_counterStyle2035 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2038 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2042 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2070 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_fontFace2072 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace2083 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_fontFace2085 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace2088 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_fontFace2092 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace2103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin2117 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_margin2119 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin2122 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_margin2124 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin2127 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_margin2129 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin2132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage2341 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage2343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property2427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property2435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property2443 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property2453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map2480 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map2482 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_map2484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map2487 = new BitSet(new long[]{0x7014848000B47C40L,0x3DDADDE004030700L,0x00000000000303E2L});
	public static final BitSet FOLLOW_ws_in_sass_map2489 = new BitSet(new long[]{0x7014848000947C40L,0x3DDADDE004010700L,0x00000000000103E2L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map2492 = new BitSet(new long[]{0x7014848000947C40L,0x3DDADDE004010700L,0x00000000000103E2L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map2511 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map2518 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_map2522 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map2525 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_map2531 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map2534 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name2558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs2592 = new BitSet(new long[]{0x7014848000B47C42L,0x3DDADCE004030700L,0x00000000000303E2L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2602 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2605 = new BitSet(new long[]{0x7014848000B47C42L,0x3DDADCE004030700L,0x00000000000303E2L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2609 = new BitSet(new long[]{0x7014848000947C42L,0x3DDADCE004010700L,0x00000000000103E2L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2636 = new BitSet(new long[]{0x7014848000B47C42L,0x3DDADCE004030700L,0x00000000000303E2L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2638 = new BitSet(new long[]{0x7014848000947C42L,0x3DDADCE004010700L,0x00000000000103E2L});
	public static final BitSet FOLLOW_property_in_sass_map_pair2674 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair2676 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2679 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair2682 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2684 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair2687 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2690 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair2693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2718 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_rule2721 = new BitSet(new long[]{0x0804CC00A0080080L,0x0004000060000202L,0x0000000000000009L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2723 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2730 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_rule2733 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule2740 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_rule2742 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToFollow_in_rule2745 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_rule2755 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule2762 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations2796 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_declarations2798 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declaration_in_declarations2804 = new BitSet(new long[]{0x0000000000200002L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declarations2809 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations2813 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE064030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_declarations2815 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_ws_in_declarations2821 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x3DDEDCE064010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declaration_in_declarations2824 = new BitSet(new long[]{0x0000000000200002L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declarations2830 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations2834 = new BitSet(new long[]{0x0000000000200002L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declarations2836 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
	public static final BitSet FOLLOW_ws_in_declarations2842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations2854 = new BitSet(new long[]{0x0000000000200002L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declarations2856 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration2885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration2898 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration2910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration2922 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration2961 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration3006 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3039 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declaration3042 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3062 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_declaration3065 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration3102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration3112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration3122 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration3132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration3142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration3152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration3162 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration3172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration3180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3214 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3217 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3220 = new BitSet(new long[]{0x0804CC00A0280080L,0x0004000060020202L,0x0000000000020009L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3222 = new BitSet(new long[]{0x0804CC00A0080080L,0x0004000060000202L,0x0000000000000009L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3225 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3232 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector3253 = new BitSet(new long[]{0x0804C400A0280080L,0x0004000020020202L,0x0000000000020001L});
	public static final BitSet FOLLOW_ws_in_selector3255 = new BitSet(new long[]{0x0804C400A0080080L,0x0004000020000202L,0x0000000000000001L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3260 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000020008L});
	public static final BitSet FOLLOW_ws_in_selector3266 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_combinator_in_selector3269 = new BitSet(new long[]{0x0804C400A0280080L,0x0004000020020202L,0x0000000000020001L});
	public static final BitSet FOLLOW_ws_in_selector3271 = new BitSet(new long[]{0x0804C400A0080080L,0x0004000020000202L,0x0000000000000001L});
	public static final BitSet FOLLOW_ws_in_selector3275 = new BitSet(new long[]{0x0804C400A0080080L,0x0004000020000202L,0x0000000000000001L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3278 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000020008L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3332 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3337 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3350 = new BitSet(new long[]{0x0800C000A0080080L,0x0004000000000000L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3353 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3358 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3360 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence3373 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3385 = new BitSet(new long[]{0x0800C000A0080080L,0x0004000000000000L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3388 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3395 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3397 = new BitSet(new long[]{0x0800C000A0280082L,0x0004000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector3488 = new BitSet(new long[]{0x0004040000000000L,0x0000000000000002L,0x0000000000000001L});
	public static final BitSet FOLLOW_elementName_in_typeSelector3492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix3507 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix3511 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix3515 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent3547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_elementSubsequent3561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent3571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent3580 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent3592 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent3604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId3628 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId3633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId3655 = new BitSet(new long[]{0x0000000000000080L,0x0000000000008000L});
	public static final BitSet FOLLOW_NAME_in_cssId3671 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_cssId3691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass3742 = new BitSet(new long[]{0x0004840000000080L,0x0000000000200200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass3770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass3786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass3802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass3818 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_cssClass3836 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_elementName3874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_elementName3878 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementName3883 = new BitSet(new long[]{0x0004000000000002L,0x0000000000400200L});
	public static final BitSet FOLLOW_STAR_in_elementName3901 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute3918 = new BitSet(new long[]{0x0004000000200000L,0x0000000020020000L,0x0000000000020001L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute3925 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_slAttribute3928 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute3939 = new BitSet(new long[]{0x0020000410600200L,0x0000000401020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_slAttribute3941 = new BitSet(new long[]{0x0020000410400200L,0x0000000401000000L});
	public static final BitSet FOLLOW_set_in_slAttribute3975 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020002L});
	public static final BitSet FOLLOW_ws_in_slAttribute4155 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute4174 = new BitSet(new long[]{0x0000000000200000L,0x0000000400020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4192 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute4217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName4233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo4305 = new BitSet(new long[]{0x0004040000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_set_in_pseudo4368 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_pseudo4425 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4428 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADDF85C430704L,0x00000000000313FBL});
	public static final BitSet FOLLOW_ws_in_pseudo4430 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADDF85C410704L,0x00000000000113FBL});
	public static final BitSet FOLLOW_expression_in_pseudo4436 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_pseudo4438 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo4444 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo4528 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_pseudo4530 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4533 = new BitSet(new long[]{0x0804C400A0280080L,0x0004010020020202L,0x0000000000020001L});
	public static final BitSet FOLLOW_ws_in_pseudo4535 = new BitSet(new long[]{0x0804C400A0080080L,0x0004010020000202L,0x0000000000000001L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_pseudo4538 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4579 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004010700L,0x00000000000103E0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4582 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4584 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4587 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4589 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration4592 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4595 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration4598 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4610 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004010700L,0x00000000000103E0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4613 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4615 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4618 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4620 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration4623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue4657 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue4665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue4687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate4756 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI4857 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio4902 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression4919 = new BitSet(new long[]{0xF014C5A240B47C62L,0xBDDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_expression4951 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_ws_in_expression4956 = new BitSet(new long[]{0x0000000000100000L,0x8000000000000000L});
	public static final BitSet FOLLOW_operator_in_expression4959 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_expression4961 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_term_in_expression4970 = new BitSet(new long[]{0xF014C5A240B47C62L,0xBDDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_unaryOperator_in_term4995 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF81C430504L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_term4997 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF81C410504L,0x00000000000113FAL});
	public static final BitSet FOLLOW_function_in_term5026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term5039 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term5051 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term5063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term5075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term5087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term5099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term5111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term5123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term5135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term5147 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term5159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term5171 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term5188 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term5200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L,0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_term5202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term5223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term5238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term5250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term5262 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term5276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term5290 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term5304 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5331 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function5347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_function5349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_function5354 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADDF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_function5356 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADDF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_fnAttributes_in_function5383 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function5414 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName5466 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName5468 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5472 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName5475 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5477 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5501 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5504 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes5507 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_fnAttributes5509 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5512 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute5553 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5555 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute5558 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C430744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_fnAttribute5564 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute5567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute5584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute5596 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5619 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName5622 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5624 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName5644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue5667 = new BitSet(new long[]{0xF014C5A240A47C62L,0xBDDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5699 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5704 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue5707 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5709 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_term_in_fnAttributeValue5718 = new BitSet(new long[]{0xF014C5A240A47C62L,0xBDDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue5739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor5753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration5813 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5815 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration5818 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5820 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration5823 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration5845 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5847 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration5850 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5852 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration5855 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5859 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration5862 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5868 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration5871 = new BitSet(new long[]{0x0000000000200002L,0x0020200000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_set_in_cp_variable5911 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable6095 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6119 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6138 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list6141 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6143 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6146 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6179 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x3DDADCF85C63074DL,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression6203 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression6206 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression6208 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6212 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x3DDADCF85C63074DL,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression6231 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6234 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x3DDADCF85C63074DL,0x00000000000313FAL});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator6262 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator6266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator6271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator6275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator6279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator6283 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator6287 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom6317 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C430744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6319 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom6350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom6366 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADDF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6368 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADDF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom6372 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6374 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom6379 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6411 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions6418 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6420 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6454 = new BitSet(new long[]{0x0000000000200002L,0x8000000040020200L,0x0000000000020001L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6496 = new BitSet(new long[]{0x0000000000000000L,0x8000000040000200L,0x0000000000000001L});
	public static final BitSet FOLLOW_set_in_cp_math_expression6499 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C430744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6509 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6512 = new BitSet(new long[]{0x0000000000200002L,0x8000000040020200L,0x0000000000020001L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom6545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6553 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom6564 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6566 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom6572 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C430744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6574 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom6577 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6579 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom6582 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration6621 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration6623 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration6628 = new BitSet(new long[]{0x7010008001A47C40L,0x3DDADDE004030510L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6630 = new BitSet(new long[]{0x7010008001847C40L,0x3DDADDE004010510L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration6633 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration6636 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6639 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration6642 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration6666 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6668 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration6670 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6673 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration6676 = new BitSet(new long[]{0x7010008001A47C40L,0x3DDADDE004030510L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6678 = new BitSet(new long[]{0x7010008001847C40L,0x3DDADDE004010510L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration6681 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration6684 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6698 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration6701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call6736 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call6738 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6741 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call6744 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADDF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6746 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADDF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call6749 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call6752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call6776 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6778 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call6780 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call6786 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADDF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6788 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADDF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call6791 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call6794 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6799 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call6802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block6831 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block6833 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block6836 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block6846 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block6853 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name6874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6905 = new BitSet(new long[]{0x0000000001100002L,0x4000000000000000L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args6909 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args6917 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6920 = new BitSet(new long[]{0x0000000001100002L,0x4000000000000000L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args6926 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args6928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg6962 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6964 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg6967 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6969 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg6972 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg6984 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7039 = new BitSet(new long[]{0x0000000001100002L,0x4000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7043 = new BitSet(new long[]{0x7010008000A47C40L,0x3DDADCE004030500L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7053 = new BitSet(new long[]{0x7010008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7056 = new BitSet(new long[]{0x0000000001100002L,0x4000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7063 = new BitSet(new long[]{0x0000000001200002L,0x0000000000020010L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7071 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7079 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list7104 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg7135 = new BitSet(new long[]{0x0000000000280002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7137 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg7142 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_cp_arg7144 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg7147 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7149 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded7175 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7180 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7183 = new BitSet(new long[]{0x0004000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded7187 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000020000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded7191 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7197 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_NOT_in_less_condition7223 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_condition7225 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition7234 = new BitSet(new long[]{0x7014008000A47C40L,0x3DDADCE004030500L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_less_condition7236 = new BitSet(new long[]{0x7014008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition7263 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000020000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition7267 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_condition7270 = new BitSet(new long[]{0x0000180000000000L,0x0000010001000009L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition7274 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C430744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_less_condition7276 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition7279 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition7297 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition7319 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7321 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition7324 = new BitSet(new long[]{0x7010008000A47C40L,0x3DDADCE004030500L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7326 = new BitSet(new long[]{0x7010008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition7329 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7331 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition7334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name7356 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation7414 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation7416 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7418 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation7421 = new BitSet(new long[]{0x0000000000200000L,0x0000000200020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7423 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation7426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp7453 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp7456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_selector_interpolation_exp7460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUS_in_sass_selector_interpolation_exp7464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7491 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var7493 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var7495 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var7497 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties7537 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties7539 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties7542 = new BitSet(new long[]{0xF414C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties7544 = new BitSet(new long[]{0xF414C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties7548 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties7550 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties7555 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties7557 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties7560 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties7562 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties7565 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend7586 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_extend7588 = new BitSet(new long[]{0x0804C400A0080080L,0x0004000020000202L,0x0000000000000001L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend7590 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_extend7593 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend7595 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector7618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug7639 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_debug7649 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug7651 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control7672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control7676 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control7680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control7684 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if7705 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_sass_if7707 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if7710 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_if7712 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if7715 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_if7718 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if7721 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else7744 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_else7746 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else7749 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else7763 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_else7765 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else7770 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else7777 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_sass_else7780 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else7783 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_else7785 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else7788 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_else7791 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else7794 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression7817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for7838 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7840 = new BitSet(new long[]{0x7010008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for7842 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7844 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for7848 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7852 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for7854 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7856 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for7860 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7864 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C410744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for7866 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_for7868 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for7871 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each7892 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_each7894 = new BitSet(new long[]{0x7010008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each7896 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_each7898 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each7902 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_each7906 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each7908 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_each7910 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each7913 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables7934 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables7946 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables7949 = new BitSet(new long[]{0x7010008000A47C40L,0x3DDADCE004030500L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables7951 = new BitSet(new long[]{0x7010008000847C40L,0x3DDADCE004010500L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables7954 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while7979 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_while7981 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while7983 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_while7985 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while7988 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block8009 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_sass_control_block8011 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block8014 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block8017 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration8059 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8061 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration8063 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration8068 = new BitSet(new long[]{0x7010008001A47C40L,0x3DDADDE004030510L,0x00000000000303E0L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8070 = new BitSet(new long[]{0x7010008001847C40L,0x3DDADDE004010510L,0x00000000000103E0L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration8073 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration8076 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8078 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration8081 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0x7DDEDCE264030702L,0x00000000000303E9L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8083 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7DDEDCE264010702L,0x00000000000103E9L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration8086 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration8089 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name8110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return8131 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return8133 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return8135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content8156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types8175 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when8198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and8217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or8235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only8253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3356 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3420 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3474 = new BitSet(new long[]{0x7014848000847C40L,0x3DDADCE004210540L,0x00000000000103E0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css3596 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css3599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css3697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css3702 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css3704 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css3706 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css3709 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css3717 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xBFFFFFFFFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css3727 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css3745 = new BitSet(new long[]{0x0008000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3748 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css3751 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3755 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css3758 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css3781 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css3816 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xBFFFFFFDFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_SEMI_in_synpred8_Css3828 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred9_Css3936 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred9_Css3939 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31235 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred10_Css31238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred11_Css31313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred11_Css31318 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred11_Css31320 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred11_Css31325 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred11_Css31333 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xBFFFFFFDFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred11_Css31345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred12_Css31371 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31373 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred12_Css31376 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred13_Css31395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred14_Css31423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred15_Css31440 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31442 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred15_Css31445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css32596 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred16_Css32599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred17_Css32882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred18_Css32894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred19_Css32907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred20_Css32919 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred21_Css32936 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css32938 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred21_Css32941 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_set_in_synpred21_Css32953 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred22_Css32970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred22_Css32975 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred22_Css32977 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css32979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred22_Css32982 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred22_Css32990 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xBFFFFFFDFFFFFFFFL,0x00000000001FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred22_Css33002 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred23_Css33020 = new BitSet(new long[]{0x0008000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css33023 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred23_Css33026 = new BitSet(new long[]{0x0000000000200000L,0x4000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css33030 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred23_Css33033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred24_Css33056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred25_Css33081 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred25_Css33084 = new BitSet(new long[]{0x0804CC00A0080080L,0x0004000060000202L,0x0000000000000009L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred25_Css33086 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred25_Css33093 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred25_Css33096 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred25_Css33099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33342 = new BitSet(new long[]{0x0800C000A0080000L,0x0004000000000000L});
	public static final BitSet FOLLOW_esPred_in_synpred26_Css33345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred27_Css33370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33377 = new BitSet(new long[]{0x0800C000A0080000L,0x0004000000000000L});
	public static final BitSet FOLLOW_esPred_in_synpred28_Css33380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred29_Css33485 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css34926 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_ws_in_synpred30_Css34931 = new BitSet(new long[]{0x0000000000100000L,0x8000000000000000L});
	public static final BitSet FOLLOW_operator_in_synpred30_Css34934 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_synpred30_Css34936 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_term_in_synpred30_Css34945 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred31_Css35018 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css35020 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred31_Css35023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred32_Css35540 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35542 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_synpred32_Css35545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred33_Css35580 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35674 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35679 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred34_Css35682 = new BitSet(new long[]{0xF014C5A240A47C60L,0x3DDADCF85C430704L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35684 = new BitSet(new long[]{0xF014C5A240847C60L,0x3DDADCF85C410704L,0x00000000000113FAL});
	public static final BitSet FOLLOW_term_in_synpred34_Css35693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred35_Css36127 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred35_Css36130 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x3DDADCF85C630744L,0x00000000000313FAL});
	public static final BitSet FOLLOW_ws_in_synpred35_Css36132 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_in_synpred35_Css36135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36196 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred36_Css36199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css36225 = new BitSet(new long[]{0xF01CC5A240847C60L,0x3DDADCF85C610744L,0x00000000000113FAL});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred37_Css36228 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred38_Css36347 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred39_Css36480 = new BitSet(new long[]{0x0000000000000000L,0x8000000040000200L,0x0000000000000001L});
	public static final BitSet FOLLOW_set_in_synpred39_Css36483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css37939 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred40_Css37942 = new BitSet(new long[]{0x0000000000000002L});
}
