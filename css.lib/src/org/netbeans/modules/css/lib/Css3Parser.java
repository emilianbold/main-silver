// $ANTLR 3.5.2 /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2016-11-21 14:04:32

/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", "INCLUDES", "INVALID", 
		"J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", 
		"LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", 
		"LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", 
		"MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", 
		"NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", 
		"PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", 
		"RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", 
		"SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FUNCTION", 
		"SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", "SASS_OPTIONAL", 
		"SASS_RETURN", "SASS_VAR", "SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", 
		"STAR", "STRING", "T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", 
		"TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URI", 
		"URL", "V", "W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int I=49;
	public static final int IDENT=50;
	public static final int IMPORTANT_SYM=51;
	public static final int IMPORT_SYM=52;
	public static final int INCLUDES=53;
	public static final int INVALID=54;
	public static final int J=55;
	public static final int K=56;
	public static final int L=57;
	public static final int LBRACE=58;
	public static final int LBRACKET=59;
	public static final int LEFTBOTTOM_SYM=60;
	public static final int LEFTMIDDLE_SYM=61;
	public static final int LEFTTOP_SYM=62;
	public static final int LENGTH=63;
	public static final int LESS=64;
	public static final int LESS_AND=65;
	public static final int LESS_JS_STRING=66;
	public static final int LESS_OR_EQ=67;
	public static final int LESS_REST=68;
	public static final int LINE_COMMENT=69;
	public static final int LPAREN=70;
	public static final int M=71;
	public static final int MEDIA_SYM=72;
	public static final int MINUS=73;
	public static final int MOZ_DOCUMENT_SYM=74;
	public static final int MOZ_DOMAIN=75;
	public static final int MOZ_REGEXP=76;
	public static final int MOZ_URL_PREFIX=77;
	public static final int N=78;
	public static final int NAME=79;
	public static final int NAMESPACE_SYM=80;
	public static final int NL=81;
	public static final int NMCHAR=82;
	public static final int NMSTART=83;
	public static final int NONASCII=84;
	public static final int NOT=85;
	public static final int NUMBER=86;
	public static final int O=87;
	public static final int OPEQ=88;
	public static final int P=89;
	public static final int PAGE_SYM=90;
	public static final int PERCENTAGE=91;
	public static final int PERCENTAGE_SYMBOL=92;
	public static final int PIPE=93;
	public static final int PLUS=94;
	public static final int Q=95;
	public static final int R=96;
	public static final int RBRACE=97;
	public static final int RBRACKET=98;
	public static final int REM=99;
	public static final int RESOLUTION=100;
	public static final int RIGHTBOTTOM_SYM=101;
	public static final int RIGHTMIDDLE_SYM=102;
	public static final int RIGHTTOP_SYM=103;
	public static final int RPAREN=104;
	public static final int S=105;
	public static final int SASS_AT_ROOT=106;
	public static final int SASS_CONTENT=107;
	public static final int SASS_DEBUG=108;
	public static final int SASS_DEFAULT=109;
	public static final int SASS_EACH=110;
	public static final int SASS_ELSE=111;
	public static final int SASS_ELSEIF=112;
	public static final int SASS_ERROR=113;
	public static final int SASS_EXTEND=114;
	public static final int SASS_EXTEND_ONLY_SELECTOR=115;
	public static final int SASS_FOR=116;
	public static final int SASS_FUNCTION=117;
	public static final int SASS_GLOBAL=118;
	public static final int SASS_IF=119;
	public static final int SASS_INCLUDE=120;
	public static final int SASS_MIXIN=121;
	public static final int SASS_OPTIONAL=122;
	public static final int SASS_RETURN=123;
	public static final int SASS_VAR=124;
	public static final int SASS_WARN=125;
	public static final int SASS_WHILE=126;
	public static final int SEMI=127;
	public static final int SOLIDUS=128;
	public static final int STAR=129;
	public static final int STRING=130;
	public static final int T=131;
	public static final int TILDE=132;
	public static final int TIME=133;
	public static final int TOPCENTER_SYM=134;
	public static final int TOPLEFTCORNER_SYM=135;
	public static final int TOPLEFT_SYM=136;
	public static final int TOPRIGHTCORNER_SYM=137;
	public static final int TOPRIGHT_SYM=138;
	public static final int U=139;
	public static final int UNICODE=140;
	public static final int URI=141;
	public static final int URL=142;
	public static final int V=143;
	public static final int W=144;
	public static final int WEBKIT_KEYFRAMES_SYM=145;
	public static final int WS=146;
	public static final int X=147;
	public static final int Y=148;
	public static final int Z=149;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "synpred5_Css3", "key_only", "cp_expression", "mediaQueryList", 
		"less_condition", "synpred2_Css3", "synpred25_Css3", "esPred", "cp_expression_operator", 
		"combinator", "hexColor", "namespace", "sass_map_name", "sass_map_pair", 
		"cp_mixin_call_arg", "webkitKeyframesBlock", "operator", "less_function_in_condition", 
		"synpred41_Css3", "less_condition_operator", "synpred13_Css3", "syncTo_RBRACE", 
		"page", "elementName", "synpred3_Css3", "synpred16_Css3", "synpred17_Css3", 
		"sass_content", "selector", "webkitKeyframeSelectors", "mediaFeature", 
		"expressionPredicate", "moz_document", "pseudo", "sass_if", "sass_else", 
		"sass_function_name", "sass_map", "cp_variable_declaration", "namespaces", 
		"less_fn_name", "less_selector_interpolation", "cp_mixin_block", "body", 
		"cp_term_symbol", "mediaFeatureValue", "term", "mediaExpression", "cp_math_expression", 
		"cp_mixin_call_args", "imports", "synpred12_Css3", "at_rule", "cssClass", 
		"synpred36_Css3", "synpred10_Css3", "synpred19_Css3", "cp_mixin_name", 
		"sass_error", "synpred46_Css3", "styleSheet", "cssId", "less_import_types", 
		"importItem", "mediaType", "synpred9_Css3", "key_and", "synpred14_Css3", 
		"generic_at_rule", "fnAttribute", "synpred42_Css3", "sass_function_return", 
		"rule", "synpred8_Css3", "propertyValue", "mediaQuery", "fnAttributeName", 
		"less_when", "functionName", "sass_control_block", "cp_mixin_call", "expression", 
		"synpred21_Css3", "cp_propertyValue", "sass_while", "synpred43_Css3", 
		"function", "synpred37_Css3", "sass_debug", "cp_variable", "synpred20_Css3", 
		"less_mixin_guarded", "sass_extend_only_selector", "cp_math_expression_atom", 
		"sass_map_pairs", "synpred30_Css3", "synpred39_Css3", "sass_interpolation_expression_var", 
		"moz_document_function", "cp_arg", "sass_nested_properties", "syncTo_SEMI", 
		"declarations", "margin_sym", "simpleSelectorSequence", "unaryOperator", 
		"sass_function_declaration", "margin", "selectorsGroup", "cp_expression_atom", 
		"mediaBodyItem", "synpred24_Css3", "fnAttributes", "synpred45_Css3", "synpred47_Css3", 
		"resourceIdentifier", "sass_control_expression", "charSetValue", "webkitKeyframes", 
		"fnAttributeValue", "synpred38_Css3", "elementSubsequent", "sass_each_variables", 
		"syncToDeclarationsRule", "syncToFollow", "atRuleId", "synpred15_Css3", 
		"cp_mixin_declaration", "charSet", "media", "property", "synpred28_Css3", 
		"synpred31_Css3", "synpred40_Css3", "synpred32_Css3", "synpred23_Css3", 
		"declaration", "sass_selector_interpolation_exp", "vendorAtRule", "synpred7_Css3", 
		"namespacePrefixName", "fontFace", "mediaBody", "ws", "synpred33_Css3", 
		"propertyDeclaration", "sass_control", "synpred1_Css3", "mediaQueryOperator", 
		"synpred22_Css3", "key_or", "namespacePrefix", "pseudoPage", "synpred4_Css3", 
		"cp_args_list", "synpred34_Css3", "synpred44_Css3", "slAttribute", "bodyItem", 
		"sass_extend", "cp_expression_list", "sass_each", "counterStyle", "synpred26_Css3", 
		"slAttributeName", "synpred6_Css3", "typeSelector", "less_selector_interpolation_exp", 
		"sass_for", "cp_math_expressions", "synpred11_Css3", "synpred29_Css3", 
		"synpred18_Css3", "synpred27_Css3", "prio", "synpred35_Css3", "slAttributeValue"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, true, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    true, false, false, true, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameStartsWith(String prefix) {
	        return input.LT(1).getText() != null 
	            && input.LT(1).getText().startsWith(prefix);
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	/**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	    /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(349, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:351:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(351,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:351:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:351:6: ws
					{
					dbg.location(351,6);
					pushFollow(FOLLOW_ws_in_styleSheet129);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(352,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:8: charSet ( ws )?
					{
					dbg.location(352,8);
					pushFollow(FOLLOW_charSet_in_styleSheet139);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(352,16);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:16: ws
							{
							dbg.location(352,16);
							pushFollow(FOLLOW_ws_in_styleSheet141);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(353,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:9: imports
					{
					dbg.location(353,9);
					pushFollow(FOLLOW_imports_in_styleSheet155);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(354,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:9: namespaces
					{
					dbg.location(354,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet166);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(355,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:355:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COLON)||LA6_0==COUNTER_STYLE_SYM||(LA6_0 >= DCOLON && LA6_0 <= DOT)||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_ELSE)||(LA6_0 >= SASS_EXTEND && LA6_0 <= SASS_FUNCTION)||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||(LA6_0 >= SASS_RETURN && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:355:9: body
					{
					dbg.location(355,9);
					pushFollow(FOLLOW_body_in_styleSheet177);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(356,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet185); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(357, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:359:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(359, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:2: ( namespace ( ws )? )+
			{
			dbg.location(361,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:4: namespace ( ws )?
					{
					dbg.location(361,4);
					pushFollow(FOLLOW_namespace_in_namespaces202);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(361,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:14: ws
							{
							dbg.location(361,14);
							pushFollow(FOLLOW_ws_in_namespaces204);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(362, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(364, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(365,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace220); if (state.failed) return;dbg.location(365,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:19: ws
					{
					dbg.location(365,19);
					pushFollow(FOLLOW_ws_in_namespace222);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(365,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:24: namespacePrefixName ( ws )?
					{
					dbg.location(365,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace226);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(365,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:44: ws
							{
							dbg.location(365,44);
							pushFollow(FOLLOW_ws_in_namespace228);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(365,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace233);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(365,69);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:69: ws
					{
					dbg.location(365,69);
					pushFollow(FOLLOW_ws_in_namespace235);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(365,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace238); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(366, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(368, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:5: IDENT
			{
			dbg.location(369,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName251); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(370, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(372, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:373:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(373,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(374, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:376:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(376, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(377,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet285); if (state.failed) return;dbg.location(377,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:21: ws
					{
					dbg.location(377,21);
					pushFollow(FOLLOW_ws_in_charSet287);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(377,25);
			pushFollow(FOLLOW_charSetValue_in_charSet290);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(377,38);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ws
					{
					dbg.location(377,38);
					pushFollow(FOLLOW_ws_in_charSet292);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(377,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet295); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(378, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(380, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:2: ( STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:4: STRING
			{
			dbg.location(381,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue309); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(382, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:1: imports : ( importItem ( ws )? SEMI ( ws )? )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(384, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:2: ( ( importItem ( ws )? SEMI ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:2: ( importItem ( ws )? SEMI ( ws )? )+
			{
			dbg.location(386,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:2: ( importItem ( ws )? SEMI ( ws )? )+
			int cnt17=0;
			try { dbg.enterSubRule(17);

			loop17:
			while (true) {
				int alt17=2;
				try { dbg.enterDecision(17, decisionCanBacktrack[17]);

				int LA17_0 = input.LA(1);
				if ( (LA17_0==IMPORT_SYM) ) {
					int LA17_28 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt17=1;
					}

				}

				} finally {dbg.exitDecision(17);}

				switch (alt17) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:4: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(386,4);
					pushFollow(FOLLOW_importItem_in_imports323);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(386,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:15: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:15: ws
							{
							dbg.location(386,15);
							pushFollow(FOLLOW_ws_in_imports325);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(386,19);
					match(input,SEMI,FOLLOW_SEMI_in_imports328); if (state.failed) return;dbg.location(386,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:24: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:24: ws
							{
							dbg.location(386,24);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(17, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt17++;
			}
			} finally {dbg.exitSubRule(17);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(387, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(389, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:390:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt32=3;
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(391,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem356); if (state.failed) return;dbg.location(391,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:20: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:20: ws
							{
							dbg.location(391,20);
							pushFollow(FOLLOW_ws_in_importItem358);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(391,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem361);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(391,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						int LA20_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IDENT) ) {
						int LA20_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==NOT) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==GEN) ) {
						int LA20_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==HASH_SYMBOL) ) {
						int LA20_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==LPAREN) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==SASS_MIXIN) ) {
						int LA20_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_VAR) ) {
						int LA20_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==AT_IDENT) ) {
						int LA20_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_INCLUDE) ) {
						int LA20_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_AT_ROOT) ) {
						int LA20_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_DEBUG||LA20_0==SASS_WARN) ) {
						int LA20_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_IF) ) {
						int LA20_27 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FOR) ) {
						int LA20_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EACH) ) {
						int LA20_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_WHILE) ) {
						int LA20_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_CONTENT) ) {
						int LA20_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IMPORT_SYM) ) {
						int LA20_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==PAGE_SYM) ) {
						int LA20_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==FONT_FACE_SYM) ) {
						int LA20_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MOZ_DOCUMENT_SYM) ) {
						int LA20_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA20_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MEDIA_SYM) ) {
						int LA20_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EXTEND) ) {
						int LA20_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==COUNTER_STYLE_SYM) ) {
						int LA20_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FUNCTION) ) {
						int LA20_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( ((LA20_0 >= BOTTOMCENTER_SYM && LA20_0 <= BOTTOMRIGHT_SYM)||LA20_0==CHARSET_SYM||(LA20_0 >= LEFTBOTTOM_SYM && LA20_0 <= LEFTTOP_SYM)||LA20_0==NAMESPACE_SYM||(LA20_0 >= RIGHTBOTTOM_SYM && LA20_0 <= RIGHTTOP_SYM)||LA20_0==SASS_ELSE||LA20_0==SASS_RETURN||(LA20_0 >= TOPCENTER_SYM && LA20_0 <= TOPRIGHT_SYM)) ) {
						int LA20_42 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(391,66);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:66: ( ws )?
							int alt19=2;
							try { dbg.enterSubRule(19);
							try { dbg.enterDecision(19, decisionCanBacktrack[19]);

							int LA19_0 = input.LA(1);
							if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
								alt19=1;
							}
							} finally {dbg.exitDecision(19);}

							switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:66: ws
									{
									dbg.location(391,66);
									pushFollow(FOLLOW_ws_in_importItem371);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(19);}
							dbg.location(391,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem374);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(394,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(394,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem407); if (state.failed) return;dbg.location(394,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:38: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:38: ws
							{
							dbg.location(394,38);
							pushFollow(FOLLOW_ws_in_importItem409);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(394,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem412);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(394,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(24);

					loop24:
					while (true) {
						int alt24=2;
						try { dbg.enterDecision(24, decisionCanBacktrack[24]);

						try {
							isCyclicDecision = true;
							alt24 = dfa24.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(24);}

						switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(394,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:62: ( ws )?
							int alt22=2;
							try { dbg.enterSubRule(22);
							try { dbg.enterDecision(22, decisionCanBacktrack[22]);

							int LA22_0 = input.LA(1);
							if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
								alt22=1;
							}
							} finally {dbg.exitDecision(22);}

							switch (alt22) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:62: ws
									{
									dbg.location(394,62);
									pushFollow(FOLLOW_ws_in_importItem415);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(22);}
							dbg.location(394,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem418); if (state.failed) return;dbg.location(394,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:72: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:72: ws
									{
									dbg.location(394,72);
									pushFollow(FOLLOW_ws_in_importItem420);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(394,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem423);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop24;
						}
					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(394,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
						int LA26_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IDENT) ) {
						int LA26_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==NOT) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==GEN) ) {
						int LA26_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==HASH_SYMBOL) ) {
						int LA26_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==LPAREN) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==SASS_MIXIN) ) {
						int LA26_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_VAR) ) {
						int LA26_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==AT_IDENT) ) {
						int LA26_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_INCLUDE) ) {
						int LA26_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_AT_ROOT) ) {
						int LA26_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_DEBUG||LA26_0==SASS_WARN) ) {
						int LA26_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_IF) ) {
						int LA26_27 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FOR) ) {
						int LA26_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EACH) ) {
						int LA26_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_WHILE) ) {
						int LA26_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_CONTENT) ) {
						int LA26_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IMPORT_SYM) ) {
						int LA26_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==PAGE_SYM) ) {
						int LA26_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==FONT_FACE_SYM) ) {
						int LA26_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MOZ_DOCUMENT_SYM) ) {
						int LA26_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA26_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MEDIA_SYM) ) {
						int LA26_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EXTEND) ) {
						int LA26_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==COUNTER_STYLE_SYM) ) {
						int LA26_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FUNCTION) ) {
						int LA26_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( ((LA26_0 >= BOTTOMCENTER_SYM && LA26_0 <= BOTTOMRIGHT_SYM)||LA26_0==CHARSET_SYM||(LA26_0 >= LEFTBOTTOM_SYM && LA26_0 <= LEFTTOP_SYM)||LA26_0==NAMESPACE_SYM||(LA26_0 >= RIGHTBOTTOM_SYM && LA26_0 <= RIGHTTOP_SYM)||LA26_0==SASS_ELSE||LA26_0==SASS_RETURN||(LA26_0 >= TOPCENTER_SYM && LA26_0 <= TOPRIGHT_SYM)) ) {
						int LA26_42 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(394,120);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:120: ( ws )?
							int alt25=2;
							try { dbg.enterSubRule(25);
							try { dbg.enterDecision(25, decisionCanBacktrack[25]);

							int LA25_0 = input.LA(1);
							if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
								alt25=1;
							}
							} finally {dbg.exitDecision(25);}

							switch (alt25) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:120: ws
									{
									dbg.location(394,120);
									pushFollow(FOLLOW_ws_in_importItem435);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(25);}
							dbg.location(394,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem438);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(396,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(396,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem462); if (state.failed) return;dbg.location(396,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:38: ( ws )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:38: ws
							{
							dbg.location(396,38);
							pushFollow(FOLLOW_ws_in_importItem464);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(396,42);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==LPAREN) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(396,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem468); if (state.failed) return;dbg.location(396,50);
							pushFollow(FOLLOW_less_import_types_in_importItem470);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(396,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem472); if (state.failed) return;dbg.location(396,75);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:75: ( ws )?
							int alt28=2;
							try { dbg.enterSubRule(28);
							try { dbg.enterDecision(28, decisionCanBacktrack[28]);

							int LA28_0 = input.LA(1);
							if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
								alt28=1;
							}
							} finally {dbg.exitDecision(28);}

							switch (alt28) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:75: ws
									{
									dbg.location(396,75);
									pushFollow(FOLLOW_ws_in_importItem474);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(28);}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(396,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem479);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(396,100);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						int LA31_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IDENT) ) {
						int LA31_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==NOT) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==GEN) ) {
						int LA31_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==HASH_SYMBOL) ) {
						int LA31_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==LPAREN) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==SASS_MIXIN) ) {
						int LA31_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_VAR) ) {
						int LA31_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==AT_IDENT) ) {
						int LA31_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_INCLUDE) ) {
						int LA31_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_AT_ROOT) ) {
						int LA31_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_DEBUG||LA31_0==SASS_WARN) ) {
						int LA31_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_IF) ) {
						int LA31_27 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FOR) ) {
						int LA31_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EACH) ) {
						int LA31_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_WHILE) ) {
						int LA31_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_CONTENT) ) {
						int LA31_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IMPORT_SYM) ) {
						int LA31_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==PAGE_SYM) ) {
						int LA31_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==FONT_FACE_SYM) ) {
						int LA31_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MOZ_DOCUMENT_SYM) ) {
						int LA31_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA31_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MEDIA_SYM) ) {
						int LA31_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EXTEND) ) {
						int LA31_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==COUNTER_STYLE_SYM) ) {
						int LA31_39 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FUNCTION) ) {
						int LA31_41 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( ((LA31_0 >= BOTTOMCENTER_SYM && LA31_0 <= BOTTOMRIGHT_SYM)||LA31_0==CHARSET_SYM||(LA31_0 >= LEFTBOTTOM_SYM && LA31_0 <= LEFTTOP_SYM)||LA31_0==NAMESPACE_SYM||(LA31_0 >= RIGHTBOTTOM_SYM && LA31_0 <= RIGHTTOP_SYM)||LA31_0==SASS_ELSE||LA31_0==SASS_RETURN||(LA31_0 >= TOPCENTER_SYM && LA31_0 <= TOPRIGHT_SYM)) ) {
						int LA31_42 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(396,123);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:123: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:123: ws
									{
									dbg.location(396,123);
									pushFollow(FOLLOW_ws_in_importItem489);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(396,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem492);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(397, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "media"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(398, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(399,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media510); if (state.failed) return;dbg.location(399,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:17: ( ws )?
			int alt33=2;
			try { dbg.enterSubRule(33);
			try { dbg.enterDecision(33, decisionCanBacktrack[33]);

			int LA33_0 = input.LA(1);
			if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
				alt33=1;
			}
			} finally {dbg.exitDecision(33);}

			switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:17: ws
					{
					dbg.location(399,17);
					pushFollow(FOLLOW_ws_in_media512);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(400,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:10: mediaQueryList
			{
			dbg.location(401,10);
			pushFollow(FOLLOW_mediaQueryList_in_media530);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(402,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:7: ( ws )?
			int alt34=2;
			try { dbg.enterSubRule(34);
			try { dbg.enterDecision(34, decisionCanBacktrack[34]);

			int LA34_0 = input.LA(1);
			if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
				alt34=1;
			}
			} finally {dbg.exitDecision(34);}

			switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:7: ws
					{
					dbg.location(402,7);
					pushFollow(FOLLOW_ws_in_media538);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(403,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media545); if (state.failed) return;dbg.location(403,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:12: ( ws )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:12: ws
					{
					dbg.location(403,12);
					pushFollow(FOLLOW_ws_in_media547);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(403,16);
			pushFollow(FOLLOW_syncToFollow_in_media550);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(404,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:9: ( mediaBody )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( ((LA36_0 >= AT_IDENT && LA36_0 <= AT_SIGN)||(LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||(LA36_0 >= CHARSET_SYM && LA36_0 <= COLON)||LA36_0==COUNTER_STYLE_SYM||(LA36_0 >= DCOLON && LA36_0 <= DOT)||LA36_0==FONT_FACE_SYM||(LA36_0 >= GEN && LA36_0 <= GREATER)||(LA36_0 >= HASH && LA36_0 <= HASH_SYMBOL)||LA36_0==IDENT||LA36_0==IMPORT_SYM||(LA36_0 >= LBRACKET && LA36_0 <= LEFTTOP_SYM)||LA36_0==LESS_AND||(LA36_0 >= MEDIA_SYM && LA36_0 <= MOZ_DOCUMENT_SYM)||LA36_0==NAMESPACE_SYM||LA36_0==PAGE_SYM||(LA36_0 >= PIPE && LA36_0 <= PLUS)||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||(LA36_0 >= SASS_AT_ROOT && LA36_0 <= SASS_DEBUG)||(LA36_0 >= SASS_EACH && LA36_0 <= SASS_ELSE)||(LA36_0 >= SASS_EXTEND && LA36_0 <= SASS_FUNCTION)||(LA36_0 >= SASS_IF && LA36_0 <= SASS_MIXIN)||(LA36_0 >= SASS_RETURN && LA36_0 <= SEMI)||LA36_0==STAR||LA36_0==TILDE||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)||LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:9: mediaBody
					{
					dbg.location(404,9);
					pushFollow(FOLLOW_mediaBody_in_media560);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}
			dbg.location(405,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media567); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(406, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(408, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(410,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt42=0;
			try { dbg.enterSubRule(42);

			loop42:
			while (true) {
				int alt42=4;
				try { dbg.enterDecision(42, decisionCanBacktrack[42]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt42=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA42_34 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt42=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt42=3;
					}

					}
					break;
				case SEMI:
					{
					alt42=2;
					}
					break;
				}
				} finally {dbg.exitDecision(42);}

				switch (alt42) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(411,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(411,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody601);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(411,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt38=2;
					try { dbg.enterSubRule(38);
					try { dbg.enterDecision(38, decisionCanBacktrack[38]);

					try {
						isCyclicDecision = true;
						alt38 = dfa38.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(38);}

					switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(411,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:39: ( ws )?
							int alt37=2;
							try { dbg.enterSubRule(37);
							try { dbg.enterDecision(37, decisionCanBacktrack[37]);

							int LA37_0 = input.LA(1);
							if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
								alt37=1;
							}
							} finally {dbg.exitDecision(37);}

							switch (alt37) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:39: ws
									{
									dbg.location(411,39);
									pushFollow(FOLLOW_ws_in_mediaBody611);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(37);}
							dbg.location(411,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody614); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(411,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:50: ( ws )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:50: ws
							{
							dbg.location(411,50);
							pushFollow(FOLLOW_ws_in_mediaBody618);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(39);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:10: ( SEMI ( ws )? )
					{
					dbg.location(413,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:12: SEMI ( ws )?
					{
					dbg.location(413,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody645); if (state.failed) return;dbg.location(413,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:17: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:17: ws
							{
							dbg.location(413,17);
							pushFollow(FOLLOW_ws_in_mediaBody647);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(414,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(414,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(414,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody666);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(414,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:43: ( ws | ( SEMI ) )
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==COMMENT||LA41_0==NL||LA41_0==WS) ) {
						alt41=1;
					}
					else if ( (LA41_0==SEMI) ) {
						alt41=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 41, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:44: ws
							{
							dbg.location(414,44);
							pushFollow(FOLLOW_ws_in_mediaBody669);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:49: ( SEMI )
							{
							dbg.location(414,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:50: SEMI
							{
							dbg.location(414,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody674); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(41);}

					}

					}
					break;

				default :
					if ( cnt42 >= 1 ) break loop42;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(42, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt42++;
			}
			} finally {dbg.exitSubRule(42);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(416, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(418, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media )
			int alt47=14;
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			int LA47_0 = input.LA(1);
			if ( (LA47_0==LESS_AND) ) {
				int LA47_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==DOT) ) {
				int LA47_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==HASH) ) {
				int LA47_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_MIXIN) ) {
				int LA47_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==AT_IDENT) ) {
				int LA47_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==SASS_INCLUDE) ) {
				int LA47_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_AT_ROOT) ) {
				int LA47_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==GREATER||LA47_0==PLUS||LA47_0==TILDE) ) {
				int LA47_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA47_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==HASH_SYMBOL) ) {
				int LA47_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==DIMENSION) ) {
				int LA47_11 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==LBRACKET) ) {
				int LA47_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==COLON||LA47_0==DCOLON) ) {
				int LA47_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==IDENT) ) {
				int LA47_14 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==AT_SIGN) ) {
				int LA47_15 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==MINUS) ) {
				int LA47_16 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt47=4;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==STAR) ) {
				int LA47_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==PIPE) ) {
				int LA47_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==GEN) ) {
				int LA47_19 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_DEBUG||LA47_0==SASS_WARN) ) {
				int LA47_20 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_VAR) && (synpred9_Css3())) {
				alt47=5;
			}
			else if ( (LA47_0==SASS_IF) ) {
				int LA47_22 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_FOR) ) {
				int LA47_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_EACH) ) {
				int LA47_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_WHILE) ) {
				int LA47_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_CONTENT) ) {
				int LA47_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==IMPORT_SYM) ) {
				int LA47_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt47=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==PAGE_SYM) ) {
				int LA47_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=11;
				}

			}
			else if ( (LA47_0==FONT_FACE_SYM) ) {
				int LA47_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==MOZ_DOCUMENT_SYM) ) {
				int LA47_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA47_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==MEDIA_SYM) ) {
				int LA47_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=14;
				}

			}
			else if ( ((LA47_0 >= BOTTOMCENTER_SYM && LA47_0 <= BOTTOMRIGHT_SYM)||LA47_0==CHARSET_SYM||LA47_0==COUNTER_STYLE_SYM||(LA47_0 >= LEFTBOTTOM_SYM && LA47_0 <= LEFTTOP_SYM)||LA47_0==NAMESPACE_SYM||(LA47_0 >= RIGHTBOTTOM_SYM && LA47_0 <= RIGHTTOP_SYM)||LA47_0==SASS_ELSE||LA47_0==SASS_EXTEND||LA47_0==SASS_FUNCTION||LA47_0==SASS_RETURN||(LA47_0 >= TOPCENTER_SYM && LA47_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt47=5;
			}

			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(420,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem748);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(422,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(422,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem781);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(422,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:87: ( ( ws )? IMPORTANT_SYM )?
					int alt44=2;
					try { dbg.enterSubRule(44);
					try { dbg.enterDecision(44, decisionCanBacktrack[44]);

					try {
						isCyclicDecision = true;
						alt44 = dfa44.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(44);}

					switch (alt44) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(422,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:88: ( ws )?
							int alt43=2;
							try { dbg.enterSubRule(43);
							try { dbg.enterDecision(43, decisionCanBacktrack[43]);

							int LA43_0 = input.LA(1);
							if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
								alt43=1;
							}
							} finally {dbg.exitDecision(43);}

							switch (alt43) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:88: ws
									{
									dbg.location(422,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem784);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(43);}
							dbg.location(422,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(44);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(423,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(423,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem804);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(423,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:57: ( ( ws )? IMPORTANT_SYM )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					try {
						isCyclicDecision = true;
						alt46 = dfa46.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(423,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:58: ( ws )?
							int alt45=2;
							try { dbg.enterSubRule(45);
							try { dbg.enterDecision(45, decisionCanBacktrack[45]);

							int LA45_0 = input.LA(1);
							if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
								alt45=1;
							}
							} finally {dbg.exitDecision(45);}

							switch (alt45) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:58: ws
									{
									dbg.location(423,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem807);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(45);}
							dbg.location(423,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(424,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem875);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(425,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem887);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: {...}? sass_debug
					{
					dbg.location(426,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(426,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem897);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: {...}? sass_control
					{
					dbg.location(427,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(427,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem907);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:428:7: {...}? sass_content
					{
					dbg.location(428,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(428,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem917);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:7: {...}? importItem
					{
					dbg.location(429,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(429,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem927);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:7: rule
					{
					dbg.location(430,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem935);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:7: page
					{
					dbg.location(431,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem943);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:432:7: fontFace
					{
					dbg.location(432,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem951);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:7: vendorAtRule
					{
					dbg.location(433,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem959);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:7: media
					{
					dbg.location(435,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem972);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(436, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(438, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(439,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList986);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(439,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(50);

			loop50:
			while (true) {
				int alt50=2;
				try { dbg.enterDecision(50, decisionCanBacktrack[50]);

				try {
					isCyclicDecision = true;
					alt50 = dfa50.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(50);}

				switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(439,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ( ws )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==COMMENT||LA48_0==NL||LA48_0==WS) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ws
							{
							dbg.location(439,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList998);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(439,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1001); if (state.failed) return;dbg.location(439,41);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ( ws )?
					int alt49=2;
					try { dbg.enterSubRule(49);
					try { dbg.enterDecision(49, decisionCanBacktrack[49]);

					int LA49_0 = input.LA(1);
					if ( (LA49_0==COMMENT||LA49_0==NL||LA49_0==WS) ) {
						alt49=1;
					}
					} finally {dbg.exitDecision(49);}

					switch (alt49) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ws
							{
							dbg.location(439,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1003);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(49);}
					dbg.location(439,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1006);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop50;
				}
			}
			} finally {dbg.exitSubRule(50);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(440, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:442:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(442, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt59=3;
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			switch ( input.LA(1) ) {
			case GEN:
			case HASH_SYMBOL:
			case IDENT:
			case NOT:
				{
				alt59=1;
				}
				break;
			case LPAREN:
				{
				alt59=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt59=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(444,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==IDENT) ) {
						int LA52_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt52=1;
						}
					}
					else if ( (LA52_0==NOT) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:6: mediaQueryOperator ( ws )?
							{
							dbg.location(444,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1025);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(444,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ( ws )?
							int alt51=2;
							try { dbg.enterSubRule(51);
							try { dbg.enterDecision(51, decisionCanBacktrack[51]);

							int LA51_0 = input.LA(1);
							if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
								alt51=1;
							}
							} finally {dbg.exitDecision(51);}

							switch (alt51) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ws
									{
									dbg.location(444,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1027);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(51);}

							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(444,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1034);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(444,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:43: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(55);

					loop55:
					while (true) {
						int alt55=2;
						try { dbg.enterDecision(55, decisionCanBacktrack[55]);

						try {
							isCyclicDecision = true;
							alt55 = dfa55.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(55);}

						switch (alt55) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(444,45);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )?
							int alt53=2;
							try { dbg.enterSubRule(53);
							try { dbg.enterDecision(53, decisionCanBacktrack[53]);

							int LA53_0 = input.LA(1);
							if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
								alt53=1;
							}
							} finally {dbg.exitDecision(53);}

							switch (alt53) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ws
									{
									dbg.location(444,45);
									pushFollow(FOLLOW_ws_in_mediaQuery1038);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(53);}
							dbg.location(444,49);
							pushFollow(FOLLOW_key_and_in_mediaQuery1041);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(444,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:57: ( ws )?
							int alt54=2;
							try { dbg.enterSubRule(54);
							try { dbg.enterDecision(54, decisionCanBacktrack[54]);

							int LA54_0 = input.LA(1);
							if ( (LA54_0==COMMENT||LA54_0==NL||LA54_0==WS) ) {
								alt54=1;
							}
							} finally {dbg.exitDecision(54);}

							switch (alt54) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:57: ws
									{
									dbg.location(444,57);
									pushFollow(FOLLOW_ws_in_mediaQuery1043);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(54);}
							dbg.location(444,61);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1046);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop55;
						}
					}
					} finally {dbg.exitSubRule(55);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:7: mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(445,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1057);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(445,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:23: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(58);

					loop58:
					while (true) {
						int alt58=2;
						try { dbg.enterDecision(58, decisionCanBacktrack[58]);

						try {
							isCyclicDecision = true;
							alt58 = dfa58.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(58);}

						switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(445,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )?
							int alt56=2;
							try { dbg.enterSubRule(56);
							try { dbg.enterDecision(56, decisionCanBacktrack[56]);

							int LA56_0 = input.LA(1);
							if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
								alt56=1;
							}
							} finally {dbg.exitDecision(56);}

							switch (alt56) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ws
									{
									dbg.location(445,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1061);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(56);}
							dbg.location(445,29);
							pushFollow(FOLLOW_key_and_in_mediaQuery1064);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(445,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:37: ( ws )?
							int alt57=2;
							try { dbg.enterSubRule(57);
							try { dbg.enterDecision(57, decisionCanBacktrack[57]);

							int LA57_0 = input.LA(1);
							if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
								alt57=1;
							}
							} finally {dbg.exitDecision(57);}

							switch (alt57) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:37: ws
									{
									dbg.location(445,37);
									pushFollow(FOLLOW_ws_in_mediaQuery1066);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(57);}
							dbg.location(445,41);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1069);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop58;
						}
					}
					} finally {dbg.exitSubRule(58);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:446:7: {...}? cp_variable
					{
					dbg.location(446,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(446,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1082);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(447, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(449, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:3: ( key_only | NOT )
			int alt60=2;
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			int LA60_0 = input.LA(1);
			if ( (LA60_0==IDENT) ) {
				alt60=1;
			}
			else if ( (LA60_0==NOT) ) {
				alt60=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:5: key_only
					{
					dbg.location(450,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1094);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:16: NOT
					{
					dbg.location(450,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1098); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(451, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(453, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt61=3;
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt61=1;
				}
				break;
			case GEN:
				{
				alt61=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt61=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 61, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:4: IDENT
					{
					dbg.location(454,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1110); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: GEN
					{
					dbg.location(454,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1114); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(454,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(454,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1120);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(455, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:1: mediaExpression : LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ;
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(457, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
			{
			dbg.location(459,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1138); if (state.failed) return;dbg.location(459,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:12: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:12: ws
					{
					dbg.location(459,12);
					pushFollow(FOLLOW_ws_in_mediaExpression1140);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(459,16);
			pushFollow(FOLLOW_mediaFeature_in_mediaExpression1143);
			mediaFeature();
			state._fsp--;
			if (state.failed) return;dbg.location(459,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:29: ( mediaFeatureValue )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			try {
				isCyclicDecision = true;
				alt63 = dfa63.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:29: mediaFeatureValue
					{
					dbg.location(459,29);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1145);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(459,48);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:48: ( ws )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:48: ws
					{
					dbg.location(459,48);
					pushFollow(FOLLOW_ws_in_mediaExpression1148);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(459,52);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1151); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(460, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(462, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:463:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(464,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:5: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:5: ws
					{
					dbg.location(464,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1172);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(464,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1175); if (state.failed) return;dbg.location(464,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:15: ( ws )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==COMMENT||LA66_0==NL||LA66_0==WS) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:15: ws
					{
					dbg.location(464,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1177);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(465,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ({...}? cp_expression | expression )
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt67=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA67_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case IDENT:
				{
				int LA67_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA67_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA67_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA67_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EMS:
				{
				int LA67_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case REM:
				{
				int LA67_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EXS:
				{
				int LA67_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA67_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TIME:
				{
				int LA67_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case FREQ:
				{
				int LA67_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA67_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA67_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case STRING:
				{
				int LA67_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TILDE:
				{
				int LA67_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA67_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case GEN:
				{
				int LA67_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case URI:
				{
				int LA67_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case HASH:
				{
				int LA67_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA67_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA67_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA67_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA67_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA67_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA67_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:9: {...}? cp_expression
					{
					dbg.location(466,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(466,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1196);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:9: expression
					{
					dbg.location(468,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1216);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(470, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(472, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt69=3;
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt69=1;
				}
				break;
			case GEN:
				{
				alt69=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt69=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:4: IDENT
					{
					dbg.location(473,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1236); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:12: GEN
					{
					dbg.location(473,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1240); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(473,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(473,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:47: ( cp_variable | sass_interpolation_expression_var )
					int alt68=2;
					try { dbg.enterSubRule(68);
					try { dbg.enterDecision(68, decisionCanBacktrack[68]);

					int LA68_0 = input.LA(1);
					if ( (LA68_0==AT_IDENT||(LA68_0 >= BOTTOMCENTER_SYM && LA68_0 <= BOTTOMRIGHT_SYM)||LA68_0==CHARSET_SYM||LA68_0==COUNTER_STYLE_SYM||LA68_0==FONT_FACE_SYM||LA68_0==IMPORT_SYM||(LA68_0 >= LEFTBOTTOM_SYM && LA68_0 <= LEFTTOP_SYM)||LA68_0==MEDIA_SYM||LA68_0==MOZ_DOCUMENT_SYM||LA68_0==NAMESPACE_SYM||LA68_0==PAGE_SYM||(LA68_0 >= RIGHTBOTTOM_SYM && LA68_0 <= RIGHTTOP_SYM)||(LA68_0 >= SASS_AT_ROOT && LA68_0 <= SASS_DEBUG)||(LA68_0 >= SASS_EACH && LA68_0 <= SASS_ELSE)||LA68_0==SASS_EXTEND||(LA68_0 >= SASS_FOR && LA68_0 <= SASS_FUNCTION)||(LA68_0 >= SASS_IF && LA68_0 <= SASS_MIXIN)||(LA68_0 >= SASS_RETURN && LA68_0 <= SASS_WHILE)||(LA68_0 >= TOPCENTER_SYM && LA68_0 <= TOPRIGHT_SYM)||LA68_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt68=1;
					}
					else if ( (LA68_0==HASH_SYMBOL) ) {
						alt68=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 68, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(68);}

					switch (alt68) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:49: cp_variable
							{
							dbg.location(473,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1248);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:63: sass_interpolation_expression_var
							{
							dbg.location(473,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1252);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(68);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(474, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(476, 1);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(478,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt74=0;
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=3;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				int LA74_0 = input.LA(1);
				if ( ((LA74_0 >= AT_IDENT && LA74_0 <= AT_SIGN)||(LA74_0 >= BOTTOMCENTER_SYM && LA74_0 <= BOTTOMRIGHT_SYM)||(LA74_0 >= CHARSET_SYM && LA74_0 <= COLON)||LA74_0==COUNTER_STYLE_SYM||(LA74_0 >= DCOLON && LA74_0 <= DOT)||LA74_0==FONT_FACE_SYM||(LA74_0 >= GEN && LA74_0 <= GREATER)||(LA74_0 >= HASH && LA74_0 <= HASH_SYMBOL)||LA74_0==IDENT||LA74_0==IMPORT_SYM||(LA74_0 >= LBRACKET && LA74_0 <= LEFTTOP_SYM)||LA74_0==LESS_AND||(LA74_0 >= MEDIA_SYM && LA74_0 <= MOZ_DOCUMENT_SYM)||LA74_0==NAMESPACE_SYM||LA74_0==PAGE_SYM||(LA74_0 >= PIPE && LA74_0 <= PLUS)||(LA74_0 >= RIGHTBOTTOM_SYM && LA74_0 <= RIGHTTOP_SYM)||(LA74_0 >= SASS_AT_ROOT && LA74_0 <= SASS_DEBUG)||(LA74_0 >= SASS_EACH && LA74_0 <= SASS_ELSE)||(LA74_0 >= SASS_EXTEND && LA74_0 <= SASS_FUNCTION)||(LA74_0 >= SASS_IF && LA74_0 <= SASS_MIXIN)||(LA74_0 >= SASS_RETURN && LA74_0 <= SASS_WHILE)||LA74_0==STAR||LA74_0==TILDE||(LA74_0 >= TOPCENTER_SYM && LA74_0 <= TOPRIGHT_SYM)||LA74_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt74=1;
				}
				else if ( (LA74_0==SEMI) ) {
					alt74=2;
				}

				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(479,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(479,12);
					pushFollow(FOLLOW_bodyItem_in_body1286);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(479,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					try {
						isCyclicDecision = true;
						alt71 = dfa71.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(479,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:34: ( ws )?
							int alt70=2;
							try { dbg.enterSubRule(70);
							try { dbg.enterDecision(70, decisionCanBacktrack[70]);

							int LA70_0 = input.LA(1);
							if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
								alt70=1;
							}
							} finally {dbg.exitDecision(70);}

							switch (alt70) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:34: ws
									{
									dbg.location(479,34);
									pushFollow(FOLLOW_ws_in_body1296);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(70);}
							dbg.location(479,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1299); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(479,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:45: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:45: ws
							{
							dbg.location(479,45);
							pushFollow(FOLLOW_ws_in_body1303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:10: ( SEMI ( ws )? )
					{
					dbg.location(481,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:12: SEMI ( ws )?
					{
					dbg.location(481,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1330); if (state.failed) return;dbg.location(481,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:17: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:17: ws
							{
							dbg.location(481,17);
							pushFollow(FOLLOW_ws_in_body1332);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}

					}

					}
					break;

				default :
					if ( cnt74 >= 1 ) break loop74;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(74, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt74++;
			}
			} finally {dbg.exitSubRule(74);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(483, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(485, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt75=11;
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA75_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case DOT:
				{
				int LA75_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case HASH:
				{
				int LA75_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA75_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA75_5 = input.LA(2);
				if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA75_6 = input.LA(2);
				if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=2;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA75_7 = input.LA(2);
				if ( (true) ) {
					alt75=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case DIMENSION:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case IDENT:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt75=4;
				}
				break;
			case MEDIA_SYM:
				{
				int LA75_20 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA75_21 = input.LA(2);
				if ( ((synpred15_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA75_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA75_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA75_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA75_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA75_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA75_27 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt75=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA75_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA75_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA75_30 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA75_31 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA75_32 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA75_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA75_34 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(487,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1412);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(489,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(489,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1445);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(490,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(490,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1464);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:8: rule
					{
					dbg.location(491,8);
					pushFollow(FOLLOW_rule_in_bodyItem1473);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(492,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem1495);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( sass_map )=> sass_map
					{
					dbg.location(493,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem1512);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: at_rule
					{
					dbg.location(494,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem1524);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:496:11: {...}? importItem
					{
					dbg.location(496,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(496,40);
					pushFollow(FOLLOW_importItem_in_bodyItem1547);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:497:11: {...}? sass_debug
					{
					dbg.location(497,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(497,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem1561);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:11: {...}? sass_control
					{
					dbg.location(498,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(498,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem1575);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:11: {...}? sass_function_declaration
					{
					dbg.location(499,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(499,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem1589);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(500, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:505:1: at_rule : ( media | page | counterStyle | fontFace | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(505, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:5: ( media | page | counterStyle | fontFace | vendorAtRule )
			int alt76=5;
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt76=1;
				}
				break;
			case PAGE_SYM:
				{
				alt76=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt76=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt76=4;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt76=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 76, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:507:5: media
					{
					dbg.location(507,5);
					pushFollow(FOLLOW_media_in_at_rule1615);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:7: page
					{
					dbg.location(508,7);
					pushFollow(FOLLOW_page_in_at_rule1623);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:7: counterStyle
					{
					dbg.location(509,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule1631);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:7: fontFace
					{
					dbg.location(510,7);
					pushFollow(FOLLOW_fontFace_in_at_rule1639);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:7: vendorAtRule
					{
					dbg.location(511,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule1647);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(512, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(514, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt77=3;
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt77=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt77=2;
				}
				break;
			case AT_IDENT:
				{
				alt77=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:3: moz_document
					{
					dbg.location(515,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule1660);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:18: webkitKeyframes
					{
					dbg.location(515,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule1664);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:36: generic_at_rule
					{
					dbg.location(515,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule1668);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(515, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(517, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt79=3;
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt79=1;
				}
				break;
			case STRING:
				{
				alt79=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt79=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 79, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:2: IDENT
					{
					dbg.location(519,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId1678); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:10: STRING
					{
					dbg.location(519,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId1682); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(519,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(519,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:48: ( cp_variable | sass_interpolation_expression_var )
					int alt78=2;
					try { dbg.enterSubRule(78);
					try { dbg.enterDecision(78, decisionCanBacktrack[78]);

					int LA78_0 = input.LA(1);
					if ( (LA78_0==AT_IDENT||(LA78_0 >= BOTTOMCENTER_SYM && LA78_0 <= BOTTOMRIGHT_SYM)||LA78_0==CHARSET_SYM||LA78_0==COUNTER_STYLE_SYM||LA78_0==FONT_FACE_SYM||LA78_0==IMPORT_SYM||(LA78_0 >= LEFTBOTTOM_SYM && LA78_0 <= LEFTTOP_SYM)||LA78_0==MEDIA_SYM||LA78_0==MOZ_DOCUMENT_SYM||LA78_0==NAMESPACE_SYM||LA78_0==PAGE_SYM||(LA78_0 >= RIGHTBOTTOM_SYM && LA78_0 <= RIGHTTOP_SYM)||(LA78_0 >= SASS_AT_ROOT && LA78_0 <= SASS_DEBUG)||(LA78_0 >= SASS_EACH && LA78_0 <= SASS_ELSE)||LA78_0==SASS_EXTEND||(LA78_0 >= SASS_FOR && LA78_0 <= SASS_FUNCTION)||(LA78_0 >= SASS_IF && LA78_0 <= SASS_MIXIN)||(LA78_0 >= SASS_RETURN && LA78_0 <= SASS_WHILE)||(LA78_0 >= TOPCENTER_SYM && LA78_0 <= TOPRIGHT_SYM)||LA78_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt78=1;
					}
					else if ( (LA78_0==HASH_SYMBOL) ) {
						alt78=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 78, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(78);}

					switch (alt78) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:50: cp_variable
							{
							dbg.location(519,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId1690);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:64: sass_interpolation_expression_var
							{
							dbg.location(519,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId1694);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(78);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(520, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:522:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(522, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(523,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule1710); if (state.failed) return;dbg.location(523,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:16: ( ws )?
			int alt80=2;
			try { dbg.enterSubRule(80);
			try { dbg.enterDecision(80, decisionCanBacktrack[80]);

			int LA80_0 = input.LA(1);
			if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
				alt80=1;
			}
			} finally {dbg.exitDecision(80);}

			switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:16: ws
					{
					dbg.location(523,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule1712);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(80);}
			dbg.location(523,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:20: ( atRuleId ( ws )? )?
			int alt82=2;
			try { dbg.enterSubRule(82);
			try { dbg.enterDecision(82, decisionCanBacktrack[82]);

			int LA82_0 = input.LA(1);
			if ( (LA82_0==AT_IDENT||(LA82_0 >= BOTTOMCENTER_SYM && LA82_0 <= BOTTOMRIGHT_SYM)||LA82_0==CHARSET_SYM||LA82_0==COUNTER_STYLE_SYM||LA82_0==FONT_FACE_SYM||LA82_0==HASH_SYMBOL||LA82_0==IDENT||LA82_0==IMPORT_SYM||(LA82_0 >= LEFTBOTTOM_SYM && LA82_0 <= LEFTTOP_SYM)||LA82_0==MEDIA_SYM||LA82_0==MOZ_DOCUMENT_SYM||LA82_0==NAMESPACE_SYM||LA82_0==PAGE_SYM||(LA82_0 >= RIGHTBOTTOM_SYM && LA82_0 <= RIGHTTOP_SYM)||(LA82_0 >= SASS_AT_ROOT && LA82_0 <= SASS_DEBUG)||(LA82_0 >= SASS_EACH && LA82_0 <= SASS_ELSE)||LA82_0==SASS_EXTEND||(LA82_0 >= SASS_FOR && LA82_0 <= SASS_FUNCTION)||(LA82_0 >= SASS_IF && LA82_0 <= SASS_MIXIN)||(LA82_0 >= SASS_RETURN && LA82_0 <= SASS_WHILE)||LA82_0==STRING||(LA82_0 >= TOPCENTER_SYM && LA82_0 <= TOPRIGHT_SYM)||LA82_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt82=1;
			}
			} finally {dbg.exitDecision(82);}

			switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:22: atRuleId ( ws )?
					{
					dbg.location(523,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule1717);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(523,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:31: ( ws )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					int LA81_0 = input.LA(1);
					if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
						alt81=1;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:31: ws
							{
							dbg.location(523,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule1719);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}

					}
					break;

			}
			} finally {dbg.exitSubRule(82);}
			dbg.location(524,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule1733); if (state.failed) return;dbg.location(525,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule1744);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(526,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule1754); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(527, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:528:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(528, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(530,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1765); if (state.failed) return;dbg.location(530,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:19: ( ws )?
			int alt83=2;
			try { dbg.enterSubRule(83);
			try { dbg.enterDecision(83, decisionCanBacktrack[83]);

			int LA83_0 = input.LA(1);
			if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
				alt83=1;
			}
			} finally {dbg.exitDecision(83);}

			switch (alt83) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:19: ws
					{
					dbg.location(530,19);
					pushFollow(FOLLOW_ws_in_moz_document1767);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(83);}
			dbg.location(530,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:25: moz_document_function ( ws )?
			{
			dbg.location(530,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document1772);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(530,47);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:47: ( ws )?
			int alt84=2;
			try { dbg.enterSubRule(84);
			try { dbg.enterDecision(84, decisionCanBacktrack[84]);

			int LA84_0 = input.LA(1);
			if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
				alt84=1;
			}
			} finally {dbg.exitDecision(84);}

			switch (alt84) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:47: ws
					{
					dbg.location(530,47);
					pushFollow(FOLLOW_ws_in_moz_document1774);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(84);}

			}
			dbg.location(530,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(87);

			loop87:
			while (true) {
				int alt87=2;
				try { dbg.enterDecision(87, decisionCanBacktrack[87]);

				int LA87_0 = input.LA(1);
				if ( (LA87_0==COMMA) ) {
					alt87=1;
				}

				} finally {dbg.exitDecision(87);}

				switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(530,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document1780); if (state.failed) return;dbg.location(530,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:60: ( ws )?
					int alt85=2;
					try { dbg.enterSubRule(85);
					try { dbg.enterDecision(85, decisionCanBacktrack[85]);

					int LA85_0 = input.LA(1);
					if ( (LA85_0==COMMENT||LA85_0==NL||LA85_0==WS) ) {
						alt85=1;
					}
					} finally {dbg.exitDecision(85);}

					switch (alt85) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:60: ws
							{
							dbg.location(530,60);
							pushFollow(FOLLOW_ws_in_moz_document1782);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(85);}
					dbg.location(530,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document1785);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(530,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:86: ( ws )?
					int alt86=2;
					try { dbg.enterSubRule(86);
					try { dbg.enterDecision(86, decisionCanBacktrack[86]);

					int LA86_0 = input.LA(1);
					if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
						alt86=1;
					}
					} finally {dbg.exitDecision(86);}

					switch (alt86) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:86: ws
							{
							dbg.location(530,86);
							pushFollow(FOLLOW_ws_in_moz_document1787);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(86);}

					}
					break;

				default :
					break loop87;
				}
			}
			} finally {dbg.exitSubRule(87);}
			dbg.location(531,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document1794); if (state.failed) return;dbg.location(531,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:9: ( ws )?
			int alt88=2;
			try { dbg.enterSubRule(88);
			try { dbg.enterDecision(88, decisionCanBacktrack[88]);

			int LA88_0 = input.LA(1);
			if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
				alt88=1;
			}
			} finally {dbg.exitDecision(88);}

			switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:9: ws
					{
					dbg.location(531,9);
					pushFollow(FOLLOW_ws_in_moz_document1796);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(88);}
			dbg.location(532,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:3: ( body )?
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( ((LA89_0 >= AT_IDENT && LA89_0 <= AT_SIGN)||(LA89_0 >= BOTTOMCENTER_SYM && LA89_0 <= BOTTOMRIGHT_SYM)||(LA89_0 >= CHARSET_SYM && LA89_0 <= COLON)||LA89_0==COUNTER_STYLE_SYM||(LA89_0 >= DCOLON && LA89_0 <= DOT)||LA89_0==FONT_FACE_SYM||(LA89_0 >= GEN && LA89_0 <= GREATER)||(LA89_0 >= HASH && LA89_0 <= HASH_SYMBOL)||LA89_0==IDENT||LA89_0==IMPORT_SYM||(LA89_0 >= LBRACKET && LA89_0 <= LEFTTOP_SYM)||LA89_0==LESS_AND||(LA89_0 >= MEDIA_SYM && LA89_0 <= MOZ_DOCUMENT_SYM)||LA89_0==NAMESPACE_SYM||LA89_0==PAGE_SYM||(LA89_0 >= PIPE && LA89_0 <= PLUS)||(LA89_0 >= RIGHTBOTTOM_SYM && LA89_0 <= RIGHTTOP_SYM)||(LA89_0 >= SASS_AT_ROOT && LA89_0 <= SASS_DEBUG)||(LA89_0 >= SASS_EACH && LA89_0 <= SASS_ELSE)||(LA89_0 >= SASS_EXTEND && LA89_0 <= SASS_FUNCTION)||(LA89_0 >= SASS_IF && LA89_0 <= SASS_MIXIN)||(LA89_0 >= SASS_RETURN && LA89_0 <= SEMI)||LA89_0==STAR||LA89_0==TILDE||(LA89_0 >= TOPCENTER_SYM && LA89_0 <= TOPRIGHT_SYM)||LA89_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt89=1;
			}
			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:3: body
					{
					dbg.location(532,3);
					pushFollow(FOLLOW_body_in_moz_document1801);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}
			dbg.location(533,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document1806); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(534, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:536:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(536, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:537:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(537,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(539, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:542:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(542, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:543:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(544,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1843); if (state.failed) return;dbg.location(544,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:23: ( ws )?
			int alt90=2;
			try { dbg.enterSubRule(90);
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
				alt90=1;
			}
			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:23: ws
					{
					dbg.location(544,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1845);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(90);}
			dbg.location(544,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes1848);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(544,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:36: ( ws )?
			int alt91=2;
			try { dbg.enterSubRule(91);
			try { dbg.enterDecision(91, decisionCanBacktrack[91]);

			int LA91_0 = input.LA(1);
			if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
				alt91=1;
			}
			} finally {dbg.exitDecision(91);}

			switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:36: ws
					{
					dbg.location(544,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1850);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(91);}
			dbg.location(545,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes1854); if (state.failed) return;dbg.location(545,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:9: ( ws )?
			int alt92=2;
			try { dbg.enterSubRule(92);
			try { dbg.enterDecision(92, decisionCanBacktrack[92]);

			int LA92_0 = input.LA(1);
			if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
				alt92=1;
			}
			} finally {dbg.exitDecision(92);}

			switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:9: ws
					{
					dbg.location(545,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1856);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(92);}
			dbg.location(546,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(94);

			loop94:
			while (true) {
				int alt94=2;
				try { dbg.enterDecision(94, decisionCanBacktrack[94]);

				int LA94_0 = input.LA(1);
				if ( (LA94_0==IDENT||LA94_0==PERCENTAGE||LA94_0==SASS_CONTENT) ) {
					alt94=1;
				}

				} finally {dbg.exitDecision(94);}

				switch (alt94) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(546,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1863);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(546,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:26: ( ws )?
					int alt93=2;
					try { dbg.enterSubRule(93);
					try { dbg.enterDecision(93, decisionCanBacktrack[93]);

					int LA93_0 = input.LA(1);
					if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {
						alt93=1;
					}
					} finally {dbg.exitDecision(93);}

					switch (alt93) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:26: ws
							{
							dbg.location(546,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes1865);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(93);}

					}
					break;

				default :
					break loop94;
				}
			}
			} finally {dbg.exitSubRule(94);}
			dbg.location(547,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes1872); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(548, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:550:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(550, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt99=2;
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			int LA99_0 = input.LA(1);
			if ( (LA99_0==IDENT||LA99_0==PERCENTAGE) ) {
				alt99=1;
			}
			else if ( (LA99_0==SASS_CONTENT) ) {
				alt99=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(552,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1884);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(552,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:26: ( ws )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==COMMENT||LA95_0==NL||LA95_0==WS) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:26: ws
							{
							dbg.location(552,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1886);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(553,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock1890); if (state.failed) return;dbg.location(553,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:10: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:10: ws
							{
							dbg.location(553,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1893);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(553,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock1896);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(554,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:3: ( declarations )?
					int alt97=2;
					try { dbg.enterSubRule(97);
					try { dbg.enterDecision(97, decisionCanBacktrack[97]);

					int LA97_0 = input.LA(1);
					if ( ((LA97_0 >= AT_IDENT && LA97_0 <= AT_SIGN)||(LA97_0 >= BOTTOMCENTER_SYM && LA97_0 <= BOTTOMRIGHT_SYM)||(LA97_0 >= CHARSET_SYM && LA97_0 <= COLON)||LA97_0==COUNTER_STYLE_SYM||(LA97_0 >= DCOLON && LA97_0 <= DOT)||LA97_0==FONT_FACE_SYM||(LA97_0 >= GEN && LA97_0 <= GREATER)||(LA97_0 >= HASH && LA97_0 <= HASH_SYMBOL)||LA97_0==IDENT||LA97_0==IMPORT_SYM||(LA97_0 >= LBRACKET && LA97_0 <= LEFTTOP_SYM)||LA97_0==LESS_AND||(LA97_0 >= MEDIA_SYM && LA97_0 <= MOZ_DOCUMENT_SYM)||LA97_0==NAMESPACE_SYM||LA97_0==PAGE_SYM||(LA97_0 >= PIPE && LA97_0 <= PLUS)||(LA97_0 >= RIGHTBOTTOM_SYM && LA97_0 <= RIGHTTOP_SYM)||(LA97_0 >= SASS_AT_ROOT && LA97_0 <= SASS_DEBUG)||(LA97_0 >= SASS_EACH && LA97_0 <= SASS_ELSE)||(LA97_0 >= SASS_ERROR && LA97_0 <= SASS_FUNCTION)||(LA97_0 >= SASS_IF && LA97_0 <= SASS_MIXIN)||(LA97_0 >= SASS_RETURN && LA97_0 <= SEMI)||LA97_0==STAR||LA97_0==TILDE||(LA97_0 >= TOPCENTER_SYM && LA97_0 <= TOPRIGHT_SYM)||LA97_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt97=1;
					}
					} finally {dbg.exitDecision(97);}

					switch (alt97) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:3: declarations
							{
							dbg.location(554,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock1900);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(97);}
					dbg.location(555,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock1904); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(556,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(556,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(556,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock1921);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(556,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:61: ( SEMI )?
					int alt98=2;
					try { dbg.enterSubRule(98);
					try { dbg.enterDecision(98, decisionCanBacktrack[98]);

					int LA98_0 = input.LA(1);
					if ( (LA98_0==SEMI) ) {
						alt98=1;
					}
					} finally {dbg.exitDecision(98);}

					switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:61: SEMI
							{
							dbg.location(556,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock1923); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(98);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(557, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(559, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(561,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt100=3;
			try { dbg.enterSubRule(100);
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			int LA100_0 = input.LA(1);
			if ( (LA100_0==IDENT) ) {
				int LA100_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt100=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA100_0==PERCENTAGE) ) {
				alt100=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 100, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:4: {...}? IDENT
					{
					dbg.location(561,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(561,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1940); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:39: {...}? IDENT
					{
					dbg.location(561,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(561,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1946); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:72: PERCENTAGE
					{
					dbg.location(561,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1950); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(100);}
			dbg.location(561,85);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(104);

			loop104:
			while (true) {
				int alt104=2;
				try { dbg.enterDecision(104, decisionCanBacktrack[104]);

				try {
					isCyclicDecision = true;
					alt104 = dfa104.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(104);}

				switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(561,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:87: ( ws )?
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
						alt101=1;
					}
					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:87: ws
							{
							dbg.location(561,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1956);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}
					dbg.location(561,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors1959); if (state.failed) return;dbg.location(561,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:97: ( ws )?
					int alt102=2;
					try { dbg.enterSubRule(102);
					try { dbg.enterDecision(102, decisionCanBacktrack[102]);

					int LA102_0 = input.LA(1);
					if ( (LA102_0==COMMENT||LA102_0==NL||LA102_0==WS) ) {
						alt102=1;
					}
					} finally {dbg.exitDecision(102);}

					switch (alt102) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:97: ws
							{
							dbg.location(561,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1961);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(102);}
					dbg.location(561,101);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt103=3;
					try { dbg.enterSubRule(103);
					try { dbg.enterDecision(103, decisionCanBacktrack[103]);

					int LA103_0 = input.LA(1);
					if ( (LA103_0==IDENT) ) {
						int LA103_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt103=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt103=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 103, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA103_0==PERCENTAGE) ) {
						alt103=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 103, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(103);}

					switch (alt103) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:103: {...}? IDENT
							{
							dbg.location(561,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(561,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1968); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:138: {...}? IDENT
							{
							dbg.location(561,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(561,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1974); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:171: PERCENTAGE
							{
							dbg.location(561,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1978); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(103);}

					}
					break;

				default :
					break loop104;
				}
			}
			} finally {dbg.exitSubRule(104);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(562, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE ;
	public final void page() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(564, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE
			{
			dbg.location(565,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page1997); if (state.failed) return;dbg.location(565,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:16: ( ws )?
			int alt105=2;
			try { dbg.enterSubRule(105);
			try { dbg.enterDecision(105, decisionCanBacktrack[105]);

			int LA105_0 = input.LA(1);
			if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
				alt105=1;
			}
			} finally {dbg.exitDecision(105);}

			switch (alt105) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:16: ws
					{
					dbg.location(565,16);
					pushFollow(FOLLOW_ws_in_page1999);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(105);}
			dbg.location(565,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:20: ( IDENT ( ws )? )?
			int alt107=2;
			try { dbg.enterSubRule(107);
			try { dbg.enterDecision(107, decisionCanBacktrack[107]);

			int LA107_0 = input.LA(1);
			if ( (LA107_0==IDENT) ) {
				alt107=1;
			}
			} finally {dbg.exitDecision(107);}

			switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:22: IDENT ( ws )?
					{
					dbg.location(565,22);
					match(input,IDENT,FOLLOW_IDENT_in_page2004); if (state.failed) return;dbg.location(565,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:28: ( ws )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					int LA106_0 = input.LA(1);
					if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
						alt106=1;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:28: ws
							{
							dbg.location(565,28);
							pushFollow(FOLLOW_ws_in_page2006);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}

					}
					break;

			}
			} finally {dbg.exitSubRule(107);}
			dbg.location(565,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:35: ( pseudoPage ( ws )? )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COLON) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:36: pseudoPage ( ws )?
					{
					dbg.location(565,36);
					pushFollow(FOLLOW_pseudoPage_in_page2013);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(565,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:47: ( ws )?
					int alt108=2;
					try { dbg.enterSubRule(108);
					try { dbg.enterDecision(108, decisionCanBacktrack[108]);

					int LA108_0 = input.LA(1);
					if ( (LA108_0==COMMENT||LA108_0==NL||LA108_0==WS) ) {
						alt108=1;
					}
					} finally {dbg.exitDecision(108);}

					switch (alt108) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:47: ws
							{
							dbg.location(565,47);
							pushFollow(FOLLOW_ws_in_page2015);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(108);}

					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(566,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page2028); if (state.failed) return;dbg.location(566,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:16: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:16: ws
					{
					dbg.location(566,16);
					pushFollow(FOLLOW_ws_in_page2030);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(569,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:13: ( ( propertyDeclaration | margin ) ( ws )? )?
			int alt113=2;
			try { dbg.enterSubRule(113);
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			int LA113_0 = input.LA(1);
			if ( ((LA113_0 >= AT_IDENT && LA113_0 <= AT_SIGN)||(LA113_0 >= BOTTOMCENTER_SYM && LA113_0 <= BOTTOMRIGHT_SYM)||LA113_0==CHARSET_SYM||LA113_0==COUNTER_STYLE_SYM||LA113_0==FONT_FACE_SYM||LA113_0==GEN||LA113_0==HASH_SYMBOL||LA113_0==IDENT||LA113_0==IMPORT_SYM||(LA113_0 >= LEFTBOTTOM_SYM && LA113_0 <= LEFTTOP_SYM)||(LA113_0 >= MEDIA_SYM && LA113_0 <= MOZ_DOCUMENT_SYM)||LA113_0==NAMESPACE_SYM||LA113_0==PAGE_SYM||(LA113_0 >= RIGHTBOTTOM_SYM && LA113_0 <= RIGHTTOP_SYM)||(LA113_0 >= SASS_AT_ROOT && LA113_0 <= SASS_DEBUG)||(LA113_0 >= SASS_EACH && LA113_0 <= SASS_ELSE)||LA113_0==SASS_EXTEND||(LA113_0 >= SASS_FOR && LA113_0 <= SASS_FUNCTION)||(LA113_0 >= SASS_IF && LA113_0 <= SASS_MIXIN)||(LA113_0 >= SASS_RETURN && LA113_0 <= SASS_WHILE)||LA113_0==STAR||(LA113_0 >= TOPCENTER_SYM && LA113_0 <= TOPRIGHT_SYM)||LA113_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt113=1;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:14: ( propertyDeclaration | margin ) ( ws )?
					{
					dbg.location(569,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:14: ( propertyDeclaration | margin )
					int alt111=2;
					try { dbg.enterSubRule(111);
					try { dbg.enterDecision(111, decisionCanBacktrack[111]);

					try {
						isCyclicDecision = true;
						alt111 = dfa111.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(111);}

					switch (alt111) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:15: propertyDeclaration
							{
							dbg.location(569,15);
							pushFollow(FOLLOW_propertyDeclaration_in_page2073);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:35: margin
							{
							dbg.location(569,35);
							pushFollow(FOLLOW_margin_in_page2075);
							margin();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(111);}
					dbg.location(569,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:43: ( ws )?
					int alt112=2;
					try { dbg.enterSubRule(112);
					try { dbg.enterDecision(112, decisionCanBacktrack[112]);

					int LA112_0 = input.LA(1);
					if ( (LA112_0==COMMENT||LA112_0==NL||LA112_0==WS) ) {
						alt112=1;
					}
					} finally {dbg.exitDecision(112);}

					switch (alt112) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:43: ws
							{
							dbg.location(569,43);
							pushFollow(FOLLOW_ws_in_page2078);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(112);}

					}
					break;

			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(569,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:49: ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )*
			try { dbg.enterSubRule(118);

			loop118:
			while (true) {
				int alt118=2;
				try { dbg.enterDecision(118, decisionCanBacktrack[118]);

				int LA118_0 = input.LA(1);
				if ( (LA118_0==SEMI) ) {
					alt118=1;
				}

				} finally {dbg.exitDecision(118);}

				switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:50: SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )?
					{
					dbg.location(569,50);
					match(input,SEMI,FOLLOW_SEMI_in_page2084); if (state.failed) return;dbg.location(569,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:55: ( ws )?
					int alt114=2;
					try { dbg.enterSubRule(114);
					try { dbg.enterDecision(114, decisionCanBacktrack[114]);

					int LA114_0 = input.LA(1);
					if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
						alt114=1;
					}
					} finally {dbg.exitDecision(114);}

					switch (alt114) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:55: ws
							{
							dbg.location(569,55);
							pushFollow(FOLLOW_ws_in_page2086);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(114);}
					dbg.location(569,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:59: ( ( propertyDeclaration | margin ) ( ws )? )?
					int alt117=2;
					try { dbg.enterSubRule(117);
					try { dbg.enterDecision(117, decisionCanBacktrack[117]);

					int LA117_0 = input.LA(1);
					if ( ((LA117_0 >= AT_IDENT && LA117_0 <= AT_SIGN)||(LA117_0 >= BOTTOMCENTER_SYM && LA117_0 <= BOTTOMRIGHT_SYM)||LA117_0==CHARSET_SYM||LA117_0==COUNTER_STYLE_SYM||LA117_0==FONT_FACE_SYM||LA117_0==GEN||LA117_0==HASH_SYMBOL||LA117_0==IDENT||LA117_0==IMPORT_SYM||(LA117_0 >= LEFTBOTTOM_SYM && LA117_0 <= LEFTTOP_SYM)||(LA117_0 >= MEDIA_SYM && LA117_0 <= MOZ_DOCUMENT_SYM)||LA117_0==NAMESPACE_SYM||LA117_0==PAGE_SYM||(LA117_0 >= RIGHTBOTTOM_SYM && LA117_0 <= RIGHTTOP_SYM)||(LA117_0 >= SASS_AT_ROOT && LA117_0 <= SASS_DEBUG)||(LA117_0 >= SASS_EACH && LA117_0 <= SASS_ELSE)||LA117_0==SASS_EXTEND||(LA117_0 >= SASS_FOR && LA117_0 <= SASS_FUNCTION)||(LA117_0 >= SASS_IF && LA117_0 <= SASS_MIXIN)||(LA117_0 >= SASS_RETURN && LA117_0 <= SASS_WHILE)||LA117_0==STAR||(LA117_0 >= TOPCENTER_SYM && LA117_0 <= TOPRIGHT_SYM)||LA117_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt117=1;
					}
					} finally {dbg.exitDecision(117);}

					switch (alt117) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:60: ( propertyDeclaration | margin ) ( ws )?
							{
							dbg.location(569,60);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:60: ( propertyDeclaration | margin )
							int alt115=2;
							try { dbg.enterSubRule(115);
							try { dbg.enterDecision(115, decisionCanBacktrack[115]);

							try {
								isCyclicDecision = true;
								alt115 = dfa115.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(115);}

							switch (alt115) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:61: propertyDeclaration
									{
									dbg.location(569,61);
									pushFollow(FOLLOW_propertyDeclaration_in_page2091);
									propertyDeclaration();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:81: margin
									{
									dbg.location(569,81);
									pushFollow(FOLLOW_margin_in_page2093);
									margin();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(115);}
							dbg.location(569,89);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:89: ( ws )?
							int alt116=2;
							try { dbg.enterSubRule(116);
							try { dbg.enterDecision(116, decisionCanBacktrack[116]);

							int LA116_0 = input.LA(1);
							if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
								alt116=1;
							}
							} finally {dbg.exitDecision(116);}

							switch (alt116) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:89: ws
									{
									dbg.location(569,89);
									pushFollow(FOLLOW_ws_in_page2096);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(116);}

							}
							break;

					}
					} finally {dbg.exitSubRule(117);}

					}
					break;

				default :
					break loop118;
				}
			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(570,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page2111); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(571, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:573:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(573, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(574,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2128); if (state.failed) return;dbg.location(574,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:25: ( ws )?
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( (LA119_0==COMMENT||LA119_0==NL||LA119_0==WS) ) {
				alt119=1;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:25: ws
					{
					dbg.location(574,25);
					pushFollow(FOLLOW_ws_in_counterStyle2130);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(574,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2133); if (state.failed) return;dbg.location(574,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:35: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:35: ws
					{
					dbg.location(574,35);
					pushFollow(FOLLOW_ws_in_counterStyle2135);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(575,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2146); if (state.failed) return;dbg.location(575,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:16: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:16: ws
					{
					dbg.location(575,16);
					pushFollow(FOLLOW_ws_in_counterStyle2148);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(575,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2151);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(576,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:3: ( declarations )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( ((LA122_0 >= AT_IDENT && LA122_0 <= AT_SIGN)||(LA122_0 >= BOTTOMCENTER_SYM && LA122_0 <= BOTTOMRIGHT_SYM)||(LA122_0 >= CHARSET_SYM && LA122_0 <= COLON)||LA122_0==COUNTER_STYLE_SYM||(LA122_0 >= DCOLON && LA122_0 <= DOT)||LA122_0==FONT_FACE_SYM||(LA122_0 >= GEN && LA122_0 <= GREATER)||(LA122_0 >= HASH && LA122_0 <= HASH_SYMBOL)||LA122_0==IDENT||LA122_0==IMPORT_SYM||(LA122_0 >= LBRACKET && LA122_0 <= LEFTTOP_SYM)||LA122_0==LESS_AND||(LA122_0 >= MEDIA_SYM && LA122_0 <= MOZ_DOCUMENT_SYM)||LA122_0==NAMESPACE_SYM||LA122_0==PAGE_SYM||(LA122_0 >= PIPE && LA122_0 <= PLUS)||(LA122_0 >= RIGHTBOTTOM_SYM && LA122_0 <= RIGHTTOP_SYM)||(LA122_0 >= SASS_AT_ROOT && LA122_0 <= SASS_DEBUG)||(LA122_0 >= SASS_EACH && LA122_0 <= SASS_ELSE)||(LA122_0 >= SASS_ERROR && LA122_0 <= SASS_FUNCTION)||(LA122_0 >= SASS_IF && LA122_0 <= SASS_MIXIN)||(LA122_0 >= SASS_RETURN && LA122_0 <= SEMI)||LA122_0==STAR||LA122_0==TILDE||(LA122_0 >= TOPCENTER_SYM && LA122_0 <= TOPRIGHT_SYM)||LA122_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:3: declarations
					{
					dbg.location(576,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2155);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(577,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2166); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(578, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(580, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(581,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2183); if (state.failed) return;dbg.location(581,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:21: ( ws )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( (LA123_0==COMMENT||LA123_0==NL||LA123_0==WS) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:21: ws
					{
					dbg.location(581,21);
					pushFollow(FOLLOW_ws_in_fontFace2185);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(582,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace2196); if (state.failed) return;dbg.location(582,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:16: ( ws )?
			int alt124=2;
			try { dbg.enterSubRule(124);
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			int LA124_0 = input.LA(1);
			if ( (LA124_0==COMMENT||LA124_0==NL||LA124_0==WS) ) {
				alt124=1;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:16: ws
					{
					dbg.location(582,16);
					pushFollow(FOLLOW_ws_in_fontFace2198);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(124);}
			dbg.location(582,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace2201);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(583,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:3: ( declarations )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( ((LA125_0 >= AT_IDENT && LA125_0 <= AT_SIGN)||(LA125_0 >= BOTTOMCENTER_SYM && LA125_0 <= BOTTOMRIGHT_SYM)||(LA125_0 >= CHARSET_SYM && LA125_0 <= COLON)||LA125_0==COUNTER_STYLE_SYM||(LA125_0 >= DCOLON && LA125_0 <= DOT)||LA125_0==FONT_FACE_SYM||(LA125_0 >= GEN && LA125_0 <= GREATER)||(LA125_0 >= HASH && LA125_0 <= HASH_SYMBOL)||LA125_0==IDENT||LA125_0==IMPORT_SYM||(LA125_0 >= LBRACKET && LA125_0 <= LEFTTOP_SYM)||LA125_0==LESS_AND||(LA125_0 >= MEDIA_SYM && LA125_0 <= MOZ_DOCUMENT_SYM)||LA125_0==NAMESPACE_SYM||LA125_0==PAGE_SYM||(LA125_0 >= PIPE && LA125_0 <= PLUS)||(LA125_0 >= RIGHTBOTTOM_SYM && LA125_0 <= RIGHTTOP_SYM)||(LA125_0 >= SASS_AT_ROOT && LA125_0 <= SASS_DEBUG)||(LA125_0 >= SASS_EACH && LA125_0 <= SASS_ELSE)||(LA125_0 >= SASS_ERROR && LA125_0 <= SASS_FUNCTION)||(LA125_0 >= SASS_IF && LA125_0 <= SASS_MIXIN)||(LA125_0 >= SASS_RETURN && LA125_0 <= SEMI)||LA125_0==STAR||LA125_0==TILDE||(LA125_0 >= TOPCENTER_SYM && LA125_0 <= TOPRIGHT_SYM)||LA125_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:3: declarations
					{
					dbg.location(583,3);
					pushFollow(FOLLOW_declarations_in_fontFace2205);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(584,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace2216); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(585, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(587, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(588,4);
			pushFollow(FOLLOW_margin_sym_in_margin2230);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(588,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:15: ( ws )?
			int alt126=2;
			try { dbg.enterSubRule(126);
			try { dbg.enterDecision(126, decisionCanBacktrack[126]);

			int LA126_0 = input.LA(1);
			if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
				alt126=1;
			}
			} finally {dbg.exitDecision(126);}

			switch (alt126) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:15: ws
					{
					dbg.location(588,15);
					pushFollow(FOLLOW_ws_in_margin2232);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(126);}
			dbg.location(588,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin2235); if (state.failed) return;dbg.location(588,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:26: ( ws )?
			int alt127=2;
			try { dbg.enterSubRule(127);
			try { dbg.enterDecision(127, decisionCanBacktrack[127]);

			int LA127_0 = input.LA(1);
			if ( (LA127_0==COMMENT||LA127_0==NL||LA127_0==WS) ) {
				alt127=1;
			}
			} finally {dbg.exitDecision(127);}

			switch (alt127) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:26: ws
					{
					dbg.location(588,26);
					pushFollow(FOLLOW_ws_in_margin2237);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(127);}
			dbg.location(588,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin2240);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(588,53);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:53: ( declarations )?
			int alt128=2;
			try { dbg.enterSubRule(128);
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( ((LA128_0 >= AT_IDENT && LA128_0 <= AT_SIGN)||(LA128_0 >= BOTTOMCENTER_SYM && LA128_0 <= BOTTOMRIGHT_SYM)||(LA128_0 >= CHARSET_SYM && LA128_0 <= COLON)||LA128_0==COUNTER_STYLE_SYM||(LA128_0 >= DCOLON && LA128_0 <= DOT)||LA128_0==FONT_FACE_SYM||(LA128_0 >= GEN && LA128_0 <= GREATER)||(LA128_0 >= HASH && LA128_0 <= HASH_SYMBOL)||LA128_0==IDENT||LA128_0==IMPORT_SYM||(LA128_0 >= LBRACKET && LA128_0 <= LEFTTOP_SYM)||LA128_0==LESS_AND||(LA128_0 >= MEDIA_SYM && LA128_0 <= MOZ_DOCUMENT_SYM)||LA128_0==NAMESPACE_SYM||LA128_0==PAGE_SYM||(LA128_0 >= PIPE && LA128_0 <= PLUS)||(LA128_0 >= RIGHTBOTTOM_SYM && LA128_0 <= RIGHTTOP_SYM)||(LA128_0 >= SASS_AT_ROOT && LA128_0 <= SASS_DEBUG)||(LA128_0 >= SASS_EACH && LA128_0 <= SASS_ELSE)||(LA128_0 >= SASS_ERROR && LA128_0 <= SASS_FUNCTION)||(LA128_0 >= SASS_IF && LA128_0 <= SASS_MIXIN)||(LA128_0 >= SASS_RETURN && LA128_0 <= SEMI)||LA128_0==STAR||LA128_0==TILDE||(LA128_0 >= TOPCENTER_SYM && LA128_0 <= TOPRIGHT_SYM)||LA128_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt128=1;
			}
			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:53: declarations
					{
					dbg.location(588,53);
					pushFollow(FOLLOW_declarations_in_margin2242);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(128);}
			dbg.location(588,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin2245); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(589, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(591, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:592:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(592,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(609, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(611, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:7: COLON IDENT
			{
			dbg.location(612,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage2454); if (state.failed) return;dbg.location(612,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage2456); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(613, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(615, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:616:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(616,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(618, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(620, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(621,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(623, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:625:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(625, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable )
			int alt129=5;
			try { dbg.enterDecision(129, decisionCanBacktrack[129]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case HASH_SYMBOL:
					{
					alt129=1;
					}
					break;
				case AT_SIGN:
					{
					alt129=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt129=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 129, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt129=1;
				}
				break;
			case AT_SIGN:
				{
				alt129=2;
				}
				break;
			case MINUS:
				{
				int LA129_4 = input.LA(2);
				if ( (LA129_4==HASH_SYMBOL) ) {
					alt129=1;
				}
				else if ( (LA129_4==AT_SIGN) ) {
					alt129=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 129, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt129=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt129=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 129, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(129);}

			switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:630:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(630,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(630,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property2540);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:631:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(631,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(631,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property2550);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:632:7: IDENT
					{
					dbg.location(632,7);
					match(input,IDENT,FOLLOW_IDENT_in_property2558); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:633:7: GEN
					{
					dbg.location(633,7);
					match(input,GEN,FOLLOW_GEN_in_property2566); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:7: {...}? cp_variable
					{
					dbg.location(634,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(634,36);
					pushFollow(FOLLOW_cp_variable_in_property2576);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(636, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(641, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(643,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map2603);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(643,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map2605); if (state.failed) return;dbg.location(643,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:25: ( ws )?
			int alt130=2;
			try { dbg.enterSubRule(130);
			try { dbg.enterDecision(130, decisionCanBacktrack[130]);

			int LA130_0 = input.LA(1);
			if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
				alt130=1;
			}
			} finally {dbg.exitDecision(130);}

			switch (alt130) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:25: ws
					{
					dbg.location(643,25);
					pushFollow(FOLLOW_ws_in_sass_map2607);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(130);}
			dbg.location(643,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map2610); if (state.failed) return;dbg.location(643,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:36: ( ws )?
			int alt131=2;
			try { dbg.enterSubRule(131);
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
				alt131=1;
			}
			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:36: ws
					{
					dbg.location(643,36);
					pushFollow(FOLLOW_ws_in_sass_map2612);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(131);}
			dbg.location(643,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map2615);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(645,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:645:9: ( sass_map_pairs )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( ((LA132_0 >= AT_IDENT && LA132_0 <= AT_SIGN)||(LA132_0 >= BOTTOMCENTER_SYM && LA132_0 <= BOTTOMRIGHT_SYM)||LA132_0==CHARSET_SYM||LA132_0==COMMA||LA132_0==COUNTER_STYLE_SYM||LA132_0==FONT_FACE_SYM||LA132_0==GEN||LA132_0==HASH_SYMBOL||LA132_0==IDENT||LA132_0==IMPORT_SYM||(LA132_0 >= LEFTBOTTOM_SYM && LA132_0 <= LEFTTOP_SYM)||(LA132_0 >= MEDIA_SYM && LA132_0 <= MOZ_DOCUMENT_SYM)||LA132_0==NAMESPACE_SYM||LA132_0==NUMBER||LA132_0==PAGE_SYM||(LA132_0 >= RIGHTBOTTOM_SYM && LA132_0 <= RIGHTTOP_SYM)||(LA132_0 >= SASS_AT_ROOT && LA132_0 <= SASS_DEBUG)||(LA132_0 >= SASS_EACH && LA132_0 <= SASS_ELSE)||LA132_0==SASS_EXTEND||(LA132_0 >= SASS_FOR && LA132_0 <= SASS_FUNCTION)||(LA132_0 >= SASS_IF && LA132_0 <= SASS_MIXIN)||(LA132_0 >= SASS_RETURN && LA132_0 <= SASS_WHILE)||LA132_0==STRING||(LA132_0 >= TOPCENTER_SYM && LA132_0 <= TOPRIGHT_SYM)||LA132_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:645:9: sass_map_pairs
					{
					dbg.location(645,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map2634);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(646,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map2641); if (state.failed) return;dbg.location(646,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(135);

			loop135:
			while (true) {
				int alt135=3;
				try { dbg.enterDecision(135, decisionCanBacktrack[135]);

				try {
					isCyclicDecision = true;
					alt135 = dfa135.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(135);}

				switch (alt135) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(646,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(646,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:14: ( ws )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:14: ws
							{
							dbg.location(646,14);
							pushFollow(FOLLOW_ws_in_sass_map2645);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}
					dbg.location(646,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map2648); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(646,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(646,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:35: ( ws )?
					int alt134=2;
					try { dbg.enterSubRule(134);
					try { dbg.enterDecision(134, decisionCanBacktrack[134]);

					int LA134_0 = input.LA(1);
					if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
						alt134=1;
					}
					} finally {dbg.exitDecision(134);}

					switch (alt134) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:35: ws
							{
							dbg.location(646,35);
							pushFollow(FOLLOW_ws_in_sass_map2654);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(134);}
					dbg.location(646,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map2657); if (state.failed) return;
					}

					}
					break;

				default :
					break loop135;
				}
			}
			} finally {dbg.exitSubRule(135);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(647, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(649, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:5: cp_variable
			{
			dbg.location(651,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name2681);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(652, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(654, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:655:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:656:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(656,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:656:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt140=0;
			try { dbg.enterSubRule(140);

			loop140:
			while (true) {
				int alt140=3;
				try { dbg.enterDecision(140, decisionCanBacktrack[140]);

				int LA140_0 = input.LA(1);
				if ( ((LA140_0 >= AT_IDENT && LA140_0 <= AT_SIGN)||(LA140_0 >= BOTTOMCENTER_SYM && LA140_0 <= BOTTOMRIGHT_SYM)||LA140_0==CHARSET_SYM||LA140_0==COUNTER_STYLE_SYM||LA140_0==FONT_FACE_SYM||LA140_0==GEN||LA140_0==HASH_SYMBOL||LA140_0==IDENT||LA140_0==IMPORT_SYM||(LA140_0 >= LEFTBOTTOM_SYM && LA140_0 <= LEFTTOP_SYM)||(LA140_0 >= MEDIA_SYM && LA140_0 <= MOZ_DOCUMENT_SYM)||LA140_0==NAMESPACE_SYM||LA140_0==NUMBER||LA140_0==PAGE_SYM||(LA140_0 >= RIGHTBOTTOM_SYM && LA140_0 <= RIGHTTOP_SYM)||(LA140_0 >= SASS_AT_ROOT && LA140_0 <= SASS_DEBUG)||(LA140_0 >= SASS_EACH && LA140_0 <= SASS_ELSE)||LA140_0==SASS_EXTEND||(LA140_0 >= SASS_FOR && LA140_0 <= SASS_FUNCTION)||(LA140_0 >= SASS_IF && LA140_0 <= SASS_MIXIN)||(LA140_0 >= SASS_RETURN && LA140_0 <= SASS_WHILE)||LA140_0==STRING||(LA140_0 >= TOPCENTER_SYM && LA140_0 <= TOPRIGHT_SYM)||LA140_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt140=1;
				}
				else if ( (LA140_0==COMMA) ) {
					alt140=2;
				}

				} finally {dbg.exitDecision(140);}

				switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(657,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(657,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs2715);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(657,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					try {
						isCyclicDecision = true;
						alt137 = dfa137.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(657,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:40: ( ws )?
							int alt136=2;
							try { dbg.enterSubRule(136);
							try { dbg.enterDecision(136, decisionCanBacktrack[136]);

							int LA136_0 = input.LA(1);
							if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
								alt136=1;
							}
							} finally {dbg.exitDecision(136);}

							switch (alt136) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:40: ws
									{
									dbg.location(657,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs2725);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(136);}
							dbg.location(657,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2728); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(657,52);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:52: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:52: ws
							{
							dbg.location(657,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2732);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:10: ( COMMA ( ws )? )
					{
					dbg.location(659,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:12: COMMA ( ws )?
					{
					dbg.location(659,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2759); if (state.failed) return;dbg.location(659,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:18: ( ws )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( (LA139_0==COMMENT||LA139_0==NL||LA139_0==WS) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:18: ws
							{
							dbg.location(659,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2761);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}

					}

					}
					break;

				default :
					if ( cnt140 >= 1 ) break loop140;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(140, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt140++;
			}
			} finally {dbg.exitSubRule(140);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(661, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:1: sass_map_pair : ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(663, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:5: ( ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(665,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map )
			int alt143=5;
			try { dbg.enterSubRule(143);
			try { dbg.enterDecision(143, decisionCanBacktrack[143]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt143=1;
				}
				break;
			case STRING:
				{
				alt143=2;
				}
				break;
			case IDENT:
				{
				int LA143_3 = input.LA(2);
				if ( (synpred18_Css3()) ) {
					alt143=3;
				}
				else if ( (true) ) {
					alt143=4;
				}

				}
				break;
			case AT_SIGN:
			case GEN:
			case HASH_SYMBOL:
			case MINUS:
				{
				alt143=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA143_8 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt143=4;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt143=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 143, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA143_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt143=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt143=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 143, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 143, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(143);}

			switch (alt143) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:10: NUMBER
					{
					dbg.location(665,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair2797); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:17: ( STRING ( ( ws )? STRING )* )
					{
					dbg.location(665,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:17: ( STRING ( ( ws )? STRING )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:18: STRING ( ( ws )? STRING )*
					{
					dbg.location(665,18);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair2800); if (state.failed) return;dbg.location(665,25);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:25: ( ( ws )? STRING )*
					try { dbg.enterSubRule(142);

					loop142:
					while (true) {
						int alt142=2;
						try { dbg.enterDecision(142, decisionCanBacktrack[142]);

						try {
							isCyclicDecision = true;
							alt142 = dfa142.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(142);}

						switch (alt142) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:26: ( ws )? STRING
							{
							dbg.location(665,26);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:26: ( ws )?
							int alt141=2;
							try { dbg.enterSubRule(141);
							try { dbg.enterDecision(141, decisionCanBacktrack[141]);

							int LA141_0 = input.LA(1);
							if ( (LA141_0==COMMENT||LA141_0==NL||LA141_0==WS) ) {
								alt141=1;
							}
							} finally {dbg.exitDecision(141);}

							switch (alt141) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:26: ws
									{
									dbg.location(665,26);
									pushFollow(FOLLOW_ws_in_sass_map_pair2803);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(141);}
							dbg.location(665,30);
							match(input,STRING,FOLLOW_STRING_in_sass_map_pair2806); if (state.failed) return;
							}
							break;

						default :
							break loop142;
						}
					}
					} finally {dbg.exitSubRule(142);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:40: ( ( function )=> function )
					{
					dbg.location(665,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:40: ( ( function )=> function )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:41: ( function )=> function
					{
					dbg.location(665,53);
					pushFollow(FOLLOW_function_in_sass_map_pair2816);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:63: property
					{
					dbg.location(665,63);
					pushFollow(FOLLOW_property_in_sass_map_pair2819);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:72: sass_map
					{
					dbg.location(665,72);
					pushFollow(FOLLOW_sass_map_in_sass_map_pair2821);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(143);}
			dbg.location(665,82);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:82: ( ws )?
			int alt144=2;
			try { dbg.enterSubRule(144);
			try { dbg.enterDecision(144, decisionCanBacktrack[144]);

			int LA144_0 = input.LA(1);
			if ( (LA144_0==COMMENT||LA144_0==NL||LA144_0==WS) ) {
				alt144=1;
			}
			} finally {dbg.exitDecision(144);}

			switch (alt144) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:82: ws
					{
					dbg.location(665,82);
					pushFollow(FOLLOW_ws_in_sass_map_pair2824);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(144);}
			dbg.location(665,86);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair2827); if (state.failed) return;dbg.location(665,92);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:92: ( ws )?
			int alt145=2;
			try { dbg.enterSubRule(145);
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			int LA145_0 = input.LA(1);
			if ( (LA145_0==COMMENT||LA145_0==NL||LA145_0==WS) ) {
				alt145=1;
			}
			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:92: ws
					{
					dbg.location(665,92);
					pushFollow(FOLLOW_ws_in_sass_map_pair2829);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(145);}
			dbg.location(665,96);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair2832);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(665,110);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:110: ( ( ws )? prio )?
			int alt147=2;
			try { dbg.enterSubRule(147);
			try { dbg.enterDecision(147, decisionCanBacktrack[147]);

			try {
				isCyclicDecision = true;
				alt147 = dfa147.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(147);}

			switch (alt147) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:111: ( ws )? prio
					{
					dbg.location(665,111);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:111: ( ws )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					int LA146_0 = input.LA(1);
					if ( (LA146_0==COMMENT||LA146_0==NL||LA146_0==WS) ) {
						alt146=1;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:111: ws
							{
							dbg.location(665,111);
							pushFollow(FOLLOW_ws_in_sass_map_pair2835);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}
					dbg.location(665,115);
					pushFollow(FOLLOW_prio_in_sass_map_pair2838);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(147);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(666, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(668, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(670,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt153=3;
			try { dbg.enterSubRule(153);
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			try {
				isCyclicDecision = true;
				alt153 = dfa153.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(671,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(671,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2880); if (state.failed) return;dbg.location(671,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:27: ( ws selectorsGroup )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					try {
						isCyclicDecision = true;
						alt148 = dfa148.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:28: ws selectorsGroup
							{
							dbg.location(671,28);
							pushFollow(FOLLOW_ws_in_rule2883);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(671,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule2885);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(672,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(672,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2906); if (state.failed) return;dbg.location(672,29);
					pushFollow(FOLLOW_ws_in_rule2908);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(672,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule2910); if (state.failed) return;dbg.location(672,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:39: ( ws )?
					int alt149=2;
					try { dbg.enterSubRule(149);
					try { dbg.enterDecision(149, decisionCanBacktrack[149]);

					int LA149_0 = input.LA(1);
					if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
						alt149=1;
					}
					} finally {dbg.exitDecision(149);}

					switch (alt149) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:39: ws
							{
							dbg.location(672,39);
							pushFollow(FOLLOW_ws_in_rule2912);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(149);}
					dbg.location(672,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(672,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule2917); if (state.failed) return;dbg.location(672,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:128: ( ws )?
					int alt150=2;
					try { dbg.enterSubRule(150);
					try { dbg.enterDecision(150, decisionCanBacktrack[150]);

					int LA150_0 = input.LA(1);
					if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
						alt150=1;
					}
					} finally {dbg.exitDecision(150);}

					switch (alt150) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:128: ws
							{
							dbg.location(672,128);
							pushFollow(FOLLOW_ws_in_rule2921);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(150);}
					dbg.location(672,132);
					match(input,COLON,FOLLOW_COLON_in_rule2924); if (state.failed) return;dbg.location(672,138);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:138: ( ws )?
					int alt151=2;
					try { dbg.enterSubRule(151);
					try { dbg.enterDecision(151, decisionCanBacktrack[151]);

					int LA151_0 = input.LA(1);
					if ( (LA151_0==COMMENT||LA151_0==NL||LA151_0==WS) ) {
						alt151=1;
					}
					} finally {dbg.exitDecision(151);}

					switch (alt151) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:138: ws
							{
							dbg.location(672,138);
							pushFollow(FOLLOW_ws_in_rule2926);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(151);}
					dbg.location(672,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule2929); if (state.failed) return;dbg.location(672,148);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:148: ( ws )?
					int alt152=2;
					try { dbg.enterSubRule(152);
					try { dbg.enterDecision(152, decisionCanBacktrack[152]);

					int LA152_0 = input.LA(1);
					if ( (LA152_0==COMMENT||LA152_0==NL||LA152_0==WS) ) {
						alt152=1;
					}
					} finally {dbg.exitDecision(152);}

					switch (alt152) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:148: ws
							{
							dbg.location(672,148);
							pushFollow(FOLLOW_ws_in_rule2931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(152);}
					dbg.location(672,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule2934); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:15: selectorsGroup
					{
					dbg.location(673,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule2952);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(153);}
			dbg.location(674,11);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:11: ( ws )?
			int alt154=2;
			try { dbg.enterSubRule(154);
			try { dbg.enterDecision(154, decisionCanBacktrack[154]);

			int LA154_0 = input.LA(1);
			if ( (LA154_0==COMMENT||LA154_0==NL||LA154_0==WS) ) {
				alt154=1;
			}
			} finally {dbg.exitDecision(154);}

			switch (alt154) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:11: ws
					{
					dbg.location(674,11);
					pushFollow(FOLLOW_ws_in_rule2964);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(154);}
			dbg.location(675,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule2971); if (state.failed) return;dbg.location(675,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:12: ( ws )?
			int alt155=2;
			try { dbg.enterSubRule(155);
			try { dbg.enterDecision(155, decisionCanBacktrack[155]);

			int LA155_0 = input.LA(1);
			if ( (LA155_0==COMMENT||LA155_0==NL||LA155_0==WS) ) {
				alt155=1;
			}
			} finally {dbg.exitDecision(155);}

			switch (alt155) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:12: ws
					{
					dbg.location(675,12);
					pushFollow(FOLLOW_ws_in_rule2973);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(155);}
			dbg.location(675,16);
			pushFollow(FOLLOW_syncToFollow_in_rule2976);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(676,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:9: ( declarations )?
			int alt156=2;
			try { dbg.enterSubRule(156);
			try { dbg.enterDecision(156, decisionCanBacktrack[156]);

			int LA156_0 = input.LA(1);
			if ( ((LA156_0 >= AT_IDENT && LA156_0 <= AT_SIGN)||(LA156_0 >= BOTTOMCENTER_SYM && LA156_0 <= BOTTOMRIGHT_SYM)||(LA156_0 >= CHARSET_SYM && LA156_0 <= COLON)||LA156_0==COUNTER_STYLE_SYM||(LA156_0 >= DCOLON && LA156_0 <= DOT)||LA156_0==FONT_FACE_SYM||(LA156_0 >= GEN && LA156_0 <= GREATER)||(LA156_0 >= HASH && LA156_0 <= HASH_SYMBOL)||LA156_0==IDENT||LA156_0==IMPORT_SYM||(LA156_0 >= LBRACKET && LA156_0 <= LEFTTOP_SYM)||LA156_0==LESS_AND||(LA156_0 >= MEDIA_SYM && LA156_0 <= MOZ_DOCUMENT_SYM)||LA156_0==NAMESPACE_SYM||LA156_0==PAGE_SYM||(LA156_0 >= PIPE && LA156_0 <= PLUS)||(LA156_0 >= RIGHTBOTTOM_SYM && LA156_0 <= RIGHTTOP_SYM)||(LA156_0 >= SASS_AT_ROOT && LA156_0 <= SASS_DEBUG)||(LA156_0 >= SASS_EACH && LA156_0 <= SASS_ELSE)||(LA156_0 >= SASS_ERROR && LA156_0 <= SASS_FUNCTION)||(LA156_0 >= SASS_IF && LA156_0 <= SASS_MIXIN)||(LA156_0 >= SASS_RETURN && LA156_0 <= SEMI)||LA156_0==STAR||LA156_0==TILDE||(LA156_0 >= TOPCENTER_SYM && LA156_0 <= TOPRIGHT_SYM)||LA156_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt156=1;
			}
			} finally {dbg.exitDecision(156);}

			switch (alt156) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:9: declarations
					{
					dbg.location(676,9);
					pushFollow(FOLLOW_declarations_in_rule2986);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(156);}
			dbg.location(677,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule2993); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(678, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(685, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt170=2;
			try { dbg.enterDecision(170, decisionCanBacktrack[170]);

			try {
				isCyclicDecision = true;
				alt170 = dfa170.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(170);}

			switch (alt170) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(687,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(158);

					loop158:
					while (true) {
						int alt158=2;
						try { dbg.enterDecision(158, decisionCanBacktrack[158]);

						int LA158_0 = input.LA(1);
						if ( (LA158_0==SEMI) ) {
							alt158=1;
						}

						} finally {dbg.exitDecision(158);}

						switch (alt158) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:9: SEMI ( ws )?
							{
							dbg.location(687,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3027); if (state.failed) return;dbg.location(687,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:14: ( ws )?
							int alt157=2;
							try { dbg.enterSubRule(157);
							try { dbg.enterDecision(157, decisionCanBacktrack[157]);

							int LA157_0 = input.LA(1);
							if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
								alt157=1;
							}
							} finally {dbg.exitDecision(157);}

							switch (alt157) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:14: ws
									{
									dbg.location(687,14);
									pushFollow(FOLLOW_ws_in_declarations3029);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(157);}

							}
							break;

						default :
							break loop158;
						}
					}
					} finally {dbg.exitSubRule(158);}
					dbg.location(687,21);
					pushFollow(FOLLOW_declaration_in_declarations3035);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(687,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(163);

					loop163:
					while (true) {
						int alt163=2;
						try { dbg.enterDecision(163, decisionCanBacktrack[163]);

						try {
							isCyclicDecision = true;
							alt163 = dfa163.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(163);}

						switch (alt163) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(687,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt162=2;
							try { dbg.enterSubRule(162);
							try { dbg.enterDecision(162, decisionCanBacktrack[162]);

							try {
								isCyclicDecision = true;
								alt162 = dfa162.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(162);}

							switch (alt162) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(687,35);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(687,36);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:36: ( ws )?
									int alt159=2;
									try { dbg.enterSubRule(159);
									try { dbg.enterDecision(159, decisionCanBacktrack[159]);

									int LA159_0 = input.LA(1);
									if ( (LA159_0==COMMENT||LA159_0==NL||LA159_0==WS) ) {
										alt159=1;
									}
									} finally {dbg.exitDecision(159);}

									switch (alt159) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:36: ws
											{
											dbg.location(687,36);
											pushFollow(FOLLOW_ws_in_declarations3040);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(159);}
									dbg.location(687,40);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:40: ( SEMI ( ws )? )+
									int cnt161=0;
									try { dbg.enterSubRule(161);

									loop161:
									while (true) {
										int alt161=2;
										try { dbg.enterDecision(161, decisionCanBacktrack[161]);

										int LA161_0 = input.LA(1);
										if ( (LA161_0==SEMI) ) {
											alt161=1;
										}

										} finally {dbg.exitDecision(161);}

										switch (alt161) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:41: SEMI ( ws )?
											{
											dbg.location(687,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations3044); if (state.failed) return;dbg.location(687,46);
											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:46: ( ws )?
											int alt160=2;
											try { dbg.enterSubRule(160);
											try { dbg.enterDecision(160, decisionCanBacktrack[160]);

											int LA160_0 = input.LA(1);
											if ( (LA160_0==COMMENT||LA160_0==NL||LA160_0==WS) ) {
												alt160=1;
											}
											} finally {dbg.exitDecision(160);}

											switch (alt160) {
												case 1 :
													dbg.enterAlt(1);

													// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:46: ws
													{
													dbg.location(687,46);
													pushFollow(FOLLOW_ws_in_declarations3046);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(160);}

											}
											break;

										default :
											if ( cnt161 >= 1 ) break loop161;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(161, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt161++;
									}
									} finally {dbg.exitSubRule(161);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:53: ws
									{
									dbg.location(687,53);
									pushFollow(FOLLOW_ws_in_declarations3052);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(162);}
							dbg.location(687,57);
							pushFollow(FOLLOW_declaration_in_declarations3055);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop163;
						}
					}
					} finally {dbg.exitSubRule(163);}
					dbg.location(687,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt167=3;
					try { dbg.enterSubRule(167);
					try { dbg.enterDecision(167, decisionCanBacktrack[167]);

					try {
						isCyclicDecision = true;
						alt167 = dfa167.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(167);}

					switch (alt167) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(687,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(687,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:73: ( ws )?
							int alt164=2;
							try { dbg.enterSubRule(164);
							try { dbg.enterDecision(164, decisionCanBacktrack[164]);

							int LA164_0 = input.LA(1);
							if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
								alt164=1;
							}
							} finally {dbg.exitDecision(164);}

							switch (alt164) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:73: ws
									{
									dbg.location(687,73);
									pushFollow(FOLLOW_ws_in_declarations3061);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(164);}
							dbg.location(687,77);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:77: ( SEMI ( ws )? )+
							int cnt166=0;
							try { dbg.enterSubRule(166);

							loop166:
							while (true) {
								int alt166=2;
								try { dbg.enterDecision(166, decisionCanBacktrack[166]);

								int LA166_0 = input.LA(1);
								if ( (LA166_0==SEMI) ) {
									alt166=1;
								}

								} finally {dbg.exitDecision(166);}

								switch (alt166) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:78: SEMI ( ws )?
									{
									dbg.location(687,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations3065); if (state.failed) return;dbg.location(687,83);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:83: ( ws )?
									int alt165=2;
									try { dbg.enterSubRule(165);
									try { dbg.enterDecision(165, decisionCanBacktrack[165]);

									int LA165_0 = input.LA(1);
									if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
										alt165=1;
									}
									} finally {dbg.exitDecision(165);}

									switch (alt165) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:83: ws
											{
											dbg.location(687,83);
											pushFollow(FOLLOW_ws_in_declarations3067);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(165);}

									}
									break;

								default :
									if ( cnt166 >= 1 ) break loop166;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(166, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt166++;
							}
							} finally {dbg.exitSubRule(166);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:90: ws
							{
							dbg.location(687,90);
							pushFollow(FOLLOW_ws_in_declarations3073);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(167);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:8: ( SEMI ( ws )? )+
					{
					dbg.location(688,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:8: ( SEMI ( ws )? )+
					int cnt169=0;
					try { dbg.enterSubRule(169);

					loop169:
					while (true) {
						int alt169=2;
						try { dbg.enterDecision(169, decisionCanBacktrack[169]);

						int LA169_0 = input.LA(1);
						if ( (LA169_0==SEMI) ) {
							alt169=1;
						}

						} finally {dbg.exitDecision(169);}

						switch (alt169) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:9: SEMI ( ws )?
							{
							dbg.location(688,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3085); if (state.failed) return;dbg.location(688,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:14: ( ws )?
							int alt168=2;
							try { dbg.enterSubRule(168);
							try { dbg.enterDecision(168, decisionCanBacktrack[168]);

							int LA168_0 = input.LA(1);
							if ( (LA168_0==COMMENT||LA168_0==NL||LA168_0==WS) ) {
								alt168=1;
							}
							} finally {dbg.exitDecision(168);}

							switch (alt168) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:14: ws
									{
									dbg.location(688,14);
									pushFollow(FOLLOW_ws_in_declarations3087);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(168);}

							}
							break;

						default :
							if ( cnt169 >= 1 ) break loop169;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(169, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt169++;
					}
					} finally {dbg.exitSubRule(169);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(689, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(691, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt175=18;
			try { dbg.enterDecision(175, decisionCanBacktrack[175]);

			int LA175_0 = input.LA(1);
			if ( (LA175_0==SASS_AT_ROOT) ) {
				int LA175_1 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_VAR) ) {
				int LA175_2 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==IDENT) ) {
				int LA175_3 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt175=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt175=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==HASH_SYMBOL) ) {
				int LA175_4 = input.LA(2);
				if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==AT_SIGN) ) {
				int LA175_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( ((synpred22_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==MINUS) ) {
				int LA175_6 = input.LA(2);
				if ( ((synpred21_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt175=3;
				}
				else if ( ((synpred22_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt175=4;
				}
				else if ( ((synpred23_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==GEN) ) {
				int LA175_7 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt175=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt175=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt175=6;
				}
				else if ( (true) ) {
					alt175=18;
				}

			}
			else if ( (LA175_0==SASS_MIXIN) ) {
				int LA175_8 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( ((synpred25_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==GREATER||LA175_0==PLUS||LA175_0==TILDE) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==LESS_AND) ) {
				int LA175_11 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt175=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==HASH) ) {
				int LA175_12 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt175=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==DOT) ) {
				int LA175_13 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt175=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==DIMENSION) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==LBRACKET) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==COLON||LA175_0==DCOLON) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==STAR) ) {
				int LA175_17 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt175=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt175=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==PIPE) && (synpred22_Css3())) {
				alt175=4;
			}
			else if ( (LA175_0==AT_IDENT) ) {
				int LA175_19 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=9;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_INCLUDE) ) {
				int LA175_20 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=8;
				}
				else if ( ((synpred27_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt175=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==MEDIA_SYM) ) {
				int LA175_21 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==PAGE_SYM) ) {
				int LA175_22 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==COUNTER_STYLE_SYM) ) {
				int LA175_23 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==FONT_FACE_SYM) ) {
				int LA175_24 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==MOZ_DOCUMENT_SYM) ) {
				int LA175_25 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA175_26 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt175=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_IF) ) {
				int LA175_27 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_FOR) ) {
				int LA175_28 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_EACH) ) {
				int LA175_29 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_WHILE) ) {
				int LA175_30 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_EXTEND) ) {
				int LA175_31 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_DEBUG||LA175_0==SASS_WARN) ) {
				int LA175_32 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_CONTENT) ) {
				int LA175_33 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_RETURN) ) {
				int LA175_34 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==IMPORT_SYM) ) {
				int LA175_35 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt175=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA175_0==SASS_ERROR) ) {
				alt175=16;
			}
			else if ( ((LA175_0 >= BOTTOMCENTER_SYM && LA175_0 <= BOTTOMRIGHT_SYM)||LA175_0==CHARSET_SYM||(LA175_0 >= LEFTBOTTOM_SYM && LA175_0 <= LEFTTOP_SYM)||LA175_0==NAMESPACE_SYM||(LA175_0 >= RIGHTBOTTOM_SYM && LA175_0 <= RIGHTTOP_SYM)||LA175_0==SASS_ELSE||LA175_0==SASS_FUNCTION||(LA175_0 >= TOPCENTER_SYM && LA175_0 <= TOPRIGHT_SYM)) ) {
				int LA175_37 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt175=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt175=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt175=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt175=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 175, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 175, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(175);}

			switch (alt175) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(693,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration3116);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( sass_map )=> sass_map
					{
					dbg.location(694,20);
					pushFollow(FOLLOW_sass_map_in_declaration3129);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(695,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration3141);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(696,145);
					pushFollow(FOLLOW_rule_in_declaration3204);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(697,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3216);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(699,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3255);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(700,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration3267);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(701,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3280);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(701,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:39: ( ( ws )? IMPORTANT_SYM )?
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					try {
						isCyclicDecision = true;
						alt172 = dfa172.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(701,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:40: ( ws )?
							int alt171=2;
							try { dbg.enterSubRule(171);
							try { dbg.enterDecision(171, decisionCanBacktrack[171]);

							int LA171_0 = input.LA(1);
							if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
								alt171=1;
							}
							} finally {dbg.exitDecision(171);}

							switch (alt171) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:40: ws
									{
									dbg.location(701,40);
									pushFollow(FOLLOW_ws_in_declaration3283);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(171);}
							dbg.location(701,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3286); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(702,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(702,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3303);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(702,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:57: ( ( ws )? IMPORTANT_SYM )?
					int alt174=2;
					try { dbg.enterSubRule(174);
					try { dbg.enterDecision(174, decisionCanBacktrack[174]);

					try {
						isCyclicDecision = true;
						alt174 = dfa174.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(174);}

					switch (alt174) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(702,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:58: ( ws )?
							int alt173=2;
							try { dbg.enterSubRule(173);
							try { dbg.enterDecision(173, decisionCanBacktrack[173]);

							int LA173_0 = input.LA(1);
							if ( (LA173_0==COMMENT||LA173_0==NL||LA173_0==WS) ) {
								alt173=1;
							}
							} finally {dbg.exitDecision(173);}

							switch (alt173) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:58: ws
									{
									dbg.location(702,58);
									pushFollow(FOLLOW_ws_in_declaration3306);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(173);}
							dbg.location(702,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3309); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(174);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:7: {...}? at_rule
					{
					dbg.location(703,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(703,36);
					pushFollow(FOLLOW_at_rule_in_declaration3325);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:7: {...}? sass_control
					{
					dbg.location(704,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(704,25);
					pushFollow(FOLLOW_sass_control_in_declaration3335);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:7: {...}? sass_extend
					{
					dbg.location(705,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(705,25);
					pushFollow(FOLLOW_sass_extend_in_declaration3345);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:706:7: {...}? sass_debug
					{
					dbg.location(706,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(706,25);
					pushFollow(FOLLOW_sass_debug_in_declaration3355);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:707:7: {...}? sass_content
					{
					dbg.location(707,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(707,25);
					pushFollow(FOLLOW_sass_content_in_declaration3365);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:7: {...}? sass_function_return
					{
					dbg.location(708,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(708,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration3375);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:7: {...}? sass_error
					{
					dbg.location(709,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(709,25);
					pushFollow(FOLLOW_sass_error_in_declaration3385);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:710:7: {...}? importItem
					{
					dbg.location(710,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(710,25);
					pushFollow(FOLLOW_importItem_in_declaration3395);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:7: GEN
					{
					dbg.location(711,7);
					match(input,GEN,FOLLOW_GEN_in_declaration3403); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(712, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:718:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(718, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(720,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup3437);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(720,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(178);

			loop178:
			while (true) {
				int alt178=2;
				try { dbg.enterDecision(178, decisionCanBacktrack[178]);

				try {
					isCyclicDecision = true;
					alt178 = dfa178.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(178);}

				switch (alt178) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(720,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:19: ( ws )?
					int alt176=2;
					try { dbg.enterSubRule(176);
					try { dbg.enterDecision(176, decisionCanBacktrack[176]);

					int LA176_0 = input.LA(1);
					if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
						alt176=1;
					}
					} finally {dbg.exitDecision(176);}

					switch (alt176) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:19: ws
							{
							dbg.location(720,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup3440);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(176);}
					dbg.location(720,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3443); if (state.failed) return;dbg.location(720,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:29: ( ws )?
					int alt177=2;
					try { dbg.enterSubRule(177);
					try { dbg.enterDecision(177, decisionCanBacktrack[177]);

					int LA177_0 = input.LA(1);
					if ( (LA177_0==COMMENT||LA177_0==NL||LA177_0==WS) ) {
						alt177=1;
					}
					} finally {dbg.exitDecision(177);}

					switch (alt177) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:29: ws
							{
							dbg.location(720,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup3445);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(177);}
					dbg.location(720,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup3448);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop178;
				}
			}
			} finally {dbg.exitSubRule(178);}
			dbg.location(720,44);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:44: ({...}? COMMA )?
			int alt179=2;
			try { dbg.enterSubRule(179);
			try { dbg.enterDecision(179, decisionCanBacktrack[179]);

			int LA179_0 = input.LA(1);
			if ( (LA179_0==COMMA) ) {
				alt179=1;
			}
			} finally {dbg.exitDecision(179);}

			switch (alt179) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:45: {...}? COMMA
					{
					dbg.location(720,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(720,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3455); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(179);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(721, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(723, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt186=2;
			try { dbg.enterDecision(186, decisionCanBacktrack[186]);

			try {
				isCyclicDecision = true;
				alt186 = dfa186.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(186);}

			switch (alt186) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(724,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:8: ( combinator ( ws )? )?
					int alt181=2;
					try { dbg.enterSubRule(181);
					try { dbg.enterDecision(181, decisionCanBacktrack[181]);

					int LA181_0 = input.LA(1);
					if ( (LA181_0==GREATER||LA181_0==PLUS||LA181_0==TILDE) ) {
						alt181=1;
					}
					} finally {dbg.exitDecision(181);}

					switch (alt181) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:9: combinator ( ws )?
							{
							dbg.location(724,9);
							pushFollow(FOLLOW_combinator_in_selector3476);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(724,20);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:20: ( ws )?
							int alt180=2;
							try { dbg.enterSubRule(180);
							try { dbg.enterDecision(180, decisionCanBacktrack[180]);

							int LA180_0 = input.LA(1);
							if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
								alt180=1;
							}
							} finally {dbg.exitDecision(180);}

							switch (alt180) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:20: ws
									{
									dbg.location(724,20);
									pushFollow(FOLLOW_ws_in_selector3478);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(180);}

							}
							break;

					}
					} finally {dbg.exitSubRule(181);}
					dbg.location(724,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector3483);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(724,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(185);

					loop185:
					while (true) {
						int alt185=2;
						try { dbg.enterDecision(185, decisionCanBacktrack[185]);

						try {
							isCyclicDecision = true;
							alt185 = dfa185.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(185);}

						switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(724,51);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt184=2;
							try { dbg.enterSubRule(184);
							try { dbg.enterDecision(184, decisionCanBacktrack[184]);

							try {
								isCyclicDecision = true;
								alt184 = dfa184.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(184);}

							switch (alt184) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(724,52);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:53: ( ws )? combinator ( ws )?
									{
									dbg.location(724,53);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:53: ( ws )?
									int alt182=2;
									try { dbg.enterSubRule(182);
									try { dbg.enterDecision(182, decisionCanBacktrack[182]);

									int LA182_0 = input.LA(1);
									if ( (LA182_0==COMMENT||LA182_0==NL||LA182_0==WS) ) {
										alt182=1;
									}
									} finally {dbg.exitDecision(182);}

									switch (alt182) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:53: ws
											{
											dbg.location(724,53);
											pushFollow(FOLLOW_ws_in_selector3489);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(182);}
									dbg.location(724,57);
									pushFollow(FOLLOW_combinator_in_selector3492);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(724,68);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:68: ( ws )?
									int alt183=2;
									try { dbg.enterSubRule(183);
									try { dbg.enterDecision(183, decisionCanBacktrack[183]);

									int LA183_0 = input.LA(1);
									if ( (LA183_0==COMMENT||LA183_0==NL||LA183_0==WS) ) {
										alt183=1;
									}
									} finally {dbg.exitDecision(183);}

									switch (alt183) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:68: ws
											{
											dbg.location(724,68);
											pushFollow(FOLLOW_ws_in_selector3494);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(183);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:73: ws
									{
									dbg.location(724,73);
									pushFollow(FOLLOW_ws_in_selector3498);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(184);}
							dbg.location(724,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector3501);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop185;
						}
					}
					} finally {dbg.exitSubRule(185);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:725:10: {...}? combinator
					{
					dbg.location(725,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(725,28);
					pushFollow(FOLLOW_combinator_in_selector3516);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(726, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(728, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(729,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(731, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(733, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt195=2;
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			int LA195_0 = input.LA(1);
			if ( (LA195_0==AT_SIGN||LA195_0==COLON||(LA195_0 >= DCOLON && LA195_0 <= DOT)||(LA195_0 >= HASH && LA195_0 <= HASH_SYMBOL)||LA195_0==LBRACKET||LA195_0==MINUS||LA195_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt195=1;
			}
			else if ( (LA195_0==LESS_AND) ) {
				int LA195_2 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt195=1;
				}
				else if ( (synpred29_Css3()) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA195_0==IDENT) ) {
				int LA195_3 = input.LA(2);
				if ( (LA195_3==HASH_SYMBOL) ) {
					int LA195_7 = input.LA(3);
					if ( (LA195_7==LBRACE) ) {
						alt195=1;
					}
					else if ( (LA195_7==NAME) && (synpred29_Css3())) {
						alt195=2;
					}
					else if ( (LA195_7==IDENT||LA195_7==MINUS) && (synpred29_Css3())) {
						alt195=2;
					}
					else if ( (LA195_7==AT_SIGN) && (synpred29_Css3())) {
						alt195=2;
					}

				}
				else if ( (LA195_3==AT_SIGN) ) {
					alt195=1;
				}
				else if ( (LA195_3==PIPE) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==COMMENT||LA195_3==NL||LA195_3==WS) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==LESS_AND) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==HASH) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==DOT) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==DIMENSION) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==LBRACKET) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==COLON||LA195_3==DCOLON) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==GREATER||LA195_3==PLUS||LA195_3==TILDE) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==COMMA) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==LBRACE) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==RPAREN) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==SEMI) && (synpred29_Css3())) {
					alt195=2;
				}
				else if ( (LA195_3==RBRACE) && (synpred29_Css3())) {
					alt195=2;
				}

			}
			else if ( (LA195_0==STAR) && (synpred29_Css3())) {
				alt195=2;
			}
			else if ( (LA195_0==PIPE) && (synpred29_Css3())) {
				alt195=2;
			}
			else if ( (LA195_0==GEN) && (synpred29_Css3())) {
				alt195=2;
			}

			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(735,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt187=3;
					try { dbg.enterSubRule(187);
					try { dbg.enterDecision(187, decisionCanBacktrack[187]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DIMENSION:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt187=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA187_2 = input.LA(2);
						if ( (LA187_2==LBRACE) ) {
							alt187=2;
						}
						else if ( (LA187_2==AT_SIGN||LA187_2==IDENT||LA187_2==MINUS||LA187_2==NAME) ) {
							alt187=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 187, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA187_3 = input.LA(2);
						if ( (LA187_3==HASH_SYMBOL) ) {
							alt187=2;
						}
						else if ( (LA187_3==AT_SIGN) ) {
							alt187=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 187, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt187=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 187, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(187);}

					switch (alt187) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:10: elementSubsequent
							{
							dbg.location(735,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3568);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(735,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(735,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3574);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(736,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(736,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3588);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(187);}
					dbg.location(736,64);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(191);

					loop191:
					while (true) {
						int alt191=2;
						try { dbg.enterDecision(191, decisionCanBacktrack[191]);

						int LA191_0 = input.LA(1);
						if ( (LA191_0==COMMENT||LA191_0==NL||LA191_0==WS) ) {
							int LA191_1 = input.LA(2);
							if ( (synpred28_Css3()) ) {
								alt191=1;
							}

						}
						else if ( (LA191_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==LESS_AND) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==HASH) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==HASH_SYMBOL) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==DOT) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==DIMENSION) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==LBRACKET) && (synpred28_Css3())) {
							alt191=1;
						}
						else if ( (LA191_0==COLON||LA191_0==DCOLON) && (synpred28_Css3())) {
							alt191=1;
						}

						} finally {dbg.exitDecision(191);}

						switch (alt191) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(736,79);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt190=2;
							try { dbg.enterSubRule(190);
							try { dbg.enterDecision(190, decisionCanBacktrack[190]);

							try {
								isCyclicDecision = true;
								alt190 = dfa190.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(190);}

							switch (alt190) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(736,80);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:81: ( ws )? elementSubsequent
									{
									dbg.location(736,81);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:81: ( ws )?
									int alt188=2;
									try { dbg.enterSubRule(188);
									try { dbg.enterDecision(188, decisionCanBacktrack[188]);

									int LA188_0 = input.LA(1);
									if ( (LA188_0==COMMENT||LA188_0==NL||LA188_0==WS) ) {
										alt188=1;
									}
									} finally {dbg.exitDecision(188);}

									switch (alt188) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:81: ws
											{
											dbg.location(736,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3603);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(188);}
									dbg.location(736,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3606);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(736,105);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(736,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3611);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(736,109);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt189=2;
									try { dbg.enterSubRule(189);
									try { dbg.enterDecision(189, decisionCanBacktrack[189]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA189_1 = input.LA(2);
										if ( (LA189_1==HASH_SYMBOL) ) {
											alt189=1;
										}
										else if ( (LA189_1==AT_SIGN) ) {
											alt189=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 189, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt189=1;
										}
										break;
									case AT_SIGN:
										{
										alt189=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 189, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(189);}

									switch (alt189) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(736,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(736,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3616);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(736,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(736,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3622);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(189);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(190);}

							}
							break;

						default :
							break loop191;
						}
					}
					} finally {dbg.exitSubRule(191);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(737,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence3636);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(737,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(194);

					loop194:
					while (true) {
						int alt194=2;
						try { dbg.enterDecision(194, decisionCanBacktrack[194]);

						int LA194_0 = input.LA(1);
						if ( (LA194_0==COMMENT||LA194_0==NL||LA194_0==WS) ) {
							int LA194_1 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt194=1;
							}

						}
						else if ( (LA194_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==LESS_AND) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==HASH) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==HASH_SYMBOL) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==DOT) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==DIMENSION) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==LBRACKET) && (synpred30_Css3())) {
							alt194=1;
						}
						else if ( (LA194_0==COLON||LA194_0==DCOLON) && (synpred30_Css3())) {
							alt194=1;
						}

						} finally {dbg.exitDecision(194);}

						switch (alt194) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(737,48);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt193=2;
							try { dbg.enterSubRule(193);
							try { dbg.enterDecision(193, decisionCanBacktrack[193]);

							try {
								isCyclicDecision = true;
								alt193 = dfa193.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(193);}

							switch (alt193) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(737,49);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:50: ( ws )? elementSubsequent
									{
									dbg.location(737,50);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:50: ( ws )?
									int alt192=2;
									try { dbg.enterSubRule(192);
									try { dbg.enterDecision(192, decisionCanBacktrack[192]);

									int LA192_0 = input.LA(1);
									if ( (LA192_0==COMMENT||LA192_0==NL||LA192_0==WS) ) {
										alt192=1;
									}
									} finally {dbg.exitDecision(192);}

									switch (alt192) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:50: ws
											{
											dbg.location(737,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3648);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(192);}
									dbg.location(737,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3651);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(737,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(737,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3658);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(737,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3660);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(193);}

							}
							break;

						default :
							break loop194;
						}
					}
					} finally {dbg.exitSubRule(194);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(738, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(745, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt196=8;
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt196=1;
				}
				break;
			case HASH:
				{
				alt196=2;
				}
				break;
			case DOT:
				{
				alt196=3;
				}
				break;
			case LBRACKET:
				{
				alt196=4;
				}
				break;
			case COLON:
				{
				alt196=5;
				}
				break;
			case DCOLON:
				{
				alt196=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt196=7;
				}
				break;
			case LESS_AND:
				{
				alt196=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 196, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:7: HASH_SYMBOL
					{
					dbg.location(746,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred3685); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:21: HASH
					{
					dbg.location(746,21);
					match(input,HASH,FOLLOW_HASH_in_esPred3689); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:28: DOT
					{
					dbg.location(746,28);
					match(input,DOT,FOLLOW_DOT_in_esPred3693); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:34: LBRACKET
					{
					dbg.location(746,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred3697); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:45: COLON
					{
					dbg.location(746,45);
					match(input,COLON,FOLLOW_COLON_in_esPred3701); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:53: DCOLON
					{
					dbg.location(746,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred3705); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(746,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3709); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:90: {...}? LESS_AND
					{
					dbg.location(746,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(746,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred3715); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(747, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(749, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(751,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt197=2;
			try { dbg.enterSubRule(197);
			try { dbg.enterDecision(197, decisionCanBacktrack[197]);

			int LA197_0 = input.LA(1);
			if ( (LA197_0==IDENT) ) {
				int LA197_1 = input.LA(2);
				if ( (LA197_1==PIPE) && (synpred31_Css3())) {
					alt197=1;
				}
			}
			else if ( (LA197_0==STAR) ) {
				int LA197_2 = input.LA(2);
				if ( (LA197_2==PIPE) && (synpred31_Css3())) {
					alt197=1;
				}
			}
			else if ( (LA197_0==PIPE) && (synpred31_Css3())) {
				alt197=1;
			}
			} finally {dbg.exitDecision(197);}

			switch (alt197) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(751,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector3757);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(197);}
			dbg.location(751,49);
			pushFollow(FOLLOW_elementName_in_typeSelector3761);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(752, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(754, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(755,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:5: ( namespacePrefixName | STAR )?
			int alt198=3;
			try { dbg.enterSubRule(198);
			try { dbg.enterDecision(198, decisionCanBacktrack[198]);

			int LA198_0 = input.LA(1);
			if ( (LA198_0==IDENT) ) {
				alt198=1;
			}
			else if ( (LA198_0==STAR) ) {
				alt198=2;
			}
			} finally {dbg.exitDecision(198);}

			switch (alt198) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:7: namespacePrefixName
					{
					dbg.location(755,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix3776);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:29: STAR
					{
					dbg.location(755,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix3780); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(198);}
			dbg.location(755,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix3784); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(756, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(759, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(761,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			int alt200=7;
			try { dbg.enterSubRule(200);
			try { dbg.enterDecision(200, decisionCanBacktrack[200]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt200=1;
				}
				break;
			case LESS_AND:
				{
				switch ( input.LA(2) ) {
				case IDENT:
					{
					int LA200_7 = input.LA(3);
					if ( ((LA200_7 >= COLON && LA200_7 <= COMMENT)||(LA200_7 >= DCOLON && LA200_7 <= DOT)||LA200_7==GREATER||(LA200_7 >= HASH && LA200_7 <= HASH_SYMBOL)||LA200_7==IDENT||(LA200_7 >= LBRACE && LA200_7 <= LBRACKET)||LA200_7==LESS_AND||LA200_7==NL||LA200_7==NUMBER||LA200_7==PLUS||LA200_7==RBRACE||LA200_7==RPAREN||LA200_7==SASS_EXTEND_ONLY_SELECTOR||LA200_7==SEMI||LA200_7==TILDE||LA200_7==WS) ) {
						alt200=2;
					}
					else if ( (LA200_7==AT_SIGN) ) {
						alt200=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 200, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case NUMBER:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt200=2;
					}
					break;
				case AT_SIGN:
				case MINUS:
					{
					alt200=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 200, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt200=4;
				}
				break;
			case DIMENSION:
			case DOT:
				{
				alt200=5;
				}
				break;
			case LBRACKET:
				{
				alt200=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt200=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 200, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(200);}

			switch (alt200) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:9: {...}? sass_extend_only_selector
					{
					dbg.location(762,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(762,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent3816);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:11: {...}? LESS_AND ( IDENT | NUMBER )*
					{
					dbg.location(763,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(763,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent3830); if (state.failed) return;dbg.location(763,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:49: ( IDENT | NUMBER )*
					try { dbg.enterSubRule(199);

					loop199:
					while (true) {
						int alt199=2;
						try { dbg.enterDecision(199, decisionCanBacktrack[199]);

						int LA199_0 = input.LA(1);
						if ( (LA199_0==IDENT||LA199_0==NUMBER) ) {
							alt199=1;
						}

						} finally {dbg.exitDecision(199);}

						switch (alt199) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(763,49);
							if ( input.LA(1)==IDENT||input.LA(1)==NUMBER ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							break loop199;
						}
					}
					} finally {dbg.exitSubRule(199);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:11: {...}? LESS_AND less_selector_interpolation_exp
					{
					dbg.location(764,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(764,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent3853); if (state.failed) return;dbg.location(764,38);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent3855);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:8: cssId
					{
					dbg.location(765,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent3864);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:8: cssClass
					{
					dbg.location(766,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent3873);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:11: slAttribute
					{
					dbg.location(767,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent3885);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:11: pseudo
					{
					dbg.location(768,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent3897);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(200);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(770, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:773:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(773, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt203=2;
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==HASH) ) {
				alt203=1;
			}
			else if ( (LA203_0==HASH_SYMBOL) ) {
				alt203=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 203, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(774,7);
					match(input,HASH,FOLLOW_HASH_in_cssId3921); if (state.failed) return;dbg.location(774,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:12: ({...}? sass_selector_interpolation_exp )?
					int alt201=2;
					try { dbg.enterSubRule(201);
					try { dbg.enterDecision(201, decisionCanBacktrack[201]);

					int LA201_0 = input.LA(1);
					if ( (LA201_0==IDENT||LA201_0==MINUS) ) {
						alt201=1;
					}
					else if ( (LA201_0==HASH_SYMBOL) ) {
						int LA201_2 = input.LA(2);
						if ( (LA201_2==LBRACE) ) {
							alt201=1;
						}
					}
					} finally {dbg.exitDecision(201);}

					switch (alt201) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(774,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(774,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId3926);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(201);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(776,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(776,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId3948); if (state.failed) return;dbg.location(777,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt202=2;
					try { dbg.enterSubRule(202);
					try { dbg.enterDecision(202, decisionCanBacktrack[202]);

					int LA202_0 = input.LA(1);
					if ( (LA202_0==NAME) ) {
						alt202=1;
					}
					else if ( (LA202_0==AT_SIGN||LA202_0==IDENT||LA202_0==MINUS) ) {
						alt202=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 202, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(202);}

					switch (alt202) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:15: NAME
							{
							dbg.location(777,15);
							match(input,NAME,FOLLOW_NAME_in_cssId3964); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:778:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(778,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(778,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId3984);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(202);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(781, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:1: cssClass : ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION );
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(787, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:5: ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION )
			int alt205=2;
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==DOT) ) {
				alt205=1;
			}
			else if ( (LA205_0==DIMENSION) ) {
				alt205=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 205, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					{
					dbg.location(788,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:8: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					{
					dbg.location(788,8);
					match(input,DOT,FOLLOW_DOT_in_cssClass4036); if (state.failed) return;dbg.location(789,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:789:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					int alt204=5;
					try { dbg.enterSubRule(204);
					try { dbg.enterDecision(204, decisionCanBacktrack[204]);

					switch ( input.LA(1) ) {
					case IDENT:
						{
						switch ( input.LA(2) ) {
						case HASH_SYMBOL:
							{
							int LA204_7 = input.LA(3);
							if ( (LA204_7==LBRACE) ) {
								alt204=1;
							}
							else if ( (LA204_7==AT_SIGN||LA204_7==IDENT||LA204_7==MINUS||LA204_7==NAME) ) {
								alt204=3;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 204, 7, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AT_SIGN:
							{
							alt204=2;
							}
							break;
						case COLON:
						case COMMA:
						case COMMENT:
						case DCOLON:
						case DIMENSION:
						case DOT:
						case GREATER:
						case HASH:
						case LBRACE:
						case LBRACKET:
						case LESS_AND:
						case NL:
						case PLUS:
						case RBRACE:
						case RPAREN:
						case SASS_EXTEND_ONLY_SELECTOR:
						case SEMI:
						case TILDE:
						case WS:
							{
							alt204=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 204, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case HASH_SYMBOL:
						{
						alt204=1;
						}
						break;
					case AT_SIGN:
						{
						alt204=2;
						}
						break;
					case MINUS:
						{
						int LA204_4 = input.LA(2);
						if ( (LA204_4==HASH_SYMBOL) ) {
							alt204=1;
						}
						else if ( (LA204_4==AT_SIGN) ) {
							alt204=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 204, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case NOT:
						{
						alt204=4;
						}
						break;
					case GEN:
						{
						alt204=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 204, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(204);}

					switch (alt204) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:790:14: {...}? sass_selector_interpolation_exp
							{
							dbg.location(790,14);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isScssSource()");
							}dbg.location(790,33);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass4064);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:15: {...}? less_selector_interpolation_exp
							{
							dbg.location(791,15);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isLessSource()");
							}dbg.location(791,33);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass4082);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:792:15: IDENT
							{
							dbg.location(792,15);
							match(input,IDENT,FOLLOW_IDENT_in_cssClass4098); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:793:15: NOT
							{
							dbg.location(793,15);
							match(input,NOT,FOLLOW_NOT_in_cssClass4114); if (state.failed) return;
							}
							break;
						case 5 :
							dbg.enterAlt(5);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:794:15: GEN
							{
							dbg.location(794,15);
							match(input,GEN,FOLLOW_GEN_in_cssClass4130); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(204);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:796:10: {...}? DIMENSION
					{
					dbg.location(796,10);
					if ( !(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "tokenNameStartsWith(\".\")");
					}dbg.location(796,38);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_cssClass4153); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(797, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:804:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(804, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:805:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(805,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(806, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:808:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(808, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:809:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:809:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(809,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute4209); if (state.failed) return;dbg.location(810,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:6: ( namespacePrefix )?
			int alt206=2;
			try { dbg.enterSubRule(206);
			try { dbg.enterDecision(206, decisionCanBacktrack[206]);

			int LA206_0 = input.LA(1);
			if ( (LA206_0==IDENT) ) {
				int LA206_1 = input.LA(2);
				if ( (LA206_1==PIPE) ) {
					alt206=1;
				}
			}
			else if ( (LA206_0==PIPE||LA206_0==STAR) ) {
				alt206=1;
			}
			} finally {dbg.exitDecision(206);}

			switch (alt206) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:6: namespacePrefix
					{
					dbg.location(810,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute4216);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(206);}
			dbg.location(810,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:23: ( ws )?
			int alt207=2;
			try { dbg.enterSubRule(207);
			try { dbg.enterDecision(207, decisionCanBacktrack[207]);

			int LA207_0 = input.LA(1);
			if ( (LA207_0==COMMENT||LA207_0==NL||LA207_0==WS) ) {
				alt207=1;
			}
			} finally {dbg.exitDecision(207);}

			switch (alt207) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:23: ws
					{
					dbg.location(810,23);
					pushFollow(FOLLOW_ws_in_slAttribute4219);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(207);}
			dbg.location(811,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute4230);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(811,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:811:25: ( ws )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==COMMENT||LA208_0==NL||LA208_0==WS) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:811:25: ws
					{
					dbg.location(811,25);
					pushFollow(FOLLOW_ws_in_slAttribute4232);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(813,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt211=2;
			try { dbg.enterSubRule(211);
			try { dbg.enterDecision(211, decisionCanBacktrack[211]);

			int LA211_0 = input.LA(1);
			if ( (LA211_0==BEGINS||LA211_0==CONTAINS||LA211_0==DASHMATCH||LA211_0==ENDS||LA211_0==INCLUDES||LA211_0==OPEQ) ) {
				alt211=1;
			}
			} finally {dbg.exitDecision(211);}

			switch (alt211) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(814,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(822,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:822:17: ( ws )?
					int alt209=2;
					try { dbg.enterSubRule(209);
					try { dbg.enterDecision(209, decisionCanBacktrack[209]);

					int LA209_0 = input.LA(1);
					if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
						alt209=1;
					}
					} finally {dbg.exitDecision(209);}

					switch (alt209) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:822:17: ws
							{
							dbg.location(822,17);
							pushFollow(FOLLOW_ws_in_slAttribute4446);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(209);}
					dbg.location(823,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute4465);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(824,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:824:17: ( ws )?
					int alt210=2;
					try { dbg.enterSubRule(210);
					try { dbg.enterDecision(210, decisionCanBacktrack[210]);

					int LA210_0 = input.LA(1);
					if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
						alt210=1;
					}
					} finally {dbg.exitDecision(210);}

					switch (alt210) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:824:17: ws
							{
							dbg.location(824,17);
							pushFollow(FOLLOW_ws_in_slAttribute4483);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(210);}

					}
					break;

			}
			} finally {dbg.exitSubRule(211);}
			dbg.location(827,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute4508); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(828, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:835:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(835, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:836:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:836:4: IDENT
			{
			dbg.location(836,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName4524); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(837, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(839, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(840,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(845, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:847:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(847, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:848:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:848:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(848,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(849,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt224=4;
			try { dbg.enterSubRule(224);
			try { dbg.enterDecision(224, decisionCanBacktrack[224]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA224_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()")),""))) ) {
					alt224=1;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt224=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 224, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt224=2;
				}
				break;
			case NOT:
				{
				alt224=3;
				}
				break;
			case GEN:
				{
				alt224=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 224, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(224);}

			switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(850,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(851,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(852,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:852:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt216=2;
					try { dbg.enterSubRule(216);
					try { dbg.enterDecision(216, decisionCanBacktrack[216]);

					try {
						isCyclicDecision = true;
						alt216 = dfa216.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(216);}

					switch (alt216) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(853,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:25: ( ws )?
							int alt212=2;
							try { dbg.enterSubRule(212);
							try { dbg.enterDecision(212, decisionCanBacktrack[212]);

							int LA212_0 = input.LA(1);
							if ( (LA212_0==COMMENT||LA212_0==NL||LA212_0==WS) ) {
								alt212=1;
							}
							} finally {dbg.exitDecision(212);}

							switch (alt212) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:25: ws
									{
									dbg.location(853,25);
									pushFollow(FOLLOW_ws_in_pseudo4716);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(212);}
							dbg.location(853,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4719); if (state.failed) return;dbg.location(853,36);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:36: ( ws )?
							int alt213=2;
							try { dbg.enterSubRule(213);
							try { dbg.enterDecision(213, decisionCanBacktrack[213]);

							int LA213_0 = input.LA(1);
							if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
								alt213=1;
							}
							} finally {dbg.exitDecision(213);}

							switch (alt213) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:36: ws
									{
									dbg.location(853,36);
									pushFollow(FOLLOW_ws_in_pseudo4721);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(213);}
							dbg.location(853,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:40: ( ( expression ( ws )? ) | STAR )?
							int alt215=3;
							try { dbg.enterSubRule(215);
							try { dbg.enterDecision(215, decisionCanBacktrack[215]);

							int LA215_0 = input.LA(1);
							if ( ((LA215_0 >= ANGLE && LA215_0 <= AT_SIGN)||(LA215_0 >= BOTTOMCENTER_SYM && LA215_0 <= BOTTOMRIGHT_SYM)||LA215_0==CHARSET_SYM||LA215_0==COUNTER_STYLE_SYM||LA215_0==DIMENSION||LA215_0==EMS||LA215_0==EXS||(LA215_0 >= FONT_FACE_SYM && LA215_0 <= FREQ)||LA215_0==GEN||(LA215_0 >= HASH && LA215_0 <= HASH_SYMBOL)||LA215_0==IDENT||LA215_0==IMPORT_SYM||(LA215_0 >= LEFTBOTTOM_SYM && LA215_0 <= LENGTH)||(LA215_0 >= LESS_AND && LA215_0 <= LESS_JS_STRING)||(LA215_0 >= MEDIA_SYM && LA215_0 <= MOZ_DOCUMENT_SYM)||LA215_0==NAMESPACE_SYM||LA215_0==NUMBER||(LA215_0 >= PAGE_SYM && LA215_0 <= PERCENTAGE_SYMBOL)||LA215_0==PLUS||(LA215_0 >= REM && LA215_0 <= RIGHTTOP_SYM)||(LA215_0 >= SASS_AT_ROOT && LA215_0 <= SASS_DEBUG)||(LA215_0 >= SASS_EACH && LA215_0 <= SASS_ELSE)||LA215_0==SASS_EXTEND||(LA215_0 >= SASS_FOR && LA215_0 <= SASS_FUNCTION)||(LA215_0 >= SASS_IF && LA215_0 <= SASS_MIXIN)||(LA215_0 >= SASS_RETURN && LA215_0 <= SASS_WHILE)||LA215_0==STRING||(LA215_0 >= TILDE && LA215_0 <= TOPRIGHT_SYM)||LA215_0==URI||LA215_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt215=1;
							}
							else if ( (LA215_0==STAR) ) {
								alt215=2;
							}
							} finally {dbg.exitDecision(215);}

							switch (alt215) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:42: ( expression ( ws )? )
									{
									dbg.location(853,42);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:43: expression ( ws )?
									{
									dbg.location(853,43);
									pushFollow(FOLLOW_expression_in_pseudo4727);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(853,54);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:54: ( ws )?
									int alt214=2;
									try { dbg.enterSubRule(214);
									try { dbg.enterDecision(214, decisionCanBacktrack[214]);

									int LA214_0 = input.LA(1);
									if ( (LA214_0==COMMENT||LA214_0==NL||LA214_0==WS) ) {
										alt214=1;
									}
									} finally {dbg.exitDecision(214);}

									switch (alt214) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:54: ws
											{
											dbg.location(853,54);
											pushFollow(FOLLOW_ws_in_pseudo4729);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(214);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:61: STAR
									{
									dbg.location(853,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo4735); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(215);}
							dbg.location(853,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4740); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(216);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(856,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(856,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo4803);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN )
					{
					dbg.location(858,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:19: NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN
					{
					dbg.location(858,19);
					match(input,NOT,FOLLOW_NOT_in_pseudo4841); if (state.failed) return;dbg.location(858,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:23: ( ws )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( (LA217_0==COMMENT||LA217_0==NL||LA217_0==WS) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:23: ws
							{
							dbg.location(858,23);
							pushFollow(FOLLOW_ws_in_pseudo4843);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(858,27);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4846); if (state.failed) return;dbg.location(858,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:34: ( ws )?
					int alt218=2;
					try { dbg.enterSubRule(218);
					try { dbg.enterDecision(218, decisionCanBacktrack[218]);

					int LA218_0 = input.LA(1);
					if ( (LA218_0==COMMENT||LA218_0==NL||LA218_0==WS) ) {
						alt218=1;
					}
					} finally {dbg.exitDecision(218);}

					switch (alt218) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:34: ws
							{
							dbg.location(858,34);
							pushFollow(FOLLOW_ws_in_pseudo4848);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(218);}
					dbg.location(858,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:38: ( simpleSelectorSequence ( ws )? )?
					int alt220=2;
					try { dbg.enterSubRule(220);
					try { dbg.enterDecision(220, decisionCanBacktrack[220]);

					int LA220_0 = input.LA(1);
					if ( (LA220_0==AT_SIGN||LA220_0==COLON||(LA220_0 >= DCOLON && LA220_0 <= DOT)||LA220_0==GEN||(LA220_0 >= HASH && LA220_0 <= HASH_SYMBOL)||LA220_0==IDENT||LA220_0==LBRACKET||LA220_0==LESS_AND||LA220_0==MINUS||LA220_0==PIPE||LA220_0==SASS_EXTEND_ONLY_SELECTOR||LA220_0==STAR) ) {
						alt220=1;
					}
					} finally {dbg.exitDecision(220);}

					switch (alt220) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:39: simpleSelectorSequence ( ws )?
							{
							dbg.location(858,39);
							pushFollow(FOLLOW_simpleSelectorSequence_in_pseudo4852);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;dbg.location(858,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:62: ( ws )?
							int alt219=2;
							try { dbg.enterSubRule(219);
							try { dbg.enterDecision(219, decisionCanBacktrack[219]);

							int LA219_0 = input.LA(1);
							if ( (LA219_0==COMMENT||LA219_0==NL||LA219_0==WS) ) {
								alt219=1;
							}
							} finally {dbg.exitDecision(219);}

							switch (alt219) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:62: ws
									{
									dbg.location(858,62);
									pushFollow(FOLLOW_ws_in_pseudo4854);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(219);}

							}
							break;

					}
					} finally {dbg.exitSubRule(220);}
					dbg.location(858,68);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4859); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(860,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:18: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(860,18);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(860,36);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(860,65);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo4903); if (state.failed) return;dbg.location(860,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:71: ( ws )?
					int alt221=2;
					try { dbg.enterSubRule(221);
					try { dbg.enterDecision(221, decisionCanBacktrack[221]);

					int LA221_0 = input.LA(1);
					if ( (LA221_0==COMMENT||LA221_0==NL||LA221_0==WS) ) {
						alt221=1;
					}
					} finally {dbg.exitDecision(221);}

					switch (alt221) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:71: ws
							{
							dbg.location(860,71);
							pushFollow(FOLLOW_ws_in_pseudo4905);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(221);}
					dbg.location(860,75);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4908); if (state.failed) return;dbg.location(860,82);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:82: ( ws )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:82: ws
							{
							dbg.location(860,82);
							pushFollow(FOLLOW_ws_in_pseudo4910);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(860,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:86: ( selectorsGroup )?
					int alt223=2;
					try { dbg.enterSubRule(223);
					try { dbg.enterDecision(223, decisionCanBacktrack[223]);

					int LA223_0 = input.LA(1);
					if ( (LA223_0==AT_SIGN||LA223_0==COLON||(LA223_0 >= DCOLON && LA223_0 <= DOT)||(LA223_0 >= GEN && LA223_0 <= GREATER)||(LA223_0 >= HASH && LA223_0 <= HASH_SYMBOL)||LA223_0==IDENT||LA223_0==LBRACKET||LA223_0==LESS_AND||LA223_0==MINUS||(LA223_0 >= PIPE && LA223_0 <= PLUS)||LA223_0==SASS_EXTEND_ONLY_SELECTOR||LA223_0==STAR||LA223_0==TILDE) ) {
						alt223=1;
					}
					} finally {dbg.exitDecision(223);}

					switch (alt223) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:86: selectorsGroup
							{
							dbg.location(860,86);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo4913);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(223);}
					dbg.location(860,102);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4916); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(224);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(862, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(864, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:865:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt233=2;
			try { dbg.enterDecision(233, decisionCanBacktrack[233]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA233_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt233=1;
				}
				else if ( (true) ) {
					alt233=2;
				}

				}
				break;
			case IDENT:
				{
				int LA233_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt233=1;
				}
				else if ( (true) ) {
					alt233=2;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA233_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt233=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt233=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA233_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt233=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt233=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUS:
				{
				int LA233_5 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt233=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt233=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA233_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt233=1;
				}
				else if ( (true) ) {
					alt233=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA233_7 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt233=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt233=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA233_8 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt233=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt233=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 233, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(233);}

			switch (alt233) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:1: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(866,1);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(866,30);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:30: ( STAR )?
					int alt225=2;
					try { dbg.enterSubRule(225);
					try { dbg.enterDecision(225, decisionCanBacktrack[225]);

					int LA225_0 = input.LA(1);
					if ( (LA225_0==STAR) ) {
						alt225=1;
					}
					} finally {dbg.exitDecision(225);}

					switch (alt225) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:30: STAR
							{
							dbg.location(866,30);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4952); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(225);}
					dbg.location(866,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration4955);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(866,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:45: ( ws )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==COMMENT||LA226_0==NL||LA226_0==WS) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:45: ws
							{
							dbg.location(866,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4957);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(226);}
					dbg.location(866,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4960); if (state.failed) return;dbg.location(866,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:55: ( ws )?
					int alt227=2;
					try { dbg.enterSubRule(227);
					try { dbg.enterDecision(227, decisionCanBacktrack[227]);

					int LA227_0 = input.LA(1);
					if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
						alt227=1;
					}
					} finally {dbg.exitDecision(227);}

					switch (alt227) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:55: ws
							{
							dbg.location(866,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4962);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(227);}
					dbg.location(866,59);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration4965);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(867,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:7: ( STAR )?
					int alt228=2;
					try { dbg.enterSubRule(228);
					try { dbg.enterDecision(228, decisionCanBacktrack[228]);

					int LA228_0 = input.LA(1);
					if ( (LA228_0==STAR) ) {
						alt228=1;
					}
					} finally {dbg.exitDecision(228);}

					switch (alt228) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:7: STAR
							{
							dbg.location(867,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4974); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(228);}
					dbg.location(867,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration4977);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(867,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:22: ( ws )?
					int alt229=2;
					try { dbg.enterSubRule(229);
					try { dbg.enterDecision(229, decisionCanBacktrack[229]);

					int LA229_0 = input.LA(1);
					if ( (LA229_0==COMMENT||LA229_0==NL||LA229_0==WS) ) {
						alt229=1;
					}
					} finally {dbg.exitDecision(229);}

					switch (alt229) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:22: ws
							{
							dbg.location(867,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4979);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(229);}
					dbg.location(867,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4982); if (state.failed) return;dbg.location(867,32);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:32: ( ws )?
					int alt230=2;
					try { dbg.enterSubRule(230);
					try { dbg.enterDecision(230, decisionCanBacktrack[230]);

					int LA230_0 = input.LA(1);
					if ( (LA230_0==COMMENT||LA230_0==NL||LA230_0==WS) ) {
						alt230=1;
					}
					} finally {dbg.exitDecision(230);}

					switch (alt230) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:32: ws
							{
							dbg.location(867,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4984);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(230);}
					dbg.location(867,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration4987);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(867,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:50: ( ( ws )? prio )?
					int alt232=2;
					try { dbg.enterSubRule(232);
					try { dbg.enterDecision(232, decisionCanBacktrack[232]);

					try {
						isCyclicDecision = true;
						alt232 = dfa232.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(232);}

					switch (alt232) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:51: ( ws )? prio
							{
							dbg.location(867,51);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:51: ( ws )?
							int alt231=2;
							try { dbg.enterSubRule(231);
							try { dbg.enterDecision(231, decisionCanBacktrack[231]);

							int LA231_0 = input.LA(1);
							if ( (LA231_0==COMMENT||LA231_0==NL||LA231_0==WS) ) {
								alt231=1;
							}
							} finally {dbg.exitDecision(231);}

							switch (alt231) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:51: ws
									{
									dbg.location(867,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration4990);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(231);}
							dbg.location(867,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration4993);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(232);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(869, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:878:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(878, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:879:5: ({...}? cp_expression_list | propertyValue )
			int alt234=2;
			try { dbg.enterDecision(234, decisionCanBacktrack[234]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt234=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA234_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case IDENT:
				{
				int LA234_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA234_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA234_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA234_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case EMS:
				{
				int LA234_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case REM:
				{
				int LA234_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case EXS:
				{
				int LA234_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA234_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case TIME:
				{
				int LA234_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case FREQ:
				{
				int LA234_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA234_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA234_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case STRING:
				{
				int LA234_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case TILDE:
				{
				int LA234_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA234_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case GEN:
				{
				int LA234_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case URI:
				{
				int LA234_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case HASH:
				{
				int LA234_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (true) ) {
					alt234=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA234_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt234=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA234_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt234=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA234_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt234=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA234_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt234=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA234_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt234=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA234_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt234=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 234, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 234, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(234);}

			switch (alt234) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:880:5: {...}? cp_expression_list
					{
					dbg.location(880,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(880,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue5033);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:881:7: propertyValue
					{
					dbg.location(881,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue5041);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(882, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(884, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:885:2: ( expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:9: expression
			{
			dbg.location(886,9);
			pushFollow(FOLLOW_expression_in_propertyValue5063);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(887, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(890, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(893,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt235=0;
			try { dbg.enterSubRule(235);

			loop235:
			while (true) {
				int alt235=2;
				try { dbg.enterDecision(235, decisionCanBacktrack[235]);

				int LA235_0 = input.LA(1);
				if ( ((LA235_0 >= A && LA235_0 <= ANGLE)||(LA235_0 >= AT_SIGN && LA235_0 <= L)||(LA235_0 >= LBRACKET && LA235_0 <= R)||(LA235_0 >= RBRACKET && LA235_0 <= SASS_RETURN)||(LA235_0 >= SASS_WARN && LA235_0 <= SASS_WHILE)||(LA235_0 >= STRING && LA235_0 <= Z)) ) {
					alt235=1;
				}

				} finally {dbg.exitDecision(235);}

				switch (alt235) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(893,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_RETURN)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt235 >= 1 ) break loop235;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(235, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt235++;
			}
			} finally {dbg.exitSubRule(235);}
			dbg.location(893,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(894, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(898, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(904, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(906, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:910:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:911:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(911, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:913:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(913, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:918:13: SEMI
			{
			dbg.location(918,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI5233); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(919, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:922:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(922, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:926:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(927, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(929, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:7: IMPORTANT_SYM
			{
			dbg.location(930,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio5278); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(931, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(933, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(934,7);
			pushFollow(FOLLOW_term_in_expression5295);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(934,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(239);

			loop239:
			while (true) {
				int alt239=2;
				try { dbg.enterDecision(239, decisionCanBacktrack[239]);

				try {
					isCyclicDecision = true;
					alt239 = dfa239.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(239);}

				switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(934,66);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt238=3;
					try { dbg.enterSubRule(238);
					try { dbg.enterDecision(238, decisionCanBacktrack[238]);

					try {
						isCyclicDecision = true;
						alt238 = dfa238.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(238);}

					switch (alt238) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:68: ws
							{
							dbg.location(934,68);
							pushFollow(FOLLOW_ws_in_expression5327);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(934,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:74: ( ws )? operator ( ws )?
							{
							dbg.location(934,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:74: ( ws )?
							int alt236=2;
							try { dbg.enterSubRule(236);
							try { dbg.enterDecision(236, decisionCanBacktrack[236]);

							int LA236_0 = input.LA(1);
							if ( (LA236_0==COMMENT||LA236_0==NL||LA236_0==WS) ) {
								alt236=1;
							}
							} finally {dbg.exitDecision(236);}

							switch (alt236) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:74: ws
									{
									dbg.location(934,74);
									pushFollow(FOLLOW_ws_in_expression5332);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(236);}
							dbg.location(934,78);
							pushFollow(FOLLOW_operator_in_expression5335);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(934,87);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:87: ( ws )?
							int alt237=2;
							try { dbg.enterSubRule(237);
							try { dbg.enterDecision(237, decisionCanBacktrack[237]);

							int LA237_0 = input.LA(1);
							if ( (LA237_0==COMMENT||LA237_0==NL||LA237_0==WS) ) {
								alt237=1;
							}
							} finally {dbg.exitDecision(237);}

							switch (alt237) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:87: ws
									{
									dbg.location(934,87);
									pushFollow(FOLLOW_ws_in_expression5337);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(237);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(238);}
					dbg.location(934,109);
					pushFollow(FOLLOW_term_in_expression5346);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop239;
				}
			}
			} finally {dbg.exitSubRule(239);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(935, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:937:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(937, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:938:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(939,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:5: ( unaryOperator ( ws )? )?
			int alt241=2;
			try { dbg.enterSubRule(241);
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			int LA241_0 = input.LA(1);
			if ( (LA241_0==MINUS||LA241_0==PLUS) ) {
				alt241=1;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:7: unaryOperator ( ws )?
					{
					dbg.location(939,7);
					pushFollow(FOLLOW_unaryOperator_in_term5371);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(939,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:21: ( ws )?
					int alt240=2;
					try { dbg.enterSubRule(240);
					try { dbg.enterDecision(240, decisionCanBacktrack[240]);

					int LA240_0 = input.LA(1);
					if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
						alt240=1;
					}
					} finally {dbg.exitDecision(240);}

					switch (alt240) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:21: ws
							{
							dbg.location(939,21);
							pushFollow(FOLLOW_ws_in_term5373);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(240);}

					}
					break;

			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(940,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:5: ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt242=24;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA242_1 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt242=1;
				}
				else if ( (true) ) {
					alt242=2;
				}

				}
				break;
			case NUMBER:
				{
				alt242=3;
				}
				break;
			case PERCENTAGE:
				{
				alt242=4;
				}
				break;
			case LENGTH:
				{
				alt242=5;
				}
				break;
			case EMS:
				{
				alt242=6;
				}
				break;
			case REM:
				{
				alt242=7;
				}
				break;
			case EXS:
				{
				alt242=8;
				}
				break;
			case ANGLE:
				{
				alt242=9;
				}
				break;
			case TIME:
				{
				alt242=10;
				}
				break;
			case FREQ:
				{
				alt242=11;
				}
				break;
			case RESOLUTION:
				{
				alt242=12;
				}
				break;
			case DIMENSION:
				{
				alt242=13;
				}
				break;
			case STRING:
				{
				alt242=14;
				}
				break;
			case TILDE:
				{
				alt242=15;
				}
				break;
			case LESS_JS_STRING:
				{
				alt242=16;
				}
				break;
			case GEN:
				{
				alt242=17;
				}
				break;
			case URI:
				{
				alt242=18;
				}
				break;
			case HASH:
				{
				alt242=19;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt242=20;
				}
				break;
			case LESS_AND:
				{
				alt242=21;
				}
				break;
			case HASH_SYMBOL:
				{
				alt242=22;
				}
				break;
			case AT_SIGN:
				{
				alt242=23;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt242=24;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 242, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(941,36);
					pushFollow(FOLLOW_function_in_term5402);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:11: IDENT
					{
					dbg.location(942,11);
					match(input,IDENT,FOLLOW_IDENT_in_term5415); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:11: NUMBER
					{
					dbg.location(943,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term5427); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:944:11: PERCENTAGE
					{
					dbg.location(944,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term5439); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:11: LENGTH
					{
					dbg.location(945,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term5451); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:946:11: EMS
					{
					dbg.location(946,11);
					match(input,EMS,FOLLOW_EMS_in_term5463); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:11: REM
					{
					dbg.location(947,11);
					match(input,REM,FOLLOW_REM_in_term5475); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:11: EXS
					{
					dbg.location(948,11);
					match(input,EXS,FOLLOW_EXS_in_term5487); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:949:11: ANGLE
					{
					dbg.location(949,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term5499); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:11: TIME
					{
					dbg.location(950,11);
					match(input,TIME,FOLLOW_TIME_in_term5511); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:11: FREQ
					{
					dbg.location(951,11);
					match(input,FREQ,FOLLOW_FREQ_in_term5523); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:952:11: RESOLUTION
					{
					dbg.location(952,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term5535); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:953:11: DIMENSION
					{
					dbg.location(953,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term5547); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:11: STRING
					{
					dbg.location(954,11);
					match(input,STRING,FOLLOW_STRING_in_term5564); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:955:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(955,11);
					match(input,TILDE,FOLLOW_TILDE_in_term5576); if (state.failed) return;dbg.location(955,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:956:11: LESS_JS_STRING
					{
					dbg.location(956,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term5599); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:11: GEN
					{
					dbg.location(957,11);
					match(input,GEN,FOLLOW_GEN_in_term5614); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:11: URI
					{
					dbg.location(958,11);
					match(input,URI,FOLLOW_URI_in_term5626); if (state.failed) return;
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:11: hexColor
					{
					dbg.location(959,11);
					pushFollow(FOLLOW_hexColor_in_term5638);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:960:11: {...}? cp_variable
					{
					dbg.location(960,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(960,40);
					pushFollow(FOLLOW_cp_variable_in_term5652);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:11: {...}? LESS_AND
					{
					dbg.location(961,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(961,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term5666); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(962,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(962,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term5680);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:11: {...}? less_selector_interpolation
					{
					dbg.location(963,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(963,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term5694);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:964:11: {...}? cp_term_symbol
					{
					dbg.location(964,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(964,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term5708);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(966, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:971:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(971, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:7: PERCENTAGE_SYMBOL
			{
			dbg.location(972,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5735); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(973, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(975, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(976,5);
			pushFollow(FOLLOW_functionName_in_function5751);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(976,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:18: ( ws )?
			int alt243=2;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( (LA243_0==COMMENT||LA243_0==NL||LA243_0==WS) ) {
				alt243=1;
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:18: ws
					{
					dbg.location(976,18);
					pushFollow(FOLLOW_ws_in_function5753);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(977,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function5758); if (state.failed) return;dbg.location(977,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:977:10: ( ws )?
			int alt244=2;
			try { dbg.enterSubRule(244);
			try { dbg.enterDecision(244, decisionCanBacktrack[244]);

			int LA244_0 = input.LA(1);
			if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
				alt244=1;
			}
			} finally {dbg.exitDecision(244);}

			switch (alt244) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:977:10: ws
					{
					dbg.location(977,10);
					pushFollow(FOLLOW_ws_in_function5760);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(244);}
			dbg.location(978,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:3: ( fnAttributes |)
			int alt245=2;
			try { dbg.enterSubRule(245);
			try { dbg.enterDecision(245, decisionCanBacktrack[245]);

			int LA245_0 = input.LA(1);
			if ( ((LA245_0 >= ANGLE && LA245_0 <= AT_SIGN)||(LA245_0 >= BOTTOMCENTER_SYM && LA245_0 <= BOTTOMRIGHT_SYM)||LA245_0==CHARSET_SYM||LA245_0==COUNTER_STYLE_SYM||LA245_0==DIMENSION||LA245_0==EMS||LA245_0==EXS||(LA245_0 >= FONT_FACE_SYM && LA245_0 <= FREQ)||LA245_0==GEN||(LA245_0 >= HASH && LA245_0 <= HASH_SYMBOL)||(LA245_0 >= IDENT && LA245_0 <= IMPORT_SYM)||LA245_0==LBRACE||(LA245_0 >= LEFTBOTTOM_SYM && LA245_0 <= LENGTH)||(LA245_0 >= LESS_AND && LA245_0 <= LESS_JS_STRING)||LA245_0==LPAREN||(LA245_0 >= MEDIA_SYM && LA245_0 <= MOZ_DOCUMENT_SYM)||LA245_0==NAMESPACE_SYM||(LA245_0 >= NOT && LA245_0 <= NUMBER)||(LA245_0 >= PAGE_SYM && LA245_0 <= PERCENTAGE_SYMBOL)||LA245_0==PLUS||(LA245_0 >= REM && LA245_0 <= RIGHTTOP_SYM)||(LA245_0 >= SASS_AT_ROOT && LA245_0 <= SASS_DEBUG)||(LA245_0 >= SASS_EACH && LA245_0 <= SASS_ELSE)||LA245_0==SASS_EXTEND||(LA245_0 >= SASS_FOR && LA245_0 <= SASS_FUNCTION)||(LA245_0 >= SASS_IF && LA245_0 <= SASS_MIXIN)||(LA245_0 >= SASS_RETURN && LA245_0 <= SASS_WHILE)||LA245_0==STRING||(LA245_0 >= TILDE && LA245_0 <= TOPRIGHT_SYM)||LA245_0==URI||LA245_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt245=1;
			}
			else if ( (LA245_0==RPAREN) ) {
				alt245=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 245, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(245);}

			switch (alt245) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:979:21: fnAttributes
					{
					dbg.location(979,21);
					pushFollow(FOLLOW_fnAttributes_in_function5787);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(245);}
			dbg.location(982,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function5818); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(983, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(989, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(994,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:9: ( IDENT COLON )?
			int alt246=2;
			try { dbg.enterSubRule(246);
			try { dbg.enterDecision(246, decisionCanBacktrack[246]);

			int LA246_0 = input.LA(1);
			if ( (LA246_0==IDENT) ) {
				int LA246_1 = input.LA(2);
				if ( (LA246_1==COLON) ) {
					alt246=1;
				}
			}
			} finally {dbg.exitDecision(246);}

			switch (alt246) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:10: IDENT COLON
					{
					dbg.location(994,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5870); if (state.failed) return;dbg.location(994,16);
					match(input,COLON,FOLLOW_COLON_in_functionName5872); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(246);}
			dbg.location(994,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName5876); if (state.failed) return;dbg.location(994,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:30: ( DOT IDENT )*
			try { dbg.enterSubRule(247);

			loop247:
			while (true) {
				int alt247=2;
				try { dbg.enterDecision(247, decisionCanBacktrack[247]);

				int LA247_0 = input.LA(1);
				if ( (LA247_0==DOT) ) {
					alt247=1;
				}

				} finally {dbg.exitDecision(247);}

				switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:31: DOT IDENT
					{
					dbg.location(994,31);
					match(input,DOT,FOLLOW_DOT_in_functionName5879); if (state.failed) return;dbg.location(994,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5881); if (state.failed) return;
					}
					break;

				default :
					break loop247;
				}
			}
			} finally {dbg.exitSubRule(247);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(995, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(997, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(999,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes5905);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(999,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(251);

			loop251:
			while (true) {
				int alt251=2;
				try { dbg.enterDecision(251, decisionCanBacktrack[251]);

				try {
					isCyclicDecision = true;
					alt251 = dfa251.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(251);}

				switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(999,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:18: ( ws )?
					int alt248=2;
					try { dbg.enterSubRule(248);
					try { dbg.enterDecision(248, decisionCanBacktrack[248]);

					int LA248_0 = input.LA(1);
					if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
						alt248=1;
					}
					} finally {dbg.exitDecision(248);}

					switch (alt248) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:18: ws
							{
							dbg.location(999,18);
							pushFollow(FOLLOW_ws_in_fnAttributes5908);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(248);}
					dbg.location(999,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:22: ( COMMA |{...}? SEMI )
					int alt249=2;
					try { dbg.enterSubRule(249);
					try { dbg.enterDecision(249, decisionCanBacktrack[249]);

					int LA249_0 = input.LA(1);
					if ( (LA249_0==COMMA) ) {
						alt249=1;
					}
					else if ( (LA249_0==SEMI) ) {
						alt249=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 249, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(249);}

					switch (alt249) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:23: COMMA
							{
							dbg.location(999,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes5912); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:31: {...}? SEMI
							{
							dbg.location(999,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(999,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes5918); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(249);}
					dbg.location(999,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:55: ( ws )?
					int alt250=2;
					try { dbg.enterSubRule(250);
					try { dbg.enterDecision(250, decisionCanBacktrack[250]);

					int LA250_0 = input.LA(1);
					if ( (LA250_0==COMMENT||LA250_0==NL||LA250_0==WS) ) {
						alt250=1;
					}
					} finally {dbg.exitDecision(250);}

					switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:55: ws
							{
							dbg.location(999,55);
							pushFollow(FOLLOW_ws_in_fnAttributes5921);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(250);}
					dbg.location(999,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes5924);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop251;
				}
			}
			} finally {dbg.exitSubRule(251);}
			dbg.location(999,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:73: ( ws )?
			int alt252=2;
			try { dbg.enterSubRule(252);
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==COMMENT||LA252_0==NL||LA252_0==WS) ) {
				alt252=1;
			}
			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:73: ws
					{
					dbg.location(999,73);
					pushFollow(FOLLOW_ws_in_fnAttributes5928);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(252);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1000, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1002:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1002, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1003:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt255=3;
			try { dbg.enterDecision(255, decisionCanBacktrack[255]);

			int LA255_0 = input.LA(1);
			if ( (LA255_0==IDENT) ) {
				int LA255_1 = input.LA(2);
				if ( (synpred34_Css3()) ) {
					alt255=1;
				}
				else if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==AT_IDENT||(LA255_0 >= BOTTOMCENTER_SYM && LA255_0 <= BOTTOMRIGHT_SYM)||LA255_0==CHARSET_SYM||LA255_0==COUNTER_STYLE_SYM||LA255_0==FONT_FACE_SYM||LA255_0==IMPORT_SYM||(LA255_0 >= LEFTBOTTOM_SYM && LA255_0 <= LEFTTOP_SYM)||LA255_0==MEDIA_SYM||LA255_0==MOZ_DOCUMENT_SYM||LA255_0==NAMESPACE_SYM||LA255_0==PAGE_SYM||(LA255_0 >= RIGHTBOTTOM_SYM && LA255_0 <= RIGHTTOP_SYM)||(LA255_0 >= SASS_AT_ROOT && LA255_0 <= SASS_DEBUG)||(LA255_0 >= SASS_EACH && LA255_0 <= SASS_ELSE)||LA255_0==SASS_EXTEND||(LA255_0 >= SASS_FOR && LA255_0 <= SASS_FUNCTION)||(LA255_0 >= SASS_IF && LA255_0 <= SASS_MIXIN)||LA255_0==SASS_RETURN||(LA255_0 >= SASS_WARN && LA255_0 <= SASS_WHILE)||(LA255_0 >= TOPCENTER_SYM && LA255_0 <= TOPRIGHT_SYM)||LA255_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA255_2 = input.LA(2);
				if ( (((synpred34_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt255=1;
				}
				else if ( (((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt255=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==SASS_VAR) ) {
				int LA255_3 = input.LA(2);
				if ( (((synpred34_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt255=1;
				}
				else if ( (((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt255=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==LBRACE) && (synpred35_Css3())) {
				alt255=2;
			}
			else if ( (LA255_0==NOT) && (synpred35_Css3())) {
				alt255=2;
			}
			else if ( (LA255_0==MINUS||LA255_0==PLUS) ) {
				int LA255_6 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==NUMBER) ) {
				int LA255_7 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==PERCENTAGE) ) {
				int LA255_8 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==LENGTH) ) {
				int LA255_9 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==EMS) ) {
				int LA255_10 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==REM) ) {
				int LA255_11 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==EXS) ) {
				int LA255_12 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==ANGLE) ) {
				int LA255_13 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==TIME) ) {
				int LA255_14 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==FREQ) ) {
				int LA255_15 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==RESOLUTION) ) {
				int LA255_16 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==DIMENSION) ) {
				int LA255_17 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==STRING) ) {
				int LA255_18 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==TILDE) ) {
				int LA255_19 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==LESS_JS_STRING) ) {
				int LA255_20 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==GEN) ) {
				int LA255_21 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==URI) ) {
				int LA255_22 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==HASH) ) {
				int LA255_23 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt255=2;
				}
				else if ( (true) ) {
					alt255=3;
				}

			}
			else if ( (LA255_0==LESS_AND) ) {
				int LA255_24 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt255=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==HASH_SYMBOL) ) {
				int LA255_25 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt255=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==AT_SIGN) ) {
				int LA255_26 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt255=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==PERCENTAGE_SYMBOL) ) {
				int LA255_27 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt255=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt255=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 255, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA255_0==IMPORTANT_SYM) && (synpred35_Css3())) {
				alt255=2;
			}
			else if ( (LA255_0==LPAREN) && (synpred35_Css3())) {
				alt255=2;
			}

			} finally {dbg.exitDecision(255);}

			switch (alt255) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(1004,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute5965);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(1004,62);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:62: ( ws )?
					int alt253=2;
					try { dbg.enterSubRule(253);
					try { dbg.enterDecision(253, decisionCanBacktrack[253]);

					int LA253_0 = input.LA(1);
					if ( (LA253_0==COMMENT||LA253_0==NL||LA253_0==WS) ) {
						alt253=1;
					}
					} finally {dbg.exitDecision(253);}

					switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:62: ws
							{
							dbg.location(1004,62);
							pushFollow(FOLLOW_ws_in_fnAttribute5967);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(253);}
					dbg.location(1004,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1004,79);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:79: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:79: ws
							{
							dbg.location(1004,79);
							pushFollow(FOLLOW_ws_in_fnAttribute5976);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(1004,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute5979);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:11: ( cp_expression )=> cp_expression
					{
					dbg.location(1005,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute5996);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:11: expression
					{
					dbg.location(1006,11);
					pushFollow(FOLLOW_expression_in_fnAttribute6008);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1007, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1009, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt257=2;
			try { dbg.enterDecision(257, decisionCanBacktrack[257]);

			int LA257_0 = input.LA(1);
			if ( (LA257_0==IDENT) ) {
				alt257=1;
			}
			else if ( (LA257_0==AT_IDENT||(LA257_0 >= BOTTOMCENTER_SYM && LA257_0 <= BOTTOMRIGHT_SYM)||LA257_0==CHARSET_SYM||LA257_0==COUNTER_STYLE_SYM||LA257_0==FONT_FACE_SYM||LA257_0==IMPORT_SYM||(LA257_0 >= LEFTBOTTOM_SYM && LA257_0 <= LEFTTOP_SYM)||LA257_0==MEDIA_SYM||LA257_0==MOZ_DOCUMENT_SYM||LA257_0==NAMESPACE_SYM||LA257_0==PAGE_SYM||(LA257_0 >= RIGHTBOTTOM_SYM && LA257_0 <= RIGHTTOP_SYM)||(LA257_0 >= SASS_AT_ROOT && LA257_0 <= SASS_DEBUG)||(LA257_0 >= SASS_EACH && LA257_0 <= SASS_ELSE)||LA257_0==SASS_EXTEND||(LA257_0 >= SASS_FOR && LA257_0 <= SASS_FUNCTION)||(LA257_0 >= SASS_IF && LA257_0 <= SASS_MIXIN)||(LA257_0 >= SASS_RETURN && LA257_0 <= SASS_WHILE)||(LA257_0 >= TOPCENTER_SYM && LA257_0 <= TOPRIGHT_SYM)||LA257_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt257=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 257, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(257);}

			switch (alt257) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1011,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName6031); if (state.failed) return;dbg.location(1011,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:19: ( DOT IDENT )*
					try { dbg.enterSubRule(256);

					loop256:
					while (true) {
						int alt256=2;
						try { dbg.enterDecision(256, decisionCanBacktrack[256]);

						int LA256_0 = input.LA(1);
						if ( (LA256_0==DOT) ) {
							alt256=1;
						}

						} finally {dbg.exitDecision(256);}

						switch (alt256) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:20: DOT IDENT
							{
							dbg.location(1011,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName6034); if (state.failed) return;dbg.location(1011,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName6036); if (state.failed) return;
							}
							break;

						default :
							break loop256;
						}
					}
					} finally {dbg.exitSubRule(256);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1012:15: {...}? cp_variable
					{
					dbg.location(1012,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1012,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName6056);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1013, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1015:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1015, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt262=2;
			try { dbg.enterDecision(262, decisionCanBacktrack[262]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA262_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA262_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA262_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA262_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA262_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA262_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA262_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA262_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA262_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA262_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA262_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA262_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA262_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA262_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA262_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA262_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA262_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA262_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA262_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA262_20 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt262=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA262_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt262=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA262_22 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt262=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA262_23 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt262=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA262_24 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt262=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA262_25 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt262=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 262, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt262=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 262, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(262);}

			switch (alt262) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1017,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue6079);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1017,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(261);

					loop261:
					while (true) {
						int alt261=2;
						try { dbg.enterDecision(261, decisionCanBacktrack[261]);

						try {
							isCyclicDecision = true;
							alt261 = dfa261.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(261);}

						switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1017,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt260=3;
							try { dbg.enterSubRule(260);
							try { dbg.enterDecision(260, decisionCanBacktrack[260]);

							try {
								isCyclicDecision = true;
								alt260 = dfa260.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(260);}

							switch (alt260) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:73: ws
									{
									dbg.location(1017,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue6111);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1017,78);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1017,79);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:79: ( ws )?
									int alt258=2;
									try { dbg.enterSubRule(258);
									try { dbg.enterDecision(258, decisionCanBacktrack[258]);

									int LA258_0 = input.LA(1);
									if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
										alt258=1;
									}
									} finally {dbg.exitDecision(258);}

									switch (alt258) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:79: ws
											{
											dbg.location(1017,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6116);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(258);}
									dbg.location(1017,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue6119); if (state.failed) return;dbg.location(1017,91);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:91: ( ws )?
									int alt259=2;
									try { dbg.enterSubRule(259);
									try { dbg.enterDecision(259, decisionCanBacktrack[259]);

									int LA259_0 = input.LA(1);
									if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
										alt259=1;
									}
									} finally {dbg.exitDecision(259);}

									switch (alt259) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:91: ws
											{
											dbg.location(1017,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6121);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(259);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(260);}
							dbg.location(1017,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue6130);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop261;
						}
					}
					} finally {dbg.exitSubRule(261);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:15: {...}? cp_math_expression
					{
					dbg.location(1018,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1018,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue6151);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1019, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1021:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1021, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1022:5: ( HASH )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1022:7: HASH
			{
			dbg.location(1022,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor6165); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1023, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1025:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1025, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1026,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:7: ( WS | NL | COMMENT )+
			int cnt263=0;
			try { dbg.enterSubRule(263);

			loop263:
			while (true) {
				int alt263=2;
				try { dbg.enterDecision(263, decisionCanBacktrack[263]);

				int LA263_0 = input.LA(1);
				if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
					alt263=1;
				}

				} finally {dbg.exitDecision(263);}

				switch (alt263) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1026,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt263 >= 1 ) break loop263;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(263, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt263++;
			}
			} finally {dbg.exitSubRule(263);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1027, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1032:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1032, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt271=2;
			try { dbg.enterDecision(271, decisionCanBacktrack[271]);

			int LA271_0 = input.LA(1);
			if ( (LA271_0==AT_IDENT||(LA271_0 >= BOTTOMCENTER_SYM && LA271_0 <= BOTTOMRIGHT_SYM)||LA271_0==CHARSET_SYM||LA271_0==COUNTER_STYLE_SYM||LA271_0==FONT_FACE_SYM||LA271_0==IMPORT_SYM||(LA271_0 >= LEFTBOTTOM_SYM && LA271_0 <= LEFTTOP_SYM)||LA271_0==MEDIA_SYM||LA271_0==MOZ_DOCUMENT_SYM||LA271_0==NAMESPACE_SYM||LA271_0==PAGE_SYM||(LA271_0 >= RIGHTBOTTOM_SYM && LA271_0 <= RIGHTTOP_SYM)||(LA271_0 >= SASS_AT_ROOT && LA271_0 <= SASS_DEBUG)||(LA271_0 >= SASS_EACH && LA271_0 <= SASS_ELSE)||LA271_0==SASS_EXTEND||(LA271_0 >= SASS_FOR && LA271_0 <= SASS_FUNCTION)||(LA271_0 >= SASS_IF && LA271_0 <= SASS_MIXIN)||LA271_0==SASS_RETURN||(LA271_0 >= SASS_WARN && LA271_0 <= SASS_WHILE)||(LA271_0 >= TOPCENTER_SYM && LA271_0 <= TOPRIGHT_SYM)||LA271_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA271_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt271=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt271=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 271, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA271_0==SASS_VAR) ) {
				int LA271_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt271=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt271=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 271, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 271, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(271);}

			switch (alt271) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1034,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1034,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6225);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1034,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:39: ( ws )?
					int alt264=2;
					try { dbg.enterSubRule(264);
					try { dbg.enterDecision(264, decisionCanBacktrack[264]);

					int LA264_0 = input.LA(1);
					if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
						alt264=1;
					}
					} finally {dbg.exitDecision(264);}

					switch (alt264) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:39: ws
							{
							dbg.location(1034,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6227);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(264);}
					dbg.location(1034,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6230); if (state.failed) return;dbg.location(1034,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:49: ( ws )?
					int alt265=2;
					try { dbg.enterSubRule(265);
					try { dbg.enterDecision(265, decisionCanBacktrack[265]);

					int LA265_0 = input.LA(1);
					if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
						alt265=1;
					}
					} finally {dbg.exitDecision(265);}

					switch (alt265) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:49: ws
							{
							dbg.location(1034,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6232);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(265);}
					dbg.location(1034,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6235);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1036,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1036,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6257);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1036,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:39: ( ws )?
					int alt266=2;
					try { dbg.enterSubRule(266);
					try { dbg.enterDecision(266, decisionCanBacktrack[266]);

					int LA266_0 = input.LA(1);
					if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
						alt266=1;
					}
					} finally {dbg.exitDecision(266);}

					switch (alt266) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:39: ws
							{
							dbg.location(1036,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6259);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(266);}
					dbg.location(1036,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6262); if (state.failed) return;dbg.location(1036,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:49: ( ws )?
					int alt267=2;
					try { dbg.enterSubRule(267);
					try { dbg.enterDecision(267, decisionCanBacktrack[267]);

					int LA267_0 = input.LA(1);
					if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
						alt267=1;
					}
					} finally {dbg.exitDecision(267);}

					switch (alt267) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:49: ws
							{
							dbg.location(1036,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6264);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(267);}
					dbg.location(1036,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6267);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1036,72);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(270);

					loop270:
					while (true) {
						int alt270=3;
						try { dbg.enterDecision(270, decisionCanBacktrack[270]);

						try {
							isCyclicDecision = true;
							alt270 = dfa270.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(270);}

						switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1036,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1036,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:74: ( ws )?
							int alt268=2;
							try { dbg.enterSubRule(268);
							try { dbg.enterDecision(268, decisionCanBacktrack[268]);

							int LA268_0 = input.LA(1);
							if ( (LA268_0==COMMENT||LA268_0==NL||LA268_0==WS) ) {
								alt268=1;
							}
							} finally {dbg.exitDecision(268);}

							switch (alt268) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:74: ws
									{
									dbg.location(1036,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6271);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(268);}
							dbg.location(1036,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6274); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1036,94);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1036,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:95: ( ws )?
							int alt269=2;
							try { dbg.enterSubRule(269);
							try { dbg.enterDecision(269, decisionCanBacktrack[269]);

							int LA269_0 = input.LA(1);
							if ( (LA269_0==COMMENT||LA269_0==NL||LA269_0==WS) ) {
								alt269=1;
							}
							} finally {dbg.exitDecision(269);}

							switch (alt269) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:95: ws
									{
									dbg.location(1036,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6280);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(269);}
							dbg.location(1036,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6283); if (state.failed) return;
							}

							}
							break;

						default :
							break loop270;
						}
					}
					} finally {dbg.exitSubRule(270);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1037, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1040, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) )
			int alt272=2;
			try { dbg.enterDecision(272, decisionCanBacktrack[272]);

			int LA272_0 = input.LA(1);
			if ( (LA272_0==AT_IDENT||(LA272_0 >= BOTTOMCENTER_SYM && LA272_0 <= BOTTOMRIGHT_SYM)||LA272_0==CHARSET_SYM||LA272_0==COUNTER_STYLE_SYM||LA272_0==FONT_FACE_SYM||LA272_0==IMPORT_SYM||(LA272_0 >= LEFTBOTTOM_SYM && LA272_0 <= LEFTTOP_SYM)||LA272_0==MEDIA_SYM||LA272_0==MOZ_DOCUMENT_SYM||LA272_0==NAMESPACE_SYM||LA272_0==PAGE_SYM||(LA272_0 >= RIGHTBOTTOM_SYM && LA272_0 <= RIGHTTOP_SYM)||(LA272_0 >= SASS_AT_ROOT && LA272_0 <= SASS_DEBUG)||(LA272_0 >= SASS_EACH && LA272_0 <= SASS_ELSE)||LA272_0==SASS_EXTEND||(LA272_0 >= SASS_FOR && LA272_0 <= SASS_FUNCTION)||(LA272_0 >= SASS_IF && LA272_0 <= SASS_MIXIN)||LA272_0==SASS_RETURN||(LA272_0 >= SASS_WARN && LA272_0 <= SASS_WHILE)||(LA272_0 >= TOPCENTER_SYM && LA272_0 <= TOPRIGHT_SYM)||LA272_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt272=1;
			}
			else if ( (LA272_0==SASS_VAR) ) {
				alt272=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 272, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(272);}

			switch (alt272) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1043:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1043,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1043,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:9: {...}? ( SASS_VAR )
					{
					dbg.location(1045,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1045,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:27: ( SASS_VAR )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:29: SASS_VAR
					{
					dbg.location(1045,29);
					match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable6507); if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1046, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1049, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1050:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1051:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1051,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list6537);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1052,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(275);

			loop275:
			while (true) {
				int alt275=2;
				try { dbg.enterDecision(275, decisionCanBacktrack[275]);

				try {
					isCyclicDecision = true;
					alt275 = dfa275.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(275);}

				switch (alt275) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1052,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:37: ( ws )?
					int alt273=2;
					try { dbg.enterSubRule(273);
					try { dbg.enterDecision(273, decisionCanBacktrack[273]);

					int LA273_0 = input.LA(1);
					if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
						alt273=1;
					}
					} finally {dbg.exitDecision(273);}

					switch (alt273) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:37: ws
							{
							dbg.location(1052,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list6556);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(273);}
					dbg.location(1052,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list6559); if (state.failed) return;dbg.location(1052,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:47: ( ws )?
					int alt274=2;
					try { dbg.enterSubRule(274);
					try { dbg.enterDecision(274, decisionCanBacktrack[274]);

					int LA274_0 = input.LA(1);
					if ( (LA274_0==COMMENT||LA274_0==NL||LA274_0==WS) ) {
						alt274=1;
					}
					} finally {dbg.exitDecision(274);}

					switch (alt274) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:47: ws
							{
							dbg.location(1052,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list6561);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(274);}
					dbg.location(1052,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list6564);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop275;
				}
			}
			} finally {dbg.exitSubRule(275);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1053, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1065, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt284=3;
			try { dbg.enterDecision(284, decisionCanBacktrack[284]);

			int LA284_0 = input.LA(1);
			if ( (LA284_0==LBRACE) ) {
				alt284=1;
			}
			else if ( (LA284_0==NOT) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==MINUS||LA284_0==PLUS) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==IDENT) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==NUMBER) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==PERCENTAGE) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==LENGTH) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==EMS) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==REM) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==EXS) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==ANGLE) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==TIME) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==FREQ) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==RESOLUTION) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==DIMENSION) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==STRING) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==TILDE) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==LESS_JS_STRING) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==GEN) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==URI) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==HASH) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==AT_IDENT||(LA284_0 >= BOTTOMCENTER_SYM && LA284_0 <= BOTTOMRIGHT_SYM)||LA284_0==CHARSET_SYM||LA284_0==COUNTER_STYLE_SYM||LA284_0==FONT_FACE_SYM||LA284_0==IMPORT_SYM||(LA284_0 >= LEFTBOTTOM_SYM && LA284_0 <= LEFTTOP_SYM)||LA284_0==MEDIA_SYM||LA284_0==MOZ_DOCUMENT_SYM||LA284_0==NAMESPACE_SYM||LA284_0==PAGE_SYM||(LA284_0 >= RIGHTBOTTOM_SYM && LA284_0 <= RIGHTTOP_SYM)||(LA284_0 >= SASS_AT_ROOT && LA284_0 <= SASS_DEBUG)||(LA284_0 >= SASS_EACH && LA284_0 <= SASS_ELSE)||LA284_0==SASS_EXTEND||(LA284_0 >= SASS_FOR && LA284_0 <= SASS_FUNCTION)||(LA284_0 >= SASS_IF && LA284_0 <= SASS_MIXIN)||LA284_0==SASS_RETURN||(LA284_0 >= SASS_WARN && LA284_0 <= SASS_WHILE)||(LA284_0 >= TOPCENTER_SYM && LA284_0 <= TOPRIGHT_SYM)||LA284_0==WEBKIT_KEYFRAMES_SYM) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==SASS_VAR) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==LESS_AND) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==HASH_SYMBOL) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==AT_SIGN) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==PERCENTAGE_SYMBOL) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==IMPORTANT_SYM) && (synpred39_Css3())) {
				alt284=2;
			}
			else if ( (LA284_0==LPAREN) ) {
				int LA284_29 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt284=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt284=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 284, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 284, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(284);}

			switch (alt284) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1067,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1067,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1067,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression6600); if (state.failed) return;dbg.location(1067,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:31: ( ws )?
					int alt276=2;
					try { dbg.enterSubRule(276);
					try { dbg.enterDecision(276, decisionCanBacktrack[276]);

					int LA276_0 = input.LA(1);
					if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
						alt276=1;
					}
					} finally {dbg.exitDecision(276);}

					switch (alt276) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:31: ws
							{
							dbg.location(1067,31);
							pushFollow(FOLLOW_ws_in_cp_expression6602);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(276);}
					dbg.location(1067,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6605);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1067,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:48: ( declarations )?
					int alt277=2;
					try { dbg.enterSubRule(277);
					try { dbg.enterDecision(277, decisionCanBacktrack[277]);

					int LA277_0 = input.LA(1);
					if ( ((LA277_0 >= AT_IDENT && LA277_0 <= AT_SIGN)||(LA277_0 >= BOTTOMCENTER_SYM && LA277_0 <= BOTTOMRIGHT_SYM)||(LA277_0 >= CHARSET_SYM && LA277_0 <= COLON)||LA277_0==COUNTER_STYLE_SYM||(LA277_0 >= DCOLON && LA277_0 <= DOT)||LA277_0==FONT_FACE_SYM||(LA277_0 >= GEN && LA277_0 <= GREATER)||(LA277_0 >= HASH && LA277_0 <= HASH_SYMBOL)||LA277_0==IDENT||LA277_0==IMPORT_SYM||(LA277_0 >= LBRACKET && LA277_0 <= LEFTTOP_SYM)||LA277_0==LESS_AND||(LA277_0 >= MEDIA_SYM && LA277_0 <= MOZ_DOCUMENT_SYM)||LA277_0==NAMESPACE_SYM||LA277_0==PAGE_SYM||(LA277_0 >= PIPE && LA277_0 <= PLUS)||(LA277_0 >= RIGHTBOTTOM_SYM && LA277_0 <= RIGHTTOP_SYM)||(LA277_0 >= SASS_AT_ROOT && LA277_0 <= SASS_DEBUG)||(LA277_0 >= SASS_EACH && LA277_0 <= SASS_ELSE)||(LA277_0 >= SASS_ERROR && LA277_0 <= SASS_FUNCTION)||(LA277_0 >= SASS_IF && LA277_0 <= SASS_MIXIN)||(LA277_0 >= SASS_RETURN && LA277_0 <= SEMI)||LA277_0==STAR||LA277_0==TILDE||(LA277_0 >= TOPCENTER_SYM && LA277_0 <= TOPRIGHT_SYM)||LA277_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt277=1;
					}
					} finally {dbg.exitDecision(277);}

					switch (alt277) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:48: declarations
							{
							dbg.location(1067,48);
							pushFollow(FOLLOW_declarations_in_cp_expression6607);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(277);}
					dbg.location(1067,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression6610); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1068,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1068,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6626);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1069,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1069:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(281);

					loop281:
					while (true) {
						int alt281=3;
						try { dbg.enterDecision(281, decisionCanBacktrack[281]);

						try {
							isCyclicDecision = true;
							alt281 = dfa281.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(281);}

						switch (alt281) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1070,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1070,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:40: ( ws )?
							int alt278=2;
							try { dbg.enterSubRule(278);
							try { dbg.enterDecision(278, decisionCanBacktrack[278]);

							int LA278_0 = input.LA(1);
							if ( (LA278_0==COMMENT||LA278_0==NL||LA278_0==WS) ) {
								alt278=1;
							}
							} finally {dbg.exitDecision(278);}

							switch (alt278) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:40: ws
									{
									dbg.location(1070,40);
									pushFollow(FOLLOW_ws_in_cp_expression6650);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(278);}
							dbg.location(1070,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression6653);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1070,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:67: ( ws )?
							int alt279=2;
							try { dbg.enterSubRule(279);
							try { dbg.enterDecision(279, decisionCanBacktrack[279]);

							int LA279_0 = input.LA(1);
							if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
								alt279=1;
							}
							} finally {dbg.exitDecision(279);}

							switch (alt279) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:67: ws
									{
									dbg.location(1070,67);
									pushFollow(FOLLOW_ws_in_cp_expression6655);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(279);}

							}
							dbg.location(1070,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6659);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1071,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:37: ( ws )?
							int alt280=2;
							try { dbg.enterSubRule(280);
							try { dbg.enterDecision(280, decisionCanBacktrack[280]);

							int LA280_0 = input.LA(1);
							if ( (LA280_0==COMMENT||LA280_0==NL||LA280_0==WS) ) {
								alt280=1;
							}
							} finally {dbg.exitDecision(280);}

							switch (alt280) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:37: ws
									{
									dbg.location(1071,37);
									pushFollow(FOLLOW_ws_in_cp_expression6678);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(280);}
							dbg.location(1071,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6681);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop281;
						}
					}
					} finally {dbg.exitSubRule(281);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1073,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1073,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression6699); if (state.failed) return;dbg.location(1073,32);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:32: ( ws )?
					int alt282=2;
					try { dbg.enterSubRule(282);
					try { dbg.enterDecision(282, decisionCanBacktrack[282]);

					int LA282_0 = input.LA(1);
					if ( (LA282_0==COMMENT||LA282_0==NL||LA282_0==WS) ) {
						alt282=1;
					}
					} finally {dbg.exitDecision(282);}

					switch (alt282) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:32: ws
							{
							dbg.location(1073,32);
							pushFollow(FOLLOW_ws_in_cp_expression6701);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(282);}
					dbg.location(1073,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6704);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1073,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:49: ( sass_map_pairs )?
					int alt283=2;
					try { dbg.enterSubRule(283);
					try { dbg.enterDecision(283, decisionCanBacktrack[283]);

					int LA283_0 = input.LA(1);
					if ( ((LA283_0 >= AT_IDENT && LA283_0 <= AT_SIGN)||(LA283_0 >= BOTTOMCENTER_SYM && LA283_0 <= BOTTOMRIGHT_SYM)||LA283_0==CHARSET_SYM||LA283_0==COMMA||LA283_0==COUNTER_STYLE_SYM||LA283_0==FONT_FACE_SYM||LA283_0==GEN||LA283_0==HASH_SYMBOL||LA283_0==IDENT||LA283_0==IMPORT_SYM||(LA283_0 >= LEFTBOTTOM_SYM && LA283_0 <= LEFTTOP_SYM)||(LA283_0 >= MEDIA_SYM && LA283_0 <= MOZ_DOCUMENT_SYM)||LA283_0==NAMESPACE_SYM||LA283_0==NUMBER||LA283_0==PAGE_SYM||(LA283_0 >= RIGHTBOTTOM_SYM && LA283_0 <= RIGHTTOP_SYM)||(LA283_0 >= SASS_AT_ROOT && LA283_0 <= SASS_DEBUG)||(LA283_0 >= SASS_EACH && LA283_0 <= SASS_ELSE)||LA283_0==SASS_EXTEND||(LA283_0 >= SASS_FOR && LA283_0 <= SASS_FUNCTION)||(LA283_0 >= SASS_IF && LA283_0 <= SASS_MIXIN)||(LA283_0 >= SASS_RETURN && LA283_0 <= SASS_WHILE)||LA283_0==STRING||(LA283_0 >= TOPCENTER_SYM && LA283_0 <= TOPRIGHT_SYM)||LA283_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt283=1;
					}
					} finally {dbg.exitDecision(283);}

					switch (alt283) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:49: sass_map_pairs
							{
							dbg.location(1073,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression6706);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(283);}
					dbg.location(1073,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression6709); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1074, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1076, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1077:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt285=8;
			try { dbg.enterDecision(285, decisionCanBacktrack[285]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA285_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt285=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt285=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 285, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt285=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt285=4;
				}
				break;
			case LESS:
				{
				alt285=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt285=6;
				}
				break;
			case GREATER:
				{
				alt285=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt285=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 285, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(285);}

			switch (alt285) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:5: key_or
					{
					dbg.location(1078,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator6730);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:14: key_and
					{
					dbg.location(1078,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator6734);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:25: CP_EQ
					{
					dbg.location(1078,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator6739); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:33: CP_NOT_EQ
					{
					dbg.location(1078,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator6743); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:45: LESS
					{
					dbg.location(1078,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator6747); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:52: LESS_OR_EQ
					{
					dbg.location(1078,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator6751); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:65: GREATER
					{
					dbg.location(1078,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator6755); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:75: GREATER_OR_EQ
					{
					dbg.location(1078,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6759); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1079, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1081, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1083,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:9: ( NOT ( ws )? )?
			int alt287=2;
			try { dbg.enterSubRule(287);
			try { dbg.enterDecision(287, decisionCanBacktrack[287]);

			int LA287_0 = input.LA(1);
			if ( (LA287_0==NOT) ) {
				alt287=1;
			}
			} finally {dbg.exitDecision(287);}

			switch (alt287) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:10: NOT ( ws )?
					{
					dbg.location(1083,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom6785); if (state.failed) return;dbg.location(1083,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:14: ( ws )?
					int alt286=2;
					try { dbg.enterSubRule(286);
					try { dbg.enterDecision(286, decisionCanBacktrack[286]);

					int LA286_0 = input.LA(1);
					if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
						alt286=1;
					}
					} finally {dbg.exitDecision(286);}

					switch (alt286) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:14: ws
							{
							dbg.location(1083,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6787);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(286);}

					}
					break;

			}
			} finally {dbg.exitSubRule(287);}
			dbg.location(1084,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1084:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt291=2;
			try { dbg.enterSubRule(291);
			try { dbg.enterDecision(291, decisionCanBacktrack[291]);

			int LA291_0 = input.LA(1);
			if ( (LA291_0==MINUS||LA291_0==PLUS) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==IDENT) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==NUMBER) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==PERCENTAGE) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==LENGTH) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==EMS) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==REM) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==EXS) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==ANGLE) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==TIME) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==FREQ) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==RESOLUTION) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==DIMENSION) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==STRING) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==TILDE) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==LESS_JS_STRING) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==GEN) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==URI) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==HASH) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==AT_IDENT||(LA291_0 >= BOTTOMCENTER_SYM && LA291_0 <= BOTTOMRIGHT_SYM)||LA291_0==CHARSET_SYM||LA291_0==COUNTER_STYLE_SYM||LA291_0==FONT_FACE_SYM||LA291_0==IMPORT_SYM||(LA291_0 >= LEFTBOTTOM_SYM && LA291_0 <= LEFTTOP_SYM)||LA291_0==MEDIA_SYM||LA291_0==MOZ_DOCUMENT_SYM||LA291_0==NAMESPACE_SYM||LA291_0==PAGE_SYM||(LA291_0 >= RIGHTBOTTOM_SYM && LA291_0 <= RIGHTTOP_SYM)||(LA291_0 >= SASS_AT_ROOT && LA291_0 <= SASS_DEBUG)||(LA291_0 >= SASS_EACH && LA291_0 <= SASS_ELSE)||LA291_0==SASS_EXTEND||(LA291_0 >= SASS_FOR && LA291_0 <= SASS_FUNCTION)||(LA291_0 >= SASS_IF && LA291_0 <= SASS_MIXIN)||LA291_0==SASS_RETURN||(LA291_0 >= SASS_WARN && LA291_0 <= SASS_WHILE)||(LA291_0 >= TOPCENTER_SYM && LA291_0 <= TOPRIGHT_SYM)||LA291_0==WEBKIT_KEYFRAMES_SYM) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==SASS_VAR) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==LESS_AND) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==HASH_SYMBOL) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==AT_SIGN) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==PERCENTAGE_SYMBOL) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==IMPORTANT_SYM) && (synpred42_Css3())) {
				alt291=1;
			}
			else if ( (LA291_0==LPAREN) ) {
				int LA291_27 = input.LA(2);
				if ( (synpred42_Css3()) ) {
					alt291=1;
				}
				else if ( (true) ) {
					alt291=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 291, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(291);}

			switch (alt291) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1085,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom6818);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1086,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom6834); if (state.failed) return;dbg.location(1086,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:22: ( ws )?
					int alt288=2;
					try { dbg.enterSubRule(288);
					try { dbg.enterDecision(288, decisionCanBacktrack[288]);

					int LA288_0 = input.LA(1);
					if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
						alt288=1;
					}
					} finally {dbg.exitDecision(288);}

					switch (alt288) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:22: ws
							{
							dbg.location(1086,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6836);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(288);}
					dbg.location(1086,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:26: ( cp_expression_list ( ws )? )?
					int alt290=2;
					try { dbg.enterSubRule(290);
					try { dbg.enterDecision(290, decisionCanBacktrack[290]);

					int LA290_0 = input.LA(1);
					if ( ((LA290_0 >= ANGLE && LA290_0 <= AT_SIGN)||(LA290_0 >= BOTTOMCENTER_SYM && LA290_0 <= BOTTOMRIGHT_SYM)||LA290_0==CHARSET_SYM||LA290_0==COUNTER_STYLE_SYM||LA290_0==DIMENSION||LA290_0==EMS||LA290_0==EXS||(LA290_0 >= FONT_FACE_SYM && LA290_0 <= FREQ)||LA290_0==GEN||(LA290_0 >= HASH && LA290_0 <= HASH_SYMBOL)||(LA290_0 >= IDENT && LA290_0 <= IMPORT_SYM)||LA290_0==LBRACE||(LA290_0 >= LEFTBOTTOM_SYM && LA290_0 <= LENGTH)||(LA290_0 >= LESS_AND && LA290_0 <= LESS_JS_STRING)||LA290_0==LPAREN||(LA290_0 >= MEDIA_SYM && LA290_0 <= MOZ_DOCUMENT_SYM)||LA290_0==NAMESPACE_SYM||(LA290_0 >= NOT && LA290_0 <= NUMBER)||(LA290_0 >= PAGE_SYM && LA290_0 <= PERCENTAGE_SYMBOL)||LA290_0==PLUS||(LA290_0 >= REM && LA290_0 <= RIGHTTOP_SYM)||(LA290_0 >= SASS_AT_ROOT && LA290_0 <= SASS_DEBUG)||(LA290_0 >= SASS_EACH && LA290_0 <= SASS_ELSE)||LA290_0==SASS_EXTEND||(LA290_0 >= SASS_FOR && LA290_0 <= SASS_FUNCTION)||(LA290_0 >= SASS_IF && LA290_0 <= SASS_MIXIN)||(LA290_0 >= SASS_RETURN && LA290_0 <= SASS_WHILE)||LA290_0==STRING||(LA290_0 >= TILDE && LA290_0 <= TOPRIGHT_SYM)||LA290_0==URI||LA290_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt290=1;
					}
					} finally {dbg.exitDecision(290);}

					switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:27: cp_expression_list ( ws )?
							{
							dbg.location(1086,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom6840);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1086,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:46: ( ws )?
							int alt289=2;
							try { dbg.enterSubRule(289);
							try { dbg.enterDecision(289, decisionCanBacktrack[289]);

							int LA289_0 = input.LA(1);
							if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
								alt289=1;
							}
							} finally {dbg.exitDecision(289);}

							switch (alt289) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:46: ws
									{
									dbg.location(1086,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom6842);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(289);}

							}
							break;

					}
					} finally {dbg.exitSubRule(290);}
					dbg.location(1086,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom6847); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(291);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1088, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1091:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1091, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1093:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1093,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6879);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1094,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(292);

			loop292:
			while (true) {
				int alt292=2;
				try { dbg.enterDecision(292, decisionCanBacktrack[292]);

				int LA292_0 = input.LA(1);
				if ( (LA292_0==COMMENT||LA292_0==NL||LA292_0==WS) ) {
					alt292=1;
				}

				} finally {dbg.exitDecision(292);}

				switch (alt292) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:6: ws cp_math_expression
					{
					dbg.location(1094,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions6886);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1094,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6888);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop292;
				}
			}
			} finally {dbg.exitSubRule(292);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1095, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1109, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1110,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6922);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1111,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1111:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(295);

			loop295:
			while (true) {
				int alt295=2;
				try { dbg.enterDecision(295, decisionCanBacktrack[295]);

				try {
					isCyclicDecision = true;
					alt295 = dfa295.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(295);}

				switch (alt295) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1112,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:48: ( ws )?
					int alt293=2;
					try { dbg.enterSubRule(293);
					try { dbg.enterDecision(293, decisionCanBacktrack[293]);

					int LA293_0 = input.LA(1);
					if ( (LA293_0==COMMENT||LA293_0==NL||LA293_0==WS) ) {
						alt293=1;
					}
					} finally {dbg.exitDecision(293);}

					switch (alt293) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:48: ws
							{
							dbg.location(1112,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression6964);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(293);}
					dbg.location(1112,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1112,78);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:78: ( ws )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					int LA294_0 = input.LA(1);
					if ( (LA294_0==COMMENT||LA294_0==NL||LA294_0==WS) ) {
						alt294=1;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:78: ws
							{
							dbg.location(1112,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression6977);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(294);}
					dbg.location(1112,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6980);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop295;
				}
			}
			} finally {dbg.exitSubRule(295);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1114, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1116:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1116, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1117:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt300=3;
			try { dbg.enterDecision(300, decisionCanBacktrack[300]);

			try {
				isCyclicDecision = true;
				alt300 = dfa300.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(300);}

			switch (alt300) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1118:5: term
					{
					dbg.location(1118,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom7013);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:7: IMPORTANT_SYM
					{
					dbg.location(1119,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom7021); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1120,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:7: ( unaryOperator ( ws )? )?
					int alt297=2;
					try { dbg.enterSubRule(297);
					try { dbg.enterDecision(297, decisionCanBacktrack[297]);

					int LA297_0 = input.LA(1);
					if ( (LA297_0==MINUS||LA297_0==PLUS) ) {
						alt297=1;
					}
					} finally {dbg.exitDecision(297);}

					switch (alt297) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:9: unaryOperator ( ws )?
							{
							dbg.location(1120,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom7032);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1120,23);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:23: ( ws )?
							int alt296=2;
							try { dbg.enterSubRule(296);
							try { dbg.enterDecision(296, decisionCanBacktrack[296]);

							int LA296_0 = input.LA(1);
							if ( (LA296_0==COMMENT||LA296_0==NL||LA296_0==WS) ) {
								alt296=1;
							}
							} finally {dbg.exitDecision(296);}

							switch (alt296) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:23: ws
									{
									dbg.location(1120,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom7034);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(296);}

							}
							break;

					}
					} finally {dbg.exitSubRule(297);}
					dbg.location(1120,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom7040); if (state.failed) return;dbg.location(1120,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:37: ( ws )?
					int alt298=2;
					try { dbg.enterSubRule(298);
					try { dbg.enterDecision(298, decisionCanBacktrack[298]);

					int LA298_0 = input.LA(1);
					if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
						alt298=1;
					}
					} finally {dbg.exitDecision(298);}

					switch (alt298) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:37: ws
							{
							dbg.location(1120,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7042);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(298);}
					dbg.location(1120,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom7045);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1120,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:60: ( ws )?
					int alt299=2;
					try { dbg.enterSubRule(299);
					try { dbg.enterDecision(299, decisionCanBacktrack[299]);

					int LA299_0 = input.LA(1);
					if ( (LA299_0==COMMENT||LA299_0==NL||LA299_0==WS) ) {
						alt299=1;
					}
					} finally {dbg.exitDecision(299);}

					switch (alt299) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:60: ws
							{
							dbg.location(1120,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7047);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(299);}
					dbg.location(1120,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom7050); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1121, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1129:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1129, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1130:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1131,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt312=2;
			try { dbg.enterSubRule(312);
			try { dbg.enterDecision(312, decisionCanBacktrack[312]);

			int LA312_0 = input.LA(1);
			if ( (LA312_0==DOT||LA312_0==HASH||LA312_0==LESS_AND) ) {
				alt312=1;
			}
			else if ( (LA312_0==SASS_MIXIN) ) {
				alt312=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 312, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(312);}

			switch (alt312) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1132,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1132,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt305=2;
					try { dbg.enterSubRule(305);
					try { dbg.enterDecision(305, decisionCanBacktrack[305]);

					int LA305_0 = input.LA(1);
					if ( (LA305_0==LESS_AND) ) {
						alt305=1;
					}
					else if ( (LA305_0==DOT||LA305_0==HASH) ) {
						alt305=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 305, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(305);}

					switch (alt305) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:28: LESS_AND
							{
							dbg.location(1132,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration7090); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1132,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1132,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt301=2;
							try { dbg.enterSubRule(301);
							try { dbg.enterDecision(301, decisionCanBacktrack[301]);

							int LA301_0 = input.LA(1);
							if ( (LA301_0==DOT) ) {
								alt301=1;
							}
							else if ( (LA301_0==HASH) ) {
								alt301=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 301, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(301);}

							switch (alt301) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:41: ( DOT cp_mixin_name )
									{
									dbg.location(1132,41);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:42: DOT cp_mixin_name
									{
									dbg.location(1132,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration7097); if (state.failed) return;dbg.location(1132,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration7099);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:63: HASH
									{
									dbg.location(1132,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration7104); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(301);}
							dbg.location(1132,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:69: ( ws )?
							int alt302=2;
							try { dbg.enterSubRule(302);
							try { dbg.enterDecision(302, decisionCanBacktrack[302]);

							int LA302_0 = input.LA(1);
							if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
								alt302=1;
							}
							} finally {dbg.exitDecision(302);}

							switch (alt302) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:69: ws
									{
									dbg.location(1132,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7107);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(302);}
							dbg.location(1132,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7110); if (state.failed) return;dbg.location(1132,80);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:80: ( ws )?
							int alt303=2;
							try { dbg.enterSubRule(303);
							try { dbg.enterDecision(303, decisionCanBacktrack[303]);

							int LA303_0 = input.LA(1);
							if ( (LA303_0==COMMENT||LA303_0==NL||LA303_0==WS) ) {
								alt303=1;
							}
							} finally {dbg.exitDecision(303);}

							switch (alt303) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:80: ws
									{
									dbg.location(1132,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7112);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(303);}
							dbg.location(1132,84);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:84: ( cp_args_list )?
							int alt304=2;
							try { dbg.enterSubRule(304);
							try { dbg.enterDecision(304, decisionCanBacktrack[304]);

							int LA304_0 = input.LA(1);
							if ( (LA304_0==AT_IDENT||(LA304_0 >= BOTTOMCENTER_SYM && LA304_0 <= BOTTOMRIGHT_SYM)||LA304_0==CHARSET_SYM||(LA304_0 >= COUNTER_STYLE_SYM && LA304_0 <= CP_DOTS)||LA304_0==FONT_FACE_SYM||LA304_0==IDENT||LA304_0==IMPORT_SYM||(LA304_0 >= LEFTBOTTOM_SYM && LA304_0 <= LEFTTOP_SYM)||LA304_0==LESS_REST||LA304_0==MEDIA_SYM||LA304_0==MOZ_DOCUMENT_SYM||LA304_0==NAMESPACE_SYM||LA304_0==PAGE_SYM||(LA304_0 >= RIGHTBOTTOM_SYM && LA304_0 <= RIGHTTOP_SYM)||(LA304_0 >= SASS_AT_ROOT && LA304_0 <= SASS_DEBUG)||(LA304_0 >= SASS_EACH && LA304_0 <= SASS_ELSE)||LA304_0==SASS_EXTEND||(LA304_0 >= SASS_FOR && LA304_0 <= SASS_FUNCTION)||(LA304_0 >= SASS_IF && LA304_0 <= SASS_MIXIN)||(LA304_0 >= SASS_RETURN && LA304_0 <= SASS_WHILE)||(LA304_0 >= TOPCENTER_SYM && LA304_0 <= TOPRIGHT_SYM)||LA304_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt304=1;
							}
							} finally {dbg.exitDecision(304);}

							switch (alt304) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:84: cp_args_list
									{
									dbg.location(1132,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7115);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(304);}
							dbg.location(1132,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7118); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(305);}
					dbg.location(1132,107);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:107: ( ( ws )? less_mixin_guarded )?
					int alt307=2;
					try { dbg.enterSubRule(307);
					try { dbg.enterDecision(307, decisionCanBacktrack[307]);

					try {
						isCyclicDecision = true;
						alt307 = dfa307.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(307);}

					switch (alt307) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1132,108);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:108: ( ws )?
							int alt306=2;
							try { dbg.enterSubRule(306);
							try { dbg.enterDecision(306, decisionCanBacktrack[306]);

							int LA306_0 = input.LA(1);
							if ( (LA306_0==COMMENT||LA306_0==NL||LA306_0==WS) ) {
								alt306=1;
							}
							} finally {dbg.exitDecision(306);}

							switch (alt306) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:108: ws
									{
									dbg.location(1132,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7123);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(306);}
							dbg.location(1132,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7126);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(307);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1134,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1134,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7150); if (state.failed) return;dbg.location(1134,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7152);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1134,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration7154);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1134,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt311=2;
					try { dbg.enterSubRule(311);
					try { dbg.enterDecision(311, decisionCanBacktrack[311]);

					try {
						isCyclicDecision = true;
						alt311 = dfa311.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(311);}

					switch (alt311) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1134,56);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:56: ( ws )?
							int alt308=2;
							try { dbg.enterSubRule(308);
							try { dbg.enterDecision(308, decisionCanBacktrack[308]);

							int LA308_0 = input.LA(1);
							if ( (LA308_0==COMMENT||LA308_0==NL||LA308_0==WS) ) {
								alt308=1;
							}
							} finally {dbg.exitDecision(308);}

							switch (alt308) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:56: ws
									{
									dbg.location(1134,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7157);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(308);}
							dbg.location(1134,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7160); if (state.failed) return;dbg.location(1134,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:67: ( ws )?
							int alt309=2;
							try { dbg.enterSubRule(309);
							try { dbg.enterDecision(309, decisionCanBacktrack[309]);

							int LA309_0 = input.LA(1);
							if ( (LA309_0==COMMENT||LA309_0==NL||LA309_0==WS) ) {
								alt309=1;
							}
							} finally {dbg.exitDecision(309);}

							switch (alt309) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:67: ws
									{
									dbg.location(1134,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7162);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(309);}
							dbg.location(1134,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:71: ( cp_args_list )?
							int alt310=2;
							try { dbg.enterSubRule(310);
							try { dbg.enterDecision(310, decisionCanBacktrack[310]);

							int LA310_0 = input.LA(1);
							if ( (LA310_0==AT_IDENT||(LA310_0 >= BOTTOMCENTER_SYM && LA310_0 <= BOTTOMRIGHT_SYM)||LA310_0==CHARSET_SYM||(LA310_0 >= COUNTER_STYLE_SYM && LA310_0 <= CP_DOTS)||LA310_0==FONT_FACE_SYM||LA310_0==IDENT||LA310_0==IMPORT_SYM||(LA310_0 >= LEFTBOTTOM_SYM && LA310_0 <= LEFTTOP_SYM)||LA310_0==LESS_REST||LA310_0==MEDIA_SYM||LA310_0==MOZ_DOCUMENT_SYM||LA310_0==NAMESPACE_SYM||LA310_0==PAGE_SYM||(LA310_0 >= RIGHTBOTTOM_SYM && LA310_0 <= RIGHTTOP_SYM)||(LA310_0 >= SASS_AT_ROOT && LA310_0 <= SASS_DEBUG)||(LA310_0 >= SASS_EACH && LA310_0 <= SASS_ELSE)||LA310_0==SASS_EXTEND||(LA310_0 >= SASS_FOR && LA310_0 <= SASS_FUNCTION)||(LA310_0 >= SASS_IF && LA310_0 <= SASS_MIXIN)||(LA310_0 >= SASS_RETURN && LA310_0 <= SASS_WHILE)||(LA310_0 >= TOPCENTER_SYM && LA310_0 <= TOPRIGHT_SYM)||LA310_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt310=1;
							}
							} finally {dbg.exitDecision(310);}

							switch (alt310) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:71: cp_args_list
									{
									dbg.location(1134,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7165);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(310);}
							dbg.location(1134,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7168); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(311);}

					}
					break;

			}
			} finally {dbg.exitSubRule(312);}
			dbg.location(1136,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:5: ( ws )?
			int alt313=2;
			try { dbg.enterSubRule(313);
			try { dbg.enterDecision(313, decisionCanBacktrack[313]);

			int LA313_0 = input.LA(1);
			if ( (LA313_0==COMMENT||LA313_0==NL||LA313_0==WS) ) {
				alt313=1;
			}
			} finally {dbg.exitDecision(313);}

			switch (alt313) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:5: ws
					{
					dbg.location(1136,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7182);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(313);}
			dbg.location(1136,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration7185);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1137, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1141, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1143,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt325=2;
			try { dbg.enterSubRule(325);
			try { dbg.enterDecision(325, decisionCanBacktrack[325]);

			int LA325_0 = input.LA(1);
			if ( (LA325_0==AT_IDENT||LA325_0==DOT||LA325_0==HASH||LA325_0==LESS_AND) ) {
				alt325=1;
			}
			else if ( (LA325_0==SASS_INCLUDE) ) {
				alt325=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 325, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(325);}

			switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1144,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1144,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt314=4;
					try { dbg.enterSubRule(314);
					try { dbg.enterDecision(314, decisionCanBacktrack[314]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt314=1;
						}
						break;
					case HASH:
						{
						alt314=2;
						}
						break;
					case AT_IDENT:
						{
						alt314=3;
						}
						break;
					case LESS_AND:
						{
						alt314=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 314, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(314);}

					switch (alt314) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:28: DOT cp_mixin_name
							{
							dbg.location(1144,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call7221); if (state.failed) return;dbg.location(1144,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7223);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:48: HASH
							{
							dbg.location(1144,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call7227); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:55: AT_IDENT
							{
							dbg.location(1144,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call7231); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:66: LESS_AND
							{
							dbg.location(1144,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call7235); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(314);}
					dbg.location(1144,76);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:76: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt318=3;
					try { dbg.enterSubRule(318);
					try { dbg.enterDecision(318, decisionCanBacktrack[318]);

					int LA318_0 = input.LA(1);
					if ( (LA318_0==COLON||LA318_0==DCOLON) ) {
						int LA318_1 = input.LA(2);
						if ( (synpred44_Css3()) ) {
							alt318=1;
						}
					}
					else if ( (LA318_0==COMMENT||LA318_0==NL||LA318_0==WS) ) {
						int LA318_2 = input.LA(2);
						if ( (synpred45_Css3()) ) {
							alt318=2;
						}
					}
					else if ( (LA318_0==LPAREN) && (synpred45_Css3())) {
						alt318=2;
					}
					} finally {dbg.exitDecision(318);}

					switch (alt318) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:77: ( pseudo )=> pseudo
							{
							dbg.location(1144,87);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call7243);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:96: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1144,110);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:110: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:111: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1144,111);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:111: ( ws )?
							int alt315=2;
							try { dbg.enterSubRule(315);
							try { dbg.enterDecision(315, decisionCanBacktrack[315]);

							int LA315_0 = input.LA(1);
							if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
								alt315=1;
							}
							} finally {dbg.exitDecision(315);}

							switch (alt315) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:111: ws
									{
									dbg.location(1144,111);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7255);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(315);}
							dbg.location(1144,115);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7258); if (state.failed) return;dbg.location(1144,122);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:122: ( ws )?
							int alt316=2;
							try { dbg.enterSubRule(316);
							try { dbg.enterDecision(316, decisionCanBacktrack[316]);

							int LA316_0 = input.LA(1);
							if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
								alt316=1;
							}
							} finally {dbg.exitDecision(316);}

							switch (alt316) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:122: ws
									{
									dbg.location(1144,122);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7260);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(316);}
							dbg.location(1144,126);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:126: ( cp_mixin_call_args )?
							int alt317=2;
							try { dbg.enterSubRule(317);
							try { dbg.enterDecision(317, decisionCanBacktrack[317]);

							int LA317_0 = input.LA(1);
							if ( ((LA317_0 >= ANGLE && LA317_0 <= AT_SIGN)||(LA317_0 >= BOTTOMCENTER_SYM && LA317_0 <= BOTTOMRIGHT_SYM)||LA317_0==CHARSET_SYM||LA317_0==COUNTER_STYLE_SYM||LA317_0==DIMENSION||LA317_0==EMS||LA317_0==EXS||(LA317_0 >= FONT_FACE_SYM && LA317_0 <= FREQ)||LA317_0==GEN||(LA317_0 >= HASH && LA317_0 <= HASH_SYMBOL)||(LA317_0 >= IDENT && LA317_0 <= IMPORT_SYM)||LA317_0==LBRACE||(LA317_0 >= LEFTBOTTOM_SYM && LA317_0 <= LENGTH)||(LA317_0 >= LESS_AND && LA317_0 <= LESS_JS_STRING)||LA317_0==LPAREN||(LA317_0 >= MEDIA_SYM && LA317_0 <= MOZ_DOCUMENT_SYM)||LA317_0==NAMESPACE_SYM||(LA317_0 >= NOT && LA317_0 <= NUMBER)||(LA317_0 >= PAGE_SYM && LA317_0 <= PERCENTAGE_SYMBOL)||LA317_0==PLUS||(LA317_0 >= REM && LA317_0 <= RIGHTTOP_SYM)||(LA317_0 >= SASS_AT_ROOT && LA317_0 <= SASS_DEBUG)||(LA317_0 >= SASS_EACH && LA317_0 <= SASS_ELSE)||LA317_0==SASS_EXTEND||(LA317_0 >= SASS_FOR && LA317_0 <= SASS_FUNCTION)||(LA317_0 >= SASS_IF && LA317_0 <= SASS_MIXIN)||(LA317_0 >= SASS_RETURN && LA317_0 <= SASS_WHILE)||LA317_0==STRING||(LA317_0 >= TILDE && LA317_0 <= TOPRIGHT_SYM)||LA317_0==URI||LA317_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt317=1;
							}
							} finally {dbg.exitDecision(317);}

							switch (alt317) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:126: cp_mixin_call_args
									{
									dbg.location(1144,126);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7263);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(317);}
							dbg.location(1144,146);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7266); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(318);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1146,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1146,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call7291); if (state.failed) return;dbg.location(1146,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call7293);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1146,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7295);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1146,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt322=2;
					try { dbg.enterSubRule(322);
					try { dbg.enterDecision(322, decisionCanBacktrack[322]);

					try {
						isCyclicDecision = true;
						alt322 = dfa322.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(322);}

					switch (alt322) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1146,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:58: ( ws )?
							int alt319=2;
							try { dbg.enterSubRule(319);
							try { dbg.enterDecision(319, decisionCanBacktrack[319]);

							int LA319_0 = input.LA(1);
							if ( (LA319_0==COMMENT||LA319_0==NL||LA319_0==WS) ) {
								alt319=1;
							}
							} finally {dbg.exitDecision(319);}

							switch (alt319) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:58: ws
									{
									dbg.location(1146,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7298);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(319);}
							dbg.location(1146,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7301); if (state.failed) return;dbg.location(1146,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:69: ( ws )?
							int alt320=2;
							try { dbg.enterSubRule(320);
							try { dbg.enterDecision(320, decisionCanBacktrack[320]);

							int LA320_0 = input.LA(1);
							if ( (LA320_0==COMMENT||LA320_0==NL||LA320_0==WS) ) {
								alt320=1;
							}
							} finally {dbg.exitDecision(320);}

							switch (alt320) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:69: ws
									{
									dbg.location(1146,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7303);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(320);}
							dbg.location(1146,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:73: ( cp_mixin_call_args )?
							int alt321=2;
							try { dbg.enterSubRule(321);
							try { dbg.enterDecision(321, decisionCanBacktrack[321]);

							int LA321_0 = input.LA(1);
							if ( ((LA321_0 >= ANGLE && LA321_0 <= AT_SIGN)||(LA321_0 >= BOTTOMCENTER_SYM && LA321_0 <= BOTTOMRIGHT_SYM)||LA321_0==CHARSET_SYM||LA321_0==COUNTER_STYLE_SYM||LA321_0==DIMENSION||LA321_0==EMS||LA321_0==EXS||(LA321_0 >= FONT_FACE_SYM && LA321_0 <= FREQ)||LA321_0==GEN||(LA321_0 >= HASH && LA321_0 <= HASH_SYMBOL)||(LA321_0 >= IDENT && LA321_0 <= IMPORT_SYM)||LA321_0==LBRACE||(LA321_0 >= LEFTBOTTOM_SYM && LA321_0 <= LENGTH)||(LA321_0 >= LESS_AND && LA321_0 <= LESS_JS_STRING)||LA321_0==LPAREN||(LA321_0 >= MEDIA_SYM && LA321_0 <= MOZ_DOCUMENT_SYM)||LA321_0==NAMESPACE_SYM||(LA321_0 >= NOT && LA321_0 <= NUMBER)||(LA321_0 >= PAGE_SYM && LA321_0 <= PERCENTAGE_SYMBOL)||LA321_0==PLUS||(LA321_0 >= REM && LA321_0 <= RIGHTTOP_SYM)||(LA321_0 >= SASS_AT_ROOT && LA321_0 <= SASS_DEBUG)||(LA321_0 >= SASS_EACH && LA321_0 <= SASS_ELSE)||LA321_0==SASS_EXTEND||(LA321_0 >= SASS_FOR && LA321_0 <= SASS_FUNCTION)||(LA321_0 >= SASS_IF && LA321_0 <= SASS_MIXIN)||(LA321_0 >= SASS_RETURN && LA321_0 <= SASS_WHILE)||LA321_0==STRING||(LA321_0 >= TILDE && LA321_0 <= TOPRIGHT_SYM)||LA321_0==URI||LA321_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt321=1;
							}
							} finally {dbg.exitDecision(321);}

							switch (alt321) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:73: cp_mixin_call_args
									{
									dbg.location(1146,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7306);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(321);}
							dbg.location(1146,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7309); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(322);}
					dbg.location(1146,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:102: ( ( ws )? cp_mixin_block )?
					int alt324=2;
					try { dbg.enterSubRule(324);
					try { dbg.enterDecision(324, decisionCanBacktrack[324]);

					try {
						isCyclicDecision = true;
						alt324 = dfa324.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(324);}

					switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:103: ( ws )? cp_mixin_block
							{
							dbg.location(1146,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:103: ( ws )?
							int alt323=2;
							try { dbg.enterSubRule(323);
							try { dbg.enterDecision(323, decisionCanBacktrack[323]);

							int LA323_0 = input.LA(1);
							if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
								alt323=1;
							}
							} finally {dbg.exitDecision(323);}

							switch (alt323) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:103: ws
									{
									dbg.location(1146,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7314);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(323);}
							dbg.location(1146,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call7317);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(324);}

					}
					break;

			}
			} finally {dbg.exitSubRule(325);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1148, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1150, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1151:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1152,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block7346); if (state.failed) return;dbg.location(1152,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:12: ( ws )?
			int alt326=2;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==COMMENT||LA326_0==NL||LA326_0==WS) ) {
				alt326=1;
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:12: ws
					{
					dbg.location(1152,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block7348);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(326);}
			dbg.location(1152,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block7351);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1153,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt329=3;
			try { dbg.enterSubRule(329);
			try { dbg.enterDecision(329, decisionCanBacktrack[329]);

			int LA329_0 = input.LA(1);
			if ( ((LA329_0 >= AT_IDENT && LA329_0 <= AT_SIGN)||(LA329_0 >= BOTTOMCENTER_SYM && LA329_0 <= BOTTOMRIGHT_SYM)||(LA329_0 >= CHARSET_SYM && LA329_0 <= COLON)||LA329_0==COUNTER_STYLE_SYM||(LA329_0 >= DCOLON && LA329_0 <= DOT)||LA329_0==FONT_FACE_SYM||(LA329_0 >= GEN && LA329_0 <= GREATER)||(LA329_0 >= HASH && LA329_0 <= HASH_SYMBOL)||LA329_0==IMPORT_SYM||(LA329_0 >= LBRACKET && LA329_0 <= LEFTTOP_SYM)||LA329_0==LESS_AND||(LA329_0 >= MEDIA_SYM && LA329_0 <= MOZ_DOCUMENT_SYM)||LA329_0==NAMESPACE_SYM||LA329_0==PAGE_SYM||(LA329_0 >= PIPE && LA329_0 <= PLUS)||(LA329_0 >= RIGHTBOTTOM_SYM && LA329_0 <= RIGHTTOP_SYM)||LA329_0==SASS_AT_ROOT||LA329_0==SASS_DEBUG||(LA329_0 >= SASS_EACH && LA329_0 <= SASS_ELSE)||(LA329_0 >= SASS_ERROR && LA329_0 <= SASS_FUNCTION)||(LA329_0 >= SASS_IF && LA329_0 <= SASS_MIXIN)||(LA329_0 >= SASS_RETURN && LA329_0 <= SEMI)||LA329_0==STAR||LA329_0==TILDE||(LA329_0 >= TOPCENTER_SYM && LA329_0 <= TOPRIGHT_SYM)||LA329_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt329=1;
			}
			else if ( (LA329_0==IDENT) ) {
				int LA329_4 = input.LA(2);
				if ( (true) ) {
					alt329=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred46_Css3())) ) {
					alt329=2;
				}
			}
			else if ( (LA329_0==SASS_CONTENT) ) {
				int LA329_34 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt329=1;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt329=2;
				}
			}
			else if ( (LA329_0==PERCENTAGE) && (synpred46_Css3())) {
				alt329=2;
			}
			else if ( (LA329_0==RBRACE) ) {
				int LA329_40 = input.LA(2);
				if ( (synpred46_Css3()) ) {
					alt329=2;
				}
			}
			} finally {dbg.exitDecision(329);}

			switch (alt329) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:10: declarations
					{
					dbg.location(1153,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block7362);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1154,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(328);

					loop328:
					while (true) {
						int alt328=2;
						try { dbg.enterDecision(328, decisionCanBacktrack[328]);

						int LA328_0 = input.LA(1);
						if ( (LA328_0==IDENT||LA328_0==PERCENTAGE||LA328_0==SASS_CONTENT) ) {
							alt328=1;
						}

						} finally {dbg.exitDecision(328);}

						switch (alt328) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1154,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7377);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1154,26);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:26: ( ws )?
							int alt327=2;
							try { dbg.enterSubRule(327);
							try { dbg.enterDecision(327, decisionCanBacktrack[327]);

							int LA327_0 = input.LA(1);
							if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
								alt327=1;
							}
							} finally {dbg.exitDecision(327);}

							switch (alt327) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:26: ws
									{
									dbg.location(1154,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block7379);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(327);}

							}
							break;

						default :
							break loop328;
						}
					}
					} finally {dbg.exitSubRule(328);}

					}
					break;

			}
			} finally {dbg.exitSubRule(329);}
			dbg.location(1155,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block7391); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1156, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1158:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1158, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:5: IDENT
			{
			dbg.location(1160,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name7412); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1161, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1163, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1164:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )?
			{
			dbg.location(1167,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7443);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1167,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(331);

			loop331:
			while (true) {
				int alt331=2;
				try { dbg.enterDecision(331, decisionCanBacktrack[331]);

				int LA331_0 = input.LA(1);
				if ( (LA331_0==SEMI) ) {
					int LA331_2 = input.LA(2);
					if ( ((LA331_2 >= ANGLE && LA331_2 <= AT_SIGN)||(LA331_2 >= BOTTOMCENTER_SYM && LA331_2 <= BOTTOMRIGHT_SYM)||LA331_2==CHARSET_SYM||LA331_2==COMMENT||LA331_2==COUNTER_STYLE_SYM||LA331_2==DIMENSION||LA331_2==EMS||LA331_2==EXS||(LA331_2 >= FONT_FACE_SYM && LA331_2 <= FREQ)||LA331_2==GEN||(LA331_2 >= HASH && LA331_2 <= HASH_SYMBOL)||(LA331_2 >= IDENT && LA331_2 <= IMPORT_SYM)||LA331_2==LBRACE||(LA331_2 >= LEFTBOTTOM_SYM && LA331_2 <= LENGTH)||(LA331_2 >= LESS_AND && LA331_2 <= LESS_JS_STRING)||LA331_2==LPAREN||(LA331_2 >= MEDIA_SYM && LA331_2 <= MOZ_DOCUMENT_SYM)||(LA331_2 >= NAMESPACE_SYM && LA331_2 <= NL)||(LA331_2 >= NOT && LA331_2 <= NUMBER)||(LA331_2 >= PAGE_SYM && LA331_2 <= PERCENTAGE_SYMBOL)||LA331_2==PLUS||(LA331_2 >= REM && LA331_2 <= RIGHTTOP_SYM)||(LA331_2 >= SASS_AT_ROOT && LA331_2 <= SASS_DEBUG)||(LA331_2 >= SASS_EACH && LA331_2 <= SASS_ELSE)||LA331_2==SASS_EXTEND||(LA331_2 >= SASS_FOR && LA331_2 <= SASS_FUNCTION)||(LA331_2 >= SASS_IF && LA331_2 <= SASS_MIXIN)||(LA331_2 >= SASS_RETURN && LA331_2 <= SASS_WHILE)||LA331_2==STRING||(LA331_2 >= TILDE && LA331_2 <= TOPRIGHT_SYM)||LA331_2==URI||(LA331_2 >= WEBKIT_KEYFRAMES_SYM && LA331_2 <= WS)) ) {
						alt331=1;
					}

				}
				else if ( (LA331_0==COMMA) ) {
					alt331=1;
				}

				} finally {dbg.exitDecision(331);}

				switch (alt331) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1167,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1167,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:40: ( ws )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:40: ws
							{
							dbg.location(1167,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7455);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}
					dbg.location(1167,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7458);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop331;
				}
			}
			} finally {dbg.exitSubRule(331);}
			dbg.location(1167,65);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:65: ( CP_DOTS ( ws )? )?
			int alt333=2;
			try { dbg.enterSubRule(333);
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			int LA333_0 = input.LA(1);
			if ( (LA333_0==CP_DOTS) ) {
				alt333=1;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:66: CP_DOTS ( ws )?
					{
					dbg.location(1167,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args7464); if (state.failed) return;dbg.location(1167,74);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:74: ( ws )?
					int alt332=2;
					try { dbg.enterSubRule(332);
					try { dbg.enterDecision(332, decisionCanBacktrack[332]);

					int LA332_0 = input.LA(1);
					if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
						alt332=1;
					}
					} finally {dbg.exitDecision(332);}

					switch (alt332) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:74: ws
							{
							dbg.location(1167,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7466);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(332);}

					}
					break;

			}
			} finally {dbg.exitSubRule(333);}
			dbg.location(1167,80);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:80: ( SEMI )?
			int alt334=2;
			try { dbg.enterSubRule(334);
			try { dbg.enterDecision(334, decisionCanBacktrack[334]);

			int LA334_0 = input.LA(1);
			if ( (LA334_0==SEMI) ) {
				alt334=1;
			}
			} finally {dbg.exitDecision(334);}

			switch (alt334) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:80: SEMI
					{
					dbg.location(1167,80);
					match(input,SEMI,FOLLOW_SEMI_in_cp_mixin_call_args7471); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(334);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1168, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1170, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1172,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt337=2;
			try { dbg.enterSubRule(337);
			try { dbg.enterDecision(337, decisionCanBacktrack[337]);

			try {
				isCyclicDecision = true;
				alt337 = dfa337.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(337);}

			switch (alt337) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1173,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg7503);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1173,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:21: ( ws )?
					int alt335=2;
					try { dbg.enterSubRule(335);
					try { dbg.enterDecision(335, decisionCanBacktrack[335]);

					int LA335_0 = input.LA(1);
					if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
						alt335=1;
					}
					} finally {dbg.exitDecision(335);}

					switch (alt335) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:21: ws
							{
							dbg.location(1173,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7505);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(335);}
					dbg.location(1173,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg7508); if (state.failed) return;dbg.location(1173,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:31: ( ws )?
					int alt336=2;
					try { dbg.enterSubRule(336);
					try { dbg.enterDecision(336, decisionCanBacktrack[336]);

					int LA336_0 = input.LA(1);
					if ( (LA336_0==COMMENT||LA336_0==NL||LA336_0==WS) ) {
						alt336=1;
					}
					} finally {dbg.exitDecision(336);}

					switch (alt336) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:31: ws
							{
							dbg.location(1173,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7510);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(336);}
					dbg.location(1173,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7513);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:11: cp_expression
					{
					dbg.location(1174,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7525);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(337);}
			dbg.location(1175,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1175:7: ( ws )?
			int alt338=2;
			try { dbg.enterSubRule(338);
			try { dbg.enterDecision(338, decisionCanBacktrack[338]);

			int LA338_0 = input.LA(1);
			if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
				alt338=1;
			}
			} finally {dbg.exitDecision(338);}

			switch (alt338) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1175:7: ws
					{
					dbg.location(1175,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7533);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(338);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1176, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1179, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt346=2;
			try { dbg.enterDecision(346, decisionCanBacktrack[346]);

			int LA346_0 = input.LA(1);
			if ( (LA346_0==AT_IDENT||(LA346_0 >= BOTTOMCENTER_SYM && LA346_0 <= BOTTOMRIGHT_SYM)||LA346_0==CHARSET_SYM||LA346_0==COUNTER_STYLE_SYM||LA346_0==FONT_FACE_SYM||LA346_0==IDENT||LA346_0==IMPORT_SYM||(LA346_0 >= LEFTBOTTOM_SYM && LA346_0 <= LEFTTOP_SYM)||LA346_0==MEDIA_SYM||LA346_0==MOZ_DOCUMENT_SYM||LA346_0==NAMESPACE_SYM||LA346_0==PAGE_SYM||(LA346_0 >= RIGHTBOTTOM_SYM && LA346_0 <= RIGHTTOP_SYM)||(LA346_0 >= SASS_AT_ROOT && LA346_0 <= SASS_DEBUG)||(LA346_0 >= SASS_EACH && LA346_0 <= SASS_ELSE)||LA346_0==SASS_EXTEND||(LA346_0 >= SASS_FOR && LA346_0 <= SASS_FUNCTION)||(LA346_0 >= SASS_IF && LA346_0 <= SASS_MIXIN)||(LA346_0 >= SASS_RETURN && LA346_0 <= SASS_WHILE)||(LA346_0 >= TOPCENTER_SYM && LA346_0 <= TOPRIGHT_SYM)||LA346_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt346=1;
			}
			else if ( (LA346_0==CP_DOTS||LA346_0==LESS_REST) ) {
				alt346=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 346, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(346);}

			switch (alt346) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1187,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1187,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list7580);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1187,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(340);

					loop340:
					while (true) {
						int alt340=2;
						try { dbg.enterDecision(340, decisionCanBacktrack[340]);

						try {
							isCyclicDecision = true;
							alt340 = dfa340.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(340);}

						switch (alt340) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1187,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1187,33);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:33: ( ws )?
							int alt339=2;
							try { dbg.enterSubRule(339);
							try { dbg.enterDecision(339, decisionCanBacktrack[339]);

							int LA339_0 = input.LA(1);
							if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
								alt339=1;
							}
							} finally {dbg.exitDecision(339);}

							switch (alt339) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:33: ws
									{
									dbg.location(1187,33);
									pushFollow(FOLLOW_ws_in_cp_args_list7594);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(339);}
							dbg.location(1187,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list7597);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop340;
						}
					}
					} finally {dbg.exitSubRule(340);}
					dbg.location(1187,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt342=2;
					try { dbg.enterSubRule(342);
					try { dbg.enterDecision(342, decisionCanBacktrack[342]);

					int LA342_0 = input.LA(1);
					if ( (LA342_0==COMMA||LA342_0==SEMI) ) {
						alt342=1;
					}
					} finally {dbg.exitDecision(342);}

					switch (alt342) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1187,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1187,64);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:64: ( ws )?
							int alt341=2;
							try { dbg.enterSubRule(341);
							try { dbg.enterDecision(341, decisionCanBacktrack[341]);

							int LA341_0 = input.LA(1);
							if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
								alt341=1;
							}
							} finally {dbg.exitDecision(341);}

							switch (alt341) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:64: ws
									{
									dbg.location(1187,64);
									pushFollow(FOLLOW_ws_in_cp_args_list7612);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(341);}

							}
							break;

					}
					} finally {dbg.exitSubRule(342);}
					dbg.location(1187,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt344=2;
					try { dbg.enterSubRule(344);
					try { dbg.enterDecision(344, decisionCanBacktrack[344]);

					int LA344_0 = input.LA(1);
					if ( (LA344_0==CP_DOTS||LA344_0==LESS_REST) ) {
						alt344=1;
					}
					} finally {dbg.exitDecision(344);}

					switch (alt344) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1187,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1187,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:95: ( ws )?
							int alt343=2;
							try { dbg.enterSubRule(343);
							try { dbg.enterDecision(343, decisionCanBacktrack[343]);

							int LA343_0 = input.LA(1);
							if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
								alt343=1;
							}
							} finally {dbg.exitDecision(343);}

							switch (alt343) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:95: ws
									{
									dbg.location(1187,95);
									pushFollow(FOLLOW_ws_in_cp_args_list7628);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(343);}

							}
							break;

					}
					} finally {dbg.exitSubRule(344);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1189:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1189,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1189,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1189:27: ( ws )?
					int alt345=2;
					try { dbg.enterSubRule(345);
					try { dbg.enterDecision(345, decisionCanBacktrack[345]);

					int LA345_0 = input.LA(1);
					if ( (LA345_0==COMMENT||LA345_0==NL||LA345_0==WS) ) {
						alt345=1;
					}
					} finally {dbg.exitDecision(345);}

					switch (alt345) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1189:27: ws
							{
							dbg.location(1189,27);
							pushFollow(FOLLOW_ws_in_cp_args_list7653);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(345);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1190, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1193, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt351=2;
			try { dbg.enterDecision(351, decisionCanBacktrack[351]);

			int LA351_0 = input.LA(1);
			if ( (LA351_0==AT_IDENT||(LA351_0 >= BOTTOMCENTER_SYM && LA351_0 <= BOTTOMRIGHT_SYM)||LA351_0==CHARSET_SYM||LA351_0==COUNTER_STYLE_SYM||LA351_0==FONT_FACE_SYM||LA351_0==IMPORT_SYM||(LA351_0 >= LEFTBOTTOM_SYM && LA351_0 <= LEFTTOP_SYM)||LA351_0==MEDIA_SYM||LA351_0==MOZ_DOCUMENT_SYM||LA351_0==NAMESPACE_SYM||LA351_0==PAGE_SYM||(LA351_0 >= RIGHTBOTTOM_SYM && LA351_0 <= RIGHTTOP_SYM)||(LA351_0 >= SASS_AT_ROOT && LA351_0 <= SASS_DEBUG)||(LA351_0 >= SASS_EACH && LA351_0 <= SASS_ELSE)||LA351_0==SASS_EXTEND||(LA351_0 >= SASS_FOR && LA351_0 <= SASS_FUNCTION)||(LA351_0 >= SASS_IF && LA351_0 <= SASS_MIXIN)||(LA351_0 >= SASS_RETURN && LA351_0 <= SASS_WHILE)||(LA351_0 >= TOPCENTER_SYM && LA351_0 <= TOPRIGHT_SYM)||LA351_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt351=1;
			}
			else if ( (LA351_0==IDENT) ) {
				alt351=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 351, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(351);}

			switch (alt351) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1195,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg7676);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1195,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:17: ( ws )?
					int alt347=2;
					try { dbg.enterSubRule(347);
					try { dbg.enterDecision(347, decisionCanBacktrack[347]);

					int LA347_0 = input.LA(1);
					if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
						alt347=1;
					}
					} finally {dbg.exitDecision(347);}

					switch (alt347) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:17: ws
							{
							dbg.location(1195,17);
							pushFollow(FOLLOW_ws_in_cp_arg7678);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(347);}
					dbg.location(1195,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==COLON) ) {
						alt350=1;
					}
					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1195,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg7683); if (state.failed) return;dbg.location(1195,29);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:29: ( ws )?
							int alt348=2;
							try { dbg.enterSubRule(348);
							try { dbg.enterDecision(348, decisionCanBacktrack[348]);

							int LA348_0 = input.LA(1);
							if ( (LA348_0==COMMENT||LA348_0==NL||LA348_0==WS) ) {
								alt348=1;
							}
							} finally {dbg.exitDecision(348);}

							switch (alt348) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:29: ws
									{
									dbg.location(1195,29);
									pushFollow(FOLLOW_ws_in_cp_arg7685);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(348);}
							dbg.location(1195,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg7688);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1195,47);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:47: ( ws )?
							int alt349=2;
							try { dbg.enterSubRule(349);
							try { dbg.enterDecision(349, decisionCanBacktrack[349]);

							int LA349_0 = input.LA(1);
							if ( (LA349_0==COMMENT||LA349_0==NL||LA349_0==WS) ) {
								alt349=1;
							}
							} finally {dbg.exitDecision(349);}

							switch (alt349) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:47: ws
									{
									dbg.location(1195,47);
									pushFollow(FOLLOW_ws_in_cp_arg7690);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(349);}

							}
							break;

					}
					} finally {dbg.exitSubRule(350);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:7: {...}? IDENT
					{
					dbg.location(1196,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1196,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg7703); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1197, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1201, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1203,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded7726);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1203,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:15: ( ws )?
			int alt352=2;
			try { dbg.enterSubRule(352);
			try { dbg.enterDecision(352, decisionCanBacktrack[352]);

			int LA352_0 = input.LA(1);
			if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
				alt352=1;
			}
			} finally {dbg.exitDecision(352);}

			switch (alt352) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:15: ws
					{
					dbg.location(1203,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded7728);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(352);}
			dbg.location(1203,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7731);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1203,34);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(356);

			loop356:
			while (true) {
				int alt356=2;
				try { dbg.enterDecision(356, decisionCanBacktrack[356]);

				try {
					isCyclicDecision = true;
					alt356 = dfa356.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(356);}

				switch (alt356) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1203,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:35: ( ws )?
					int alt353=2;
					try { dbg.enterSubRule(353);
					try { dbg.enterDecision(353, decisionCanBacktrack[353]);

					int LA353_0 = input.LA(1);
					if ( (LA353_0==COMMENT||LA353_0==NL||LA353_0==WS) ) {
						alt353=1;
					}
					} finally {dbg.exitDecision(353);}

					switch (alt353) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:35: ws
							{
							dbg.location(1203,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(353);}
					dbg.location(1203,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:39: ( COMMA | key_and )
					int alt354=2;
					try { dbg.enterSubRule(354);
					try { dbg.enterDecision(354, decisionCanBacktrack[354]);

					int LA354_0 = input.LA(1);
					if ( (LA354_0==COMMA) ) {
						alt354=1;
					}
					else if ( (LA354_0==IDENT) ) {
						alt354=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 354, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(354);}

					switch (alt354) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:40: COMMA
							{
							dbg.location(1203,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded7738); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:48: key_and
							{
							dbg.location(1203,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded7742);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(354);}
					dbg.location(1203,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:57: ( ws )?
					int alt355=2;
					try { dbg.enterSubRule(355);
					try { dbg.enterDecision(355, decisionCanBacktrack[355]);

					int LA355_0 = input.LA(1);
					if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
						alt355=1;
					}
					} finally {dbg.exitDecision(355);}

					switch (alt355) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:57: ws
							{
							dbg.location(1203,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7745);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(355);}
					dbg.location(1203,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7748);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop356;
				}
			}
			} finally {dbg.exitSubRule(356);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1204, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1208:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1208, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1210,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:5: ( NOT ( ws )? )?
			int alt358=2;
			try { dbg.enterSubRule(358);
			try { dbg.enterDecision(358, decisionCanBacktrack[358]);

			int LA358_0 = input.LA(1);
			if ( (LA358_0==NOT) ) {
				alt358=1;
			}
			} finally {dbg.exitDecision(358);}

			switch (alt358) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:6: NOT ( ws )?
					{
					dbg.location(1210,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition7774); if (state.failed) return;dbg.location(1210,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:10: ( ws )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					int LA357_0 = input.LA(1);
					if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
						alt357=1;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:10: ws
							{
							dbg.location(1210,10);
							pushFollow(FOLLOW_ws_in_less_condition7776);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}

					}
					break;

			}
			} finally {dbg.exitSubRule(358);}
			dbg.location(1211,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition7785); if (state.failed) return;dbg.location(1211,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:12: ( ws )?
			int alt359=2;
			try { dbg.enterSubRule(359);
			try { dbg.enterDecision(359, decisionCanBacktrack[359]);

			int LA359_0 = input.LA(1);
			if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
				alt359=1;
			}
			} finally {dbg.exitDecision(359);}

			switch (alt359) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:12: ws
					{
					dbg.location(1211,12);
					pushFollow(FOLLOW_ws_in_less_condition7787);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(359);}
			dbg.location(1212,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1212:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1213,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:14: ( cp_variable | less_function_in_condition )
			int alt360=2;
			try { dbg.enterSubRule(360);
			try { dbg.enterDecision(360, decisionCanBacktrack[360]);

			int LA360_0 = input.LA(1);
			if ( (LA360_0==AT_IDENT||(LA360_0 >= BOTTOMCENTER_SYM && LA360_0 <= BOTTOMRIGHT_SYM)||LA360_0==CHARSET_SYM||LA360_0==COUNTER_STYLE_SYM||LA360_0==FONT_FACE_SYM||LA360_0==IMPORT_SYM||(LA360_0 >= LEFTBOTTOM_SYM && LA360_0 <= LEFTTOP_SYM)||LA360_0==MEDIA_SYM||LA360_0==MOZ_DOCUMENT_SYM||LA360_0==NAMESPACE_SYM||LA360_0==PAGE_SYM||(LA360_0 >= RIGHTBOTTOM_SYM && LA360_0 <= RIGHTTOP_SYM)||(LA360_0 >= SASS_AT_ROOT && LA360_0 <= SASS_DEBUG)||(LA360_0 >= SASS_EACH && LA360_0 <= SASS_ELSE)||LA360_0==SASS_EXTEND||(LA360_0 >= SASS_FOR && LA360_0 <= SASS_FUNCTION)||(LA360_0 >= SASS_IF && LA360_0 <= SASS_MIXIN)||(LA360_0 >= SASS_RETURN && LA360_0 <= SASS_WHILE)||(LA360_0 >= TOPCENTER_SYM && LA360_0 <= TOPRIGHT_SYM)||LA360_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt360=1;
			}
			else if ( (LA360_0==IDENT) ) {
				alt360=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 360, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(360);}

			switch (alt360) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:15: cp_variable
					{
					dbg.location(1213,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition7814);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:29: less_function_in_condition
					{
					dbg.location(1213,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition7818);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(360);}
			dbg.location(1213,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:57: ( ws )?
			int alt361=2;
			try { dbg.enterSubRule(361);
			try { dbg.enterDecision(361, decisionCanBacktrack[361]);

			int LA361_0 = input.LA(1);
			if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
				alt361=1;
			}
			} finally {dbg.exitDecision(361);}

			switch (alt361) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:57: ws
					{
					dbg.location(1213,57);
					pushFollow(FOLLOW_ws_in_less_condition7821);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(361);}
			dbg.location(1213,61);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt363=2;
			try { dbg.enterSubRule(363);
			try { dbg.enterDecision(363, decisionCanBacktrack[363]);

			int LA363_0 = input.LA(1);
			if ( ((LA363_0 >= GREATER && LA363_0 <= GREATER_OR_EQ)||LA363_0==LESS||LA363_0==LESS_OR_EQ||LA363_0==OPEQ) ) {
				alt363=1;
			}
			} finally {dbg.exitDecision(363);}

			switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1213,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition7825);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1213,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:86: ( ws )?
					int alt362=2;
					try { dbg.enterSubRule(362);
					try { dbg.enterDecision(362, decisionCanBacktrack[362]);

					int LA362_0 = input.LA(1);
					if ( (LA362_0==COMMENT||LA362_0==NL||LA362_0==WS) ) {
						alt362=1;
					}
					} finally {dbg.exitDecision(362);}

					switch (alt362) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:86: ws
							{
							dbg.location(1213,86);
							pushFollow(FOLLOW_ws_in_less_condition7827);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(362);}
					dbg.location(1213,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition7830);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(363);}

			}
			dbg.location(1215,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition7848); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1216, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1219:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1219, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1221,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition7870);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1221,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:18: ( ws )?
			int alt364=2;
			try { dbg.enterSubRule(364);
			try { dbg.enterDecision(364, decisionCanBacktrack[364]);

			int LA364_0 = input.LA(1);
			if ( (LA364_0==COMMENT||LA364_0==NL||LA364_0==WS) ) {
				alt364=1;
			}
			} finally {dbg.exitDecision(364);}

			switch (alt364) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:18: ws
					{
					dbg.location(1221,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7872);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(364);}
			dbg.location(1221,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition7875); if (state.failed) return;dbg.location(1221,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:29: ( ws )?
			int alt365=2;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			int LA365_0 = input.LA(1);
			if ( (LA365_0==COMMENT||LA365_0==NL||LA365_0==WS) ) {
				alt365=1;
			}
			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:29: ws
					{
					dbg.location(1221,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7877);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1221,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition7880);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1221,45);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:45: ( ws )?
			int alt366=2;
			try { dbg.enterSubRule(366);
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			int LA366_0 = input.LA(1);
			if ( (LA366_0==COMMENT||LA366_0==NL||LA366_0==WS) ) {
				alt366=1;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:45: ws
					{
					dbg.location(1221,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7882);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1221,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition7885); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1222, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1225, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1227:5: IDENT
			{
			dbg.location(1227,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name7907); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1228, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1230, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1231,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1233, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1235, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1236,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:5: ( IDENT | MINUS )?
			int alt367=2;
			try { dbg.enterSubRule(367);
			try { dbg.enterDecision(367, decisionCanBacktrack[367]);

			int LA367_0 = input.LA(1);
			if ( (LA367_0==IDENT||LA367_0==MINUS) ) {
				alt367=1;
			}
			} finally {dbg.exitDecision(367);}

			switch (alt367) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1236,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(367);}
			dbg.location(1236,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7970);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1236,50);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt369=3;
			try { dbg.enterSubRule(369);
			try { dbg.enterDecision(369, decisionCanBacktrack[369]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA369_1 = input.LA(2);
					if ( (LA369_1==AT_SIGN) ) {
						alt369=1;
					}
					else if ( ((LA369_1 >= COLON && LA369_1 <= COMMENT)||(LA369_1 >= DCOLON && LA369_1 <= DOT)||LA369_1==GREATER||(LA369_1 >= HASH && LA369_1 <= HASH_SYMBOL)||LA369_1==IDENT||(LA369_1 >= LBRACE && LA369_1 <= LBRACKET)||LA369_1==LENGTH||LA369_1==LESS_AND||LA369_1==MINUS||LA369_1==NL||LA369_1==PLUS||LA369_1==RBRACE||LA369_1==RPAREN||LA369_1==SASS_EXTEND_ONLY_SELECTOR||LA369_1==SEMI||LA369_1==TILDE||LA369_1==WS) ) {
						alt369=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt369=1;
					}
					break;
				case DIMENSION:
					{
					int LA369_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt369=2;
					}
					}
					break;
				case LENGTH:
					{
					alt369=2;
					}
					break;
			}
			} finally {dbg.exitDecision(369);}

			switch (alt369) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:51: less_selector_interpolation_exp
					{
					dbg.location(1236,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7973);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1236,85);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt368=0;
					try { dbg.enterSubRule(368);

					loop368:
					while (true) {
						int alt368=2;
						try { dbg.enterDecision(368, decisionCanBacktrack[368]);

						int LA368_0 = input.LA(1);
						if ( (LA368_0==DIMENSION) ) {
							int LA368_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt368=1;
							}

						}
						else if ( (LA368_0==IDENT||LA368_0==LENGTH||LA368_0==MINUS) ) {
							alt368=1;
						}

						} finally {dbg.exitDecision(368);}

						switch (alt368) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1236,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt368 >= 1 ) break loop368;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(368, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt368++;
					}
					} finally {dbg.exitSubRule(368);}

					}
					break;

			}
			} finally {dbg.exitSubRule(369);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1237, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1239, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1241,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation8016); if (state.failed) return;dbg.location(1241,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation8018); if (state.failed) return;dbg.location(1241,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:20: ( ws )?
			int alt370=2;
			try { dbg.enterSubRule(370);
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			int LA370_0 = input.LA(1);
			if ( (LA370_0==COMMENT||LA370_0==NL||LA370_0==WS) ) {
				alt370=1;
			}
			} finally {dbg.exitDecision(370);}

			switch (alt370) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:20: ws
					{
					dbg.location(1241,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation8020);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(370);}
			dbg.location(1241,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation8023); if (state.failed) return;dbg.location(1241,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:30: ( ws )?
			int alt371=2;
			try { dbg.enterSubRule(371);
			try { dbg.enterDecision(371, decisionCanBacktrack[371]);

			int LA371_0 = input.LA(1);
			if ( (LA371_0==COMMENT||LA371_0==NL||LA371_0==WS) ) {
				alt371=1;
			}
			} finally {dbg.exitDecision(371);}

			switch (alt371) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:30: ws
					{
					dbg.location(1241,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation8025);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(371);}
			dbg.location(1241,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation8028); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1242, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1245, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1246,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:5: ( IDENT | MINUS )?
			int alt372=2;
			try { dbg.enterSubRule(372);
			try { dbg.enterDecision(372, decisionCanBacktrack[372]);

			int LA372_0 = input.LA(1);
			if ( (LA372_0==IDENT||LA372_0==MINUS) ) {
				alt372=1;
			}
			} finally {dbg.exitDecision(372);}

			switch (alt372) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1246,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(372);}
			dbg.location(1246,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp8055);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1246,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt374=3;
			try { dbg.enterSubRule(374);
			try { dbg.enterDecision(374, decisionCanBacktrack[374]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA374_1 = input.LA(2);
					if ( (LA374_1==HASH_SYMBOL) ) {
						int LA374_6 = input.LA(3);
						if ( (LA374_6==LBRACE) ) {
							alt374=1;
						}
						else if ( (LA374_6==AT_SIGN||LA374_6==IDENT||LA374_6==MINUS||LA374_6==NAME) ) {
							alt374=2;
						}
					}
					else if ( ((LA374_1 >= COLON && LA374_1 <= COMMENT)||(LA374_1 >= DCOLON && LA374_1 <= DOT)||LA374_1==GREATER||LA374_1==HASH||LA374_1==IDENT||(LA374_1 >= LBRACE && LA374_1 <= LBRACKET)||LA374_1==LENGTH||LA374_1==LESS_AND||LA374_1==MINUS||LA374_1==NL||LA374_1==PLUS||LA374_1==RBRACE||LA374_1==RPAREN||LA374_1==SASS_EXTEND_ONLY_SELECTOR||LA374_1==SEMI||LA374_1==TILDE||LA374_1==WS) ) {
						alt374=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA374_2 = input.LA(2);
					if ( (LA374_2==LBRACE) ) {
						alt374=1;
					}
					}
					break;
				case DIMENSION:
					{
					int LA374_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt374=2;
					}
					}
					break;
				case LENGTH:
					{
					alt374=2;
					}
					break;
			}
			} finally {dbg.exitDecision(374);}

			switch (alt374) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:57: sass_selector_interpolation_exp
					{
					dbg.location(1246,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp8058);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1246,91);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt373=0;
					try { dbg.enterSubRule(373);

					loop373:
					while (true) {
						int alt373=2;
						try { dbg.enterDecision(373, decisionCanBacktrack[373]);

						int LA373_0 = input.LA(1);
						if ( (LA373_0==DIMENSION) ) {
							int LA373_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt373=1;
							}

						}
						else if ( (LA373_0==IDENT||LA373_0==LENGTH||LA373_0==MINUS) ) {
							alt373=1;
						}

						} finally {dbg.exitDecision(373);}

						switch (alt373) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1246,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt373 >= 1 ) break loop373;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(373, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt373++;
					}
					} finally {dbg.exitSubRule(373);}

					}
					break;

			}
			} finally {dbg.exitSubRule(374);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1247, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1249:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1249, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1251,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var8105); if (state.failed) return;dbg.location(1251,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var8107); if (state.failed) return;dbg.location(1251,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:28: ( WS )?
			int alt375=2;
			try { dbg.enterSubRule(375);
			try { dbg.enterDecision(375, decisionCanBacktrack[375]);

			int LA375_0 = input.LA(1);
			if ( (LA375_0==WS) ) {
				alt375=1;
			}
			} finally {dbg.exitDecision(375);}

			switch (alt375) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:28: WS
					{
					dbg.location(1251,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var8109); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(375);}
			dbg.location(1251,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var8112);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1251,46);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:46: ( WS )?
			int alt376=2;
			try { dbg.enterSubRule(376);
			try { dbg.enterDecision(376, decisionCanBacktrack[376]);

			int LA376_0 = input.LA(1);
			if ( (LA376_0==WS) ) {
				alt376=1;
			}
			} finally {dbg.exitDecision(376);}

			switch (alt376) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:46: WS
					{
					dbg.location(1251,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var8114); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(376);}
			dbg.location(1251,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var8117); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1252, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1272, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1274,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties8157);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1274,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:14: ( ws )?
			int alt377=2;
			try { dbg.enterSubRule(377);
			try { dbg.enterDecision(377, decisionCanBacktrack[377]);

			int LA377_0 = input.LA(1);
			if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
				alt377=1;
			}
			} finally {dbg.exitDecision(377);}

			switch (alt377) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:14: ws
					{
					dbg.location(1274,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8159);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(377);}
			dbg.location(1274,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties8162); if (state.failed) return;dbg.location(1274,24);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:24: ( ws )?
			int alt378=2;
			try { dbg.enterSubRule(378);
			try { dbg.enterDecision(378, decisionCanBacktrack[378]);

			int LA378_0 = input.LA(1);
			if ( (LA378_0==COMMENT||LA378_0==NL||LA378_0==WS) ) {
				alt378=1;
			}
			} finally {dbg.exitDecision(378);}

			switch (alt378) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:24: ws
					{
					dbg.location(1274,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8164);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(378);}
			dbg.location(1274,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:28: ( propertyValue ( ws )? )?
			int alt380=2;
			try { dbg.enterSubRule(380);
			try { dbg.enterDecision(380, decisionCanBacktrack[380]);

			int LA380_0 = input.LA(1);
			if ( ((LA380_0 >= ANGLE && LA380_0 <= AT_SIGN)||(LA380_0 >= BOTTOMCENTER_SYM && LA380_0 <= BOTTOMRIGHT_SYM)||LA380_0==CHARSET_SYM||LA380_0==COUNTER_STYLE_SYM||LA380_0==DIMENSION||LA380_0==EMS||LA380_0==EXS||(LA380_0 >= FONT_FACE_SYM && LA380_0 <= FREQ)||LA380_0==GEN||(LA380_0 >= HASH && LA380_0 <= HASH_SYMBOL)||LA380_0==IDENT||LA380_0==IMPORT_SYM||(LA380_0 >= LEFTBOTTOM_SYM && LA380_0 <= LENGTH)||(LA380_0 >= LESS_AND && LA380_0 <= LESS_JS_STRING)||(LA380_0 >= MEDIA_SYM && LA380_0 <= MOZ_DOCUMENT_SYM)||LA380_0==NAMESPACE_SYM||LA380_0==NUMBER||(LA380_0 >= PAGE_SYM && LA380_0 <= PERCENTAGE_SYMBOL)||LA380_0==PLUS||(LA380_0 >= REM && LA380_0 <= RIGHTTOP_SYM)||(LA380_0 >= SASS_AT_ROOT && LA380_0 <= SASS_DEBUG)||(LA380_0 >= SASS_EACH && LA380_0 <= SASS_ELSE)||LA380_0==SASS_EXTEND||(LA380_0 >= SASS_FOR && LA380_0 <= SASS_FUNCTION)||(LA380_0 >= SASS_IF && LA380_0 <= SASS_MIXIN)||(LA380_0 >= SASS_RETURN && LA380_0 <= SASS_WHILE)||LA380_0==STRING||(LA380_0 >= TILDE && LA380_0 <= TOPRIGHT_SYM)||LA380_0==URI||LA380_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt380=1;
			}
			} finally {dbg.exitDecision(380);}

			switch (alt380) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:29: propertyValue ( ws )?
					{
					dbg.location(1274,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties8168);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1274,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:43: ( ws )?
					int alt379=2;
					try { dbg.enterSubRule(379);
					try { dbg.enterDecision(379, decisionCanBacktrack[379]);

					int LA379_0 = input.LA(1);
					if ( (LA379_0==COMMENT||LA379_0==NL||LA379_0==WS) ) {
						alt379=1;
					}
					} finally {dbg.exitDecision(379);}

					switch (alt379) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:43: ws
							{
							dbg.location(1274,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties8170);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(379);}

					}
					break;

			}
			} finally {dbg.exitSubRule(380);}
			dbg.location(1274,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties8175); if (state.failed) return;dbg.location(1274,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:56: ( ws )?
			int alt381=2;
			try { dbg.enterSubRule(381);
			try { dbg.enterDecision(381, decisionCanBacktrack[381]);

			int LA381_0 = input.LA(1);
			if ( (LA381_0==COMMENT||LA381_0==NL||LA381_0==WS) ) {
				alt381=1;
			}
			} finally {dbg.exitDecision(381);}

			switch (alt381) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:56: ws
					{
					dbg.location(1274,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8177);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(381);}
			dbg.location(1274,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties8180);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1274,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:73: ( declarations )?
			int alt382=2;
			try { dbg.enterSubRule(382);
			try { dbg.enterDecision(382, decisionCanBacktrack[382]);

			int LA382_0 = input.LA(1);
			if ( ((LA382_0 >= AT_IDENT && LA382_0 <= AT_SIGN)||(LA382_0 >= BOTTOMCENTER_SYM && LA382_0 <= BOTTOMRIGHT_SYM)||(LA382_0 >= CHARSET_SYM && LA382_0 <= COLON)||LA382_0==COUNTER_STYLE_SYM||(LA382_0 >= DCOLON && LA382_0 <= DOT)||LA382_0==FONT_FACE_SYM||(LA382_0 >= GEN && LA382_0 <= GREATER)||(LA382_0 >= HASH && LA382_0 <= HASH_SYMBOL)||LA382_0==IDENT||LA382_0==IMPORT_SYM||(LA382_0 >= LBRACKET && LA382_0 <= LEFTTOP_SYM)||LA382_0==LESS_AND||(LA382_0 >= MEDIA_SYM && LA382_0 <= MOZ_DOCUMENT_SYM)||LA382_0==NAMESPACE_SYM||LA382_0==PAGE_SYM||(LA382_0 >= PIPE && LA382_0 <= PLUS)||(LA382_0 >= RIGHTBOTTOM_SYM && LA382_0 <= RIGHTTOP_SYM)||(LA382_0 >= SASS_AT_ROOT && LA382_0 <= SASS_DEBUG)||(LA382_0 >= SASS_EACH && LA382_0 <= SASS_ELSE)||(LA382_0 >= SASS_ERROR && LA382_0 <= SASS_FUNCTION)||(LA382_0 >= SASS_IF && LA382_0 <= SASS_MIXIN)||(LA382_0 >= SASS_RETURN && LA382_0 <= SEMI)||LA382_0==STAR||LA382_0==TILDE||(LA382_0 >= TOPCENTER_SYM && LA382_0 <= TOPRIGHT_SYM)||LA382_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt382=1;
			}
			} finally {dbg.exitDecision(382);}

			switch (alt382) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:73: declarations
					{
					dbg.location(1274,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties8182);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(382);}
			dbg.location(1274,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties8185); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1275, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1277, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:5: ( SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1279:5: SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )?
			{
			dbg.location(1279,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend8206); if (state.failed) return;dbg.location(1279,17);
			pushFollow(FOLLOW_ws_in_sass_extend8208);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1279,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend8210);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1279,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1279:43: ( ws SASS_OPTIONAL )?
			int alt383=2;
			try { dbg.enterSubRule(383);
			try { dbg.enterDecision(383, decisionCanBacktrack[383]);

			try {
				isCyclicDecision = true;
				alt383 = dfa383.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(383);}

			switch (alt383) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1279:44: ws SASS_OPTIONAL
					{
					dbg.location(1279,44);
					pushFollow(FOLLOW_ws_in_sass_extend8213);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1279,47);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend8215); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(383);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1280, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1282, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1284,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8238); if (state.failed) return;dbg.location(1284,31);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:31: ( sass_selector_interpolation_exp )?
			int alt384=2;
			try { dbg.enterSubRule(384);
			try { dbg.enterDecision(384, decisionCanBacktrack[384]);

			int LA384_0 = input.LA(1);
			if ( (LA384_0==IDENT||LA384_0==MINUS) ) {
				alt384=1;
			}
			else if ( (LA384_0==HASH_SYMBOL) ) {
				int LA384_2 = input.LA(2);
				if ( (LA384_2==LBRACE) ) {
					alt384=1;
				}
			}
			} finally {dbg.exitDecision(384);}

			switch (alt384) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:31: sass_selector_interpolation_exp
					{
					dbg.location(1284,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector8240);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(384);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1285, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1287, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1289,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1289,32);
			pushFollow(FOLLOW_ws_in_sass_debug8272);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1289,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug8274);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1290, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1292, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:5: SASS_ERROR ws STRING
			{
			dbg.location(1294,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error8295); if (state.failed) return;dbg.location(1294,16);
			pushFollow(FOLLOW_ws_in_sass_error8297);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1294,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error8299); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1295, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1297, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt385=4;
			try { dbg.enterDecision(385, decisionCanBacktrack[385]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt385=1;
				}
				break;
			case SASS_FOR:
				{
				alt385=2;
				}
				break;
			case SASS_EACH:
				{
				alt385=3;
				}
				break;
			case SASS_WHILE:
				{
				alt385=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 385, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(385);}

			switch (alt385) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:5: sass_if
					{
					dbg.location(1299,5);
					pushFollow(FOLLOW_sass_if_in_sass_control8320);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:15: sass_for
					{
					dbg.location(1299,15);
					pushFollow(FOLLOW_sass_for_in_sass_control8324);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:26: sass_each
					{
					dbg.location(1299,26);
					pushFollow(FOLLOW_sass_each_in_sass_control8328);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:38: sass_while
					{
					dbg.location(1299,38);
					pushFollow(FOLLOW_sass_while_in_sass_control8332);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1300, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1302, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1303:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1304,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if8353); if (state.failed) return;dbg.location(1304,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:13: ( ws )?
			int alt386=2;
			try { dbg.enterSubRule(386);
			try { dbg.enterDecision(386, decisionCanBacktrack[386]);

			int LA386_0 = input.LA(1);
			if ( (LA386_0==COMMENT||LA386_0==NL||LA386_0==WS) ) {
				alt386=1;
			}
			} finally {dbg.exitDecision(386);}

			switch (alt386) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:13: ws
					{
					dbg.location(1304,13);
					pushFollow(FOLLOW_ws_in_sass_if8355);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(386);}
			dbg.location(1304,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if8358);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1304,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:41: ( ws )?
			int alt387=2;
			try { dbg.enterSubRule(387);
			try { dbg.enterDecision(387, decisionCanBacktrack[387]);

			int LA387_0 = input.LA(1);
			if ( (LA387_0==COMMENT||LA387_0==NL||LA387_0==WS) ) {
				alt387=1;
			}
			} finally {dbg.exitDecision(387);}

			switch (alt387) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:41: ws
					{
					dbg.location(1304,41);
					pushFollow(FOLLOW_ws_in_sass_if8360);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(387);}
			dbg.location(1304,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if8363);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1304,64);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:64: ( ( ws )? sass_else )?
			int alt389=2;
			try { dbg.enterSubRule(389);
			try { dbg.enterDecision(389, decisionCanBacktrack[389]);

			try {
				isCyclicDecision = true;
				alt389 = dfa389.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(389);}

			switch (alt389) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:65: ( ws )? sass_else
					{
					dbg.location(1304,65);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:65: ( ws )?
					int alt388=2;
					try { dbg.enterSubRule(388);
					try { dbg.enterDecision(388, decisionCanBacktrack[388]);

					int LA388_0 = input.LA(1);
					if ( (LA388_0==COMMENT||LA388_0==NL||LA388_0==WS) ) {
						alt388=1;
					}
					} finally {dbg.exitDecision(388);}

					switch (alt388) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:65: ws
							{
							dbg.location(1304,65);
							pushFollow(FOLLOW_ws_in_sass_if8366);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(388);}
					dbg.location(1304,69);
					pushFollow(FOLLOW_sass_else_in_sass_if8369);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(389);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1305, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1307, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1308:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt397=2;
			try { dbg.enterDecision(397, decisionCanBacktrack[397]);

			try {
				isCyclicDecision = true;
				alt397 = dfa397.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(397);}

			switch (alt397) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1309,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8392); if (state.failed) return;dbg.location(1309,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:15: ( ws )?
					int alt390=2;
					try { dbg.enterSubRule(390);
					try { dbg.enterDecision(390, decisionCanBacktrack[390]);

					int LA390_0 = input.LA(1);
					if ( (LA390_0==COMMENT||LA390_0==NL||LA390_0==WS) ) {
						alt390=1;
					}
					} finally {dbg.exitDecision(390);}

					switch (alt390) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:15: ws
							{
							dbg.location(1309,15);
							pushFollow(FOLLOW_ws_in_sass_else8394);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(390);}
					dbg.location(1309,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8397);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1311,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt392=2;
					try { dbg.enterSubRule(392);
					try { dbg.enterDecision(392, decisionCanBacktrack[392]);

					int LA392_0 = input.LA(1);
					if ( (LA392_0==SASS_ELSE) ) {
						alt392=1;
					}
					else if ( (LA392_0==SASS_ELSEIF) ) {
						alt392=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 392, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(392);}

					switch (alt392) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1311,6);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1311,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8411); if (state.failed) return;dbg.location(1311,17);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:17: ( ws )?
							int alt391=2;
							try { dbg.enterSubRule(391);
							try { dbg.enterDecision(391, decisionCanBacktrack[391]);

							int LA391_0 = input.LA(1);
							if ( (LA391_0==COMMENT||LA391_0==NL||LA391_0==WS) ) {
								alt391=1;
							}
							} finally {dbg.exitDecision(391);}

							switch (alt391) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:17: ws
									{
									dbg.location(1311,17);
									pushFollow(FOLLOW_ws_in_sass_else8413);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(391);}
							dbg.location(1311,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1311,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else8418); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:64: SASS_ELSEIF
							{
							dbg.location(1311,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else8425); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(392);}
					dbg.location(1311,77);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:77: ( ws )?
					int alt393=2;
					try { dbg.enterSubRule(393);
					try { dbg.enterDecision(393, decisionCanBacktrack[393]);

					int LA393_0 = input.LA(1);
					if ( (LA393_0==COMMENT||LA393_0==NL||LA393_0==WS) ) {
						alt393=1;
					}
					} finally {dbg.exitDecision(393);}

					switch (alt393) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:77: ws
							{
							dbg.location(1311,77);
							pushFollow(FOLLOW_ws_in_sass_else8428);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(393);}
					dbg.location(1311,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else8431);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1311,105);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:105: ( ws )?
					int alt394=2;
					try { dbg.enterSubRule(394);
					try { dbg.enterDecision(394, decisionCanBacktrack[394]);

					int LA394_0 = input.LA(1);
					if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
						alt394=1;
					}
					} finally {dbg.exitDecision(394);}

					switch (alt394) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:105: ws
							{
							dbg.location(1311,105);
							pushFollow(FOLLOW_ws_in_sass_else8433);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(394);}
					dbg.location(1311,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8436);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1311,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:128: ( ( ws )? sass_else )?
					int alt396=2;
					try { dbg.enterSubRule(396);
					try { dbg.enterDecision(396, decisionCanBacktrack[396]);

					try {
						isCyclicDecision = true;
						alt396 = dfa396.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(396);}

					switch (alt396) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:129: ( ws )? sass_else
							{
							dbg.location(1311,129);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:129: ( ws )?
							int alt395=2;
							try { dbg.enterSubRule(395);
							try { dbg.enterDecision(395, decisionCanBacktrack[395]);

							int LA395_0 = input.LA(1);
							if ( (LA395_0==COMMENT||LA395_0==NL||LA395_0==WS) ) {
								alt395=1;
							}
							} finally {dbg.exitDecision(395);}

							switch (alt395) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:129: ws
									{
									dbg.location(1311,129);
									pushFollow(FOLLOW_ws_in_sass_else8439);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(395);}
							dbg.location(1311,133);
							pushFollow(FOLLOW_sass_else_in_sass_else8442);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(396);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1312, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1314, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:5: cp_expression
			{
			dbg.location(1316,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression8465);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1317, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1319, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1321,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for8486); if (state.failed) return;dbg.location(1321,14);
			pushFollow(FOLLOW_ws_in_sass_for8488);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for8490);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,29);
			pushFollow(FOLLOW_ws_in_sass_for8492);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1321,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8496); if (state.failed) return;dbg.location(1321,74);
			pushFollow(FOLLOW_ws_in_sass_for8500);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8502);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,96);
			pushFollow(FOLLOW_ws_in_sass_for8504);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1321,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8508); if (state.failed) return;dbg.location(1321,173);
			pushFollow(FOLLOW_ws_in_sass_for8512);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8514);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,195);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:195: ( ws )?
			int alt398=2;
			try { dbg.enterSubRule(398);
			try { dbg.enterDecision(398, decisionCanBacktrack[398]);

			int LA398_0 = input.LA(1);
			if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {
				alt398=1;
			}
			} finally {dbg.exitDecision(398);}

			switch (alt398) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:195: ws
					{
					dbg.location(1321,195);
					pushFollow(FOLLOW_ws_in_sass_for8516);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(398);}
			dbg.location(1321,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for8519);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1322, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1324, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block
			{
			dbg.location(1326,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each8540); if (state.failed) return;dbg.location(1326,15);
			pushFollow(FOLLOW_ws_in_sass_each8542);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each8544);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,38);
			pushFollow(FOLLOW_ws_in_sass_each8546);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1326,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each8550); if (state.failed) return;dbg.location(1326,79);
			pushFollow(FOLLOW_ws_in_sass_each8554);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,82);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:82: ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+
			int cnt402=0;
			try { dbg.enterSubRule(402);

			loop402:
			while (true) {
				int alt402=2;
				try { dbg.enterDecision(402, decisionCanBacktrack[402]);

				int LA402_0 = input.LA(1);
				if ( (LA402_0==LBRACE) ) {
					int LA402_1 = input.LA(2);
					if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
						alt402=1;
					}

				}
				else if ( ((LA402_0 >= ANGLE && LA402_0 <= AT_SIGN)||(LA402_0 >= BOTTOMCENTER_SYM && LA402_0 <= BOTTOMRIGHT_SYM)||LA402_0==CHARSET_SYM||LA402_0==COUNTER_STYLE_SYM||LA402_0==DIMENSION||LA402_0==EMS||LA402_0==EXS||(LA402_0 >= FONT_FACE_SYM && LA402_0 <= FREQ)||LA402_0==GEN||(LA402_0 >= HASH && LA402_0 <= HASH_SYMBOL)||(LA402_0 >= IDENT && LA402_0 <= IMPORT_SYM)||(LA402_0 >= LEFTBOTTOM_SYM && LA402_0 <= LENGTH)||(LA402_0 >= LESS_AND && LA402_0 <= LESS_JS_STRING)||LA402_0==LPAREN||(LA402_0 >= MEDIA_SYM && LA402_0 <= MOZ_DOCUMENT_SYM)||LA402_0==NAMESPACE_SYM||(LA402_0 >= NOT && LA402_0 <= NUMBER)||(LA402_0 >= PAGE_SYM && LA402_0 <= PERCENTAGE_SYMBOL)||LA402_0==PLUS||(LA402_0 >= REM && LA402_0 <= RIGHTTOP_SYM)||(LA402_0 >= SASS_AT_ROOT && LA402_0 <= SASS_DEBUG)||(LA402_0 >= SASS_EACH && LA402_0 <= SASS_ELSE)||LA402_0==SASS_EXTEND||(LA402_0 >= SASS_FOR && LA402_0 <= SASS_FUNCTION)||(LA402_0 >= SASS_IF && LA402_0 <= SASS_MIXIN)||(LA402_0 >= SASS_RETURN && LA402_0 <= SASS_WHILE)||LA402_0==STRING||(LA402_0 >= TILDE && LA402_0 <= TOPRIGHT_SYM)||LA402_0==URI||LA402_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt402=1;
				}

				} finally {dbg.exitDecision(402);}

				switch (alt402) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:83: cp_expression_list ( ( ws )? COMMA )? ( ws )?
					{
					dbg.location(1326,83);
					pushFollow(FOLLOW_cp_expression_list_in_sass_each8557);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1326,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:102: ( ( ws )? COMMA )?
					int alt400=2;
					try { dbg.enterSubRule(400);
					try { dbg.enterDecision(400, decisionCanBacktrack[400]);

					try {
						isCyclicDecision = true;
						alt400 = dfa400.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(400);}

					switch (alt400) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:103: ( ws )? COMMA
							{
							dbg.location(1326,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:103: ( ws )?
							int alt399=2;
							try { dbg.enterSubRule(399);
							try { dbg.enterDecision(399, decisionCanBacktrack[399]);

							int LA399_0 = input.LA(1);
							if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {
								alt399=1;
							}
							} finally {dbg.exitDecision(399);}

							switch (alt399) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:103: ws
									{
									dbg.location(1326,103);
									pushFollow(FOLLOW_ws_in_sass_each8560);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(399);}
							dbg.location(1326,107);
							match(input,COMMA,FOLLOW_COMMA_in_sass_each8563); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(400);}
					dbg.location(1326,115);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:115: ( ws )?
					int alt401=2;
					try { dbg.enterSubRule(401);
					try { dbg.enterDecision(401, decisionCanBacktrack[401]);

					int LA401_0 = input.LA(1);
					if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {
						alt401=1;
					}
					} finally {dbg.exitDecision(401);}

					switch (alt401) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:115: ws
							{
							dbg.location(1326,115);
							pushFollow(FOLLOW_ws_in_sass_each8567);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(401);}

					}
					break;

				default :
					if ( cnt402 >= 1 ) break loop402;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(402, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt402++;
			}
			} finally {dbg.exitSubRule(402);}
			dbg.location(1326,122);
			pushFollow(FOLLOW_sass_control_block_in_sass_each8573);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1327, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1329, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1331,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables8594);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1331,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(405);

			loop405:
			while (true) {
				int alt405=2;
				try { dbg.enterDecision(405, decisionCanBacktrack[405]);

				try {
					isCyclicDecision = true;
					alt405 = dfa405.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(405);}

				switch (alt405) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1331,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:33: ( ws )?
					int alt403=2;
					try { dbg.enterSubRule(403);
					try { dbg.enterDecision(403, decisionCanBacktrack[403]);

					int LA403_0 = input.LA(1);
					if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
						alt403=1;
					}
					} finally {dbg.exitDecision(403);}

					switch (alt403) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:33: ws
							{
							dbg.location(1331,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables8606);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(403);}
					dbg.location(1331,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables8609); if (state.failed) return;dbg.location(1331,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:43: ( ws )?
					int alt404=2;
					try { dbg.enterSubRule(404);
					try { dbg.enterDecision(404, decisionCanBacktrack[404]);

					int LA404_0 = input.LA(1);
					if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
						alt404=1;
					}
					} finally {dbg.exitDecision(404);}

					switch (alt404) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:43: ws
							{
							dbg.location(1331,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables8611);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(404);}
					dbg.location(1331,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables8614);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop405;
				}
			}
			} finally {dbg.exitSubRule(405);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1332, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1334, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1336,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while8639); if (state.failed) return;dbg.location(1336,16);
			pushFollow(FOLLOW_ws_in_sass_while8641);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1336,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while8643);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1336,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:43: ( ws )?
			int alt406=2;
			try { dbg.enterSubRule(406);
			try { dbg.enterDecision(406, decisionCanBacktrack[406]);

			int LA406_0 = input.LA(1);
			if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
				alt406=1;
			}
			} finally {dbg.exitDecision(406);}

			switch (alt406) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:43: ws
					{
					dbg.location(1336,43);
					pushFollow(FOLLOW_ws_in_sass_while8645);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(406);}
			dbg.location(1336,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while8648);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1337, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1339:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1339, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1341,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block8669); if (state.failed) return;dbg.location(1341,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:12: ( ws )?
			int alt407=2;
			try { dbg.enterSubRule(407);
			try { dbg.enterDecision(407, decisionCanBacktrack[407]);

			int LA407_0 = input.LA(1);
			if ( (LA407_0==COMMENT||LA407_0==NL||LA407_0==WS) ) {
				alt407=1;
			}
			} finally {dbg.exitDecision(407);}

			switch (alt407) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:12: ws
					{
					dbg.location(1341,12);
					pushFollow(FOLLOW_ws_in_sass_control_block8671);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(407);}
			dbg.location(1341,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:16: ( declarations )?
			int alt408=2;
			try { dbg.enterSubRule(408);
			try { dbg.enterDecision(408, decisionCanBacktrack[408]);

			int LA408_0 = input.LA(1);
			if ( ((LA408_0 >= AT_IDENT && LA408_0 <= AT_SIGN)||(LA408_0 >= BOTTOMCENTER_SYM && LA408_0 <= BOTTOMRIGHT_SYM)||(LA408_0 >= CHARSET_SYM && LA408_0 <= COLON)||LA408_0==COUNTER_STYLE_SYM||(LA408_0 >= DCOLON && LA408_0 <= DOT)||LA408_0==FONT_FACE_SYM||(LA408_0 >= GEN && LA408_0 <= GREATER)||(LA408_0 >= HASH && LA408_0 <= HASH_SYMBOL)||LA408_0==IDENT||LA408_0==IMPORT_SYM||(LA408_0 >= LBRACKET && LA408_0 <= LEFTTOP_SYM)||LA408_0==LESS_AND||(LA408_0 >= MEDIA_SYM && LA408_0 <= MOZ_DOCUMENT_SYM)||LA408_0==NAMESPACE_SYM||LA408_0==PAGE_SYM||(LA408_0 >= PIPE && LA408_0 <= PLUS)||(LA408_0 >= RIGHTBOTTOM_SYM && LA408_0 <= RIGHTTOP_SYM)||(LA408_0 >= SASS_AT_ROOT && LA408_0 <= SASS_DEBUG)||(LA408_0 >= SASS_EACH && LA408_0 <= SASS_ELSE)||(LA408_0 >= SASS_ERROR && LA408_0 <= SASS_FUNCTION)||(LA408_0 >= SASS_IF && LA408_0 <= SASS_MIXIN)||(LA408_0 >= SASS_RETURN && LA408_0 <= SEMI)||LA408_0==STAR||LA408_0==TILDE||(LA408_0 >= TOPCENTER_SYM && LA408_0 <= TOPRIGHT_SYM)||LA408_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt408=1;
			}
			} finally {dbg.exitDecision(408);}

			switch (alt408) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:16: declarations
					{
					dbg.location(1341,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block8674);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(408);}
			dbg.location(1341,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block8677); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1342, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1344, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1345:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1350,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration8719); if (state.failed) return;dbg.location(1350,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration8721);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1350,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration8723);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1350,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:41: ( ws )?
			int alt409=2;
			try { dbg.enterSubRule(409);
			try { dbg.enterDecision(409, decisionCanBacktrack[409]);

			int LA409_0 = input.LA(1);
			if ( (LA409_0==COMMENT||LA409_0==NL||LA409_0==WS) ) {
				alt409=1;
			}
			} finally {dbg.exitDecision(409);}

			switch (alt409) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:41: ws
					{
					dbg.location(1350,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8725);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(409);}
			dbg.location(1350,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration8728); if (state.failed) return;dbg.location(1350,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:52: ( ws )?
			int alt410=2;
			try { dbg.enterSubRule(410);
			try { dbg.enterDecision(410, decisionCanBacktrack[410]);

			int LA410_0 = input.LA(1);
			if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
				alt410=1;
			}
			} finally {dbg.exitDecision(410);}

			switch (alt410) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:52: ws
					{
					dbg.location(1350,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8730);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(410);}
			dbg.location(1350,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:56: ( cp_args_list )?
			int alt411=2;
			try { dbg.enterSubRule(411);
			try { dbg.enterDecision(411, decisionCanBacktrack[411]);

			int LA411_0 = input.LA(1);
			if ( (LA411_0==AT_IDENT||(LA411_0 >= BOTTOMCENTER_SYM && LA411_0 <= BOTTOMRIGHT_SYM)||LA411_0==CHARSET_SYM||(LA411_0 >= COUNTER_STYLE_SYM && LA411_0 <= CP_DOTS)||LA411_0==FONT_FACE_SYM||LA411_0==IDENT||LA411_0==IMPORT_SYM||(LA411_0 >= LEFTBOTTOM_SYM && LA411_0 <= LEFTTOP_SYM)||LA411_0==LESS_REST||LA411_0==MEDIA_SYM||LA411_0==MOZ_DOCUMENT_SYM||LA411_0==NAMESPACE_SYM||LA411_0==PAGE_SYM||(LA411_0 >= RIGHTBOTTOM_SYM && LA411_0 <= RIGHTTOP_SYM)||(LA411_0 >= SASS_AT_ROOT && LA411_0 <= SASS_DEBUG)||(LA411_0 >= SASS_EACH && LA411_0 <= SASS_ELSE)||LA411_0==SASS_EXTEND||(LA411_0 >= SASS_FOR && LA411_0 <= SASS_FUNCTION)||(LA411_0 >= SASS_IF && LA411_0 <= SASS_MIXIN)||(LA411_0 >= SASS_RETURN && LA411_0 <= SASS_WHILE)||(LA411_0 >= TOPCENTER_SYM && LA411_0 <= TOPRIGHT_SYM)||LA411_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt411=1;
			}
			} finally {dbg.exitDecision(411);}

			switch (alt411) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:56: cp_args_list
					{
					dbg.location(1350,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration8733);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(411);}
			dbg.location(1350,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration8736); if (state.failed) return;dbg.location(1350,77);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:77: ( ws )?
			int alt412=2;
			try { dbg.enterSubRule(412);
			try { dbg.enterDecision(412, decisionCanBacktrack[412]);

			int LA412_0 = input.LA(1);
			if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
				alt412=1;
			}
			} finally {dbg.exitDecision(412);}

			switch (alt412) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:77: ws
					{
					dbg.location(1350,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8738);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(412);}
			dbg.location(1350,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration8741); if (state.failed) return;dbg.location(1350,88);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:88: ( ws )?
			int alt413=2;
			try { dbg.enterSubRule(413);
			try { dbg.enterDecision(413, decisionCanBacktrack[413]);

			int LA413_0 = input.LA(1);
			if ( (LA413_0==COMMENT||LA413_0==NL||LA413_0==WS) ) {
				alt413=1;
			}
			} finally {dbg.exitDecision(413);}

			switch (alt413) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:88: ws
					{
					dbg.location(1350,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8743);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(413);}
			dbg.location(1350,92);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:92: ( declarations )?
			int alt414=2;
			try { dbg.enterSubRule(414);
			try { dbg.enterDecision(414, decisionCanBacktrack[414]);

			int LA414_0 = input.LA(1);
			if ( ((LA414_0 >= AT_IDENT && LA414_0 <= AT_SIGN)||(LA414_0 >= BOTTOMCENTER_SYM && LA414_0 <= BOTTOMRIGHT_SYM)||(LA414_0 >= CHARSET_SYM && LA414_0 <= COLON)||LA414_0==COUNTER_STYLE_SYM||(LA414_0 >= DCOLON && LA414_0 <= DOT)||LA414_0==FONT_FACE_SYM||(LA414_0 >= GEN && LA414_0 <= GREATER)||(LA414_0 >= HASH && LA414_0 <= HASH_SYMBOL)||LA414_0==IDENT||LA414_0==IMPORT_SYM||(LA414_0 >= LBRACKET && LA414_0 <= LEFTTOP_SYM)||LA414_0==LESS_AND||(LA414_0 >= MEDIA_SYM && LA414_0 <= MOZ_DOCUMENT_SYM)||LA414_0==NAMESPACE_SYM||LA414_0==PAGE_SYM||(LA414_0 >= PIPE && LA414_0 <= PLUS)||(LA414_0 >= RIGHTBOTTOM_SYM && LA414_0 <= RIGHTTOP_SYM)||(LA414_0 >= SASS_AT_ROOT && LA414_0 <= SASS_DEBUG)||(LA414_0 >= SASS_EACH && LA414_0 <= SASS_ELSE)||(LA414_0 >= SASS_ERROR && LA414_0 <= SASS_FUNCTION)||(LA414_0 >= SASS_IF && LA414_0 <= SASS_MIXIN)||(LA414_0 >= SASS_RETURN && LA414_0 <= SEMI)||LA414_0==STAR||LA414_0==TILDE||(LA414_0 >= TOPCENTER_SYM && LA414_0 <= TOPRIGHT_SYM)||LA414_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt414=1;
			}
			} finally {dbg.exitDecision(414);}

			switch (alt414) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:92: declarations
					{
					dbg.location(1350,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration8746);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(414);}
			dbg.location(1350,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration8749); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1351, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1353, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1354:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:5: IDENT
			{
			dbg.location(1355,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name8770); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1356, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1358, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1359:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1360,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return8791); if (state.failed) return;dbg.location(1360,17);
			pushFollow(FOLLOW_ws_in_sass_function_return8793);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1360,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return8795);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1361, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1363, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1364:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:5: SASS_CONTENT
			{
			dbg.location(1365,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content8816); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1366, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1368, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:5: {...}? IDENT
			{
			dbg.location(1369,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1369,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types8835); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1370, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1375, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1376:5: {...}? IDENT
			{
			dbg.location(1376,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1376,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when8858); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1377, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1379:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1379, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1379:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1380:5: {...}? IDENT
			{
			dbg.location(1380,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1380,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and8877); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1381, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1383, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1384:5: {...}? IDENT
			{
			dbg.location(1384,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1384,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or8895); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1385, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1387:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1387, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1387:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:5: {...}? IDENT
			{
			dbg.location(1388,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1388,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only8913); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1389, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:45: ( ws )? mediaQueryList
		{
		dbg.location(391,45);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:45: ( ws )?
		int alt415=2;
		try { dbg.enterSubRule(415);
		try { dbg.enterDecision(415, decisionCanBacktrack[415]);

		int LA415_0 = input.LA(1);
		if ( (LA415_0==COMMENT||LA415_0==NL||LA415_0==WS) ) {
			alt415=1;
		}
		} finally {dbg.exitDecision(415);}

		switch (alt415) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:45: ws
				{
				dbg.location(391,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3365);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(415);}
		dbg.location(391,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3368);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:99: ( ws )? mediaQueryList
		{
		dbg.location(394,99);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:99: ( ws )?
		int alt416=2;
		try { dbg.enterSubRule(416);
		try { dbg.enterDecision(416, decisionCanBacktrack[416]);

		int LA416_0 = input.LA(1);
		if ( (LA416_0==COMMENT||LA416_0==NL||LA416_0==WS) ) {
			alt416=1;
		}
		} finally {dbg.exitDecision(416);}

		switch (alt416) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:99: ws
				{
				dbg.location(394,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3429);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(416);}
		dbg.location(394,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3432);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:102: ( ws )? mediaQueryList
		{
		dbg.location(396,102);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:102: ( ws )?
		int alt417=2;
		try { dbg.enterSubRule(417);
		try { dbg.enterDecision(417, decisionCanBacktrack[417]);

		int LA417_0 = input.LA(1);
		if ( (LA417_0==COMMENT||LA417_0==NL||LA417_0==WS) ) {
			alt417=1;
		}
		} finally {dbg.exitDecision(417);}

		switch (alt417) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:102: ws
				{
				dbg.location(396,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3483);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(417);}
		dbg.location(396,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3486);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:28: ( ws )? SEMI
		{
		dbg.location(411,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:28: ( ws )?
		int alt418=2;
		try { dbg.enterSubRule(418);
		try { dbg.enterDecision(418, decisionCanBacktrack[418]);

		int LA418_0 = input.LA(1);
		if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
			alt418=1;
		}
		} finally {dbg.exitDecision(418);}

		switch (alt418) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:28: ws
				{
				dbg.location(411,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css3605);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(418);}
		dbg.location(411,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css3608); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt423=2;
		try { dbg.enterDecision(423, decisionCanBacktrack[423]);

		int LA423_0 = input.LA(1);
		if ( (LA423_0==SASS_MIXIN) ) {
			alt423=1;
		}
		else if ( (LA423_0==DOT||LA423_0==HASH) ) {
			alt423=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 423, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(423);}

		switch (alt423) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:6: SASS_MIXIN
				{
				dbg.location(420,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css3706); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(420,19);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(420,20);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:20: ( ( DOT IDENT ) | HASH )
				int alt419=2;
				try { dbg.enterSubRule(419);
				try { dbg.enterDecision(419, decisionCanBacktrack[419]);

				int LA419_0 = input.LA(1);
				if ( (LA419_0==DOT) ) {
					alt419=1;
				}
				else if ( (LA419_0==HASH) ) {
					alt419=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 419, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(419);}

				switch (alt419) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:21: ( DOT IDENT )
						{
						dbg.location(420,21);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:22: DOT IDENT
						{
						dbg.location(420,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css3713); if (state.failed) return;dbg.location(420,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css3715); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:35: HASH
						{
						dbg.location(420,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css3720); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(419);}
				dbg.location(420,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:41: ( ws )?
				int alt420=2;
				try { dbg.enterSubRule(420);
				try { dbg.enterDecision(420, decisionCanBacktrack[420]);

				int LA420_0 = input.LA(1);
				if ( (LA420_0==COMMENT||LA420_0==NL||LA420_0==WS) ) {
					alt420=1;
				}
				} finally {dbg.exitDecision(420);}

				switch (alt420) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:41: ws
						{
						dbg.location(420,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css3723);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(420);}
				dbg.location(420,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css3726); if (state.failed) return;dbg.location(420,52);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:52: (~ RPAREN )*
				try { dbg.enterSubRule(421);

				loop421:
				while (true) {
					int alt421=2;
					try { dbg.enterDecision(421, decisionCanBacktrack[421]);

					int LA421_0 = input.LA(1);
					if ( ((LA421_0 >= A && LA421_0 <= RIGHTTOP_SYM)||(LA421_0 >= S && LA421_0 <= Z)) ) {
						alt421=1;
					}

					} finally {dbg.exitDecision(421);}

					switch (alt421) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(420,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop421;
					}
				}
				} finally {dbg.exitSubRule(421);}
				dbg.location(420,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css3734); if (state.failed) return;dbg.location(420,70);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(422);

				loop422:
				while (true) {
					int alt422=2;
					try { dbg.enterDecision(422, decisionCanBacktrack[422]);

					int LA422_0 = input.LA(1);
					if ( ((LA422_0 >= A && LA422_0 <= L)||(LA422_0 >= LBRACKET && LA422_0 <= SASS_WHILE)||(LA422_0 >= SOLIDUS && LA422_0 <= Z)) ) {
						alt422=1;
					}

					} finally {dbg.exitDecision(422);}

					switch (alt422) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(420,70);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop422;
					}
				}
				} finally {dbg.exitSubRule(422);}
				dbg.location(420,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css3744); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(422,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css3762);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(422,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:22: ( ( ws )? IMPORTANT_SYM )?
		int alt425=2;
		try { dbg.enterSubRule(425);
		try { dbg.enterDecision(425, decisionCanBacktrack[425]);

		try {
			isCyclicDecision = true;
			alt425 = dfa425.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(425);}

		switch (alt425) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(422,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:23: ( ws )?
				int alt424=2;
				try { dbg.enterSubRule(424);
				try { dbg.enterDecision(424, decisionCanBacktrack[424]);

				int LA424_0 = input.LA(1);
				if ( (LA424_0==COMMENT||LA424_0==NL||LA424_0==WS) ) {
					alt424=1;
				}
				} finally {dbg.exitDecision(424);}

				switch (alt424) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:23: ws
						{
						dbg.location(422,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css3765);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(424);}
				dbg.location(422,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(425);}
		dbg.location(422,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:43: ( ws )?
		int alt426=2;
		try { dbg.enterSubRule(426);
		try { dbg.enterDecision(426, decisionCanBacktrack[426]);

		int LA426_0 = input.LA(1);
		if ( (LA426_0==COMMENT||LA426_0==NL||LA426_0==WS) ) {
			alt426=1;
		}
		} finally {dbg.exitDecision(426);}

		switch (alt426) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:43: ws
				{
				dbg.location(422,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css3772);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(426);}
		dbg.location(422,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css3775); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:8: cp_mixin_call
		{
		dbg.location(423,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css3798);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(424,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt432=3;
		try { dbg.enterSubRule(432);
		try { dbg.enterDecision(432, decisionCanBacktrack[432]);

		try {
			isCyclicDecision = true;
			alt432 = dfa432.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(432);}

		switch (alt432) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(424,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(424,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css3823); if (state.failed) return;dbg.location(424,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:23: ( ws selectorsGroup )?
				int alt427=2;
				try { dbg.enterSubRule(427);
				try { dbg.enterDecision(427, decisionCanBacktrack[427]);

				try {
					isCyclicDecision = true;
					alt427 = dfa427.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(427);}

				switch (alt427) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:24: ws selectorsGroup
						{
						dbg.location(424,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css3826);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(424,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css3828);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(427);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(424,48);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(424,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css3837); if (state.failed) return;dbg.location(424,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css3839);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(424,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css3841); if (state.failed) return;dbg.location(424,72);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:72: ( ws )?
				int alt428=2;
				try { dbg.enterSubRule(428);
				try { dbg.enterDecision(428, decisionCanBacktrack[428]);

				int LA428_0 = input.LA(1);
				if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
					alt428=1;
				}
				} finally {dbg.exitDecision(428);}

				switch (alt428) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:72: ws
						{
						dbg.location(424,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css3843);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(428);}
				dbg.location(424,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css3846); if (state.failed) return;dbg.location(424,82);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:82: ( ws )?
				int alt429=2;
				try { dbg.enterSubRule(429);
				try { dbg.enterDecision(429, decisionCanBacktrack[429]);

				int LA429_0 = input.LA(1);
				if ( (LA429_0==COMMENT||LA429_0==NL||LA429_0==WS) ) {
					alt429=1;
				}
				} finally {dbg.exitDecision(429);}

				switch (alt429) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:82: ws
						{
						dbg.location(424,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css3848);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(429);}
				dbg.location(424,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css3851); if (state.failed) return;dbg.location(424,92);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:92: ( ws )?
				int alt430=2;
				try { dbg.enterSubRule(430);
				try { dbg.enterDecision(430, decisionCanBacktrack[430]);

				int LA430_0 = input.LA(1);
				if ( (LA430_0==COMMENT||LA430_0==NL||LA430_0==WS) ) {
					alt430=1;
				}
				} finally {dbg.exitDecision(430);}

				switch (alt430) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:92: ws
						{
						dbg.location(424,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css3853);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(430);}
				dbg.location(424,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css3856); if (state.failed) return;dbg.location(424,102);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:102: ( ws )?
				int alt431=2;
				try { dbg.enterSubRule(431);
				try { dbg.enterDecision(431, decisionCanBacktrack[431]);

				int LA431_0 = input.LA(1);
				if ( (LA431_0==COMMENT||LA431_0==NL||LA431_0==WS) ) {
					alt431=1;
				}
				} finally {dbg.exitDecision(431);}

				switch (alt431) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:102: ws
						{
						dbg.location(424,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css3858);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(431);}
				dbg.location(424,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css3861); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:116: selectorsGroup
				{
				dbg.location(424,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css3866);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(432);}
		dbg.location(424,132);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:132: ( ws )?
		int alt433=2;
		try { dbg.enterSubRule(433);
		try { dbg.enterDecision(433, decisionCanBacktrack[433]);

		int LA433_0 = input.LA(1);
		if ( (LA433_0==COMMENT||LA433_0==NL||LA433_0==WS) ) {
			alt433=1;
		}
		} finally {dbg.exitDecision(433);}

		switch (alt433) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:132: ws
				{
				dbg.location(424,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css3869);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(433);}
		dbg.location(424,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css3872); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:8: propertyDeclaration
		{
		dbg.location(425,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css3884);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )? COMMA
		{
		dbg.location(439,18);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )?
		int alt434=2;
		try { dbg.enterSubRule(434);
		try { dbg.enterDecision(434, decisionCanBacktrack[434]);

		int LA434_0 = input.LA(1);
		if ( (LA434_0==COMMENT||LA434_0==NL||LA434_0==WS) ) {
			alt434=1;
		}
		} finally {dbg.exitDecision(434);}

		switch (alt434) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ws
				{
				dbg.location(439,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css3991);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(434);}
		dbg.location(439,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css3994); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:23: ( ws )? SEMI
		{
		dbg.location(479,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:23: ( ws )?
		int alt435=2;
		try { dbg.enterSubRule(435);
		try { dbg.enterDecision(435, decisionCanBacktrack[435]);

		int LA435_0 = input.LA(1);
		if ( (LA435_0==COMMENT||LA435_0==NL||LA435_0==WS) ) {
			alt435=1;
		}
		} finally {dbg.exitDecision(435);}

		switch (alt435) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:23: ws
				{
				dbg.location(479,23);
				pushFollow(FOLLOW_ws_in_synpred11_Css31290);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(435);}
		dbg.location(479,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred11_Css31293); if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt440=2;
		try { dbg.enterDecision(440, decisionCanBacktrack[440]);

		int LA440_0 = input.LA(1);
		if ( (LA440_0==SASS_MIXIN) ) {
			alt440=1;
		}
		else if ( (LA440_0==DOT||LA440_0==HASH) ) {
			alt440=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 440, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(440);}

		switch (alt440) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:10: SASS_MIXIN
				{
				dbg.location(487,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred12_Css31368); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(487,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(487,24);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:24: ( ( DOT IDENT ) | HASH )
				int alt436=2;
				try { dbg.enterSubRule(436);
				try { dbg.enterDecision(436, decisionCanBacktrack[436]);

				int LA436_0 = input.LA(1);
				if ( (LA436_0==DOT) ) {
					alt436=1;
				}
				else if ( (LA436_0==HASH) ) {
					alt436=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 436, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(436);}

				switch (alt436) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:25: ( DOT IDENT )
						{
						dbg.location(487,25);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:26: DOT IDENT
						{
						dbg.location(487,26);
						match(input,DOT,FOLLOW_DOT_in_synpred12_Css31375); if (state.failed) return;dbg.location(487,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred12_Css31377); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:39: HASH
						{
						dbg.location(487,39);
						match(input,HASH,FOLLOW_HASH_in_synpred12_Css31382); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(436);}
				dbg.location(487,45);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:45: ( ws )?
				int alt437=2;
				try { dbg.enterSubRule(437);
				try { dbg.enterDecision(437, decisionCanBacktrack[437]);

				int LA437_0 = input.LA(1);
				if ( (LA437_0==COMMENT||LA437_0==NL||LA437_0==WS) ) {
					alt437=1;
				}
				} finally {dbg.exitDecision(437);}

				switch (alt437) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:45: ws
						{
						dbg.location(487,45);
						pushFollow(FOLLOW_ws_in_synpred12_Css31385);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(437);}
				dbg.location(487,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred12_Css31388); if (state.failed) return;dbg.location(487,56);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:56: (~ RPAREN )*
				try { dbg.enterSubRule(438);

				loop438:
				while (true) {
					int alt438=2;
					try { dbg.enterDecision(438, decisionCanBacktrack[438]);

					int LA438_0 = input.LA(1);
					if ( ((LA438_0 >= A && LA438_0 <= RIGHTTOP_SYM)||(LA438_0 >= S && LA438_0 <= Z)) ) {
						alt438=1;
					}

					} finally {dbg.exitDecision(438);}

					switch (alt438) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(487,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop438;
					}
				}
				} finally {dbg.exitSubRule(438);}
				dbg.location(487,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred12_Css31396); if (state.failed) return;dbg.location(487,74);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(439);

				loop439:
				while (true) {
					int alt439=2;
					try { dbg.enterDecision(439, decisionCanBacktrack[439]);

					int LA439_0 = input.LA(1);
					if ( ((LA439_0 >= A && LA439_0 <= L)||(LA439_0 >= LBRACKET && LA439_0 <= R)||(LA439_0 >= RBRACKET && LA439_0 <= SASS_WHILE)||(LA439_0 >= SOLIDUS && LA439_0 <= Z)) ) {
						alt439=1;
					}

					} finally {dbg.exitDecision(439);}

					switch (alt439) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(487,74);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop439;
					}
				}
				} finally {dbg.exitSubRule(439);}
				dbg.location(487,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred12_Css31408); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(489,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred13_Css31434);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(489,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:26: ( ws )?
		int alt441=2;
		try { dbg.enterSubRule(441);
		try { dbg.enterDecision(441, decisionCanBacktrack[441]);

		int LA441_0 = input.LA(1);
		if ( (LA441_0==COMMENT||LA441_0==NL||LA441_0==WS) ) {
			alt441=1;
		}
		} finally {dbg.exitDecision(441);}

		switch (alt441) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:26: ws
				{
				dbg.location(489,26);
				pushFollow(FOLLOW_ws_in_synpred13_Css31436);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(441);}
		dbg.location(489,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred13_Css31439); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:12: cp_mixin_call
		{
		dbg.location(490,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred14_Css31458);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:12: cp_variable ( ws )? COLON
		{
		dbg.location(492,12);
		pushFollow(FOLLOW_cp_variable_in_synpred15_Css31486);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(492,24);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:24: ( ws )?
		int alt442=2;
		try { dbg.enterSubRule(442);
		try { dbg.enterDecision(442, decisionCanBacktrack[442]);

		int LA442_0 = input.LA(1);
		if ( (LA442_0==COMMENT||LA442_0==NL||LA442_0==WS) ) {
			alt442=1;
		}
		} finally {dbg.exitDecision(442);}

		switch (alt442) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:24: ws
				{
				dbg.location(492,24);
				pushFollow(FOLLOW_ws_in_synpred15_Css31488);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(442);}
		dbg.location(492,28);
		match(input,COLON,FOLLOW_COLON_in_synpred15_Css31491); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:12: sass_map
		{
		dbg.location(493,12);
		pushFollow(FOLLOW_sass_map_in_synpred16_Css31508);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:28: ( ws )? COMMA
		{
		dbg.location(657,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:28: ( ws )?
		int alt443=2;
		try { dbg.enterSubRule(443);
		try { dbg.enterDecision(443, decisionCanBacktrack[443]);

		int LA443_0 = input.LA(1);
		if ( (LA443_0==COMMENT||LA443_0==NL||LA443_0==WS) ) {
			alt443=1;
		}
		} finally {dbg.exitDecision(443);}

		switch (alt443) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:28: ws
				{
				dbg.location(657,28);
				pushFollow(FOLLOW_ws_in_synpred17_Css32719);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(443);}
		dbg.location(657,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred17_Css32722); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:41: ( function )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:42: function
		{
		dbg.location(665,42);
		pushFollow(FOLLOW_function_in_synpred18_Css32813);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:6: cp_variable_declaration
		{
		dbg.location(693,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred19_Css33113);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:8: sass_map
		{
		dbg.location(694,8);
		pushFollow(FOLLOW_sass_map_in_synpred20_Css33125);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:8: sass_nested_properties
		{
		dbg.location(695,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred21_Css33138);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(696,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt449=3;
		try { dbg.enterSubRule(449);
		try { dbg.enterDecision(449, decisionCanBacktrack[449]);

		try {
			isCyclicDecision = true;
			alt449 = dfa449.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(449);}

		switch (alt449) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(696,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(696,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred22_Css33152); if (state.failed) return;dbg.location(696,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:23: ( ws selectorsGroup )?
				int alt444=2;
				try { dbg.enterSubRule(444);
				try { dbg.enterDecision(444, decisionCanBacktrack[444]);

				try {
					isCyclicDecision = true;
					alt444 = dfa444.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(444);}

				switch (alt444) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:24: ws selectorsGroup
						{
						dbg.location(696,24);
						pushFollow(FOLLOW_ws_in_synpred22_Css33155);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(696,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred22_Css33157);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(444);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(696,48);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(696,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred22_Css33166); if (state.failed) return;dbg.location(696,62);
				pushFollow(FOLLOW_ws_in_synpred22_Css33168);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(696,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred22_Css33170); if (state.failed) return;dbg.location(696,72);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:72: ( ws )?
				int alt445=2;
				try { dbg.enterSubRule(445);
				try { dbg.enterDecision(445, decisionCanBacktrack[445]);

				int LA445_0 = input.LA(1);
				if ( (LA445_0==COMMENT||LA445_0==NL||LA445_0==WS) ) {
					alt445=1;
				}
				} finally {dbg.exitDecision(445);}

				switch (alt445) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:72: ws
						{
						dbg.location(696,72);
						pushFollow(FOLLOW_ws_in_synpred22_Css33172);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(445);}
				dbg.location(696,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred22_Css33175); if (state.failed) return;dbg.location(696,82);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:82: ( ws )?
				int alt446=2;
				try { dbg.enterSubRule(446);
				try { dbg.enterDecision(446, decisionCanBacktrack[446]);

				int LA446_0 = input.LA(1);
				if ( (LA446_0==COMMENT||LA446_0==NL||LA446_0==WS) ) {
					alt446=1;
				}
				} finally {dbg.exitDecision(446);}

				switch (alt446) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:82: ws
						{
						dbg.location(696,82);
						pushFollow(FOLLOW_ws_in_synpred22_Css33177);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(446);}
				dbg.location(696,86);
				match(input,COLON,FOLLOW_COLON_in_synpred22_Css33180); if (state.failed) return;dbg.location(696,92);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:92: ( ws )?
				int alt447=2;
				try { dbg.enterSubRule(447);
				try { dbg.enterDecision(447, decisionCanBacktrack[447]);

				int LA447_0 = input.LA(1);
				if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
					alt447=1;
				}
				} finally {dbg.exitDecision(447);}

				switch (alt447) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:92: ws
						{
						dbg.location(696,92);
						pushFollow(FOLLOW_ws_in_synpred22_Css33182);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(447);}
				dbg.location(696,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred22_Css33185); if (state.failed) return;dbg.location(696,102);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:102: ( ws )?
				int alt448=2;
				try { dbg.enterSubRule(448);
				try { dbg.enterDecision(448, decisionCanBacktrack[448]);

				int LA448_0 = input.LA(1);
				if ( (LA448_0==COMMENT||LA448_0==NL||LA448_0==WS) ) {
					alt448=1;
				}
				} finally {dbg.exitDecision(448);}

				switch (alt448) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:102: ws
						{
						dbg.location(696,102);
						pushFollow(FOLLOW_ws_in_synpred22_Css33187);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(448);}
				dbg.location(696,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred22_Css33190); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:116: selectorsGroup
				{
				dbg.location(696,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred22_Css33195);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(449);}
		dbg.location(696,132);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:132: ( ws )?
		int alt450=2;
		try { dbg.enterSubRule(450);
		try { dbg.enterDecision(450, decisionCanBacktrack[450]);

		int LA450_0 = input.LA(1);
		if ( (LA450_0==COMMENT||LA450_0==NL||LA450_0==WS) ) {
			alt450=1;
		}
		} finally {dbg.exitDecision(450);}

		switch (alt450) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:132: ws
				{
				dbg.location(696,132);
				pushFollow(FOLLOW_ws_in_synpred22_Css33198);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(450);}
		dbg.location(696,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred22_Css33201); if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:8: propertyDeclaration
		{
		dbg.location(697,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred23_Css33213);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(699,8);
		pushFollow(FOLLOW_property_in_synpred24_Css33230);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(699,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:17: ( ws )?
		int alt451=2;
		try { dbg.enterSubRule(451);
		try { dbg.enterDecision(451, decisionCanBacktrack[451]);

		int LA451_0 = input.LA(1);
		if ( (LA451_0==COMMENT||LA451_0==NL||LA451_0==WS) ) {
			alt451=1;
		}
		} finally {dbg.exitDecision(451);}

		switch (alt451) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:17: ws
				{
				dbg.location(699,17);
				pushFollow(FOLLOW_ws_in_synpred24_Css33232);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(451);}
		dbg.location(699,21);
		match(input,COLON,FOLLOW_COLON_in_synpred24_Css33235); if (state.failed) return;dbg.location(699,27);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(452);

		loop452:
		while (true) {
			int alt452=2;
			try { dbg.enterDecision(452, decisionCanBacktrack[452]);

			int LA452_0 = input.LA(1);
			if ( ((LA452_0 >= A && LA452_0 <= L)||(LA452_0 >= LBRACKET && LA452_0 <= R)||(LA452_0 >= RBRACKET && LA452_0 <= SASS_WHILE)||(LA452_0 >= SOLIDUS && LA452_0 <= Z)) ) {
				alt452=1;
			}

			} finally {dbg.exitDecision(452);}

			switch (alt452) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(699,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop452;
			}
		}
		} finally {dbg.exitSubRule(452);}
		dbg.location(699,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:8: cp_mixin_declaration
		{
		dbg.location(700,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred25_Css33264);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:8: cp_mixin_call
		{
		dbg.location(701,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred26_Css33276);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:8: cp_mixin_call
		{
		dbg.location(702,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred27_Css33297);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:66: ( ws )? esPred
		{
		dbg.location(736,66);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:66: ( ws )?
		int alt453=2;
		try { dbg.enterSubRule(453);
		try { dbg.enterDecision(453, decisionCanBacktrack[453]);

		int LA453_0 = input.LA(1);
		if ( (LA453_0==COMMENT||LA453_0==NL||LA453_0==WS) ) {
			alt453=1;
		}
		} finally {dbg.exitDecision(453);}

		switch (alt453) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:66: ws
				{
				dbg.location(736,66);
				pushFollow(FOLLOW_ws_in_synpred28_Css33595);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(453);}
		dbg.location(736,70);
		pushFollow(FOLLOW_esPred_in_synpred28_Css33598);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:5: typeSelector
		{
		dbg.location(737,5);
		pushFollow(FOLLOW_typeSelector_in_synpred29_Css33633);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:35: ( ws )? esPred
		{
		dbg.location(737,35);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:35: ( ws )?
		int alt454=2;
		try { dbg.enterSubRule(454);
		try { dbg.enterDecision(454, decisionCanBacktrack[454]);

		int LA454_0 = input.LA(1);
		if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
			alt454=1;
		}
		} finally {dbg.exitDecision(454);}

		switch (alt454) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:35: ws
				{
				dbg.location(737,35);
				pushFollow(FOLLOW_ws_in_synpred30_Css33640);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(454);}
		dbg.location(737,39);
		pushFollow(FOLLOW_esPred_in_synpred30_Css33643);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(751,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:8: ( IDENT | STAR )?
		int alt455=2;
		try { dbg.enterSubRule(455);
		try { dbg.enterDecision(455, decisionCanBacktrack[455]);

		int LA455_0 = input.LA(1);
		if ( (LA455_0==IDENT||LA455_0==STAR) ) {
			alt455=1;
		}
		} finally {dbg.exitDecision(455);}

		switch (alt455) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(751,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(455);}
		dbg.location(751,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred31_Css33754); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(934,15);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt458=3;
		try { dbg.enterSubRule(458);
		try { dbg.enterDecision(458, decisionCanBacktrack[458]);

		try {
			isCyclicDecision = true;
			alt458 = dfa458.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(458);}

		switch (alt458) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:17: ws
				{
				dbg.location(934,17);
				pushFollow(FOLLOW_ws_in_synpred32_Css35302);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(934,22);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:23: ( ws )? operator ( ws )?
				{
				dbg.location(934,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:23: ( ws )?
				int alt456=2;
				try { dbg.enterSubRule(456);
				try { dbg.enterDecision(456, decisionCanBacktrack[456]);

				int LA456_0 = input.LA(1);
				if ( (LA456_0==COMMENT||LA456_0==NL||LA456_0==WS) ) {
					alt456=1;
				}
				} finally {dbg.exitDecision(456);}

				switch (alt456) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:23: ws
						{
						dbg.location(934,23);
						pushFollow(FOLLOW_ws_in_synpred32_Css35307);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(456);}
				dbg.location(934,27);
				pushFollow(FOLLOW_operator_in_synpred32_Css35310);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(934,36);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:36: ( ws )?
				int alt457=2;
				try { dbg.enterSubRule(457);
				try { dbg.enterDecision(457, decisionCanBacktrack[457]);

				int LA457_0 = input.LA(1);
				if ( (LA457_0==COMMENT||LA457_0==NL||LA457_0==WS) ) {
					alt457=1;
				}
				} finally {dbg.exitDecision(457);}

				switch (alt457) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:36: ws
						{
						dbg.location(934,36);
						pushFollow(FOLLOW_ws_in_synpred32_Css35312);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(457);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(458);}
		dbg.location(934,58);
		pushFollow(FOLLOW_term_in_synpred32_Css35321);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:10: functionName ( ws )? LPAREN
		{
		dbg.location(941,10);
		pushFollow(FOLLOW_functionName_in_synpred33_Css35394);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(941,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:23: ( ws )?
		int alt459=2;
		try { dbg.enterSubRule(459);
		try { dbg.enterDecision(459, decisionCanBacktrack[459]);

		int LA459_0 = input.LA(1);
		if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
			alt459=1;
		}
		} finally {dbg.exitDecision(459);}

		switch (alt459) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:23: ws
				{
				dbg.location(941,23);
				pushFollow(FOLLOW_ws_in_synpred33_Css35396);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(459);}
		dbg.location(941,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred33_Css35399); if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(1004,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred34_Css35952);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(1004,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:26: ( ws )?
		int alt460=2;
		try { dbg.enterSubRule(460);
		try { dbg.enterDecision(460, decisionCanBacktrack[460]);

		int LA460_0 = input.LA(1);
		if ( (LA460_0==COMMENT||LA460_0==NL||LA460_0==WS) ) {
			alt460=1;
		}
		} finally {dbg.exitDecision(460);}

		switch (alt460) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:26: ws
				{
				dbg.location(1004,26);
				pushFollow(FOLLOW_ws_in_synpred34_Css35954);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(460);}
		dbg.location(1004,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:12: cp_expression
		{
		dbg.location(1005,12);
		pushFollow(FOLLOW_cp_expression_in_synpred35_Css35992);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1017,21);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt463=3;
		try { dbg.enterSubRule(463);
		try { dbg.enterDecision(463, decisionCanBacktrack[463]);

		try {
			isCyclicDecision = true;
			alt463 = dfa463.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(463);}

		switch (alt463) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:23: ws
				{
				dbg.location(1017,23);
				pushFollow(FOLLOW_ws_in_synpred36_Css36086);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1017,28);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1017,29);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:29: ( ws )?
				int alt461=2;
				try { dbg.enterSubRule(461);
				try { dbg.enterDecision(461, decisionCanBacktrack[461]);

				int LA461_0 = input.LA(1);
				if ( (LA461_0==COMMENT||LA461_0==NL||LA461_0==WS) ) {
					alt461=1;
				}
				} finally {dbg.exitDecision(461);}

				switch (alt461) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:29: ws
						{
						dbg.location(1017,29);
						pushFollow(FOLLOW_ws_in_synpred36_Css36091);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(461);}
				dbg.location(1017,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred36_Css36094); if (state.failed) return;dbg.location(1017,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:41: ( ws )?
				int alt462=2;
				try { dbg.enterSubRule(462);
				try { dbg.enterDecision(462, decisionCanBacktrack[462]);

				int LA462_0 = input.LA(1);
				if ( (LA462_0==COMMENT||LA462_0==NL||LA462_0==WS) ) {
					alt462=1;
				}
				} finally {dbg.exitDecision(462);}

				switch (alt462) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:41: ws
						{
						dbg.location(1017,41);
						pushFollow(FOLLOW_ws_in_synpred36_Css36096);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(462);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(463);}
		dbg.location(1017,63);
		pushFollow(FOLLOW_term_in_synpred36_Css36105);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1052,7);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:7: ( ws )?
		int alt464=2;
		try { dbg.enterSubRule(464);
		try { dbg.enterDecision(464, decisionCanBacktrack[464]);

		int LA464_0 = input.LA(1);
		if ( (LA464_0==COMMENT||LA464_0==NL||LA464_0==WS) ) {
			alt464=1;
		}
		} finally {dbg.exitDecision(464);}

		switch (alt464) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:7: ws
				{
				dbg.location(1052,7);
				pushFollow(FOLLOW_ws_in_synpred38_Css36545);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(464);}
		dbg.location(1052,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred38_Css36548); if (state.failed) return;dbg.location(1052,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:17: ( ws )?
		int alt465=2;
		try { dbg.enterSubRule(465);
		try { dbg.enterDecision(465, decisionCanBacktrack[465]);

		int LA465_0 = input.LA(1);
		if ( (LA465_0==COMMENT||LA465_0==NL||LA465_0==WS) ) {
			alt465=1;
		}
		} finally {dbg.exitDecision(465);}

		switch (alt465) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:17: ws
				{
				dbg.location(1052,17);
				pushFollow(FOLLOW_ws_in_synpred38_Css36550);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(465);}
		dbg.location(1052,21);
		pushFollow(FOLLOW_cp_expression_in_synpred38_Css36553);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:8: cp_expression_atom
		{
		dbg.location(1068,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred39_Css36620);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:10: ( ws )? cp_expression_operator
		{
		dbg.location(1070,10);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:10: ( ws )?
		int alt466=2;
		try { dbg.enterSubRule(466);
		try { dbg.enterDecision(466, decisionCanBacktrack[466]);

		int LA466_0 = input.LA(1);
		if ( (LA466_0==COMMENT||LA466_0==NL||LA466_0==WS) ) {
			alt466=1;
		}
		} finally {dbg.exitDecision(466);}

		switch (alt466) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:10: ws
				{
				dbg.location(1070,10);
				pushFollow(FOLLOW_ws_in_synpred40_Css36643);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(466);}
		dbg.location(1070,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred40_Css36646);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:12: ( ws )? cp_expression_atom
		{
		dbg.location(1071,12);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:12: ( ws )?
		int alt467=2;
		try { dbg.enterSubRule(467);
		try { dbg.enterDecision(467, decisionCanBacktrack[467]);

		int LA467_0 = input.LA(1);
		if ( (LA467_0==COMMENT||LA467_0==NL||LA467_0==WS) ) {
			alt467=1;
		}
		} finally {dbg.exitDecision(467);}

		switch (alt467) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:12: ws
				{
				dbg.location(1071,12);
				pushFollow(FOLLOW_ws_in_synpred41_Css36672);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(467);}
		dbg.location(1071,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred41_Css36675);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:14: cp_math_expression
		{
		dbg.location(1085,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred42_Css36815);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1112,14);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:14: ( ws )?
		int alt468=2;
		try { dbg.enterSubRule(468);
		try { dbg.enterDecision(468, decisionCanBacktrack[468]);

		int LA468_0 = input.LA(1);
		if ( (LA468_0==COMMENT||LA468_0==NL||LA468_0==WS) ) {
			alt468=1;
		}
		} finally {dbg.exitDecision(468);}

		switch (alt468) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:14: ws
				{
				dbg.location(1112,14);
				pushFollow(FOLLOW_ws_in_synpred43_Css36948);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(468);}
		dbg.location(1112,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:77: ( pseudo )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:78: pseudo
		{
		dbg.location(1144,78);
		pushFollow(FOLLOW_pseudo_in_synpred44_Css37240);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:96: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:97: ( ws )? LPAREN
		{
		dbg.location(1144,97);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:97: ( ws )?
		int alt469=2;
		try { dbg.enterSubRule(469);
		try { dbg.enterDecision(469, decisionCanBacktrack[469]);

		int LA469_0 = input.LA(1);
		if ( (LA469_0==COMMENT||LA469_0==NL||LA469_0==WS) ) {
			alt469=1;
		}
		} finally {dbg.exitDecision(469);}

		switch (alt469) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:97: ws
				{
				dbg.location(1144,97);
				pushFollow(FOLLOW_ws_in_synpred45_Css37248);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(469);}
		dbg.location(1144,101);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred45_Css37251); if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:26: webkitKeyframeSelectors
		{
		dbg.location(1153,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred46_Css37367);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:20: ( ws )? COMMA
		{
		dbg.location(1331,20);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:20: ( ws )?
		int alt470=2;
		try { dbg.enterSubRule(470);
		try { dbg.enterDecision(470, decisionCanBacktrack[470]);

		int LA470_0 = input.LA(1);
		if ( (LA470_0==COMMENT||LA470_0==NL||LA470_0==WS) ) {
			alt470=1;
		}
		} finally {dbg.exitDecision(470);}

		switch (alt470) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:20: ws
				{
				dbg.location(1331,20);
				pushFollow(FOLLOW_ws_in_synpred47_Css38599);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(470);}
		dbg.location(1331,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred47_Css38602); if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// Delegated rules

	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA24 dfa24 = new DFA24(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA46 dfa46 = new DFA46(this);
	protected DFA50 dfa50 = new DFA50(this);
	protected DFA55 dfa55 = new DFA55(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA63 dfa63 = new DFA63(this);
	protected DFA71 dfa71 = new DFA71(this);
	protected DFA104 dfa104 = new DFA104(this);
	protected DFA111 dfa111 = new DFA111(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA135 dfa135 = new DFA135(this);
	protected DFA137 dfa137 = new DFA137(this);
	protected DFA142 dfa142 = new DFA142(this);
	protected DFA147 dfa147 = new DFA147(this);
	protected DFA153 dfa153 = new DFA153(this);
	protected DFA148 dfa148 = new DFA148(this);
	protected DFA170 dfa170 = new DFA170(this);
	protected DFA163 dfa163 = new DFA163(this);
	protected DFA162 dfa162 = new DFA162(this);
	protected DFA167 dfa167 = new DFA167(this);
	protected DFA172 dfa172 = new DFA172(this);
	protected DFA174 dfa174 = new DFA174(this);
	protected DFA178 dfa178 = new DFA178(this);
	protected DFA186 dfa186 = new DFA186(this);
	protected DFA185 dfa185 = new DFA185(this);
	protected DFA184 dfa184 = new DFA184(this);
	protected DFA190 dfa190 = new DFA190(this);
	protected DFA193 dfa193 = new DFA193(this);
	protected DFA216 dfa216 = new DFA216(this);
	protected DFA232 dfa232 = new DFA232(this);
	protected DFA239 dfa239 = new DFA239(this);
	protected DFA238 dfa238 = new DFA238(this);
	protected DFA251 dfa251 = new DFA251(this);
	protected DFA261 dfa261 = new DFA261(this);
	protected DFA260 dfa260 = new DFA260(this);
	protected DFA270 dfa270 = new DFA270(this);
	protected DFA275 dfa275 = new DFA275(this);
	protected DFA281 dfa281 = new DFA281(this);
	protected DFA295 dfa295 = new DFA295(this);
	protected DFA300 dfa300 = new DFA300(this);
	protected DFA307 dfa307 = new DFA307(this);
	protected DFA311 dfa311 = new DFA311(this);
	protected DFA322 dfa322 = new DFA322(this);
	protected DFA324 dfa324 = new DFA324(this);
	protected DFA337 dfa337 = new DFA337(this);
	protected DFA340 dfa340 = new DFA340(this);
	protected DFA356 dfa356 = new DFA356(this);
	protected DFA383 dfa383 = new DFA383(this);
	protected DFA389 dfa389 = new DFA389(this);
	protected DFA397 dfa397 = new DFA397(this);
	protected DFA396 dfa396 = new DFA396(this);
	protected DFA400 dfa400 = new DFA400(this);
	protected DFA405 dfa405 = new DFA405(this);
	protected DFA425 dfa425 = new DFA425(this);
	protected DFA432 dfa432 = new DFA432(this);
	protected DFA427 dfa427 = new DFA427(this);
	protected DFA449 dfa449 = new DFA449(this);
	protected DFA444 dfa444 = new DFA444(this);
	protected DFA458 dfa458 = new DFA458(this);
	protected DFA463 dfa463 = new DFA463(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "352:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2\2\uffff"+
			"\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff\1\2\6\uffff"+
			"\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "354:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\3\uffff\1\1\5\uffff\3\1\7\uffff\1\1\2\uffff"+
			"\2\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff\1\1\6\uffff"+
			"\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff\3\1\2\uffff\3\1\1\uffff"+
			"\2\1\2\uffff\4\1\1\uffff\3\1\1\uffff\5\1\1\uffff\1\1\2\uffff\1\1\1\uffff"+
			"\5\1\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 361:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA32_eotS =
		"\10\uffff";
	static final String DFA32_eofS =
		"\10\uffff";
	static final String DFA32_minS =
		"\1\64\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_maxS =
		"\1\64\2\u0092\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA32_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\1",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\3\12\uffff\1\3\4\uffff\1\2",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\5\12\uffff\1\5\4\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "389:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA32_3 = input.LA(1);
						 
						int index32_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_3);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA32_5 = input.LA(1);
						 
						int index32_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 32, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA24_eotS =
		"\4\uffff";
	static final String DFA24_eofS =
		"\2\2\2\uffff";
	static final String DFA24_minS =
		"\2\6\2\uffff";
	static final String DFA24_maxS =
		"\2\u0092\2\uffff";
	static final String DFA24_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA24_specialS =
		"\4\uffff}>";
	static final String[] DFA24_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2\4\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2\4\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\5\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\1",
			"",
			""
	};

	static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
	static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
	static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
	static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
	static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
	static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
	static final short[][] DFA24_transition;

	static {
		int numStates = DFA24_transitionS.length;
		DFA24_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
		}
	}

	protected class DFA24 extends DFA {

		public DFA24(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 24;
			this.eot = DFA24_eot;
			this.eof = DFA24_eof;
			this.min = DFA24_min;
			this.max = DFA24_max;
			this.accept = DFA24_accept;
			this.special = DFA24_special;
			this.transition = DFA24_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 394:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\6\uffff";
	static final String DFA38_eofS =
		"\6\uffff";
	static final String DFA38_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA38_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA38_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "411:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA38_2 = input.LA(1);
						 
						int index38_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA38_4 = input.LA(1);
						 
						int index38_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 38, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA44_eotS =
		"\4\uffff";
	static final String DFA44_eofS =
		"\4\uffff";
	static final String DFA44_minS =
		"\2\6\2\uffff";
	static final String DFA44_maxS =
		"\2\u0092\2\uffff";
	static final String DFA44_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\4\uffff}>";
	static final String[] DFA44_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "422:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA46_eotS =
		"\4\uffff";
	static final String DFA46_eofS =
		"\4\uffff";
	static final String DFA46_minS =
		"\2\6\2\uffff";
	static final String DFA46_maxS =
		"\2\u0092\2\uffff";
	static final String DFA46_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA46_specialS =
		"\4\uffff}>";
	static final String[] DFA46_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
	static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
	static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
	static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
	static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
	static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
	static final short[][] DFA46_transition;

	static {
		int numStates = DFA46_transitionS.length;
		DFA46_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
		}
	}

	protected class DFA46 extends DFA {

		public DFA46(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 46;
			this.eot = DFA46_eot;
			this.eof = DFA46_eof;
			this.min = DFA46_min;
			this.max = DFA46_max;
			this.accept = DFA46_accept;
			this.special = DFA46_special;
			this.transition = DFA46_transition;
		}
		@Override
		public String getDescription() {
			return "423:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA50_eotS =
		"\4\uffff";
	static final String DFA50_eofS =
		"\2\2\2\uffff";
	static final String DFA50_minS =
		"\2\6\2\uffff";
	static final String DFA50_maxS =
		"\2\u0092\2\uffff";
	static final String DFA50_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA50_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA50_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA50_1 = input.LA(1);
						 
						int index50_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_1==EOF||(LA50_1 >= AT_IDENT && LA50_1 <= AT_SIGN)||(LA50_1 >= BOTTOMCENTER_SYM && LA50_1 <= BOTTOMRIGHT_SYM)||(LA50_1 >= CHARSET_SYM && LA50_1 <= COLON)||LA50_1==COUNTER_STYLE_SYM||(LA50_1 >= DCOLON && LA50_1 <= DOT)||LA50_1==FONT_FACE_SYM||(LA50_1 >= GEN && LA50_1 <= GREATER)||(LA50_1 >= HASH && LA50_1 <= HASH_SYMBOL)||LA50_1==IDENT||LA50_1==IMPORT_SYM||(LA50_1 >= LBRACE && LA50_1 <= LEFTTOP_SYM)||LA50_1==LESS_AND||(LA50_1 >= MEDIA_SYM && LA50_1 <= MOZ_DOCUMENT_SYM)||LA50_1==NAMESPACE_SYM||LA50_1==PAGE_SYM||(LA50_1 >= PIPE && LA50_1 <= PLUS)||LA50_1==RBRACE||(LA50_1 >= RIGHTBOTTOM_SYM && LA50_1 <= RIGHTTOP_SYM)||(LA50_1 >= SASS_AT_ROOT && LA50_1 <= SASS_DEBUG)||(LA50_1 >= SASS_EACH && LA50_1 <= SASS_ELSE)||(LA50_1 >= SASS_ERROR && LA50_1 <= SASS_FUNCTION)||(LA50_1 >= SASS_IF && LA50_1 <= SASS_MIXIN)||(LA50_1 >= SASS_RETURN && LA50_1 <= SEMI)||LA50_1==STAR||LA50_1==TILDE||(LA50_1 >= TOPCENTER_SYM && LA50_1 <= TOPRIGHT_SYM)||LA50_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_1==COMMENT||LA50_1==NL||LA50_1==WS) ) {s = 1;}
						else if ( (LA50_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index50_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA50_0 = input.LA(1);
						 
						int index50_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {s = 1;}
						else if ( (LA50_0==EOF||(LA50_0 >= AT_IDENT && LA50_0 <= AT_SIGN)||(LA50_0 >= BOTTOMCENTER_SYM && LA50_0 <= BOTTOMRIGHT_SYM)||(LA50_0 >= CHARSET_SYM && LA50_0 <= COLON)||LA50_0==COUNTER_STYLE_SYM||(LA50_0 >= DCOLON && LA50_0 <= DOT)||LA50_0==FONT_FACE_SYM||(LA50_0 >= GEN && LA50_0 <= GREATER)||(LA50_0 >= HASH && LA50_0 <= HASH_SYMBOL)||LA50_0==IDENT||LA50_0==IMPORT_SYM||(LA50_0 >= LBRACE && LA50_0 <= LEFTTOP_SYM)||LA50_0==LESS_AND||(LA50_0 >= MEDIA_SYM && LA50_0 <= MOZ_DOCUMENT_SYM)||LA50_0==NAMESPACE_SYM||LA50_0==PAGE_SYM||(LA50_0 >= PIPE && LA50_0 <= PLUS)||LA50_0==RBRACE||(LA50_0 >= RIGHTBOTTOM_SYM && LA50_0 <= RIGHTTOP_SYM)||(LA50_0 >= SASS_AT_ROOT && LA50_0 <= SASS_DEBUG)||(LA50_0 >= SASS_EACH && LA50_0 <= SASS_ELSE)||(LA50_0 >= SASS_EXTEND && LA50_0 <= SASS_FUNCTION)||(LA50_0 >= SASS_IF && LA50_0 <= SASS_MIXIN)||(LA50_0 >= SASS_RETURN && LA50_0 <= SEMI)||LA50_0==STAR||LA50_0==TILDE||(LA50_0 >= TOPCENTER_SYM && LA50_0 <= TOPRIGHT_SYM)||LA50_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index50_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 50, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA55_eotS =
		"\10\uffff";
	static final String DFA55_eofS =
		"\2\2\6\uffff";
	static final String DFA55_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA55_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA55_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA55_specialS =
		"\10\uffff}>";
	static final String[] DFA55_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\3\2\13\uffff\1\2\2\uffff\2\2\12\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\3\2\13\uffff\1\2\2\uffff\2\2\12\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1"+
			"\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\5\13\uffff"+
			"\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1"+
			"\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\7\13\uffff"+
			"\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
	static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
	static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
	static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
	static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
	static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
	static final short[][] DFA55_transition;

	static {
		int numStates = DFA55_transitionS.length;
		DFA55_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
		}
	}

	protected class DFA55 extends DFA {

		public DFA55(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 55;
			this.eot = DFA55_eot;
			this.eof = DFA55_eof;
			this.min = DFA55_min;
			this.max = DFA55_max;
			this.accept = DFA55_accept;
			this.special = DFA55_special;
			this.transition = DFA55_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 444:43: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA58_eotS =
		"\10\uffff";
	static final String DFA58_eofS =
		"\2\2\6\uffff";
	static final String DFA58_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA58_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA58_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA58_specialS =
		"\10\uffff}>";
	static final String[] DFA58_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\3\2\13\uffff\1\2\2\uffff\2\2\12\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\3\2\13\uffff\1\2\2\uffff\2\2\12\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24\uffff\1\2\20"+
			"\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1"+
			"\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\5\13\uffff"+
			"\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1"+
			"\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\7\13\uffff"+
			"\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 445:23: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA63_eotS =
		"\4\uffff";
	static final String DFA63_eofS =
		"\4\uffff";
	static final String DFA63_minS =
		"\2\23\2\uffff";
	static final String DFA63_maxS =
		"\2\u0092\2\uffff";
	static final String DFA63_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA63_specialS =
		"\4\uffff}>";
	static final String[] DFA63_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"",
			""
	};

	static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
	static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
	static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
	static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
	static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
	static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
	static final short[][] DFA63_transition;

	static {
		int numStates = DFA63_transitionS.length;
		DFA63_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
		}
	}

	protected class DFA63 extends DFA {

		public DFA63(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 63;
			this.eot = DFA63_eot;
			this.eof = DFA63_eof;
			this.min = DFA63_min;
			this.max = DFA63_max;
			this.accept = DFA63_accept;
			this.special = DFA63_special;
			this.transition = DFA63_transition;
		}
		@Override
		public String getDescription() {
			return "459:29: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA71_eotS =
		"\6\uffff";
	static final String DFA71_eofS =
		"\2\3\4\uffff";
	static final String DFA71_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA71_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA71_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
	static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
	static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
	static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
	static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
	static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
	static final short[][] DFA71_transition;

	static {
		int numStates = DFA71_transitionS.length;
		DFA71_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
		}
	}

	protected class DFA71 extends DFA {

		public DFA71(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}
		@Override
		public String getDescription() {
			return "479:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA71_2 = input.LA(1);
						 
						int index71_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA71_4 = input.LA(1);
						 
						int index71_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 71, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA104_eotS =
		"\4\uffff";
	static final String DFA104_eofS =
		"\1\2\3\uffff";
	static final String DFA104_minS =
		"\2\24\2\uffff";
	static final String DFA104_maxS =
		"\2\u0092\2\uffff";
	static final String DFA104_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA104_specialS =
		"\4\uffff}>";
	static final String[] DFA104_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
	static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
	static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
	static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
	static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
	static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
	static final short[][] DFA104_transition;

	static {
		int numStates = DFA104_transitionS.length;
		DFA104_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
		}
	}

	protected class DFA104 extends DFA {

		public DFA104(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 104;
			this.eot = DFA104_eot;
			this.eof = DFA104_eof;
			this.min = DFA104_min;
			this.max = DFA104_max;
			this.accept = DFA104_accept;
			this.special = DFA104_special;
			this.transition = DFA104_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 561:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA111_eotS =
		"\5\uffff";
	static final String DFA111_eofS =
		"\5\uffff";
	static final String DFA111_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA111_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA111_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA111_specialS =
		"\5\uffff}>";
	static final String[] DFA111_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
	static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
	static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
	static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
	static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
	static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
	static final short[][] DFA111_transition;

	static {
		int numStates = DFA111_transitionS.length;
		DFA111_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
		}
	}

	protected class DFA111 extends DFA {

		public DFA111(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 111;
			this.eot = DFA111_eot;
			this.eof = DFA111_eof;
			this.min = DFA111_min;
			this.max = DFA111_max;
			this.accept = DFA111_accept;
			this.special = DFA111_special;
			this.transition = DFA111_transition;
		}
		@Override
		public String getDescription() {
			return "569:14: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\5\uffff";
	static final String DFA115_eofS =
		"\5\uffff";
	static final String DFA115_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA115_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA115_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA115_specialS =
		"\5\uffff}>";
	static final String[] DFA115_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "569:60: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA135_eotS =
		"\5\uffff";
	static final String DFA135_eofS =
		"\2\2\3\uffff";
	static final String DFA135_minS =
		"\2\6\3\uffff";
	static final String DFA135_maxS =
		"\2\u0092\3\uffff";
	static final String DFA135_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA135_specialS =
		"\5\uffff}>";
	static final String[] DFA135_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
	static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
	static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
	static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
	static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
	static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
	static final short[][] DFA135_transition;

	static {
		int numStates = DFA135_transitionS.length;
		DFA135_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
		}
	}

	protected class DFA135 extends DFA {

		public DFA135(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 135;
			this.eot = DFA135_eot;
			this.eof = DFA135_eof;
			this.min = DFA135_min;
			this.max = DFA135_max;
			this.accept = DFA135_accept;
			this.special = DFA135_special;
			this.transition = DFA135_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 646:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA137_eotS =
		"\6\uffff";
	static final String DFA137_eofS =
		"\6\uffff";
	static final String DFA137_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA137_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA137_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA137_eot = DFA.unpackEncodedString(DFA137_eotS);
	static final short[] DFA137_eof = DFA.unpackEncodedString(DFA137_eofS);
	static final char[] DFA137_min = DFA.unpackEncodedStringToUnsignedChars(DFA137_minS);
	static final char[] DFA137_max = DFA.unpackEncodedStringToUnsignedChars(DFA137_maxS);
	static final short[] DFA137_accept = DFA.unpackEncodedString(DFA137_acceptS);
	static final short[] DFA137_special = DFA.unpackEncodedString(DFA137_specialS);
	static final short[][] DFA137_transition;

	static {
		int numStates = DFA137_transitionS.length;
		DFA137_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA137_transition[i] = DFA.unpackEncodedString(DFA137_transitionS[i]);
		}
	}

	protected class DFA137 extends DFA {

		public DFA137(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 137;
			this.eot = DFA137_eot;
			this.eof = DFA137_eof;
			this.min = DFA137_min;
			this.max = DFA137_max;
			this.accept = DFA137_accept;
			this.special = DFA137_special;
			this.transition = DFA137_transition;
		}
		@Override
		public String getDescription() {
			return "657:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA137_2 = input.LA(1);
						 
						int index137_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred17_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA137_4 = input.LA(1);
						 
						int index137_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred17_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 137, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA142_eotS =
		"\4\uffff";
	static final String DFA142_eofS =
		"\4\uffff";
	static final String DFA142_minS =
		"\2\23\2\uffff";
	static final String DFA142_maxS =
		"\2\u0092\2\uffff";
	static final String DFA142_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA142_specialS =
		"\4\uffff}>";
	static final String[] DFA142_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\60\uffff\1\3\17\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\60\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA142_eot = DFA.unpackEncodedString(DFA142_eotS);
	static final short[] DFA142_eof = DFA.unpackEncodedString(DFA142_eofS);
	static final char[] DFA142_min = DFA.unpackEncodedStringToUnsignedChars(DFA142_minS);
	static final char[] DFA142_max = DFA.unpackEncodedStringToUnsignedChars(DFA142_maxS);
	static final short[] DFA142_accept = DFA.unpackEncodedString(DFA142_acceptS);
	static final short[] DFA142_special = DFA.unpackEncodedString(DFA142_specialS);
	static final short[][] DFA142_transition;

	static {
		int numStates = DFA142_transitionS.length;
		DFA142_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA142_transition[i] = DFA.unpackEncodedString(DFA142_transitionS[i]);
		}
	}

	protected class DFA142 extends DFA {

		public DFA142(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 142;
			this.eot = DFA142_eot;
			this.eof = DFA142_eof;
			this.min = DFA142_min;
			this.max = DFA142_max;
			this.accept = DFA142_accept;
			this.special = DFA142_special;
			this.transition = DFA142_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 665:25: ( ( ws )? STRING )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA147_eotS =
		"\4\uffff";
	static final String DFA147_eofS =
		"\4\uffff";
	static final String DFA147_minS =
		"\2\6\2\uffff";
	static final String DFA147_maxS =
		"\2\u0092\2\uffff";
	static final String DFA147_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA147_specialS =
		"\4\uffff}>";
	static final String[] DFA147_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3\3"+
			"\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1"+
			"\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA147_eot = DFA.unpackEncodedString(DFA147_eotS);
	static final short[] DFA147_eof = DFA.unpackEncodedString(DFA147_eofS);
	static final char[] DFA147_min = DFA.unpackEncodedStringToUnsignedChars(DFA147_minS);
	static final char[] DFA147_max = DFA.unpackEncodedStringToUnsignedChars(DFA147_maxS);
	static final short[] DFA147_accept = DFA.unpackEncodedString(DFA147_acceptS);
	static final short[] DFA147_special = DFA.unpackEncodedString(DFA147_specialS);
	static final short[][] DFA147_transition;

	static {
		int numStates = DFA147_transitionS.length;
		DFA147_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA147_transition[i] = DFA.unpackEncodedString(DFA147_transitionS[i]);
		}
	}

	protected class DFA147 extends DFA {

		public DFA147(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 147;
			this.eot = DFA147_eot;
			this.eof = DFA147_eof;
			this.min = DFA147_min;
			this.max = DFA147_max;
			this.accept = DFA147_accept;
			this.special = DFA147_special;
			this.transition = DFA147_transition;
		}
		@Override
		public String getDescription() {
			return "665:110: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA153_eotS =
		"\6\uffff";
	static final String DFA153_eofS =
		"\6\uffff";
	static final String DFA153_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA153_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA153_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA153_specialS =
		"\6\uffff}>";
	static final String[] DFA153_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\2"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15\uffff\1\3",
			"",
			""
	};

	static final short[] DFA153_eot = DFA.unpackEncodedString(DFA153_eotS);
	static final short[] DFA153_eof = DFA.unpackEncodedString(DFA153_eofS);
	static final char[] DFA153_min = DFA.unpackEncodedStringToUnsignedChars(DFA153_minS);
	static final char[] DFA153_max = DFA.unpackEncodedStringToUnsignedChars(DFA153_maxS);
	static final short[] DFA153_accept = DFA.unpackEncodedString(DFA153_acceptS);
	static final short[] DFA153_special = DFA.unpackEncodedString(DFA153_specialS);
	static final short[][] DFA153_transition;

	static {
		int numStates = DFA153_transitionS.length;
		DFA153_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA153_transition[i] = DFA.unpackEncodedString(DFA153_transitionS[i]);
		}
	}

	protected class DFA153 extends DFA {

		public DFA153(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 153;
			this.eot = DFA153_eot;
			this.eof = DFA153_eof;
			this.min = DFA153_min;
			this.max = DFA153_max;
			this.accept = DFA153_accept;
			this.special = DFA153_special;
			this.transition = DFA153_transition;
		}
		@Override
		public String getDescription() {
			return "670:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA148_eotS =
		"\4\uffff";
	static final String DFA148_eofS =
		"\4\uffff";
	static final String DFA148_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA148_maxS =
		"\2\u0092\2\uffff";
	static final String DFA148_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA148_specialS =
		"\4\uffff}>";
	static final String[] DFA148_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\2"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA148_eot = DFA.unpackEncodedString(DFA148_eotS);
	static final short[] DFA148_eof = DFA.unpackEncodedString(DFA148_eofS);
	static final char[] DFA148_min = DFA.unpackEncodedStringToUnsignedChars(DFA148_minS);
	static final char[] DFA148_max = DFA.unpackEncodedStringToUnsignedChars(DFA148_maxS);
	static final short[] DFA148_accept = DFA.unpackEncodedString(DFA148_acceptS);
	static final short[] DFA148_special = DFA.unpackEncodedString(DFA148_specialS);
	static final short[][] DFA148_transition;

	static {
		int numStates = DFA148_transitionS.length;
		DFA148_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA148_transition[i] = DFA.unpackEncodedString(DFA148_transitionS[i]);
		}
	}

	protected class DFA148 extends DFA {

		public DFA148(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 148;
			this.eot = DFA148_eot;
			this.eof = DFA148_eof;
			this.min = DFA148_min;
			this.max = DFA148_max;
			this.accept = DFA148_accept;
			this.special = DFA148_special;
			this.transition = DFA148_transition;
		}
		@Override
		public String getDescription() {
			return "671:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA170_eotS =
		"\5\uffff";
	static final String DFA170_eofS =
		"\5\uffff";
	static final String DFA170_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA170_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA170_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA170_specialS =
		"\5\uffff}>";
	static final String[] DFA170_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2\2\uffff"+
			"\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff\1\2\6\uffff"+
			"\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\3",
			""
	};

	static final short[] DFA170_eot = DFA.unpackEncodedString(DFA170_eotS);
	static final short[] DFA170_eof = DFA.unpackEncodedString(DFA170_eofS);
	static final char[] DFA170_min = DFA.unpackEncodedStringToUnsignedChars(DFA170_minS);
	static final char[] DFA170_max = DFA.unpackEncodedStringToUnsignedChars(DFA170_maxS);
	static final short[] DFA170_accept = DFA.unpackEncodedString(DFA170_acceptS);
	static final short[] DFA170_special = DFA.unpackEncodedString(DFA170_specialS);
	static final short[][] DFA170_transition;

	static {
		int numStates = DFA170_transitionS.length;
		DFA170_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA170_transition[i] = DFA.unpackEncodedString(DFA170_transitionS[i]);
		}
	}

	protected class DFA170 extends DFA {

		public DFA170(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 170;
			this.eot = DFA170_eot;
			this.eof = DFA170_eof;
			this.min = DFA170_min;
			this.max = DFA170_max;
			this.accept = DFA170_accept;
			this.special = DFA170_special;
			this.transition = DFA170_transition;
		}
		@Override
		public String getDescription() {
			return "685:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA163_eotS =
		"\6\uffff";
	static final String DFA163_eofS =
		"\6\uffff";
	static final String DFA163_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA163_maxS =
		"\3\u0092\2\uffff\1\u0092";
	static final String DFA163_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA163_specialS =
		"\6\uffff}>";
	static final String[] DFA163_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff\3\4\1\uffff"+
			"\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff\3\4\1\uffff"+
			"\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff\3\4\1\uffff"+
			"\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\5"
	};

	static final short[] DFA163_eot = DFA.unpackEncodedString(DFA163_eotS);
	static final short[] DFA163_eof = DFA.unpackEncodedString(DFA163_eofS);
	static final char[] DFA163_min = DFA.unpackEncodedStringToUnsignedChars(DFA163_minS);
	static final char[] DFA163_max = DFA.unpackEncodedStringToUnsignedChars(DFA163_maxS);
	static final short[] DFA163_accept = DFA.unpackEncodedString(DFA163_acceptS);
	static final short[] DFA163_special = DFA.unpackEncodedString(DFA163_specialS);
	static final short[][] DFA163_transition;

	static {
		int numStates = DFA163_transitionS.length;
		DFA163_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA163_transition[i] = DFA.unpackEncodedString(DFA163_transitionS[i]);
		}
	}

	protected class DFA163 extends DFA {

		public DFA163(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 163;
			this.eot = DFA163_eot;
			this.eof = DFA163_eof;
			this.min = DFA163_min;
			this.max = DFA163_max;
			this.accept = DFA163_accept;
			this.special = DFA163_special;
			this.transition = DFA163_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 687:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA162_eotS =
		"\4\uffff";
	static final String DFA162_eofS =
		"\4\uffff";
	static final String DFA162_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA162_maxS =
		"\2\u0092\2\uffff";
	static final String DFA162_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA162_specialS =
		"\4\uffff}>";
	static final String[] DFA162_transitionS = {
			"\1\1\73\uffff\1\1\55\uffff\1\2\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\6\uffff\3\3"+
			"\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff\4\3\1\2\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA162_eot = DFA.unpackEncodedString(DFA162_eotS);
	static final short[] DFA162_eof = DFA.unpackEncodedString(DFA162_eofS);
	static final char[] DFA162_min = DFA.unpackEncodedStringToUnsignedChars(DFA162_minS);
	static final char[] DFA162_max = DFA.unpackEncodedStringToUnsignedChars(DFA162_maxS);
	static final short[] DFA162_accept = DFA.unpackEncodedString(DFA162_acceptS);
	static final short[] DFA162_special = DFA.unpackEncodedString(DFA162_specialS);
	static final short[][] DFA162_transition;

	static {
		int numStates = DFA162_transitionS.length;
		DFA162_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA162_transition[i] = DFA.unpackEncodedString(DFA162_transitionS[i]);
		}
	}

	protected class DFA162 extends DFA {

		public DFA162(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 162;
			this.eot = DFA162_eot;
			this.eof = DFA162_eof;
			this.min = DFA162_min;
			this.max = DFA162_max;
			this.accept = DFA162_accept;
			this.special = DFA162_special;
			this.transition = DFA162_transition;
		}
		@Override
		public String getDescription() {
			return "687:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA167_eotS =
		"\5\uffff";
	static final String DFA167_eofS =
		"\5\uffff";
	static final String DFA167_minS =
		"\2\25\3\uffff";
	static final String DFA167_maxS =
		"\2\u0092\3\uffff";
	static final String DFA167_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA167_specialS =
		"\5\uffff}>";
	static final String[] DFA167_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\1\1\73\uffff\1\1\17\uffff\1\4\35\uffff\1\2\22\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA167_eot = DFA.unpackEncodedString(DFA167_eotS);
	static final short[] DFA167_eof = DFA.unpackEncodedString(DFA167_eofS);
	static final char[] DFA167_min = DFA.unpackEncodedStringToUnsignedChars(DFA167_minS);
	static final char[] DFA167_max = DFA.unpackEncodedStringToUnsignedChars(DFA167_maxS);
	static final short[] DFA167_accept = DFA.unpackEncodedString(DFA167_acceptS);
	static final short[] DFA167_special = DFA.unpackEncodedString(DFA167_specialS);
	static final short[][] DFA167_transition;

	static {
		int numStates = DFA167_transitionS.length;
		DFA167_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA167_transition[i] = DFA.unpackEncodedString(DFA167_transitionS[i]);
		}
	}

	protected class DFA167 extends DFA {

		public DFA167(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 167;
			this.eot = DFA167_eot;
			this.eof = DFA167_eof;
			this.min = DFA167_min;
			this.max = DFA167_max;
			this.accept = DFA167_accept;
			this.special = DFA167_special;
			this.transition = DFA167_transition;
		}
		@Override
		public String getDescription() {
			return "687:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA172_eotS =
		"\4\uffff";
	static final String DFA172_eofS =
		"\4\uffff";
	static final String DFA172_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA172_maxS =
		"\2\u0092\2\uffff";
	static final String DFA172_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA172_specialS =
		"\4\uffff}>";
	static final String[] DFA172_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
	static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
	static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
	static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
	static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
	static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
	static final short[][] DFA172_transition;

	static {
		int numStates = DFA172_transitionS.length;
		DFA172_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
		}
	}

	protected class DFA172 extends DFA {

		public DFA172(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 172;
			this.eot = DFA172_eot;
			this.eof = DFA172_eof;
			this.min = DFA172_min;
			this.max = DFA172_max;
			this.accept = DFA172_accept;
			this.special = DFA172_special;
			this.transition = DFA172_transition;
		}
		@Override
		public String getDescription() {
			return "701:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA174_eotS =
		"\4\uffff";
	static final String DFA174_eofS =
		"\4\uffff";
	static final String DFA174_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA174_maxS =
		"\2\u0092\2\uffff";
	static final String DFA174_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA174_specialS =
		"\4\uffff}>";
	static final String[] DFA174_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA174_eot = DFA.unpackEncodedString(DFA174_eotS);
	static final short[] DFA174_eof = DFA.unpackEncodedString(DFA174_eofS);
	static final char[] DFA174_min = DFA.unpackEncodedStringToUnsignedChars(DFA174_minS);
	static final char[] DFA174_max = DFA.unpackEncodedStringToUnsignedChars(DFA174_maxS);
	static final short[] DFA174_accept = DFA.unpackEncodedString(DFA174_acceptS);
	static final short[] DFA174_special = DFA.unpackEncodedString(DFA174_specialS);
	static final short[][] DFA174_transition;

	static {
		int numStates = DFA174_transitionS.length;
		DFA174_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA174_transition[i] = DFA.unpackEncodedString(DFA174_transitionS[i]);
		}
	}

	protected class DFA174 extends DFA {

		public DFA174(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 174;
			this.eot = DFA174_eot;
			this.eof = DFA174_eof;
			this.min = DFA174_min;
			this.max = DFA174_max;
			this.accept = DFA174_accept;
			this.special = DFA174_special;
			this.transition = DFA174_transition;
		}
		@Override
		public String getDescription() {
			return "702:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA178_eotS =
		"\6\uffff";
	static final String DFA178_eofS =
		"\6\uffff";
	static final String DFA178_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA178_maxS =
		"\3\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA178_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA178_specialS =
		"\6\uffff}>";
	static final String[] DFA178_transitionS = {
			"\1\1\1\2\44\uffff\1\3\26\uffff\1\2\26\uffff\1\3\51\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\3\5\12\uffff\2\5\2\uffff\2\5\2"+
			"\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13\uffff"+
			"\2\5\11\uffff\1\3\12\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			"\1\5\1\2\44\uffff\1\3\26\uffff\1\2\100\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\3\5\12\uffff\2\5\2\uffff\2\5\2"+
			"\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13\uffff"+
			"\2\5\24\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			""
	};

	static final short[] DFA178_eot = DFA.unpackEncodedString(DFA178_eotS);
	static final short[] DFA178_eof = DFA.unpackEncodedString(DFA178_eofS);
	static final char[] DFA178_min = DFA.unpackEncodedStringToUnsignedChars(DFA178_minS);
	static final char[] DFA178_max = DFA.unpackEncodedStringToUnsignedChars(DFA178_maxS);
	static final short[] DFA178_accept = DFA.unpackEncodedString(DFA178_acceptS);
	static final short[] DFA178_special = DFA.unpackEncodedString(DFA178_specialS);
	static final short[][] DFA178_transition;

	static {
		int numStates = DFA178_transitionS.length;
		DFA178_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA178_transition[i] = DFA.unpackEncodedString(DFA178_transitionS[i]);
		}
	}

	protected class DFA178 extends DFA {

		public DFA178(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 178;
			this.eot = DFA178_eot;
			this.eof = DFA178_eof;
			this.min = DFA178_min;
			this.max = DFA178_max;
			this.accept = DFA178_accept;
			this.special = DFA178_special;
			this.transition = DFA178_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 720:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA186_eotS =
		"\5\uffff";
	static final String DFA186_eofS =
		"\5\uffff";
	static final String DFA186_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA186_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA186_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA186_specialS =
		"\5\uffff}>";
	static final String[] DFA186_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\1\2\1\1\2\uffff\2\2\2\uffff\1"+
			"\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1\24\uffff\1\2"+
			"\15\uffff\1\2\2\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\3\2\12\uffff\1\2\3\uffff\2\2\2\uffff"+
			"\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1\2"+
			"\12\uffff\1\4\12\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\3\2\12\uffff\1\2\3\uffff\2\2\2\uffff"+
			"\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1\2"+
			"\25\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			""
	};

	static final short[] DFA186_eot = DFA.unpackEncodedString(DFA186_eotS);
	static final short[] DFA186_eof = DFA.unpackEncodedString(DFA186_eofS);
	static final char[] DFA186_min = DFA.unpackEncodedStringToUnsignedChars(DFA186_minS);
	static final char[] DFA186_max = DFA.unpackEncodedStringToUnsignedChars(DFA186_maxS);
	static final short[] DFA186_accept = DFA.unpackEncodedString(DFA186_acceptS);
	static final short[] DFA186_special = DFA.unpackEncodedString(DFA186_specialS);
	static final short[][] DFA186_transition;

	static {
		int numStates = DFA186_transitionS.length;
		DFA186_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA186_transition[i] = DFA.unpackEncodedString(DFA186_transitionS[i]);
		}
	}

	protected class DFA186 extends DFA {

		public DFA186(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 186;
			this.eot = DFA186_eot;
			this.eof = DFA186_eof;
			this.min = DFA186_min;
			this.max = DFA186_max;
			this.accept = DFA186_accept;
			this.special = DFA186_special;
			this.transition = DFA186_transition;
		}
		@Override
		public String getDescription() {
			return "723:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA185_eotS =
		"\4\uffff";
	static final String DFA185_eofS =
		"\4\uffff";
	static final String DFA185_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA185_maxS =
		"\2\u0092\2\uffff";
	static final String DFA185_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA185_specialS =
		"\4\uffff}>";
	static final String[] DFA185_transitionS = {
			"\1\2\1\1\25\uffff\1\3\16\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\33\uffff\1\3\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\2\uffff"+
			"\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff\2\3"+
			"\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA185_eot = DFA.unpackEncodedString(DFA185_eotS);
	static final short[] DFA185_eof = DFA.unpackEncodedString(DFA185_eofS);
	static final char[] DFA185_min = DFA.unpackEncodedStringToUnsignedChars(DFA185_minS);
	static final char[] DFA185_max = DFA.unpackEncodedStringToUnsignedChars(DFA185_maxS);
	static final short[] DFA185_accept = DFA.unpackEncodedString(DFA185_acceptS);
	static final short[] DFA185_special = DFA.unpackEncodedString(DFA185_specialS);
	static final short[][] DFA185_transition;

	static {
		int numStates = DFA185_transitionS.length;
		DFA185_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA185_transition[i] = DFA.unpackEncodedString(DFA185_transitionS[i]);
		}
	}

	protected class DFA185 extends DFA {

		public DFA185(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 185;
			this.eot = DFA185_eot;
			this.eof = DFA185_eof;
			this.min = DFA185_min;
			this.max = DFA185_max;
			this.accept = DFA185_accept;
			this.special = DFA185_special;
			this.transition = DFA185_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 724:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA184_eotS =
		"\4\uffff";
	static final String DFA184_eofS =
		"\4\uffff";
	static final String DFA184_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA184_maxS =
		"\2\u0092\2\uffff";
	static final String DFA184_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA184_specialS =
		"\4\uffff}>";
	static final String[] DFA184_transitionS = {
			"\1\1\25\uffff\1\2\45\uffff\1\1\14\uffff\1\2\45\uffff\1\2\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\1\3\1\2\2\uffff\2"+
			"\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\1\3\1\2\24\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA184_eot = DFA.unpackEncodedString(DFA184_eotS);
	static final short[] DFA184_eof = DFA.unpackEncodedString(DFA184_eofS);
	static final char[] DFA184_min = DFA.unpackEncodedStringToUnsignedChars(DFA184_minS);
	static final char[] DFA184_max = DFA.unpackEncodedStringToUnsignedChars(DFA184_maxS);
	static final short[] DFA184_accept = DFA.unpackEncodedString(DFA184_acceptS);
	static final short[] DFA184_special = DFA.unpackEncodedString(DFA184_specialS);
	static final short[][] DFA184_transition;

	static {
		int numStates = DFA184_transitionS.length;
		DFA184_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA184_transition[i] = DFA.unpackEncodedString(DFA184_transitionS[i]);
		}
	}

	protected class DFA184 extends DFA {

		public DFA184(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 184;
			this.eot = DFA184_eot;
			this.eof = DFA184_eof;
			this.min = DFA184_min;
			this.max = DFA184_max;
			this.accept = DFA184_accept;
			this.special = DFA184_special;
			this.transition = DFA184_transition;
		}
		@Override
		public String getDescription() {
			return "724:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA190_eotS =
		"\5\uffff";
	static final String DFA190_eofS =
		"\5\uffff";
	static final String DFA190_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA190_maxS =
		"\2\u0092\1\uffff\1\117\1\uffff";
	static final String DFA190_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA190_specialS =
		"\5\uffff}>";
	static final String[] DFA190_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\2\2\13\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\1\2\1\3\2\uffff\1"+
			"\4\10\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\36\uffff"+
			"\1\1",
			"",
			"\1\2\52\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA190_eot = DFA.unpackEncodedString(DFA190_eotS);
	static final short[] DFA190_eof = DFA.unpackEncodedString(DFA190_eofS);
	static final char[] DFA190_min = DFA.unpackEncodedStringToUnsignedChars(DFA190_minS);
	static final char[] DFA190_max = DFA.unpackEncodedStringToUnsignedChars(DFA190_maxS);
	static final short[] DFA190_accept = DFA.unpackEncodedString(DFA190_acceptS);
	static final short[] DFA190_special = DFA.unpackEncodedString(DFA190_specialS);
	static final short[][] DFA190_transition;

	static {
		int numStates = DFA190_transitionS.length;
		DFA190_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA190_transition[i] = DFA.unpackEncodedString(DFA190_transitionS[i]);
		}
	}

	protected class DFA190 extends DFA {

		public DFA190(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 190;
			this.eot = DFA190_eot;
			this.eof = DFA190_eof;
			this.min = DFA190_min;
			this.max = DFA190_max;
			this.accept = DFA190_accept;
			this.special = DFA190_special;
			this.transition = DFA190_transition;
		}
		@Override
		public String getDescription() {
			return "736:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA193_eotS =
		"\5\uffff";
	static final String DFA193_eofS =
		"\5\uffff";
	static final String DFA193_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA193_maxS =
		"\2\u0092\1\uffff\1\117\1\uffff";
	static final String DFA193_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA193_specialS =
		"\5\uffff}>";
	static final String[] DFA193_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\2\2\13\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\1\2\1\3\2\uffff\1\4\10\uffff\1"+
			"\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"",
			"\1\2\52\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA193_eot = DFA.unpackEncodedString(DFA193_eotS);
	static final short[] DFA193_eof = DFA.unpackEncodedString(DFA193_eofS);
	static final char[] DFA193_min = DFA.unpackEncodedStringToUnsignedChars(DFA193_minS);
	static final char[] DFA193_max = DFA.unpackEncodedStringToUnsignedChars(DFA193_maxS);
	static final short[] DFA193_accept = DFA.unpackEncodedString(DFA193_acceptS);
	static final short[] DFA193_special = DFA.unpackEncodedString(DFA193_specialS);
	static final short[][] DFA193_transition;

	static {
		int numStates = DFA193_transitionS.length;
		DFA193_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA193_transition[i] = DFA.unpackEncodedString(DFA193_transitionS[i]);
		}
	}

	protected class DFA193 extends DFA {

		public DFA193(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 193;
			this.eot = DFA193_eot;
			this.eof = DFA193_eof;
			this.min = DFA193_min;
			this.max = DFA193_max;
			this.accept = DFA193_accept;
			this.special = DFA193_special;
			this.transition = DFA193_transition;
		}
		@Override
		public String getDescription() {
			return "737:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA216_eotS =
		"\4\uffff";
	static final String DFA216_eofS =
		"\2\3\2\uffff";
	static final String DFA216_minS =
		"\2\6\2\uffff";
	static final String DFA216_maxS =
		"\2\u0092\2\uffff";
	static final String DFA216_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA216_specialS =
		"\4\uffff}>";
	static final String[] DFA216_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\11\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA216_eot = DFA.unpackEncodedString(DFA216_eotS);
	static final short[] DFA216_eof = DFA.unpackEncodedString(DFA216_eofS);
	static final char[] DFA216_min = DFA.unpackEncodedStringToUnsignedChars(DFA216_minS);
	static final char[] DFA216_max = DFA.unpackEncodedStringToUnsignedChars(DFA216_maxS);
	static final short[] DFA216_accept = DFA.unpackEncodedString(DFA216_acceptS);
	static final short[] DFA216_special = DFA.unpackEncodedString(DFA216_specialS);
	static final short[][] DFA216_transition;

	static {
		int numStates = DFA216_transitionS.length;
		DFA216_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA216_transition[i] = DFA.unpackEncodedString(DFA216_transitionS[i]);
		}
	}

	protected class DFA216 extends DFA {

		public DFA216(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 216;
			this.eot = DFA216_eot;
			this.eof = DFA216_eof;
			this.min = DFA216_min;
			this.max = DFA216_max;
			this.accept = DFA216_accept;
			this.special = DFA216_special;
			this.transition = DFA216_transition;
		}
		@Override
		public String getDescription() {
			return "852:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA232_eotS =
		"\4\uffff";
	static final String DFA232_eofS =
		"\1\3\3\uffff";
	static final String DFA232_minS =
		"\2\6\2\uffff";
	static final String DFA232_maxS =
		"\2\u0092\2\uffff";
	static final String DFA232_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA232_specialS =
		"\4\uffff}>";
	static final String[] DFA232_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA232_eot = DFA.unpackEncodedString(DFA232_eotS);
	static final short[] DFA232_eof = DFA.unpackEncodedString(DFA232_eofS);
	static final char[] DFA232_min = DFA.unpackEncodedStringToUnsignedChars(DFA232_minS);
	static final char[] DFA232_max = DFA.unpackEncodedStringToUnsignedChars(DFA232_maxS);
	static final short[] DFA232_accept = DFA.unpackEncodedString(DFA232_acceptS);
	static final short[] DFA232_special = DFA.unpackEncodedString(DFA232_specialS);
	static final short[][] DFA232_transition;

	static {
		int numStates = DFA232_transitionS.length;
		DFA232_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA232_transition[i] = DFA.unpackEncodedString(DFA232_transitionS[i]);
		}
	}

	protected class DFA232 extends DFA {

		public DFA232(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 232;
			this.eot = DFA232_eot;
			this.eof = DFA232_eof;
			this.min = DFA232_min;
			this.max = DFA232_max;
			this.accept = DFA232_accept;
			this.special = DFA232_special;
			this.transition = DFA232_transition;
		}
		@Override
		public String getDescription() {
			return "867:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA239_eotS =
		"\74\uffff";
	static final String DFA239_eofS =
		"\1\2\73\uffff";
	static final String DFA239_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\2\0\2\uffff\3\0\2\uffff\20\0"+
		"\2\uffff\1\0\1\uffff\1\0\17\uffff";
	static final String DFA239_maxS =
		"\1\u0092\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\2\0\2\uffff\3\0\2\uffff\20"+
		"\0\2\uffff\1\0\1\uffff\1\0\17\uffff";
	static final String DFA239_acceptS =
		"\2\uffff\1\2\50\uffff\1\1\1\uffff\13\1\1\uffff\3\1";
	static final String DFA239_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12"+
		"\2\uffff\1\13\1\14\1\15\2\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\2\uffff\1\36\1\uffff\1\37\17"+
		"\uffff}>";
	static final String[] DFA239_transitionS = {
			"\1\63\1\12\1\24\2\uffff\5\47\3\uffff\1\47\1\2\1\52\1\1\1\uffff\1\47\5"+
			"\uffff\1\2\1\20\1\2\1\uffff\1\60\3\uffff\1\62\1\uffff\1\42\1\65\1\uffff"+
			"\1\30\1\2\2\uffff\1\10\1\17\2\uffff\1\23\1\2\1\40\5\uffff\2\2\3\47\1"+
			"\57\1\uffff\1\6\1\71\5\uffff\1\45\1\25\1\43\5\uffff\1\47\1\1\4\uffff"+
			"\1\55\3\uffff\1\41\1\56\1\73\1\2\1\15\2\uffff\1\2\1\uffff\1\61\1\66\3"+
			"\47\1\2\1\uffff\1\14\1\37\1\31\1\uffff\1\35\1\47\2\uffff\1\46\1\2\1\34"+
			"\1\47\1\uffff\1\33\1\13\1\11\1\uffff\1\47\1\32\1\31\1\36\1\2\1\53\1\2"+
			"\1\67\1\uffff\1\54\1\64\5\47\2\uffff\1\72\3\uffff\1\44\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA239_eot = DFA.unpackEncodedString(DFA239_eotS);
	static final short[] DFA239_eof = DFA.unpackEncodedString(DFA239_eofS);
	static final char[] DFA239_min = DFA.unpackEncodedStringToUnsignedChars(DFA239_minS);
	static final char[] DFA239_max = DFA.unpackEncodedStringToUnsignedChars(DFA239_maxS);
	static final short[] DFA239_accept = DFA.unpackEncodedString(DFA239_acceptS);
	static final short[] DFA239_special = DFA.unpackEncodedString(DFA239_specialS);
	static final short[][] DFA239_transition;

	static {
		int numStates = DFA239_transitionS.length;
		DFA239_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA239_transition[i] = DFA.unpackEncodedString(DFA239_transitionS[i]);
		}
	}

	protected class DFA239 extends DFA {

		public DFA239(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 239;
			this.eot = DFA239_eot;
			this.eof = DFA239_eof;
			this.min = DFA239_min;
			this.max = DFA239_max;
			this.accept = DFA239_accept;
			this.special = DFA239_special;
			this.transition = DFA239_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 934:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA239_0 = input.LA(1);
						 
						int index239_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {s = 1;}
						else if ( (LA239_0==EOF||LA239_0==COLON||LA239_0==DCOLON||LA239_0==DOT||LA239_0==GREATER||LA239_0==IMPORTANT_SYM||(LA239_0 >= LBRACE && LA239_0 <= LBRACKET)||LA239_0==PIPE||LA239_0==RBRACE||LA239_0==RPAREN||LA239_0==SASS_EXTEND_ONLY_SELECTOR||LA239_0==SEMI||LA239_0==STAR) ) {s = 2;}
						else if ( (LA239_0==LESS_AND) ) {s = 6;}
						else if ( (LA239_0==HASH) ) {s = 8;}
						else if ( (LA239_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA239_0==AT_IDENT) ) {s = 10;}
						else if ( (LA239_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA239_0==SASS_AT_ROOT) ) {s = 12;}
						else if ( (LA239_0==PLUS) ) {s = 13;}
						else if ( (LA239_0==HASH_SYMBOL) ) {s = 15;}
						else if ( (LA239_0==DIMENSION) ) {s = 16;}
						else if ( (LA239_0==IDENT) ) {s = 19;}
						else if ( (LA239_0==AT_SIGN) ) {s = 20;}
						else if ( (LA239_0==MINUS) ) {s = 21;}
						else if ( (LA239_0==GEN) ) {s = 24;}
						else if ( (LA239_0==SASS_DEBUG||LA239_0==SASS_WARN) ) {s = 25;}
						else if ( (LA239_0==SASS_VAR) ) {s = 26;}
						else if ( (LA239_0==SASS_IF) ) {s = 27;}
						else if ( (LA239_0==SASS_FOR) ) {s = 28;}
						else if ( (LA239_0==SASS_EACH) ) {s = 29;}
						else if ( (LA239_0==SASS_WHILE) ) {s = 30;}
						else if ( (LA239_0==SASS_CONTENT) ) {s = 31;}
						else if ( (LA239_0==IMPORT_SYM) ) {s = 32;}
						else if ( (LA239_0==PAGE_SYM) ) {s = 33;}
						else if ( (LA239_0==FONT_FACE_SYM) ) {s = 34;}
						else if ( (LA239_0==MOZ_DOCUMENT_SYM) ) {s = 35;}
						else if ( (LA239_0==WEBKIT_KEYFRAMES_SYM) ) {s = 36;}
						else if ( (LA239_0==MEDIA_SYM) ) {s = 37;}
						else if ( (LA239_0==SASS_EXTEND) ) {s = 38;}
						else if ( ((LA239_0 >= BOTTOMCENTER_SYM && LA239_0 <= BOTTOMRIGHT_SYM)||LA239_0==CHARSET_SYM||LA239_0==COUNTER_STYLE_SYM||(LA239_0 >= LEFTBOTTOM_SYM && LA239_0 <= LEFTTOP_SYM)||LA239_0==NAMESPACE_SYM||(LA239_0 >= RIGHTBOTTOM_SYM && LA239_0 <= RIGHTTOP_SYM)||LA239_0==SASS_ELSE||LA239_0==SASS_FUNCTION||LA239_0==SASS_RETURN||(LA239_0 >= TOPCENTER_SYM && LA239_0 <= TOPRIGHT_SYM)) ) {s = 39;}
						else if ( (LA239_0==COMMA) ) {s = 42;}
						else if ( (LA239_0==SOLIDUS) && (synpred32_Css3())) {s = 43;}
						else if ( (LA239_0==TILDE) ) {s = 44;}
						else if ( (LA239_0==NUMBER) && (synpred32_Css3())) {s = 45;}
						else if ( (LA239_0==PERCENTAGE) && (synpred32_Css3())) {s = 46;}
						else if ( (LA239_0==LENGTH) && (synpred32_Css3())) {s = 47;}
						else if ( (LA239_0==EMS) && (synpred32_Css3())) {s = 48;}
						else if ( (LA239_0==REM) && (synpred32_Css3())) {s = 49;}
						else if ( (LA239_0==EXS) && (synpred32_Css3())) {s = 50;}
						else if ( (LA239_0==ANGLE) && (synpred32_Css3())) {s = 51;}
						else if ( (LA239_0==TIME) && (synpred32_Css3())) {s = 52;}
						else if ( (LA239_0==FREQ) && (synpred32_Css3())) {s = 53;}
						else if ( (LA239_0==RESOLUTION) && (synpred32_Css3())) {s = 54;}
						else if ( (LA239_0==STRING) && (synpred32_Css3())) {s = 55;}
						else if ( (LA239_0==LESS_JS_STRING) && (synpred32_Css3())) {s = 57;}
						else if ( (LA239_0==URI) && (synpred32_Css3())) {s = 58;}
						else if ( (LA239_0==PERCENTAGE_SYMBOL) && (synpred32_Css3())) {s = 59;}
						 
						input.seek(index239_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA239_1 = input.LA(1);
						 
						int index239_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA239_6 = input.LA(1);
						 
						int index239_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_6);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA239_8 = input.LA(1);
						 
						int index239_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA239_9 = input.LA(1);
						 
						int index239_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_9);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA239_10 = input.LA(1);
						 
						int index239_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_10);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA239_11 = input.LA(1);
						 
						int index239_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_11);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA239_12 = input.LA(1);
						 
						int index239_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_12);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA239_13 = input.LA(1);
						 
						int index239_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_13);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA239_15 = input.LA(1);
						 
						int index239_15 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA239_16 = input.LA(1);
						 
						int index239_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {s = 2;}
						 
						input.seek(index239_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA239_19 = input.LA(1);
						 
						int index239_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_19);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA239_20 = input.LA(1);
						 
						int index239_20 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index239_20);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA239_21 = input.LA(1);
						 
						int index239_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_21);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA239_24 = input.LA(1);
						 
						int index239_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_24);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA239_25 = input.LA(1);
						 
						int index239_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_25);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA239_26 = input.LA(1);
						 
						int index239_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_26);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA239_27 = input.LA(1);
						 
						int index239_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_27);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA239_28 = input.LA(1);
						 
						int index239_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_28);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA239_29 = input.LA(1);
						 
						int index239_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_29);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA239_30 = input.LA(1);
						 
						int index239_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_30);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA239_31 = input.LA(1);
						 
						int index239_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_31);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA239_32 = input.LA(1);
						 
						int index239_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index239_32);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA239_33 = input.LA(1);
						 
						int index239_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_33);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA239_34 = input.LA(1);
						 
						int index239_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_34);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA239_35 = input.LA(1);
						 
						int index239_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA239_36 = input.LA(1);
						 
						int index239_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA239_37 = input.LA(1);
						 
						int index239_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA239_38 = input.LA(1);
						 
						int index239_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index239_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA239_39 = input.LA(1);
						 
						int index239_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index239_39);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA239_42 = input.LA(1);
						 
						int index239_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_42);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA239_44 = input.LA(1);
						 
						int index239_44 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index239_44);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 239, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA238_eotS =
		"\5\uffff";
	static final String DFA238_eofS =
		"\5\uffff";
	static final String DFA238_minS =
		"\2\5\3\uffff";
	static final String DFA238_maxS =
		"\2\u0092\3\uffff";
	static final String DFA238_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA238_specialS =
		"\5\uffff}>";
	static final String[] DFA238_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA238_eot = DFA.unpackEncodedString(DFA238_eotS);
	static final short[] DFA238_eof = DFA.unpackEncodedString(DFA238_eofS);
	static final char[] DFA238_min = DFA.unpackEncodedStringToUnsignedChars(DFA238_minS);
	static final char[] DFA238_max = DFA.unpackEncodedStringToUnsignedChars(DFA238_maxS);
	static final short[] DFA238_accept = DFA.unpackEncodedString(DFA238_acceptS);
	static final short[] DFA238_special = DFA.unpackEncodedString(DFA238_specialS);
	static final short[][] DFA238_transition;

	static {
		int numStates = DFA238_transitionS.length;
		DFA238_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA238_transition[i] = DFA.unpackEncodedString(DFA238_transitionS[i]);
		}
	}

	protected class DFA238 extends DFA {

		public DFA238(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 238;
			this.eot = DFA238_eot;
			this.eof = DFA238_eof;
			this.min = DFA238_min;
			this.max = DFA238_max;
			this.accept = DFA238_accept;
			this.special = DFA238_special;
			this.transition = DFA238_transition;
		}
		@Override
		public String getDescription() {
			return "934:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA251_eotS =
		"\4\uffff";
	static final String DFA251_eofS =
		"\4\uffff";
	static final String DFA251_minS =
		"\2\24\2\uffff";
	static final String DFA251_maxS =
		"\2\u0092\2\uffff";
	static final String DFA251_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA251_specialS =
		"\4\uffff}>";
	static final String[] DFA251_transitionS = {
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA251_eot = DFA.unpackEncodedString(DFA251_eotS);
	static final short[] DFA251_eof = DFA.unpackEncodedString(DFA251_eofS);
	static final char[] DFA251_min = DFA.unpackEncodedStringToUnsignedChars(DFA251_minS);
	static final char[] DFA251_max = DFA.unpackEncodedStringToUnsignedChars(DFA251_maxS);
	static final short[] DFA251_accept = DFA.unpackEncodedString(DFA251_acceptS);
	static final short[] DFA251_special = DFA.unpackEncodedString(DFA251_specialS);
	static final short[][] DFA251_transition;

	static {
		int numStates = DFA251_transitionS.length;
		DFA251_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA251_transition[i] = DFA.unpackEncodedString(DFA251_transitionS[i]);
		}
	}

	protected class DFA251 extends DFA {

		public DFA251(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 251;
			this.eot = DFA251_eot;
			this.eof = DFA251_eof;
			this.min = DFA251_min;
			this.max = DFA251_max;
			this.accept = DFA251_accept;
			this.special = DFA251_special;
			this.transition = DFA251_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 999:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA261_eotS =
		"\43\uffff";
	static final String DFA261_eofS =
		"\43\uffff";
	static final String DFA261_minS =
		"\2\5\41\uffff";
	static final String DFA261_maxS =
		"\2\u0092\41\uffff";
	static final String DFA261_acceptS =
		"\2\uffff\1\2\40\1";
	static final String DFA261_specialS =
		"\1\1\1\0\41\uffff}>";
	static final String[] DFA261_transitionS = {
			"\1\14\1\27\1\33\2\uffff\5\27\3\uffff\1\27\1\uffff\1\2\1\1\1\uffff\1\27"+
			"\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\27\1\16\1\uffff\1\24"+
			"\3\uffff\1\26\1\32\2\uffff\1\5\1\uffff\1\27\7\uffff\3\27\1\10\1\uffff"+
			"\1\31\1\23\5\uffff\1\27\1\4\1\27\5\uffff\1\27\1\1\4\uffff\1\6\3\uffff"+
			"\1\27\1\7\1\34\1\uffff\1\4\4\uffff\1\12\1\17\3\27\1\2\1\uffff\3\27\1"+
			"\uffff\2\27\2\uffff\1\27\1\uffff\2\27\1\uffff\3\27\1\uffff\1\27\1\30"+
			"\2\27\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\27\2\uffff\1\25\3\uffff"+
			"\1\27\1\1",
			"\1\14\1\35\1\41\2\uffff\5\35\3\uffff\1\35\1\uffff\1\2\1\1\1\uffff\1"+
			"\35\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\35\1\16\1\uffff"+
			"\1\24\3\uffff\1\26\1\40\2\uffff\1\5\1\uffff\1\35\7\uffff\3\35\1\10\1"+
			"\uffff\1\37\1\23\5\uffff\1\35\1\4\1\35\5\uffff\1\35\1\1\4\uffff\1\6\3"+
			"\uffff\1\35\1\7\1\42\1\uffff\1\4\4\uffff\1\12\1\17\3\35\1\2\1\uffff\3"+
			"\35\1\uffff\2\35\2\uffff\1\35\1\uffff\2\35\1\uffff\3\35\1\uffff\1\35"+
			"\1\36\2\35\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\35\2\uffff\1\25\3"+
			"\uffff\1\35\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA261_eot = DFA.unpackEncodedString(DFA261_eotS);
	static final short[] DFA261_eof = DFA.unpackEncodedString(DFA261_eofS);
	static final char[] DFA261_min = DFA.unpackEncodedStringToUnsignedChars(DFA261_minS);
	static final char[] DFA261_max = DFA.unpackEncodedStringToUnsignedChars(DFA261_maxS);
	static final short[] DFA261_accept = DFA.unpackEncodedString(DFA261_acceptS);
	static final short[] DFA261_special = DFA.unpackEncodedString(DFA261_specialS);
	static final short[][] DFA261_transition;

	static {
		int numStates = DFA261_transitionS.length;
		DFA261_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA261_transition[i] = DFA.unpackEncodedString(DFA261_transitionS[i]);
		}
	}

	protected class DFA261 extends DFA {

		public DFA261(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 261;
			this.eot = DFA261_eot;
			this.eof = DFA261_eof;
			this.min = DFA261_min;
			this.max = DFA261_max;
			this.accept = DFA261_accept;
			this.special = DFA261_special;
			this.transition = DFA261_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1017:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA261_1 = input.LA(1);
						 
						int index261_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA261_1==COMMA||LA261_1==RPAREN||LA261_1==SEMI) ) {s = 2;}
						else if ( (LA261_1==COMMENT||LA261_1==NL||LA261_1==WS) ) {s = 1;}
						else if ( (LA261_1==MINUS||LA261_1==PLUS) && (synpred36_Css3())) {s = 4;}
						else if ( (LA261_1==IDENT) && (synpred36_Css3())) {s = 5;}
						else if ( (LA261_1==NUMBER) && (synpred36_Css3())) {s = 6;}
						else if ( (LA261_1==PERCENTAGE) && (synpred36_Css3())) {s = 7;}
						else if ( (LA261_1==LENGTH) && (synpred36_Css3())) {s = 8;}
						else if ( (LA261_1==EMS) && (synpred36_Css3())) {s = 9;}
						else if ( (LA261_1==REM) && (synpred36_Css3())) {s = 10;}
						else if ( (LA261_1==EXS) && (synpred36_Css3())) {s = 11;}
						else if ( (LA261_1==ANGLE) && (synpred36_Css3())) {s = 12;}
						else if ( (LA261_1==TIME) && (synpred36_Css3())) {s = 13;}
						else if ( (LA261_1==FREQ) && (synpred36_Css3())) {s = 14;}
						else if ( (LA261_1==RESOLUTION) && (synpred36_Css3())) {s = 15;}
						else if ( (LA261_1==DIMENSION) && (synpred36_Css3())) {s = 16;}
						else if ( (LA261_1==STRING) && (synpred36_Css3())) {s = 17;}
						else if ( (LA261_1==TILDE) && (synpred36_Css3())) {s = 18;}
						else if ( (LA261_1==LESS_JS_STRING) && (synpred36_Css3())) {s = 19;}
						else if ( (LA261_1==GEN) && (synpred36_Css3())) {s = 20;}
						else if ( (LA261_1==URI) && (synpred36_Css3())) {s = 21;}
						else if ( (LA261_1==HASH) && (synpred36_Css3())) {s = 22;}
						else if ( (LA261_1==AT_IDENT||(LA261_1 >= BOTTOMCENTER_SYM && LA261_1 <= BOTTOMRIGHT_SYM)||LA261_1==CHARSET_SYM||LA261_1==COUNTER_STYLE_SYM||LA261_1==FONT_FACE_SYM||LA261_1==IMPORT_SYM||(LA261_1 >= LEFTBOTTOM_SYM && LA261_1 <= LEFTTOP_SYM)||LA261_1==MEDIA_SYM||LA261_1==MOZ_DOCUMENT_SYM||LA261_1==NAMESPACE_SYM||LA261_1==PAGE_SYM||(LA261_1 >= RIGHTBOTTOM_SYM && LA261_1 <= RIGHTTOP_SYM)||(LA261_1 >= SASS_AT_ROOT && LA261_1 <= SASS_DEBUG)||(LA261_1 >= SASS_EACH && LA261_1 <= SASS_ELSE)||LA261_1==SASS_EXTEND||(LA261_1 >= SASS_FOR && LA261_1 <= SASS_FUNCTION)||(LA261_1 >= SASS_IF && LA261_1 <= SASS_MIXIN)||LA261_1==SASS_RETURN||(LA261_1 >= SASS_WARN && LA261_1 <= SASS_WHILE)||(LA261_1 >= TOPCENTER_SYM && LA261_1 <= TOPRIGHT_SYM)||LA261_1==WEBKIT_KEYFRAMES_SYM) && (synpred36_Css3())) {s = 29;}
						else if ( (LA261_1==SASS_VAR) && (synpred36_Css3())) {s = 30;}
						else if ( (LA261_1==LESS_AND) && (synpred36_Css3())) {s = 31;}
						else if ( (LA261_1==HASH_SYMBOL) && (synpred36_Css3())) {s = 32;}
						else if ( (LA261_1==AT_SIGN) && (synpred36_Css3())) {s = 33;}
						else if ( (LA261_1==PERCENTAGE_SYMBOL) && (synpred36_Css3())) {s = 34;}
						else if ( (LA261_1==SOLIDUS) && (synpred36_Css3())) {s = 3;}
						 
						input.seek(index261_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA261_0 = input.LA(1);
						 
						int index261_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA261_0==COMMENT||LA261_0==NL||LA261_0==WS) ) {s = 1;}
						else if ( (LA261_0==COMMA||LA261_0==RPAREN||LA261_0==SEMI) ) {s = 2;}
						else if ( (LA261_0==SOLIDUS) && (synpred36_Css3())) {s = 3;}
						else if ( (LA261_0==MINUS||LA261_0==PLUS) && (synpred36_Css3())) {s = 4;}
						else if ( (LA261_0==IDENT) && (synpred36_Css3())) {s = 5;}
						else if ( (LA261_0==NUMBER) && (synpred36_Css3())) {s = 6;}
						else if ( (LA261_0==PERCENTAGE) && (synpred36_Css3())) {s = 7;}
						else if ( (LA261_0==LENGTH) && (synpred36_Css3())) {s = 8;}
						else if ( (LA261_0==EMS) && (synpred36_Css3())) {s = 9;}
						else if ( (LA261_0==REM) && (synpred36_Css3())) {s = 10;}
						else if ( (LA261_0==EXS) && (synpred36_Css3())) {s = 11;}
						else if ( (LA261_0==ANGLE) && (synpred36_Css3())) {s = 12;}
						else if ( (LA261_0==TIME) && (synpred36_Css3())) {s = 13;}
						else if ( (LA261_0==FREQ) && (synpred36_Css3())) {s = 14;}
						else if ( (LA261_0==RESOLUTION) && (synpred36_Css3())) {s = 15;}
						else if ( (LA261_0==DIMENSION) && (synpred36_Css3())) {s = 16;}
						else if ( (LA261_0==STRING) && (synpred36_Css3())) {s = 17;}
						else if ( (LA261_0==TILDE) && (synpred36_Css3())) {s = 18;}
						else if ( (LA261_0==LESS_JS_STRING) && (synpred36_Css3())) {s = 19;}
						else if ( (LA261_0==GEN) && (synpred36_Css3())) {s = 20;}
						else if ( (LA261_0==URI) && (synpred36_Css3())) {s = 21;}
						else if ( (LA261_0==HASH) && (synpred36_Css3())) {s = 22;}
						else if ( (LA261_0==AT_IDENT||(LA261_0 >= BOTTOMCENTER_SYM && LA261_0 <= BOTTOMRIGHT_SYM)||LA261_0==CHARSET_SYM||LA261_0==COUNTER_STYLE_SYM||LA261_0==FONT_FACE_SYM||LA261_0==IMPORT_SYM||(LA261_0 >= LEFTBOTTOM_SYM && LA261_0 <= LEFTTOP_SYM)||LA261_0==MEDIA_SYM||LA261_0==MOZ_DOCUMENT_SYM||LA261_0==NAMESPACE_SYM||LA261_0==PAGE_SYM||(LA261_0 >= RIGHTBOTTOM_SYM && LA261_0 <= RIGHTTOP_SYM)||(LA261_0 >= SASS_AT_ROOT && LA261_0 <= SASS_DEBUG)||(LA261_0 >= SASS_EACH && LA261_0 <= SASS_ELSE)||LA261_0==SASS_EXTEND||(LA261_0 >= SASS_FOR && LA261_0 <= SASS_FUNCTION)||(LA261_0 >= SASS_IF && LA261_0 <= SASS_MIXIN)||LA261_0==SASS_RETURN||(LA261_0 >= SASS_WARN && LA261_0 <= SASS_WHILE)||(LA261_0 >= TOPCENTER_SYM && LA261_0 <= TOPRIGHT_SYM)||LA261_0==WEBKIT_KEYFRAMES_SYM) && (synpred36_Css3())) {s = 23;}
						else if ( (LA261_0==SASS_VAR) && (synpred36_Css3())) {s = 24;}
						else if ( (LA261_0==LESS_AND) && (synpred36_Css3())) {s = 25;}
						else if ( (LA261_0==HASH_SYMBOL) && (synpred36_Css3())) {s = 26;}
						else if ( (LA261_0==AT_SIGN) && (synpred36_Css3())) {s = 27;}
						else if ( (LA261_0==PERCENTAGE_SYMBOL) && (synpred36_Css3())) {s = 28;}
						 
						input.seek(index261_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 261, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA260_eotS =
		"\5\uffff";
	static final String DFA260_eofS =
		"\5\uffff";
	static final String DFA260_minS =
		"\2\5\3\uffff";
	static final String DFA260_maxS =
		"\2\u0092\3\uffff";
	static final String DFA260_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA260_specialS =
		"\5\uffff}>";
	static final String[] DFA260_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA260_eot = DFA.unpackEncodedString(DFA260_eotS);
	static final short[] DFA260_eof = DFA.unpackEncodedString(DFA260_eofS);
	static final char[] DFA260_min = DFA.unpackEncodedStringToUnsignedChars(DFA260_minS);
	static final char[] DFA260_max = DFA.unpackEncodedStringToUnsignedChars(DFA260_maxS);
	static final short[] DFA260_accept = DFA.unpackEncodedString(DFA260_acceptS);
	static final short[] DFA260_special = DFA.unpackEncodedString(DFA260_specialS);
	static final short[][] DFA260_transition;

	static {
		int numStates = DFA260_transitionS.length;
		DFA260_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA260_transition[i] = DFA.unpackEncodedString(DFA260_transitionS[i]);
		}
	}

	protected class DFA260 extends DFA {

		public DFA260(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 260;
			this.eot = DFA260_eot;
			this.eof = DFA260_eof;
			this.min = DFA260_min;
			this.max = DFA260_max;
			this.accept = DFA260_accept;
			this.special = DFA260_special;
			this.transition = DFA260_transition;
		}
		@Override
		public String getDescription() {
			return "1017:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA270_eotS =
		"\5\uffff";
	static final String DFA270_eofS =
		"\2\2\3\uffff";
	static final String DFA270_minS =
		"\2\6\3\uffff";
	static final String DFA270_maxS =
		"\2\u0092\3\uffff";
	static final String DFA270_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA270_specialS =
		"\5\uffff}>";
	static final String[] DFA270_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA270_eot = DFA.unpackEncodedString(DFA270_eotS);
	static final short[] DFA270_eof = DFA.unpackEncodedString(DFA270_eofS);
	static final char[] DFA270_min = DFA.unpackEncodedStringToUnsignedChars(DFA270_minS);
	static final char[] DFA270_max = DFA.unpackEncodedStringToUnsignedChars(DFA270_maxS);
	static final short[] DFA270_accept = DFA.unpackEncodedString(DFA270_acceptS);
	static final short[] DFA270_special = DFA.unpackEncodedString(DFA270_specialS);
	static final short[][] DFA270_transition;

	static {
		int numStates = DFA270_transitionS.length;
		DFA270_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA270_transition[i] = DFA.unpackEncodedString(DFA270_transitionS[i]);
		}
	}

	protected class DFA270 extends DFA {

		public DFA270(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 270;
			this.eot = DFA270_eot;
			this.eof = DFA270_eof;
			this.min = DFA270_min;
			this.max = DFA270_max;
			this.accept = DFA270_accept;
			this.special = DFA270_special;
			this.transition = DFA270_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1036:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA275_eotS =
		"\102\uffff";
	static final String DFA275_eofS =
		"\1\2\101\uffff";
	static final String DFA275_minS =
		"\1\5\1\0\52\uffff\1\0\25\uffff";
	static final String DFA275_maxS =
		"\1\u0092\1\0\52\uffff\1\0\25\uffff";
	static final String DFA275_acceptS =
		"\2\uffff\1\2\76\uffff\1\1";
	static final String DFA275_specialS =
		"\1\uffff\1\0\52\uffff\1\1\25\uffff}>";
	static final String[] DFA275_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\2\2\1\54\1\1\1\uffff\1\2\5\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\6\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\2\2"+
			"\3\uffff\5\2\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\10\2\1\uffff"+
			"\5\2\1\uffff\2\2\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA275_eot = DFA.unpackEncodedString(DFA275_eotS);
	static final short[] DFA275_eof = DFA.unpackEncodedString(DFA275_eofS);
	static final char[] DFA275_min = DFA.unpackEncodedStringToUnsignedChars(DFA275_minS);
	static final char[] DFA275_max = DFA.unpackEncodedStringToUnsignedChars(DFA275_maxS);
	static final short[] DFA275_accept = DFA.unpackEncodedString(DFA275_acceptS);
	static final short[] DFA275_special = DFA.unpackEncodedString(DFA275_specialS);
	static final short[][] DFA275_transition;

	static {
		int numStates = DFA275_transitionS.length;
		DFA275_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA275_transition[i] = DFA.unpackEncodedString(DFA275_transitionS[i]);
		}
	}

	protected class DFA275 extends DFA {

		public DFA275(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 275;
			this.eot = DFA275_eot;
			this.eof = DFA275_eof;
			this.min = DFA275_min;
			this.max = DFA275_max;
			this.accept = DFA275_accept;
			this.special = DFA275_special;
			this.transition = DFA275_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1052:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA275_1 = input.LA(1);
						 
						int index275_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 65;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index275_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA275_44 = input.LA(1);
						 
						int index275_44 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 65;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index275_44);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 275, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA281_eotS =
		"\112\uffff";
	static final String DFA281_eofS =
		"\1\2\111\uffff";
	static final String DFA281_minS =
		"\1\5\1\0\1\uffff\1\0\1\uffff\11\0\2\uffff\1\0\1\uffff\6\0\1\uffff\1\0"+
		"\4\uffff\15\0\1\uffff\2\0\3\uffff\20\0\2\uffff\1\0\6\uffff";
	static final String DFA281_maxS =
		"\1\u0092\1\0\1\uffff\1\0\1\uffff\11\0\2\uffff\1\0\1\uffff\6\0\1\uffff"+
		"\1\0\4\uffff\15\0\1\uffff\2\0\3\uffff\20\0\2\uffff\1\0\6\uffff";
	static final String DFA281_acceptS =
		"\2\uffff\1\3\101\uffff\5\1\1\2";
	static final String DFA281_specialS =
		"\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2"+
		"\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff\1\23\4\uffff"+
		"\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\uffff"+
		"\1\41\1\42\3\uffff\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1"+
		"\55\1\56\1\57\1\60\1\61\1\62\2\uffff\1\63\6\uffff}>";
	static final String[] DFA281_transitionS = {
			"\1\70\1\23\1\12\2\uffff\5\55\3\uffff\1\55\2\2\1\103\1\uffff\1\52\1\2"+
			"\1\104\1\105\2\uffff\1\2\1\31\1\2\1\uffff\1\65\3\uffff\1\67\1\uffff\1"+
			"\45\1\72\1\uffff\1\13\1\74\1\110\1\uffff\1\22\1\11\2\uffff\1\7\1\3\1"+
			"\43\5\uffff\2\2\3\55\1\64\1\106\1\20\1\75\1\107\1\2\1\uffff\1\100\1\uffff"+
			"\1\50\1\10\1\46\5\uffff\1\55\1\103\3\uffff\1\61\1\5\3\uffff\1\44\1\63"+
			"\1\77\1\2\1\27\2\uffff\1\2\1\uffff\1\66\1\73\3\55\1\2\1\uffff\1\25\1"+
			"\42\1\26\1\2\1\40\1\55\2\uffff\1\51\1\2\1\37\1\54\1\2\1\36\1\24\1\14"+
			"\1\uffff\1\55\1\15\1\26\1\41\1\2\1\uffff\1\2\1\6\1\uffff\1\62\1\71\5"+
			"\55\2\uffff\1\76\3\uffff\1\47\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA281_eot = DFA.unpackEncodedString(DFA281_eotS);
	static final short[] DFA281_eof = DFA.unpackEncodedString(DFA281_eofS);
	static final char[] DFA281_min = DFA.unpackEncodedStringToUnsignedChars(DFA281_minS);
	static final char[] DFA281_max = DFA.unpackEncodedStringToUnsignedChars(DFA281_maxS);
	static final short[] DFA281_accept = DFA.unpackEncodedString(DFA281_acceptS);
	static final short[] DFA281_special = DFA.unpackEncodedString(DFA281_specialS);
	static final short[][] DFA281_transition;

	static {
		int numStates = DFA281_transitionS.length;
		DFA281_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA281_transition[i] = DFA.unpackEncodedString(DFA281_transitionS[i]);
		}
	}

	protected class DFA281 extends DFA {

		public DFA281(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 281;
			this.eot = DFA281_eot;
			this.eof = DFA281_eof;
			this.min = DFA281_min;
			this.max = DFA281_max;
			this.accept = DFA281_accept;
			this.special = DFA281_special;
			this.transition = DFA281_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1069:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA281_0 = input.LA(1);
						 
						int index281_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA281_0==WS) ) {s = 1;}
						else if ( (LA281_0==EOF||(LA281_0 >= COLON && LA281_0 <= COMMA)||LA281_0==CP_DOTS||LA281_0==DCOLON||LA281_0==DOT||(LA281_0 >= LBRACE && LA281_0 <= LBRACKET)||LA281_0==LESS_REST||LA281_0==PIPE||LA281_0==RBRACE||LA281_0==RPAREN||LA281_0==SASS_DEFAULT||LA281_0==SASS_EXTEND_ONLY_SELECTOR||LA281_0==SASS_GLOBAL||LA281_0==SEMI||LA281_0==STAR) ) {s = 2;}
						else if ( (LA281_0==IMPORTANT_SYM) ) {s = 3;}
						else if ( (LA281_0==NUMBER) ) {s = 5;}
						else if ( (LA281_0==STRING) ) {s = 6;}
						else if ( (LA281_0==IDENT) ) {s = 7;}
						else if ( (LA281_0==MINUS) ) {s = 8;}
						else if ( (LA281_0==HASH_SYMBOL) ) {s = 9;}
						else if ( (LA281_0==AT_SIGN) ) {s = 10;}
						else if ( (LA281_0==GEN) ) {s = 11;}
						else if ( (LA281_0==SASS_MIXIN) ) {s = 12;}
						else if ( (LA281_0==SASS_VAR) ) {s = 13;}
						else if ( (LA281_0==LESS_AND) ) {s = 16;}
						else if ( (LA281_0==HASH) ) {s = 18;}
						else if ( (LA281_0==AT_IDENT) ) {s = 19;}
						else if ( (LA281_0==SASS_INCLUDE) ) {s = 20;}
						else if ( (LA281_0==SASS_AT_ROOT) ) {s = 21;}
						else if ( (LA281_0==SASS_DEBUG||LA281_0==SASS_WARN) ) {s = 22;}
						else if ( (LA281_0==PLUS) ) {s = 23;}
						else if ( (LA281_0==DIMENSION) ) {s = 25;}
						else if ( (LA281_0==SASS_IF) ) {s = 30;}
						else if ( (LA281_0==SASS_FOR) ) {s = 31;}
						else if ( (LA281_0==SASS_EACH) ) {s = 32;}
						else if ( (LA281_0==SASS_WHILE) ) {s = 33;}
						else if ( (LA281_0==SASS_CONTENT) ) {s = 34;}
						else if ( (LA281_0==IMPORT_SYM) ) {s = 35;}
						else if ( (LA281_0==PAGE_SYM) ) {s = 36;}
						else if ( (LA281_0==FONT_FACE_SYM) ) {s = 37;}
						else if ( (LA281_0==MOZ_DOCUMENT_SYM) ) {s = 38;}
						else if ( (LA281_0==WEBKIT_KEYFRAMES_SYM) ) {s = 39;}
						else if ( (LA281_0==MEDIA_SYM) ) {s = 40;}
						else if ( (LA281_0==SASS_EXTEND) ) {s = 41;}
						else if ( (LA281_0==COUNTER_STYLE_SYM) ) {s = 42;}
						else if ( (LA281_0==SASS_FUNCTION) ) {s = 44;}
						else if ( ((LA281_0 >= BOTTOMCENTER_SYM && LA281_0 <= BOTTOMRIGHT_SYM)||LA281_0==CHARSET_SYM||(LA281_0 >= LEFTBOTTOM_SYM && LA281_0 <= LEFTTOP_SYM)||LA281_0==NAMESPACE_SYM||(LA281_0 >= RIGHTBOTTOM_SYM && LA281_0 <= RIGHTTOP_SYM)||LA281_0==SASS_ELSE||LA281_0==SASS_RETURN||(LA281_0 >= TOPCENTER_SYM && LA281_0 <= TOPRIGHT_SYM)) ) {s = 45;}
						else if ( (LA281_0==NOT) ) {s = 49;}
						else if ( (LA281_0==TILDE) ) {s = 50;}
						else if ( (LA281_0==PERCENTAGE) ) {s = 51;}
						else if ( (LA281_0==LENGTH) ) {s = 52;}
						else if ( (LA281_0==EMS) ) {s = 53;}
						else if ( (LA281_0==REM) ) {s = 54;}
						else if ( (LA281_0==EXS) ) {s = 55;}
						else if ( (LA281_0==ANGLE) ) {s = 56;}
						else if ( (LA281_0==TIME) ) {s = 57;}
						else if ( (LA281_0==FREQ) ) {s = 58;}
						else if ( (LA281_0==RESOLUTION) ) {s = 59;}
						else if ( (LA281_0==GREATER) ) {s = 60;}
						else if ( (LA281_0==LESS_JS_STRING) ) {s = 61;}
						else if ( (LA281_0==URI) ) {s = 62;}
						else if ( (LA281_0==PERCENTAGE_SYMBOL) ) {s = 63;}
						else if ( (LA281_0==LPAREN) ) {s = 64;}
						else if ( (LA281_0==COMMENT||LA281_0==NL) ) {s = 67;}
						else if ( (LA281_0==CP_EQ) && (synpred40_Css3())) {s = 68;}
						else if ( (LA281_0==CP_NOT_EQ) && (synpred40_Css3())) {s = 69;}
						else if ( (LA281_0==LESS) && (synpred40_Css3())) {s = 70;}
						else if ( (LA281_0==LESS_OR_EQ) && (synpred40_Css3())) {s = 71;}
						else if ( (LA281_0==GREATER_OR_EQ) && (synpred40_Css3())) {s = 72;}
						 
						input.seek(index281_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA281_1 = input.LA(1);
						 
						int index281_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 72;}
						else if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA281_3 = input.LA(1);
						 
						int index281_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_3);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA281_5 = input.LA(1);
						 
						int index281_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA281_6 = input.LA(1);
						 
						int index281_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA281_7 = input.LA(1);
						 
						int index281_7 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))&&synpred40_Css3())) ) {s = 72;}
						else if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA281_8 = input.LA(1);
						 
						int index281_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA281_9 = input.LA(1);
						 
						int index281_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA281_10 = input.LA(1);
						 
						int index281_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index281_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA281_11 = input.LA(1);
						 
						int index281_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA281_12 = input.LA(1);
						 
						int index281_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_12);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA281_13 = input.LA(1);
						 
						int index281_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 73;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index281_13);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA281_16 = input.LA(1);
						 
						int index281_16 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_16);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA281_18 = input.LA(1);
						 
						int index281_18 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_18);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA281_19 = input.LA(1);
						 
						int index281_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_19);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA281_20 = input.LA(1);
						 
						int index281_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_20);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA281_21 = input.LA(1);
						 
						int index281_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_21);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA281_22 = input.LA(1);
						 
						int index281_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_22);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA281_23 = input.LA(1);
						 
						int index281_23 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_23);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA281_25 = input.LA(1);
						 
						int index281_25 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_25);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA281_30 = input.LA(1);
						 
						int index281_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_30);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA281_31 = input.LA(1);
						 
						int index281_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_31);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA281_32 = input.LA(1);
						 
						int index281_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_32);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA281_33 = input.LA(1);
						 
						int index281_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_33);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA281_34 = input.LA(1);
						 
						int index281_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_34);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA281_35 = input.LA(1);
						 
						int index281_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")))) ) {s = 2;}
						 
						input.seek(index281_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA281_36 = input.LA(1);
						 
						int index281_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA281_37 = input.LA(1);
						 
						int index281_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA281_38 = input.LA(1);
						 
						int index281_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA281_39 = input.LA(1);
						 
						int index281_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_39);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA281_40 = input.LA(1);
						 
						int index281_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_40);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA281_41 = input.LA(1);
						 
						int index281_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_41);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA281_42 = input.LA(1);
						 
						int index281_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_42);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA281_44 = input.LA(1);
						 
						int index281_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index281_44);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA281_45 = input.LA(1);
						 
						int index281_45 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 73;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index281_45);
						if ( s>=0 ) return s;
						break;

					case 35 : 
						int LA281_49 = input.LA(1);
						 
						int index281_49 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_49);
						if ( s>=0 ) return s;
						break;

					case 36 : 
						int LA281_50 = input.LA(1);
						 
						int index281_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_50);
						if ( s>=0 ) return s;
						break;

					case 37 : 
						int LA281_51 = input.LA(1);
						 
						int index281_51 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_51);
						if ( s>=0 ) return s;
						break;

					case 38 : 
						int LA281_52 = input.LA(1);
						 
						int index281_52 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_52);
						if ( s>=0 ) return s;
						break;

					case 39 : 
						int LA281_53 = input.LA(1);
						 
						int index281_53 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_53);
						if ( s>=0 ) return s;
						break;

					case 40 : 
						int LA281_54 = input.LA(1);
						 
						int index281_54 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_54);
						if ( s>=0 ) return s;
						break;

					case 41 : 
						int LA281_55 = input.LA(1);
						 
						int index281_55 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_55);
						if ( s>=0 ) return s;
						break;

					case 42 : 
						int LA281_56 = input.LA(1);
						 
						int index281_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_56);
						if ( s>=0 ) return s;
						break;

					case 43 : 
						int LA281_57 = input.LA(1);
						 
						int index281_57 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_57);
						if ( s>=0 ) return s;
						break;

					case 44 : 
						int LA281_58 = input.LA(1);
						 
						int index281_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_58);
						if ( s>=0 ) return s;
						break;

					case 45 : 
						int LA281_59 = input.LA(1);
						 
						int index281_59 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_59);
						if ( s>=0 ) return s;
						break;

					case 46 : 
						int LA281_60 = input.LA(1);
						 
						int index281_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_60);
						if ( s>=0 ) return s;
						break;

					case 47 : 
						int LA281_61 = input.LA(1);
						 
						int index281_61 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_61);
						if ( s>=0 ) return s;
						break;

					case 48 : 
						int LA281_62 = input.LA(1);
						 
						int index281_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_62);
						if ( s>=0 ) return s;
						break;

					case 49 : 
						int LA281_63 = input.LA(1);
						 
						int index281_63 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {s = 73;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index281_63);
						if ( s>=0 ) return s;
						break;

					case 50 : 
						int LA281_64 = input.LA(1);
						 
						int index281_64 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_64);
						if ( s>=0 ) return s;
						break;

					case 51 : 
						int LA281_67 = input.LA(1);
						 
						int index281_67 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 72;}
						else if ( (synpred41_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index281_67);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 281, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA295_eotS =
		"\112\uffff";
	static final String DFA295_eofS =
		"\1\2\111\uffff";
	static final String DFA295_minS =
		"\1\5\1\0\13\uffff\1\0\31\uffff\1\0\11\uffff\1\0\26\uffff\1\0\1\uffff";
	static final String DFA295_maxS =
		"\1\u0092\1\0\13\uffff\1\0\31\uffff\1\0\11\uffff\1\0\26\uffff\1\0\1\uffff";
	static final String DFA295_acceptS =
		"\2\uffff\1\2\106\uffff\1\1";
	static final String DFA295_specialS =
		"\1\0\1\1\13\uffff\1\2\31\uffff\1\3\11\uffff\1\4\26\uffff\1\5\1\uffff}>";
	static final String[] DFA295_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\110\1\uffff\4\2\2\uffff\3\2\1\uffff\1"+
			"\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\110\3\uffff\2\2"+
			"\3\uffff\4\2\1\47\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\10\2\1"+
			"\uffff\5\2\1\111\1\61\1\2\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA295_eot = DFA.unpackEncodedString(DFA295_eotS);
	static final short[] DFA295_eof = DFA.unpackEncodedString(DFA295_eofS);
	static final char[] DFA295_min = DFA.unpackEncodedStringToUnsignedChars(DFA295_minS);
	static final char[] DFA295_max = DFA.unpackEncodedStringToUnsignedChars(DFA295_maxS);
	static final short[] DFA295_accept = DFA.unpackEncodedString(DFA295_acceptS);
	static final short[] DFA295_special = DFA.unpackEncodedString(DFA295_specialS);
	static final short[][] DFA295_transition;

	static {
		int numStates = DFA295_transitionS.length;
		DFA295_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA295_transition[i] = DFA.unpackEncodedString(DFA295_transitionS[i]);
		}
	}

	protected class DFA295 extends DFA {

		public DFA295(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 295;
			this.eot = DFA295_eot;
			this.eof = DFA295_eof;
			this.min = DFA295_min;
			this.max = DFA295_max;
			this.accept = DFA295_accept;
			this.special = DFA295_special;
			this.transition = DFA295_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1111:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA295_0 = input.LA(1);
						 
						int index295_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA295_0==WS) ) {s = 1;}
						else if ( (LA295_0==EOF||(LA295_0 >= ANGLE && LA295_0 <= AT_SIGN)||(LA295_0 >= BOTTOMCENTER_SYM && LA295_0 <= BOTTOMRIGHT_SYM)||(LA295_0 >= CHARSET_SYM && LA295_0 <= COMMA)||(LA295_0 >= COUNTER_STYLE_SYM && LA295_0 <= CP_NOT_EQ)||(LA295_0 >= DCOLON && LA295_0 <= DOT)||LA295_0==EMS||LA295_0==EXS||(LA295_0 >= FONT_FACE_SYM && LA295_0 <= FREQ)||(LA295_0 >= GEN && LA295_0 <= GREATER_OR_EQ)||(LA295_0 >= HASH && LA295_0 <= HASH_SYMBOL)||(LA295_0 >= IDENT && LA295_0 <= IMPORT_SYM)||(LA295_0 >= LBRACE && LA295_0 <= LESS_REST)||LA295_0==LPAREN||LA295_0==MEDIA_SYM||LA295_0==MOZ_DOCUMENT_SYM||LA295_0==NAMESPACE_SYM||(LA295_0 >= NOT && LA295_0 <= NUMBER)||(LA295_0 >= PAGE_SYM && LA295_0 <= PIPE)||LA295_0==RBRACE||(LA295_0 >= REM && LA295_0 <= RPAREN)||(LA295_0 >= SASS_AT_ROOT && LA295_0 <= SASS_ELSE)||(LA295_0 >= SASS_EXTEND && LA295_0 <= SASS_MIXIN)||(LA295_0 >= SASS_RETURN && LA295_0 <= SEMI)||LA295_0==STRING||(LA295_0 >= TILDE && LA295_0 <= TOPRIGHT_SYM)||LA295_0==URI||LA295_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA295_0==MINUS) ) {s = 13;}
						else if ( (LA295_0==PLUS) ) {s = 39;}
						else if ( (LA295_0==STAR) ) {s = 49;}
						else if ( (LA295_0==COMMENT||LA295_0==NL) ) {s = 72;}
						else if ( (LA295_0==SOLIDUS) && (synpred43_Css3())) {s = 73;}
						 
						input.seek(index295_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA295_1 = input.LA(1);
						 
						int index295_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index295_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA295_13 = input.LA(1);
						 
						int index295_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index295_13);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA295_39 = input.LA(1);
						 
						int index295_39 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index295_39);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA295_49 = input.LA(1);
						 
						int index295_49 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index295_49);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA295_72 = input.LA(1);
						 
						int index295_72 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index295_72);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 295, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA300_eotS =
		"\6\uffff";
	static final String DFA300_eofS =
		"\6\uffff";
	static final String DFA300_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA300_maxS =
		"\1\u0091\1\u0092\3\uffff\1\u0092";
	static final String DFA300_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA300_specialS =
		"\6\uffff}>";
	static final String[] DFA300_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\3\1\2\7\uffff"+
			"\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5"
	};

	static final short[] DFA300_eot = DFA.unpackEncodedString(DFA300_eotS);
	static final short[] DFA300_eof = DFA.unpackEncodedString(DFA300_eofS);
	static final char[] DFA300_min = DFA.unpackEncodedStringToUnsignedChars(DFA300_minS);
	static final char[] DFA300_max = DFA.unpackEncodedStringToUnsignedChars(DFA300_maxS);
	static final short[] DFA300_accept = DFA.unpackEncodedString(DFA300_acceptS);
	static final short[] DFA300_special = DFA.unpackEncodedString(DFA300_specialS);
	static final short[][] DFA300_transition;

	static {
		int numStates = DFA300_transitionS.length;
		DFA300_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA300_transition[i] = DFA.unpackEncodedString(DFA300_transitionS[i]);
		}
	}

	protected class DFA300 extends DFA {

		public DFA300(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 300;
			this.eot = DFA300_eot;
			this.eof = DFA300_eof;
			this.min = DFA300_min;
			this.max = DFA300_max;
			this.accept = DFA300_accept;
			this.special = DFA300_special;
			this.transition = DFA300_transition;
		}
		@Override
		public String getDescription() {
			return "1116:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA307_eotS =
		"\4\uffff";
	static final String DFA307_eofS =
		"\4\uffff";
	static final String DFA307_minS =
		"\2\25\2\uffff";
	static final String DFA307_maxS =
		"\2\u0092\2\uffff";
	static final String DFA307_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA307_specialS =
		"\4\uffff}>";
	static final String[] DFA307_transitionS = {
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA307_eot = DFA.unpackEncodedString(DFA307_eotS);
	static final short[] DFA307_eof = DFA.unpackEncodedString(DFA307_eofS);
	static final char[] DFA307_min = DFA.unpackEncodedStringToUnsignedChars(DFA307_minS);
	static final char[] DFA307_max = DFA.unpackEncodedStringToUnsignedChars(DFA307_maxS);
	static final short[] DFA307_accept = DFA.unpackEncodedString(DFA307_acceptS);
	static final short[] DFA307_special = DFA.unpackEncodedString(DFA307_specialS);
	static final short[][] DFA307_transition;

	static {
		int numStates = DFA307_transitionS.length;
		DFA307_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA307_transition[i] = DFA.unpackEncodedString(DFA307_transitionS[i]);
		}
	}

	protected class DFA307 extends DFA {

		public DFA307(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 307;
			this.eot = DFA307_eot;
			this.eof = DFA307_eof;
			this.min = DFA307_min;
			this.max = DFA307_max;
			this.accept = DFA307_accept;
			this.special = DFA307_special;
			this.transition = DFA307_transition;
		}
		@Override
		public String getDescription() {
			return "1132:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA311_eotS =
		"\4\uffff";
	static final String DFA311_eofS =
		"\4\uffff";
	static final String DFA311_minS =
		"\2\25\2\uffff";
	static final String DFA311_maxS =
		"\2\u0092\2\uffff";
	static final String DFA311_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA311_specialS =
		"\4\uffff}>";
	static final String[] DFA311_transitionS = {
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA311_eot = DFA.unpackEncodedString(DFA311_eotS);
	static final short[] DFA311_eof = DFA.unpackEncodedString(DFA311_eofS);
	static final char[] DFA311_min = DFA.unpackEncodedStringToUnsignedChars(DFA311_minS);
	static final char[] DFA311_max = DFA.unpackEncodedStringToUnsignedChars(DFA311_maxS);
	static final short[] DFA311_accept = DFA.unpackEncodedString(DFA311_acceptS);
	static final short[] DFA311_special = DFA.unpackEncodedString(DFA311_specialS);
	static final short[][] DFA311_transition;

	static {
		int numStates = DFA311_transitionS.length;
		DFA311_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA311_transition[i] = DFA.unpackEncodedString(DFA311_transitionS[i]);
		}
	}

	protected class DFA311 extends DFA {

		public DFA311(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 311;
			this.eot = DFA311_eot;
			this.eof = DFA311_eof;
			this.min = DFA311_min;
			this.max = DFA311_max;
			this.accept = DFA311_accept;
			this.special = DFA311_special;
			this.transition = DFA311_transition;
		}
		@Override
		public String getDescription() {
			return "1134:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA322_eotS =
		"\4\uffff";
	static final String DFA322_eofS =
		"\2\3\2\uffff";
	static final String DFA322_minS =
		"\2\6\2\uffff";
	static final String DFA322_maxS =
		"\2\u0092\2\uffff";
	static final String DFA322_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA322_specialS =
		"\4\uffff}>";
	static final String[] DFA322_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA322_eot = DFA.unpackEncodedString(DFA322_eotS);
	static final short[] DFA322_eof = DFA.unpackEncodedString(DFA322_eofS);
	static final char[] DFA322_min = DFA.unpackEncodedStringToUnsignedChars(DFA322_minS);
	static final char[] DFA322_max = DFA.unpackEncodedStringToUnsignedChars(DFA322_maxS);
	static final short[] DFA322_accept = DFA.unpackEncodedString(DFA322_acceptS);
	static final short[] DFA322_special = DFA.unpackEncodedString(DFA322_specialS);
	static final short[][] DFA322_transition;

	static {
		int numStates = DFA322_transitionS.length;
		DFA322_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA322_transition[i] = DFA.unpackEncodedString(DFA322_transitionS[i]);
		}
	}

	protected class DFA322 extends DFA {

		public DFA322(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 322;
			this.eot = DFA322_eot;
			this.eof = DFA322_eof;
			this.min = DFA322_min;
			this.max = DFA322_max;
			this.accept = DFA322_accept;
			this.special = DFA322_special;
			this.transition = DFA322_transition;
		}
		@Override
		public String getDescription() {
			return "1146:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA324_eotS =
		"\4\uffff";
	static final String DFA324_eofS =
		"\2\3\2\uffff";
	static final String DFA324_minS =
		"\2\6\2\uffff";
	static final String DFA324_maxS =
		"\2\u0092\2\uffff";
	static final String DFA324_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA324_specialS =
		"\4\uffff}>";
	static final String[] DFA324_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3\2\uffff\1\3"+
			"\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff"+
			"\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3\2\uffff\1\3"+
			"\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff"+
			"\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA324_eot = DFA.unpackEncodedString(DFA324_eotS);
	static final short[] DFA324_eof = DFA.unpackEncodedString(DFA324_eofS);
	static final char[] DFA324_min = DFA.unpackEncodedStringToUnsignedChars(DFA324_minS);
	static final char[] DFA324_max = DFA.unpackEncodedStringToUnsignedChars(DFA324_maxS);
	static final short[] DFA324_accept = DFA.unpackEncodedString(DFA324_acceptS);
	static final short[] DFA324_special = DFA.unpackEncodedString(DFA324_specialS);
	static final short[][] DFA324_transition;

	static {
		int numStates = DFA324_transitionS.length;
		DFA324_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA324_transition[i] = DFA.unpackEncodedString(DFA324_transitionS[i]);
		}
	}

	protected class DFA324 extends DFA {

		public DFA324(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 324;
			this.eot = DFA324_eot;
			this.eof = DFA324_eof;
			this.min = DFA324_min;
			this.max = DFA324_max;
			this.accept = DFA324_accept;
			this.special = DFA324_special;
			this.transition = DFA324_transition;
		}
		@Override
		public String getDescription() {
			return "1146:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA337_eotS =
		"\7\uffff";
	static final String DFA337_eofS =
		"\7\uffff";
	static final String DFA337_minS =
		"\3\5\1\uffff\1\5\1\uffff\1\5";
	static final String DFA337_maxS =
		"\1\u0091\2\u0092\1\uffff\1\u0092\1\uffff\1\u0092";
	static final String DFA337_acceptS =
		"\3\uffff\1\2\1\uffff\1\1\1\uffff";
	static final String DFA337_specialS =
		"\7\uffff}>";
	static final String[] DFA337_transitionS = {
			"\1\3\1\1\1\3\2\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\1\1\1\3\1\uffff\1\3\3\uffff\2\3\2\uffff\2\3"+
			"\1\1\5\uffff\1\3\1\uffff\3\1\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\1"+
			"\1\3\1\1\5\uffff\1\1\4\uffff\2\3\3\uffff\1\1\2\3\1\uffff\1\3\4\uffff"+
			"\2\3\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2\1\1\uffff\3\1"+
			"\1\uffff\1\1\1\2\2\1\3\uffff\1\3\1\uffff\2\3\5\1\2\uffff\1\3\3\uffff"+
			"\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6"
	};

	static final short[] DFA337_eot = DFA.unpackEncodedString(DFA337_eotS);
	static final short[] DFA337_eof = DFA.unpackEncodedString(DFA337_eofS);
	static final char[] DFA337_min = DFA.unpackEncodedStringToUnsignedChars(DFA337_minS);
	static final char[] DFA337_max = DFA.unpackEncodedStringToUnsignedChars(DFA337_maxS);
	static final short[] DFA337_accept = DFA.unpackEncodedString(DFA337_acceptS);
	static final short[] DFA337_special = DFA.unpackEncodedString(DFA337_specialS);
	static final short[][] DFA337_transition;

	static {
		int numStates = DFA337_transitionS.length;
		DFA337_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA337_transition[i] = DFA.unpackEncodedString(DFA337_transitionS[i]);
		}
	}

	protected class DFA337 extends DFA {

		public DFA337(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 337;
			this.eot = DFA337_eot;
			this.eof = DFA337_eof;
			this.min = DFA337_min;
			this.max = DFA337_max;
			this.accept = DFA337_accept;
			this.special = DFA337_special;
			this.transition = DFA337_transition;
		}
		@Override
		public String getDescription() {
			return "1172:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA340_eotS =
		"\5\uffff";
	static final String DFA340_eofS =
		"\5\uffff";
	static final String DFA340_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA340_maxS =
		"\1\177\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA340_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA340_specialS =
		"\5\uffff}>";
	static final String[] DFA340_transitionS = {
			"\1\1\3\uffff\1\2\53\uffff\1\2\43\uffff\1\2\26\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			""
	};

	static final short[] DFA340_eot = DFA.unpackEncodedString(DFA340_eotS);
	static final short[] DFA340_eof = DFA.unpackEncodedString(DFA340_eofS);
	static final char[] DFA340_min = DFA.unpackEncodedStringToUnsignedChars(DFA340_minS);
	static final char[] DFA340_max = DFA.unpackEncodedStringToUnsignedChars(DFA340_maxS);
	static final short[] DFA340_accept = DFA.unpackEncodedString(DFA340_acceptS);
	static final short[] DFA340_special = DFA.unpackEncodedString(DFA340_specialS);
	static final short[][] DFA340_transition;

	static {
		int numStates = DFA340_transitionS.length;
		DFA340_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA340_transition[i] = DFA.unpackEncodedString(DFA340_transitionS[i]);
		}
	}

	protected class DFA340 extends DFA {

		public DFA340(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 340;
			this.eot = DFA340_eot;
			this.eof = DFA340_eof;
			this.min = DFA340_min;
			this.max = DFA340_max;
			this.accept = DFA340_accept;
			this.special = DFA340_special;
			this.transition = DFA340_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1187:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA356_eotS =
		"\4\uffff";
	static final String DFA356_eofS =
		"\4\uffff";
	static final String DFA356_minS =
		"\2\24\2\uffff";
	static final String DFA356_maxS =
		"\2\u0092\2\uffff";
	static final String DFA356_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA356_specialS =
		"\4\uffff}>";
	static final String[] DFA356_transitionS = {
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA356_eot = DFA.unpackEncodedString(DFA356_eotS);
	static final short[] DFA356_eof = DFA.unpackEncodedString(DFA356_eofS);
	static final char[] DFA356_min = DFA.unpackEncodedStringToUnsignedChars(DFA356_minS);
	static final char[] DFA356_max = DFA.unpackEncodedStringToUnsignedChars(DFA356_maxS);
	static final short[] DFA356_accept = DFA.unpackEncodedString(DFA356_acceptS);
	static final short[] DFA356_special = DFA.unpackEncodedString(DFA356_specialS);
	static final short[][] DFA356_transition;

	static {
		int numStates = DFA356_transitionS.length;
		DFA356_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA356_transition[i] = DFA.unpackEncodedString(DFA356_transitionS[i]);
		}
	}

	protected class DFA356 extends DFA {

		public DFA356(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 356;
			this.eot = DFA356_eot;
			this.eof = DFA356_eof;
			this.min = DFA356_min;
			this.max = DFA356_max;
			this.accept = DFA356_accept;
			this.special = DFA356_special;
			this.transition = DFA356_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1203:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA383_eotS =
		"\4\uffff";
	static final String DFA383_eofS =
		"\4\uffff";
	static final String DFA383_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA383_maxS =
		"\2\u0092\2\uffff";
	static final String DFA383_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA383_specialS =
		"\4\uffff}>";
	static final String[] DFA383_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\2\35\uffff\1\2\22\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\3\5\2"+
			"\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA383_eot = DFA.unpackEncodedString(DFA383_eotS);
	static final short[] DFA383_eof = DFA.unpackEncodedString(DFA383_eofS);
	static final char[] DFA383_min = DFA.unpackEncodedStringToUnsignedChars(DFA383_minS);
	static final char[] DFA383_max = DFA.unpackEncodedStringToUnsignedChars(DFA383_maxS);
	static final short[] DFA383_accept = DFA.unpackEncodedString(DFA383_acceptS);
	static final short[] DFA383_special = DFA.unpackEncodedString(DFA383_specialS);
	static final short[][] DFA383_transition;

	static {
		int numStates = DFA383_transitionS.length;
		DFA383_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA383_transition[i] = DFA.unpackEncodedString(DFA383_transitionS[i]);
		}
	}

	protected class DFA383 extends DFA {

		public DFA383(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 383;
			this.eot = DFA383_eot;
			this.eof = DFA383_eof;
			this.min = DFA383_min;
			this.max = DFA383_max;
			this.accept = DFA383_accept;
			this.special = DFA383_special;
			this.transition = DFA383_transition;
		}
		@Override
		public String getDescription() {
			return "1279:43: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA389_eotS =
		"\10\uffff";
	static final String DFA389_eofS =
		"\2\4\6\uffff";
	static final String DFA389_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA389_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA389_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA389_specialS =
		"\10\uffff}>";
	static final String[] DFA389_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4\1\uffff\3\4"+
			"\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff\3\4\1\uffff"+
			"\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA389_eot = DFA.unpackEncodedString(DFA389_eotS);
	static final short[] DFA389_eof = DFA.unpackEncodedString(DFA389_eofS);
	static final char[] DFA389_min = DFA.unpackEncodedStringToUnsignedChars(DFA389_minS);
	static final char[] DFA389_max = DFA.unpackEncodedStringToUnsignedChars(DFA389_maxS);
	static final short[] DFA389_accept = DFA.unpackEncodedString(DFA389_acceptS);
	static final short[] DFA389_special = DFA.unpackEncodedString(DFA389_specialS);
	static final short[][] DFA389_transition;

	static {
		int numStates = DFA389_transitionS.length;
		DFA389_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA389_transition[i] = DFA.unpackEncodedString(DFA389_transitionS[i]);
		}
	}

	protected class DFA389 extends DFA {

		public DFA389(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 389;
			this.eot = DFA389_eot;
			this.eof = DFA389_eof;
			this.min = DFA389_min;
			this.max = DFA389_max;
			this.accept = DFA389_accept;
			this.special = DFA389_special;
			this.transition = DFA389_transition;
		}
		@Override
		public String getDescription() {
			return "1304:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA397_eotS =
		"\5\uffff";
	static final String DFA397_eofS =
		"\5\uffff";
	static final String DFA397_minS =
		"\1\157\1\25\1\uffff\1\25\1\uffff";
	static final String DFA397_maxS =
		"\1\160\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA397_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA397_specialS =
		"\5\uffff}>";
	static final String[] DFA397_transitionS = {
			"\1\1\1\2",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA397_eot = DFA.unpackEncodedString(DFA397_eotS);
	static final short[] DFA397_eof = DFA.unpackEncodedString(DFA397_eofS);
	static final char[] DFA397_min = DFA.unpackEncodedStringToUnsignedChars(DFA397_minS);
	static final char[] DFA397_max = DFA.unpackEncodedStringToUnsignedChars(DFA397_maxS);
	static final short[] DFA397_accept = DFA.unpackEncodedString(DFA397_acceptS);
	static final short[] DFA397_special = DFA.unpackEncodedString(DFA397_specialS);
	static final short[][] DFA397_transition;

	static {
		int numStates = DFA397_transitionS.length;
		DFA397_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA397_transition[i] = DFA.unpackEncodedString(DFA397_transitionS[i]);
		}
	}

	protected class DFA397 extends DFA {

		public DFA397(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 397;
			this.eot = DFA397_eot;
			this.eof = DFA397_eof;
			this.min = DFA397_min;
			this.max = DFA397_max;
			this.accept = DFA397_accept;
			this.special = DFA397_special;
			this.transition = DFA397_transition;
		}
		@Override
		public String getDescription() {
			return "1307:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA396_eotS =
		"\10\uffff";
	static final String DFA396_eofS =
		"\2\4\6\uffff";
	static final String DFA396_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA396_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA396_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA396_specialS =
		"\10\uffff}>";
	static final String[] DFA396_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4\1\uffff\3\4"+
			"\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff\3\4\1\uffff"+
			"\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA396_eot = DFA.unpackEncodedString(DFA396_eotS);
	static final short[] DFA396_eof = DFA.unpackEncodedString(DFA396_eofS);
	static final char[] DFA396_min = DFA.unpackEncodedStringToUnsignedChars(DFA396_minS);
	static final char[] DFA396_max = DFA.unpackEncodedStringToUnsignedChars(DFA396_maxS);
	static final short[] DFA396_accept = DFA.unpackEncodedString(DFA396_acceptS);
	static final short[] DFA396_special = DFA.unpackEncodedString(DFA396_specialS);
	static final short[][] DFA396_transition;

	static {
		int numStates = DFA396_transitionS.length;
		DFA396_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA396_transition[i] = DFA.unpackEncodedString(DFA396_transitionS[i]);
		}
	}

	protected class DFA396 extends DFA {

		public DFA396(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 396;
			this.eot = DFA396_eot;
			this.eof = DFA396_eof;
			this.min = DFA396_min;
			this.max = DFA396_max;
			this.accept = DFA396_accept;
			this.special = DFA396_special;
			this.transition = DFA396_transition;
		}
		@Override
		public String getDescription() {
			return "1311:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA400_eotS =
		"\4\uffff";
	static final String DFA400_eofS =
		"\4\uffff";
	static final String DFA400_minS =
		"\2\5\2\uffff";
	static final String DFA400_maxS =
		"\2\u0092\2\uffff";
	static final String DFA400_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA400_specialS =
		"\4\uffff}>";
	static final String[] DFA400_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\3\3\5\uffff\1\3\1\uffff\4\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\3\3\5\uffff\1\3\1\uffff\4\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA400_eot = DFA.unpackEncodedString(DFA400_eotS);
	static final short[] DFA400_eof = DFA.unpackEncodedString(DFA400_eofS);
	static final char[] DFA400_min = DFA.unpackEncodedStringToUnsignedChars(DFA400_minS);
	static final char[] DFA400_max = DFA.unpackEncodedStringToUnsignedChars(DFA400_maxS);
	static final short[] DFA400_accept = DFA.unpackEncodedString(DFA400_acceptS);
	static final short[] DFA400_special = DFA.unpackEncodedString(DFA400_specialS);
	static final short[][] DFA400_transition;

	static {
		int numStates = DFA400_transitionS.length;
		DFA400_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA400_transition[i] = DFA.unpackEncodedString(DFA400_transitionS[i]);
		}
	}

	protected class DFA400 extends DFA {

		public DFA400(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 400;
			this.eot = DFA400_eot;
			this.eof = DFA400_eof;
			this.min = DFA400_min;
			this.max = DFA400_max;
			this.accept = DFA400_accept;
			this.special = DFA400_special;
			this.transition = DFA400_transition;
		}
		@Override
		public String getDescription() {
			return "1326:102: ( ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA405_eotS =
		"\4\uffff";
	static final String DFA405_eofS =
		"\4\uffff";
	static final String DFA405_minS =
		"\2\24\2\uffff";
	static final String DFA405_maxS =
		"\2\u0092\2\uffff";
	static final String DFA405_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA405_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA405_transitionS = {
			"\1\2\1\1\73\uffff\1\1\100\uffff\1\1",
			"\1\2\1\1\34\uffff\1\3\36\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA405_eot = DFA.unpackEncodedString(DFA405_eotS);
	static final short[] DFA405_eof = DFA.unpackEncodedString(DFA405_eofS);
	static final char[] DFA405_min = DFA.unpackEncodedStringToUnsignedChars(DFA405_minS);
	static final char[] DFA405_max = DFA.unpackEncodedStringToUnsignedChars(DFA405_maxS);
	static final short[] DFA405_accept = DFA.unpackEncodedString(DFA405_acceptS);
	static final short[] DFA405_special = DFA.unpackEncodedString(DFA405_specialS);
	static final short[][] DFA405_transition;

	static {
		int numStates = DFA405_transitionS.length;
		DFA405_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA405_transition[i] = DFA.unpackEncodedString(DFA405_transitionS[i]);
		}
	}

	protected class DFA405 extends DFA {

		public DFA405(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 405;
			this.eot = DFA405_eot;
			this.eof = DFA405_eof;
			this.min = DFA405_min;
			this.max = DFA405_max;
			this.accept = DFA405_accept;
			this.special = DFA405_special;
			this.transition = DFA405_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1331:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA405_0 = input.LA(1);
						 
						int index405_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {s = 1;}
						else if ( (LA405_0==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index405_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA405_1 = input.LA(1);
						 
						int index405_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA405_1==IDENT) ) {s = 3;}
						else if ( (LA405_1==COMMENT||LA405_1==NL||LA405_1==WS) ) {s = 1;}
						else if ( (LA405_1==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index405_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 405, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA425_eotS =
		"\4\uffff";
	static final String DFA425_eofS =
		"\4\uffff";
	static final String DFA425_minS =
		"\2\25\2\uffff";
	static final String DFA425_maxS =
		"\2\u0092\2\uffff";
	static final String DFA425_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA425_specialS =
		"\4\uffff}>";
	static final String[] DFA425_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA425_eot = DFA.unpackEncodedString(DFA425_eotS);
	static final short[] DFA425_eof = DFA.unpackEncodedString(DFA425_eofS);
	static final char[] DFA425_min = DFA.unpackEncodedStringToUnsignedChars(DFA425_minS);
	static final char[] DFA425_max = DFA.unpackEncodedStringToUnsignedChars(DFA425_maxS);
	static final short[] DFA425_accept = DFA.unpackEncodedString(DFA425_acceptS);
	static final short[] DFA425_special = DFA.unpackEncodedString(DFA425_specialS);
	static final short[][] DFA425_transition;

	static {
		int numStates = DFA425_transitionS.length;
		DFA425_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA425_transition[i] = DFA.unpackEncodedString(DFA425_transitionS[i]);
		}
	}

	protected class DFA425 extends DFA {

		public DFA425(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 425;
			this.eot = DFA425_eot;
			this.eof = DFA425_eof;
			this.min = DFA425_min;
			this.max = DFA425_max;
			this.accept = DFA425_accept;
			this.special = DFA425_special;
			this.transition = DFA425_transition;
		}
		@Override
		public String getDescription() {
			return "422:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA432_eotS =
		"\6\uffff";
	static final String DFA432_eofS =
		"\6\uffff";
	static final String DFA432_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA432_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA432_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA432_specialS =
		"\6\uffff}>";
	static final String[] DFA432_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\2"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15\uffff\1\3",
			"",
			""
	};

	static final short[] DFA432_eot = DFA.unpackEncodedString(DFA432_eotS);
	static final short[] DFA432_eof = DFA.unpackEncodedString(DFA432_eofS);
	static final char[] DFA432_min = DFA.unpackEncodedStringToUnsignedChars(DFA432_minS);
	static final char[] DFA432_max = DFA.unpackEncodedStringToUnsignedChars(DFA432_maxS);
	static final short[] DFA432_accept = DFA.unpackEncodedString(DFA432_acceptS);
	static final short[] DFA432_special = DFA.unpackEncodedString(DFA432_specialS);
	static final short[][] DFA432_transition;

	static {
		int numStates = DFA432_transitionS.length;
		DFA432_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA432_transition[i] = DFA.unpackEncodedString(DFA432_transitionS[i]);
		}
	}

	protected class DFA432 extends DFA {

		public DFA432(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 432;
			this.eot = DFA432_eot;
			this.eof = DFA432_eof;
			this.min = DFA432_min;
			this.max = DFA432_max;
			this.accept = DFA432_accept;
			this.special = DFA432_special;
			this.transition = DFA432_transition;
		}
		@Override
		public String getDescription() {
			return "424:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA427_eotS =
		"\4\uffff";
	static final String DFA427_eofS =
		"\4\uffff";
	static final String DFA427_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA427_maxS =
		"\2\u0092\2\uffff";
	static final String DFA427_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA427_specialS =
		"\4\uffff}>";
	static final String[] DFA427_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\2"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA427_eot = DFA.unpackEncodedString(DFA427_eotS);
	static final short[] DFA427_eof = DFA.unpackEncodedString(DFA427_eofS);
	static final char[] DFA427_min = DFA.unpackEncodedStringToUnsignedChars(DFA427_minS);
	static final char[] DFA427_max = DFA.unpackEncodedStringToUnsignedChars(DFA427_maxS);
	static final short[] DFA427_accept = DFA.unpackEncodedString(DFA427_acceptS);
	static final short[] DFA427_special = DFA.unpackEncodedString(DFA427_specialS);
	static final short[][] DFA427_transition;

	static {
		int numStates = DFA427_transitionS.length;
		DFA427_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA427_transition[i] = DFA.unpackEncodedString(DFA427_transitionS[i]);
		}
	}

	protected class DFA427 extends DFA {

		public DFA427(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 427;
			this.eot = DFA427_eot;
			this.eof = DFA427_eof;
			this.min = DFA427_min;
			this.max = DFA427_max;
			this.accept = DFA427_accept;
			this.special = DFA427_special;
			this.transition = DFA427_transition;
		}
		@Override
		public String getDescription() {
			return "424:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA449_eotS =
		"\6\uffff";
	static final String DFA449_eofS =
		"\6\uffff";
	static final String DFA449_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA449_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA449_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA449_specialS =
		"\6\uffff}>";
	static final String[] DFA449_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\2\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\2"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15\uffff\1\3",
			"",
			""
	};

	static final short[] DFA449_eot = DFA.unpackEncodedString(DFA449_eotS);
	static final short[] DFA449_eof = DFA.unpackEncodedString(DFA449_eofS);
	static final char[] DFA449_min = DFA.unpackEncodedStringToUnsignedChars(DFA449_minS);
	static final char[] DFA449_max = DFA.unpackEncodedStringToUnsignedChars(DFA449_maxS);
	static final short[] DFA449_accept = DFA.unpackEncodedString(DFA449_acceptS);
	static final short[] DFA449_special = DFA.unpackEncodedString(DFA449_specialS);
	static final short[][] DFA449_transition;

	static {
		int numStates = DFA449_transitionS.length;
		DFA449_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA449_transition[i] = DFA.unpackEncodedString(DFA449_transitionS[i]);
		}
	}

	protected class DFA449 extends DFA {

		public DFA449(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 449;
			this.eot = DFA449_eot;
			this.eof = DFA449_eof;
			this.min = DFA449_min;
			this.max = DFA449_max;
			this.accept = DFA449_accept;
			this.special = DFA449_special;
			this.transition = DFA449_transition;
		}
		@Override
		public String getDescription() {
			return "696:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA444_eotS =
		"\4\uffff";
	static final String DFA444_eofS =
		"\4\uffff";
	static final String DFA444_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA444_maxS =
		"\2\u0092\2\uffff";
	static final String DFA444_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA444_specialS =
		"\4\uffff}>";
	static final String[] DFA444_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\2"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA444_eot = DFA.unpackEncodedString(DFA444_eotS);
	static final short[] DFA444_eof = DFA.unpackEncodedString(DFA444_eofS);
	static final char[] DFA444_min = DFA.unpackEncodedStringToUnsignedChars(DFA444_minS);
	static final char[] DFA444_max = DFA.unpackEncodedStringToUnsignedChars(DFA444_maxS);
	static final short[] DFA444_accept = DFA.unpackEncodedString(DFA444_acceptS);
	static final short[] DFA444_special = DFA.unpackEncodedString(DFA444_specialS);
	static final short[][] DFA444_transition;

	static {
		int numStates = DFA444_transitionS.length;
		DFA444_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA444_transition[i] = DFA.unpackEncodedString(DFA444_transitionS[i]);
		}
	}

	protected class DFA444 extends DFA {

		public DFA444(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 444;
			this.eot = DFA444_eot;
			this.eof = DFA444_eof;
			this.min = DFA444_min;
			this.max = DFA444_max;
			this.accept = DFA444_accept;
			this.special = DFA444_special;
			this.transition = DFA444_transition;
		}
		@Override
		public String getDescription() {
			return "696:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA458_eotS =
		"\5\uffff";
	static final String DFA458_eofS =
		"\5\uffff";
	static final String DFA458_minS =
		"\2\5\3\uffff";
	static final String DFA458_maxS =
		"\2\u0092\3\uffff";
	static final String DFA458_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA458_specialS =
		"\5\uffff}>";
	static final String[] DFA458_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA458_eot = DFA.unpackEncodedString(DFA458_eotS);
	static final short[] DFA458_eof = DFA.unpackEncodedString(DFA458_eofS);
	static final char[] DFA458_min = DFA.unpackEncodedStringToUnsignedChars(DFA458_minS);
	static final char[] DFA458_max = DFA.unpackEncodedStringToUnsignedChars(DFA458_maxS);
	static final short[] DFA458_accept = DFA.unpackEncodedString(DFA458_acceptS);
	static final short[] DFA458_special = DFA.unpackEncodedString(DFA458_specialS);
	static final short[][] DFA458_transition;

	static {
		int numStates = DFA458_transitionS.length;
		DFA458_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA458_transition[i] = DFA.unpackEncodedString(DFA458_transitionS[i]);
		}
	}

	protected class DFA458 extends DFA {

		public DFA458(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 458;
			this.eot = DFA458_eot;
			this.eof = DFA458_eof;
			this.min = DFA458_min;
			this.max = DFA458_max;
			this.accept = DFA458_accept;
			this.special = DFA458_special;
			this.transition = DFA458_transition;
		}
		@Override
		public String getDescription() {
			return "934:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA463_eotS =
		"\5\uffff";
	static final String DFA463_eofS =
		"\5\uffff";
	static final String DFA463_minS =
		"\2\5\3\uffff";
	static final String DFA463_maxS =
		"\2\u0092\3\uffff";
	static final String DFA463_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA463_specialS =
		"\5\uffff}>";
	static final String[] DFA463_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA463_eot = DFA.unpackEncodedString(DFA463_eotS);
	static final short[] DFA463_eof = DFA.unpackEncodedString(DFA463_eofS);
	static final char[] DFA463_min = DFA.unpackEncodedStringToUnsignedChars(DFA463_minS);
	static final char[] DFA463_max = DFA.unpackEncodedStringToUnsignedChars(DFA463_maxS);
	static final short[] DFA463_accept = DFA.unpackEncodedString(DFA463_acceptS);
	static final short[] DFA463_special = DFA.unpackEncodedString(DFA463_specialS);
	static final short[][] DFA463_transition;

	static {
		int numStates = DFA463_transitionS.length;
		DFA463_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA463_transition[i] = DFA.unpackEncodedString(DFA463_transitionS[i]);
		}
	}

	protected class DFA463 extends DFA {

		public DFA463(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 463;
			this.eot = DFA463_eot;
			this.eof = DFA463_eof;
			this.min = DFA463_min;
			this.max = DFA463_max;
			this.accept = DFA463_accept;
			this.special = DFA463_special;
			this.transition = DFA463_transition;
		}
		@Override
		public String getDescription() {
			return "1017:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet129 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_charSet_in_styleSheet139 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_styleSheet141 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_imports_in_styleSheet155 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet166 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_styleSheet177 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces202 = new BitSet(new long[]{0x0000000000200002L,0x0000000000030000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespaces204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace220 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace222 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace226 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace233 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespace235 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_namespace238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_charSet287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_charSetValue_in_charSet290 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_charSet292 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_charSet295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports323 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports325 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_imports328 = new BitSet(new long[]{0x0010000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0010000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem356 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem358 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem361 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem371 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem407 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem412 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem415 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem418 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem423 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem435 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem462 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000002004L});
	public static final BitSet FOLLOW_LPAREN_in_importItem468 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem470 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem472 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem474 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem479 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem489 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media510 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_media512 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_media530 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_media538 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media545 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_media547 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_media550 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_mediaBody_in_media560 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_media567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody601 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody611 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody614 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody618 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody645 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody647 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody666 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBody669 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody674 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem781 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem784 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem804 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem807 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem875 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem887 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem927 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem935 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem943 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem959 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem972 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList986 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList998 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1001 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1003 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1006 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1025 = new BitSet(new long[]{0x0004840000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1027 = new BitSet(new long[]{0x0004840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1034 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1038 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1043 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1046 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1057 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1061 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1064 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1069 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1114 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1120 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1138 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1140 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1143 = new BitSet(new long[]{0x0000000000280000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1145 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1148 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1151 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1172 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1175 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1177 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1286 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1296 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_body1299 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1303 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_body1330 = new BitSet(new long[]{0x7814CC80E0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1332 = new BitSet(new long[]{0x7814CC80E08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1412 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem1473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem1495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem1512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem1524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem1547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem1561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem1575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem1589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule1615 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule1623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule1631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule1639 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule1647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule1660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule1664 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule1668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId1678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId1682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId1690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId1694 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule1710 = new BitSet(new long[]{0x7414808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1712 = new BitSet(new long[]{0x7414808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule1717 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1719 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule1733 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule1744 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule1754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1765 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1772 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1774 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document1780 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1785 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1787 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document1794 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_moz_document1796 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_moz_document1801 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document1806 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1843 = new BitSet(new long[]{0x7014808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1845 = new BitSet(new long[]{0x7014808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes1848 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1850 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes1854 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1856 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1863 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1865 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes1872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1884 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1886 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock1890 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1893 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock1896 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock1900 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock1904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock1921 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock1923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1940 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1946 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1950 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1956 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors1959 = new BitSet(new long[]{0x0004000000200000L,0x0000000008020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1961 = new BitSet(new long[]{0x0004000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1968 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1974 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1978 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page1997 = new BitSet(new long[]{0x0404000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page1999 = new BitSet(new long[]{0x0404000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page2004 = new BitSet(new long[]{0x0400000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2006 = new BitSet(new long[]{0x0400000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page2013 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2015 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page2028 = new BitSet(new long[]{0x7014848000A47CC0L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page2030 = new BitSet(new long[]{0x7014848000847CC0L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2073 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2075 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2078 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_SEMI_in_page2084 = new BitSet(new long[]{0x7014848000A47CC0L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page2086 = new BitSet(new long[]{0x7014848000847CC0L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2091 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2093 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2096 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_page2111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2128 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2130 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2133 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2135 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2146 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_counterStyle2148 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2151 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2155 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2166 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2183 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fontFace2185 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace2196 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_fontFace2198 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace2201 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_fontFace2205 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace2216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin2230 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_margin2232 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin2235 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_margin2237 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin2240 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_margin2242 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin2245 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage2454 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage2456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property2540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property2550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property2558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property2566 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property2576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map2603 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map2605 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2607 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map2610 = new BitSet(new long[]{0x7014848000B47CC0L,0x7BB4DDE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map2612 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map2615 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map2634 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map2641 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2645 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map2648 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2654 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map2657 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name2681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs2715 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2725 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2728 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2732 = new BitSet(new long[]{0x7014848000947CC2L,0x7BB4DCE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2759 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2761 = new BitSet(new long[]{0x7014848000947CC2L,0x7BB4DCE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair2797 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair2800 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair2806 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_function_in_sass_map_pair2816 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair2819 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_sass_map_in_sass_map_pair2821 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2824 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair2827 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2829 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair2832 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2835 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair2838 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2880 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2883 = new BitSet(new long[]{0x0804CC00E0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2885 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2906 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2908 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_rule2910 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2912 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2917 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2921 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule2924 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2926 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2929 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2931 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule2934 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2952 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2964 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule2971 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_rule2973 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_rule2976 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_rule2986 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule2993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3027 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations3029 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations3035 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3040 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations3044 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations3046 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_ws_in_declarations3052 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0x7BBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations3055 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3061 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations3065 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3067 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_ws_in_declarations3073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3085 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3087 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration3116 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration3129 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration3141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration3204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3255 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration3267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3280 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3283 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3303 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3306 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration3325 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration3335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration3345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration3355 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration3365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration3375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration3385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration3395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration3403 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3437 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3440 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3443 = new BitSet(new long[]{0x0804CC00E0280080L,0x0008000060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3445 = new BitSet(new long[]{0x0804CC00E0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3448 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector3476 = new BitSet(new long[]{0x0804C400E0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3478 = new BitSet(new long[]{0x0804C400E0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3483 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_ws_in_selector3489 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_combinator_in_selector3492 = new BitSet(new long[]{0x0804C400E0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3494 = new BitSet(new long[]{0x0804C400E0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_selector3498 = new BitSet(new long[]{0x0804C400E0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3501 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_combinator_in_selector3516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3568 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3574 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3588 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3603 = new BitSet(new long[]{0x0800C000E0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3606 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3611 = new BitSet(new long[]{0x0004800000000080L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3616 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3622 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence3636 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3648 = new BitSet(new long[]{0x0800C000E0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3651 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3658 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3660 = new BitSet(new long[]{0x0800C000E0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred3685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred3689 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred3693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred3697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred3701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred3705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred3715 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector3757 = new BitSet(new long[]{0x0004040000000000L,0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_elementName_in_typeSelector3761 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix3776 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix3780 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix3784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent3816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent3830 = new BitSet(new long[]{0x0004000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent3853 = new BitSet(new long[]{0x0004000000000080L,0x0000000000000200L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent3855 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent3864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent3873 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent3885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent3897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId3921 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId3926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId3948 = new BitSet(new long[]{0x0004000000000080L,0x0000000000008200L});
	public static final BitSet FOLLOW_NAME_in_cssId3964 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId3984 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass4036 = new BitSet(new long[]{0x0004840000000080L,0x0000000000200200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass4064 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass4082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass4098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass4114 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass4130 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_cssClass4153 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute4209 = new BitSet(new long[]{0x0004000000200000L,0x0000000020020000L,0x0000000000040002L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute4216 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4219 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute4230 = new BitSet(new long[]{0x0020000410600200L,0x0000000401020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4232 = new BitSet(new long[]{0x0020000410400200L,0x0000000401000000L});
	public static final BitSet FOLLOW_set_in_slAttribute4266 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_slAttribute4446 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute4465 = new BitSet(new long[]{0x0000000000200000L,0x0000000400020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4483 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute4508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName4524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo4596 = new BitSet(new long[]{0x0004840000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_set_in_pseudo4659 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4719 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DDF85C430706L,0x00000000000627F6L});
	public static final BitSet FOLLOW_ws_in_pseudo4721 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DDF85C410706L,0x00000000000227F6L});
	public static final BitSet FOLLOW_expression_in_pseudo4727 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4729 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo4735 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo4803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo4841 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4846 = new BitSet(new long[]{0x0804C400E0280080L,0x0008010020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_pseudo4848 = new BitSet(new long[]{0x0804C400E0080080L,0x0008010020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_pseudo4852 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4854 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo4903 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4905 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4908 = new BitSet(new long[]{0x0804CC00E0280080L,0x0008010060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_pseudo4910 = new BitSet(new long[]{0x0804CC00E0080080L,0x0008010060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo4913 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4916 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4952 = new BitSet(new long[]{0x7014848000847CC0L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4955 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4957 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4960 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4962 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration4965 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4974 = new BitSet(new long[]{0x7014848000847CC0L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4977 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4979 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4982 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4984 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration4987 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4990 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration4993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue5033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue5041 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue5063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate5132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI5233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio5278 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression5295 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_expression5327 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_expression5332 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_expression5335 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_expression5337 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_expression5346 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_unaryOperator_in_term5371 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF81C430506L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_term5373 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF81C410506L,0x00000000000227F4L});
	public static final BitSet FOLLOW_function_in_term5402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term5415 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term5427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term5439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term5451 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term5463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term5475 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term5487 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term5499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term5511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term5523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term5535 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term5547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term5564 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term5576 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_term5578 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term5599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term5614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term5626 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term5638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term5652 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term5666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term5680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term5694 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term5708 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5735 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function5751 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_function5753 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_function5758 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_function5760 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributes_in_function5787 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function5818 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName5870 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName5872 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5876 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName5879 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5881 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5905 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5908 = new BitSet(new long[]{0x0000000000100000L,0x8000000000000000L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes5912 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes5918 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5921 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5924 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute5965 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5967 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute5970 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5976 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute5979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute5996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute6008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName6031 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName6034 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName6036 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName6056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6079 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6111 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue6119 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6121 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6130 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue6151 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor6165 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6225 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6227 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6230 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6232 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6257 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6259 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6262 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6264 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6267 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6271 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6274 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6280 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6283 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_set_in_cp_variable6323 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable6507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6537 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6556 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list6559 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6561 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6564 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression6600 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_expression6602 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6605 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_expression6607 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression6610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6626 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6650 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression6653 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6655 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6659 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6678 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6681 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression6699 = new BitSet(new long[]{0x7014848000B47CC0L,0x7BB4DDE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6701 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6704 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression6706 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression6709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator6730 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator6734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator6739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator6743 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator6747 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator6751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator6755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom6785 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6787 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom6818 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom6834 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6836 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom6840 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6842 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom6847 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6879 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions6886 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6888 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6922 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6964 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_cp_math_expression6967 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6977 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6980 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom7013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom7021 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom7032 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7034 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom7040 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7042 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom7045 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7047 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom7050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration7090 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration7097 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration7099 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration7104 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7110 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7112 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7115 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7118 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7123 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7126 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7150 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7152 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration7154 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7160 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7162 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7165 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7168 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7182 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration7185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call7221 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7223 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call7227 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call7231 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call7235 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call7243 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7255 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7258 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7260 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7263 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call7291 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7293 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7295 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7298 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7301 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7303 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7306 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7309 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7314 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call7317 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block7346 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE26C030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7348 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block7351 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block7362 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7377 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7379 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block7391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name7412 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7443 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args7447 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7455 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7458 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args7464 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7466 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_cp_mixin_call_args7471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg7503 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7505 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg7508 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7510 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7513 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7525 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7533 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7580 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7584 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7594 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7597 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7604 = new BitSet(new long[]{0x0000000001200002L,0x0000000000020010L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7612 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7620 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7628 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list7645 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg7676 = new BitSet(new long[]{0x0000000000280002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7678 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg7683 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_arg7685 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg7688 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg7703 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded7726 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7728 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7731 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7734 = new BitSet(new long[]{0x0004000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded7738 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded7742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7745 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7748 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_NOT_in_less_condition7774 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition7785 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_condition7787 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition7814 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition7818 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7821 = new BitSet(new long[]{0x0000180000000000L,0x0000010001000009L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition7825 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_less_condition7827 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition7830 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition7848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition7870 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7872 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition7875 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7877 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition7880 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7882 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition7885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name7907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7970 = new BitSet(new long[]{0x8004000040000082L,0x0000000000000200L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7973 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation8016 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation8018 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation8020 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation8023 = new BitSet(new long[]{0x0000000000200000L,0x0000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation8025 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation8028 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp8055 = new BitSet(new long[]{0x8004800040000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp8058 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var8105 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var8107 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var8109 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var8112 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var8114 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var8117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties8157 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8159 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties8162 = new BitSet(new long[]{0xF414C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8164 = new BitSet(new long[]{0xF414C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties8168 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8170 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties8175 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8177 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties8180 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties8182 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties8185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend8206 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8208 = new BitSet(new long[]{0x0804C400E0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend8210 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8213 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend8215 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8238 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector8240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug8262 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_debug8272 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug8274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error8295 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_error8297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_STRING_in_sass_error8299 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control8320 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control8324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control8328 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control8332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if8353 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_if8355 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if8358 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8360 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if8363 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8366 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if8369 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8392 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8394 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8397 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8411 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8413 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else8418 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else8425 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_else8428 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else8431 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8433 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8436 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8439 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else8442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression8465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for8486 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8488 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for8490 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8492 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8496 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8500 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8502 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8504 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8508 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8512 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8514 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8516 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for8519 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each8540 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8542 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each8544 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8546 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each8550 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8554 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each8557 = new BitSet(new long[]{0xF41CC5A240B47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_each8560 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each8563 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_each8567 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each8573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8594 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8606 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables8609 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8611 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8614 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while8639 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8641 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while8643 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8645 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while8648 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block8669 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_control_block8671 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block8674 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block8677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration8719 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8721 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration8723 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8725 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration8728 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8730 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration8733 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration8736 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8738 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration8741 = new BitSet(new long[]{0x7814CC80E0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8743 = new BitSet(new long[]{0x7814CC80E08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration8746 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration8749 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name8770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return8791 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return8793 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return8795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content8816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types8835 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when8858 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and8877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or8895 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only8913 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3365 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3429 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3432 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3483 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css3605 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css3608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css3706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css3713 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css3715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css3720 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css3723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css3726 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css3734 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css3744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css3762 = new BitSet(new long[]{0x0008000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3765 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3772 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css3775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css3798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css3823 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3826 = new BitSet(new long[]{0x0804CC00E0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css3828 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css3837 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css3841 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3843 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css3846 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3848 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css3851 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3853 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css3856 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3858 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css3861 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css3866 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3869 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css3872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css3884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css3991 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css3994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31290 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred11_Css31293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred12_Css31368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred12_Css31375 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred12_Css31377 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred12_Css31382 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred12_Css31388 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred12_Css31396 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFDFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred12_Css31408 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred13_Css31434 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred13_Css31436 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred13_Css31439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred14_Css31458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred15_Css31486 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31488 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred15_Css31491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred16_Css31508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css32719 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred17_Css32722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred18_Css32813 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred19_Css33113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred20_Css33125 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred21_Css33138 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred22_Css33152 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33155 = new BitSet(new long[]{0x0804CC00E0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred22_Css33157 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred22_Css33166 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred22_Css33170 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33172 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred22_Css33175 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33177 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred22_Css33180 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33182 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred22_Css33185 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33187 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred22_Css33190 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred22_Css33195 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33198 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred22_Css33201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred23_Css33213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred24_Css33230 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css33232 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred24_Css33235 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_set_in_synpred24_Css33247 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred25_Css33264 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred26_Css33276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred27_Css33297 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33595 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred28_Css33598 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred29_Css33633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33640 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred30_Css33643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred31_Css33754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35302 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35307 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_synpred32_Css35310 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35312 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred32_Css35321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred33_Css35394 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred33_Css35396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred33_Css35399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred34_Css35952 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35954 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_synpred34_Css35957 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred35_Css35992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36086 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36091 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred36_Css36094 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36096 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred36_Css36105 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36545 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred38_Css36548 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36550 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_synpred38_Css36553 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred39_Css36620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36643 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred40_Css36646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred41_Css36672 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred41_Css36675 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred42_Css36815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css36948 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_synpred43_Css36951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred44_Css37240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css37248 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred45_Css37251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred46_Css37367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred47_Css38599 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred47_Css38602 = new BitSet(new long[]{0x0000000000000002L});
}
