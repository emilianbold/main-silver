// $ANTLR 3.5.2 /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2016-03-17 13:14:42

/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", "INCLUDES", "INVALID", 
		"J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", 
		"LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", 
		"LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", 
		"MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", 
		"NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", 
		"PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", 
		"RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", 
		"SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FUNCTION", 
		"SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", "SASS_OPTIONAL", 
		"SASS_RETURN", "SASS_VAR", "SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", 
		"STAR", "STRING", "T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", 
		"TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URI", 
		"URL", "V", "W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int I=49;
	public static final int IDENT=50;
	public static final int IMPORTANT_SYM=51;
	public static final int IMPORT_SYM=52;
	public static final int INCLUDES=53;
	public static final int INVALID=54;
	public static final int J=55;
	public static final int K=56;
	public static final int L=57;
	public static final int LBRACE=58;
	public static final int LBRACKET=59;
	public static final int LEFTBOTTOM_SYM=60;
	public static final int LEFTMIDDLE_SYM=61;
	public static final int LEFTTOP_SYM=62;
	public static final int LENGTH=63;
	public static final int LESS=64;
	public static final int LESS_AND=65;
	public static final int LESS_JS_STRING=66;
	public static final int LESS_OR_EQ=67;
	public static final int LESS_REST=68;
	public static final int LINE_COMMENT=69;
	public static final int LPAREN=70;
	public static final int M=71;
	public static final int MEDIA_SYM=72;
	public static final int MINUS=73;
	public static final int MOZ_DOCUMENT_SYM=74;
	public static final int MOZ_DOMAIN=75;
	public static final int MOZ_REGEXP=76;
	public static final int MOZ_URL_PREFIX=77;
	public static final int N=78;
	public static final int NAME=79;
	public static final int NAMESPACE_SYM=80;
	public static final int NL=81;
	public static final int NMCHAR=82;
	public static final int NMSTART=83;
	public static final int NONASCII=84;
	public static final int NOT=85;
	public static final int NUMBER=86;
	public static final int O=87;
	public static final int OPEQ=88;
	public static final int P=89;
	public static final int PAGE_SYM=90;
	public static final int PERCENTAGE=91;
	public static final int PERCENTAGE_SYMBOL=92;
	public static final int PIPE=93;
	public static final int PLUS=94;
	public static final int Q=95;
	public static final int R=96;
	public static final int RBRACE=97;
	public static final int RBRACKET=98;
	public static final int REM=99;
	public static final int RESOLUTION=100;
	public static final int RIGHTBOTTOM_SYM=101;
	public static final int RIGHTMIDDLE_SYM=102;
	public static final int RIGHTTOP_SYM=103;
	public static final int RPAREN=104;
	public static final int S=105;
	public static final int SASS_AT_ROOT=106;
	public static final int SASS_CONTENT=107;
	public static final int SASS_DEBUG=108;
	public static final int SASS_DEFAULT=109;
	public static final int SASS_EACH=110;
	public static final int SASS_ELSE=111;
	public static final int SASS_ELSEIF=112;
	public static final int SASS_ERROR=113;
	public static final int SASS_EXTEND=114;
	public static final int SASS_EXTEND_ONLY_SELECTOR=115;
	public static final int SASS_FOR=116;
	public static final int SASS_FUNCTION=117;
	public static final int SASS_GLOBAL=118;
	public static final int SASS_IF=119;
	public static final int SASS_INCLUDE=120;
	public static final int SASS_MIXIN=121;
	public static final int SASS_OPTIONAL=122;
	public static final int SASS_RETURN=123;
	public static final int SASS_VAR=124;
	public static final int SASS_WARN=125;
	public static final int SASS_WHILE=126;
	public static final int SEMI=127;
	public static final int SOLIDUS=128;
	public static final int STAR=129;
	public static final int STRING=130;
	public static final int T=131;
	public static final int TILDE=132;
	public static final int TIME=133;
	public static final int TOPCENTER_SYM=134;
	public static final int TOPLEFTCORNER_SYM=135;
	public static final int TOPLEFT_SYM=136;
	public static final int TOPRIGHTCORNER_SYM=137;
	public static final int TOPRIGHT_SYM=138;
	public static final int U=139;
	public static final int UNICODE=140;
	public static final int URI=141;
	public static final int URL=142;
	public static final int V=143;
	public static final int W=144;
	public static final int WEBKIT_KEYFRAMES_SYM=145;
	public static final int WS=146;
	public static final int X=147;
	public static final int Y=148;
	public static final int Z=149;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "cssClass", "sass_while", "synpred8_Css3", "sass_else", 
		"sass_function_declaration", "slAttributeValue", "namespace", "cp_expression_list", 
		"body", "mediaExpression", "namespaces", "synpred18_Css3", "page", "synpred10_Css3", 
		"sass_map", "margin", "synpred23_Css3", "synpred44_Css3", "synpred47_Css3", 
		"fnAttributes", "cp_args_list", "cp_arg", "key_or", "sass_content", "syncTo_RBRACE", 
		"cp_mixin_name", "cp_expression_operator", "prio", "syncTo_SEMI", "atRuleId", 
		"expressionPredicate", "synpred34_Css3", "synpred16_Css3", "fnAttribute", 
		"webkitKeyframeSelectors", "rule", "declarations", "propertyValue", "synpred2_Css3", 
		"synpred9_Css3", "pseudoPage", "styleSheet", "webkitKeyframesBlock", "synpred39_Css3", 
		"synpred15_Css3", "counterStyle", "cp_variable_declaration", "sass_control", 
		"synpred28_Css3", "mediaType", "sass_selector_interpolation_exp", "combinator", 
		"slAttribute", "ws", "sass_function_name", "charSetValue", "esPred", "synpred35_Css3", 
		"synpred12_Css3", "synpred26_Css3", "synpred6_Css3", "synpred14_Css3", 
		"mediaFeature", "cp_mixin_block", "synpred5_Css3", "cp_math_expressions", 
		"synpred21_Css3", "cp_math_expression", "property", "mediaQueryOperator", 
		"synpred46_Css3", "sass_function_return", "cp_term_symbol", "at_rule", 
		"fontFace", "function", "cp_math_expression_atom", "synpred25_Css3", "moz_document_function", 
		"synpred42_Css3", "declaration", "elementName", "less_condition", "synpred4_Css3", 
		"mediaBodyItem", "sass_map_name", "synpred1_Css3", "selectorsGroup", "simpleSelectorSequence", 
		"elementSubsequent", "functionName", "less_mixin_guarded", "sass_map_pairs", 
		"sass_map_pair", "bodyItem", "synpred22_Css3", "mediaBody", "operator", 
		"unaryOperator", "term", "sass_interpolation_expression_var", "cp_variable", 
		"synpred11_Css3", "sass_debug", "less_when", "less_import_types", "key_and", 
		"synpred41_Css3", "namespacePrefix", "mediaFeatureValue", "fnAttributeValue", 
		"fnAttributeName", "cp_mixin_call", "synpred3_Css3", "namespacePrefixName", 
		"sass_error", "sass_control_block", "synpred7_Css3", "cp_mixin_call_arg", 
		"sass_extend", "expression", "media", "synpred38_Css3", "sass_nested_properties", 
		"synpred31_Css3", "slAttributeName", "less_fn_name", "synpred40_Css3", 
		"synpred43_Css3", "synpred33_Css3", "sass_control_expression", "margin_sym", 
		"hexColor", "generic_at_rule", "typeSelector", "sass_if", "resourceIdentifier", 
		"vendorAtRule", "webkitKeyframes", "pseudo", "charSet", "less_selector_interpolation_exp", 
		"less_function_in_condition", "synpred36_Css3", "synpred19_Css3", "synpred37_Css3", 
		"syncToFollow", "less_selector_interpolation", "sass_each", "cp_mixin_declaration", 
		"propertyDeclaration", "synpred17_Css3", "selector", "synpred29_Css3", 
		"syncToDeclarationsRule", "synpred24_Css3", "synpred30_Css3", "synpred45_Css3", 
		"mediaQuery", "synpred13_Css3", "cp_mixin_call_args", "moz_document", 
		"cp_expression", "synpred32_Css3", "sass_extend_only_selector", "cp_expression_atom", 
		"mediaQueryList", "cp_propertyValue", "key_only", "synpred27_Css3", "imports", 
		"importItem", "sass_for", "sass_each_variables", "less_condition_operator", 
		"cssId", "synpred20_Css3"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, true, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	/**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	    /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:344:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(344, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:345:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(346,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ws
					{
					dbg.location(346,6);
					pushFollow(FOLLOW_ws_in_styleSheet129);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(347,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:8: charSet ( ws )?
					{
					dbg.location(347,8);
					pushFollow(FOLLOW_charSet_in_styleSheet139);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(347,16);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:16: ws
							{
							dbg.location(347,16);
							pushFollow(FOLLOW_ws_in_styleSheet141);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(348,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: imports
					{
					dbg.location(348,9);
					pushFollow(FOLLOW_imports_in_styleSheet155);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(349,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:9: namespaces
					{
					dbg.location(349,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet166);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(350,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COLON)||LA6_0==COUNTER_STYLE_SYM||LA6_0==DCOLON||LA6_0==DOT||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_ELSE)||(LA6_0 >= SASS_EXTEND && LA6_0 <= SASS_FUNCTION)||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||(LA6_0 >= SASS_RETURN && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:9: body
					{
					dbg.location(350,9);
					pushFollow(FOLLOW_body_in_styleSheet177);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(351,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet185); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(352, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(354, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:355:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:2: ( namespace ( ws )? )+
			{
			dbg.location(356,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:4: namespace ( ws )?
					{
					dbg.location(356,4);
					pushFollow(FOLLOW_namespace_in_namespaces202);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(356,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:14: ws
							{
							dbg.location(356,14);
							pushFollow(FOLLOW_ws_in_namespaces204);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(357, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:359:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(359, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(360,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace220); if (state.failed) return;dbg.location(360,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:19: ws
					{
					dbg.location(360,19);
					pushFollow(FOLLOW_ws_in_namespace222);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(360,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:24: namespacePrefixName ( ws )?
					{
					dbg.location(360,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace226);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(360,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:44: ws
							{
							dbg.location(360,44);
							pushFollow(FOLLOW_ws_in_namespace228);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(360,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace233);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(360,69);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:69: ws
					{
					dbg.location(360,69);
					pushFollow(FOLLOW_ws_in_namespace235);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(360,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace238); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(361, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(363, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:5: IDENT
			{
			dbg.location(364,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName251); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(365, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(367, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(368,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(369, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:371:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(371, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(372,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet285); if (state.failed) return;dbg.location(372,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:21: ws
					{
					dbg.location(372,21);
					pushFollow(FOLLOW_ws_in_charSet287);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(372,25);
			pushFollow(FOLLOW_charSetValue_in_charSet290);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(372,38);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:38: ws
					{
					dbg.location(372,38);
					pushFollow(FOLLOW_ws_in_charSet292);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(372,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet295); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(373, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(375, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:376:2: ( STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:376:4: STRING
			{
			dbg.location(376,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue309); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(377, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:1: imports : ( importItem ( ws )? SEMI ( ws )? )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(379, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:2: ( ( importItem ( ws )? SEMI ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:2: ( importItem ( ws )? SEMI ( ws )? )+
			{
			dbg.location(381,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:2: ( importItem ( ws )? SEMI ( ws )? )+
			int cnt17=0;
			try { dbg.enterSubRule(17);

			loop17:
			while (true) {
				int alt17=2;
				try { dbg.enterDecision(17, decisionCanBacktrack[17]);

				int LA17_0 = input.LA(1);
				if ( (LA17_0==IMPORT_SYM) ) {
					int LA17_27 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt17=1;
					}

				}

				} finally {dbg.exitDecision(17);}

				switch (alt17) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:4: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(381,4);
					pushFollow(FOLLOW_importItem_in_imports323);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(381,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:15: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:15: ws
							{
							dbg.location(381,15);
							pushFollow(FOLLOW_ws_in_imports325);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(381,19);
					match(input,SEMI,FOLLOW_SEMI_in_imports328); if (state.failed) return;dbg.location(381,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:24: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:24: ws
							{
							dbg.location(381,24);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(17, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt17++;
			}
			} finally {dbg.exitSubRule(17);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(382, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(384, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt32=3;
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(386,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem356); if (state.failed) return;dbg.location(386,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:20: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:20: ws
							{
							dbg.location(386,20);
							pushFollow(FOLLOW_ws_in_importItem358);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(386,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem361);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(386,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						int LA20_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IDENT) ) {
						int LA20_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==NOT) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==GEN) ) {
						int LA20_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==HASH_SYMBOL) ) {
						int LA20_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==LPAREN) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==SASS_MIXIN) ) {
						int LA20_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_VAR) ) {
						int LA20_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==AT_IDENT) ) {
						int LA20_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_INCLUDE) ) {
						int LA20_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_AT_ROOT) ) {
						int LA20_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_DEBUG||LA20_0==SASS_WARN) ) {
						int LA20_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_IF) ) {
						int LA20_26 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FOR) ) {
						int LA20_27 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EACH) ) {
						int LA20_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_WHILE) ) {
						int LA20_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_CONTENT) ) {
						int LA20_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IMPORT_SYM) ) {
						int LA20_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==PAGE_SYM) ) {
						int LA20_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==FONT_FACE_SYM) ) {
						int LA20_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MOZ_DOCUMENT_SYM) ) {
						int LA20_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA20_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MEDIA_SYM) ) {
						int LA20_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EXTEND) ) {
						int LA20_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==COUNTER_STYLE_SYM) ) {
						int LA20_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FUNCTION) ) {
						int LA20_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( ((LA20_0 >= BOTTOMCENTER_SYM && LA20_0 <= BOTTOMRIGHT_SYM)||LA20_0==CHARSET_SYM||(LA20_0 >= LEFTBOTTOM_SYM && LA20_0 <= LEFTTOP_SYM)||LA20_0==NAMESPACE_SYM||(LA20_0 >= RIGHTBOTTOM_SYM && LA20_0 <= RIGHTTOP_SYM)||LA20_0==SASS_ELSE||LA20_0==SASS_RETURN||(LA20_0 >= TOPCENTER_SYM && LA20_0 <= TOPRIGHT_SYM)) ) {
						int LA20_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(386,66);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:66: ( ws )?
							int alt19=2;
							try { dbg.enterSubRule(19);
							try { dbg.enterDecision(19, decisionCanBacktrack[19]);

							int LA19_0 = input.LA(1);
							if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
								alt19=1;
							}
							} finally {dbg.exitDecision(19);}

							switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:66: ws
									{
									dbg.location(386,66);
									pushFollow(FOLLOW_ws_in_importItem371);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(19);}
							dbg.location(386,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem374);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(389,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(389,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem407); if (state.failed) return;dbg.location(389,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:38: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:38: ws
							{
							dbg.location(389,38);
							pushFollow(FOLLOW_ws_in_importItem409);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(389,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem412);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(389,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(24);

					loop24:
					while (true) {
						int alt24=2;
						try { dbg.enterDecision(24, decisionCanBacktrack[24]);

						try {
							isCyclicDecision = true;
							alt24 = dfa24.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(24);}

						switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(389,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ( ws )?
							int alt22=2;
							try { dbg.enterSubRule(22);
							try { dbg.enterDecision(22, decisionCanBacktrack[22]);

							int LA22_0 = input.LA(1);
							if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
								alt22=1;
							}
							} finally {dbg.exitDecision(22);}

							switch (alt22) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ws
									{
									dbg.location(389,62);
									pushFollow(FOLLOW_ws_in_importItem415);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(22);}
							dbg.location(389,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem418); if (state.failed) return;dbg.location(389,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:72: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:72: ws
									{
									dbg.location(389,72);
									pushFollow(FOLLOW_ws_in_importItem420);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(389,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem423);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop24;
						}
					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(389,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
						int LA26_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IDENT) ) {
						int LA26_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==NOT) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==GEN) ) {
						int LA26_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==HASH_SYMBOL) ) {
						int LA26_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==LPAREN) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==SASS_MIXIN) ) {
						int LA26_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_VAR) ) {
						int LA26_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==AT_IDENT) ) {
						int LA26_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_INCLUDE) ) {
						int LA26_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_AT_ROOT) ) {
						int LA26_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_DEBUG||LA26_0==SASS_WARN) ) {
						int LA26_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_IF) ) {
						int LA26_26 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FOR) ) {
						int LA26_27 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EACH) ) {
						int LA26_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_WHILE) ) {
						int LA26_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_CONTENT) ) {
						int LA26_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IMPORT_SYM) ) {
						int LA26_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==PAGE_SYM) ) {
						int LA26_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==FONT_FACE_SYM) ) {
						int LA26_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MOZ_DOCUMENT_SYM) ) {
						int LA26_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA26_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MEDIA_SYM) ) {
						int LA26_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EXTEND) ) {
						int LA26_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==COUNTER_STYLE_SYM) ) {
						int LA26_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FUNCTION) ) {
						int LA26_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( ((LA26_0 >= BOTTOMCENTER_SYM && LA26_0 <= BOTTOMRIGHT_SYM)||LA26_0==CHARSET_SYM||(LA26_0 >= LEFTBOTTOM_SYM && LA26_0 <= LEFTTOP_SYM)||LA26_0==NAMESPACE_SYM||(LA26_0 >= RIGHTBOTTOM_SYM && LA26_0 <= RIGHTTOP_SYM)||LA26_0==SASS_ELSE||LA26_0==SASS_RETURN||(LA26_0 >= TOPCENTER_SYM && LA26_0 <= TOPRIGHT_SYM)) ) {
						int LA26_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(389,120);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:120: ( ws )?
							int alt25=2;
							try { dbg.enterSubRule(25);
							try { dbg.enterDecision(25, decisionCanBacktrack[25]);

							int LA25_0 = input.LA(1);
							if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
								alt25=1;
							}
							} finally {dbg.exitDecision(25);}

							switch (alt25) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:120: ws
									{
									dbg.location(389,120);
									pushFollow(FOLLOW_ws_in_importItem435);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(25);}
							dbg.location(389,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem438);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(391,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(391,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem462); if (state.failed) return;dbg.location(391,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:38: ( ws )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:38: ws
							{
							dbg.location(391,38);
							pushFollow(FOLLOW_ws_in_importItem464);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(391,42);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==LPAREN) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(391,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem468); if (state.failed) return;dbg.location(391,50);
							pushFollow(FOLLOW_less_import_types_in_importItem470);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(391,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem472); if (state.failed) return;dbg.location(391,75);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:75: ( ws )?
							int alt28=2;
							try { dbg.enterSubRule(28);
							try { dbg.enterDecision(28, decisionCanBacktrack[28]);

							int LA28_0 = input.LA(1);
							if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
								alt28=1;
							}
							} finally {dbg.exitDecision(28);}

							switch (alt28) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:75: ws
									{
									dbg.location(391,75);
									pushFollow(FOLLOW_ws_in_importItem474);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(28);}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(391,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem479);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(391,100);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						int LA31_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IDENT) ) {
						int LA31_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==NOT) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==GEN) ) {
						int LA31_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==HASH_SYMBOL) ) {
						int LA31_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==LPAREN) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==SASS_MIXIN) ) {
						int LA31_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_VAR) ) {
						int LA31_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==AT_IDENT) ) {
						int LA31_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_INCLUDE) ) {
						int LA31_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_AT_ROOT) ) {
						int LA31_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_DEBUG||LA31_0==SASS_WARN) ) {
						int LA31_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_IF) ) {
						int LA31_26 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FOR) ) {
						int LA31_27 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EACH) ) {
						int LA31_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_WHILE) ) {
						int LA31_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_CONTENT) ) {
						int LA31_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IMPORT_SYM) ) {
						int LA31_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==PAGE_SYM) ) {
						int LA31_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==FONT_FACE_SYM) ) {
						int LA31_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MOZ_DOCUMENT_SYM) ) {
						int LA31_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA31_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MEDIA_SYM) ) {
						int LA31_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EXTEND) ) {
						int LA31_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==COUNTER_STYLE_SYM) ) {
						int LA31_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FUNCTION) ) {
						int LA31_40 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( ((LA31_0 >= BOTTOMCENTER_SYM && LA31_0 <= BOTTOMRIGHT_SYM)||LA31_0==CHARSET_SYM||(LA31_0 >= LEFTBOTTOM_SYM && LA31_0 <= LEFTTOP_SYM)||LA31_0==NAMESPACE_SYM||(LA31_0 >= RIGHTBOTTOM_SYM && LA31_0 <= RIGHTTOP_SYM)||LA31_0==SASS_ELSE||LA31_0==SASS_RETURN||(LA31_0 >= TOPCENTER_SYM && LA31_0 <= TOPRIGHT_SYM)) ) {
						int LA31_41 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(391,123);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:123: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:123: ws
									{
									dbg.location(391,123);
									pushFollow(FOLLOW_ws_in_importItem489);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(391,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem492);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(392, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "media"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(393, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(394,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media510); if (state.failed) return;dbg.location(394,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ( ws )?
			int alt33=2;
			try { dbg.enterSubRule(33);
			try { dbg.enterDecision(33, decisionCanBacktrack[33]);

			int LA33_0 = input.LA(1);
			if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
				alt33=1;
			}
			} finally {dbg.exitDecision(33);}

			switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ws
					{
					dbg.location(394,17);
					pushFollow(FOLLOW_ws_in_media512);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(395,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:10: mediaQueryList
			{
			dbg.location(396,10);
			pushFollow(FOLLOW_mediaQueryList_in_media530);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(397,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:7: ( ws )?
			int alt34=2;
			try { dbg.enterSubRule(34);
			try { dbg.enterDecision(34, decisionCanBacktrack[34]);

			int LA34_0 = input.LA(1);
			if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
				alt34=1;
			}
			} finally {dbg.exitDecision(34);}

			switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:7: ws
					{
					dbg.location(397,7);
					pushFollow(FOLLOW_ws_in_media538);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(398,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media545); if (state.failed) return;dbg.location(398,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:12: ( ws )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:12: ws
					{
					dbg.location(398,12);
					pushFollow(FOLLOW_ws_in_media547);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(398,16);
			pushFollow(FOLLOW_syncToFollow_in_media550);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(399,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:9: ( mediaBody )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( ((LA36_0 >= AT_IDENT && LA36_0 <= AT_SIGN)||(LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||(LA36_0 >= CHARSET_SYM && LA36_0 <= COLON)||LA36_0==COUNTER_STYLE_SYM||LA36_0==DCOLON||LA36_0==DOT||LA36_0==FONT_FACE_SYM||(LA36_0 >= GEN && LA36_0 <= GREATER)||(LA36_0 >= HASH && LA36_0 <= HASH_SYMBOL)||LA36_0==IDENT||LA36_0==IMPORT_SYM||(LA36_0 >= LBRACKET && LA36_0 <= LEFTTOP_SYM)||LA36_0==LESS_AND||(LA36_0 >= MEDIA_SYM && LA36_0 <= MOZ_DOCUMENT_SYM)||LA36_0==NAMESPACE_SYM||LA36_0==PAGE_SYM||(LA36_0 >= PIPE && LA36_0 <= PLUS)||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||(LA36_0 >= SASS_AT_ROOT && LA36_0 <= SASS_DEBUG)||(LA36_0 >= SASS_EACH && LA36_0 <= SASS_ELSE)||(LA36_0 >= SASS_EXTEND && LA36_0 <= SASS_FUNCTION)||(LA36_0 >= SASS_IF && LA36_0 <= SASS_MIXIN)||(LA36_0 >= SASS_RETURN && LA36_0 <= SEMI)||LA36_0==STAR||LA36_0==TILDE||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)||LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:9: mediaBody
					{
					dbg.location(399,9);
					pushFollow(FOLLOW_mediaBody_in_media560);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}
			dbg.location(400,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media567); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(401, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(403, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(405,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt42=0;
			try { dbg.enterSubRule(42);

			loop42:
			while (true) {
				int alt42=4;
				try { dbg.enterDecision(42, decisionCanBacktrack[42]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt42=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA42_33 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt42=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt42=3;
					}

					}
					break;
				case SEMI:
					{
					alt42=2;
					}
					break;
				}
				} finally {dbg.exitDecision(42);}

				switch (alt42) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(406,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(406,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody601);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(406,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt38=2;
					try { dbg.enterSubRule(38);
					try { dbg.enterDecision(38, decisionCanBacktrack[38]);

					try {
						isCyclicDecision = true;
						alt38 = dfa38.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(38);}

					switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(406,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:39: ( ws )?
							int alt37=2;
							try { dbg.enterSubRule(37);
							try { dbg.enterDecision(37, decisionCanBacktrack[37]);

							int LA37_0 = input.LA(1);
							if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
								alt37=1;
							}
							} finally {dbg.exitDecision(37);}

							switch (alt37) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:39: ws
									{
									dbg.location(406,39);
									pushFollow(FOLLOW_ws_in_mediaBody611);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(37);}
							dbg.location(406,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody614); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(406,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:50: ( ws )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:50: ws
							{
							dbg.location(406,50);
							pushFollow(FOLLOW_ws_in_mediaBody618);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(39);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:10: ( SEMI ( ws )? )
					{
					dbg.location(408,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:12: SEMI ( ws )?
					{
					dbg.location(408,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody645); if (state.failed) return;dbg.location(408,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:17: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:17: ws
							{
							dbg.location(408,17);
							pushFollow(FOLLOW_ws_in_mediaBody647);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(409,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(409,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(409,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody666);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(409,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:43: ( ws | ( SEMI ) )
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==COMMENT||LA41_0==NL||LA41_0==WS) ) {
						alt41=1;
					}
					else if ( (LA41_0==SEMI) ) {
						alt41=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 41, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:44: ws
							{
							dbg.location(409,44);
							pushFollow(FOLLOW_ws_in_mediaBody669);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:49: ( SEMI )
							{
							dbg.location(409,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:50: SEMI
							{
							dbg.location(409,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody674); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(41);}

					}

					}
					break;

				default :
					if ( cnt42 >= 1 ) break loop42;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(42, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt42++;
			}
			} finally {dbg.exitSubRule(42);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(411, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(413, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media )
			int alt47=14;
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			int LA47_0 = input.LA(1);
			if ( (LA47_0==LESS_AND) ) {
				int LA47_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==DOT) ) {
				int LA47_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==HASH) ) {
				int LA47_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_MIXIN) ) {
				int LA47_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==AT_IDENT) ) {
				int LA47_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==SASS_INCLUDE) ) {
				int LA47_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_AT_ROOT) ) {
				int LA47_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==GREATER||LA47_0==PLUS||LA47_0==TILDE) ) {
				int LA47_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA47_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==HASH_SYMBOL) ) {
				int LA47_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==LBRACKET) ) {
				int LA47_11 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==COLON||LA47_0==DCOLON) ) {
				int LA47_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==IDENT) ) {
				int LA47_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==AT_SIGN) ) {
				int LA47_14 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==MINUS) ) {
				int LA47_15 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt47=4;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==STAR) ) {
				int LA47_16 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==PIPE) ) {
				int LA47_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==GEN) ) {
				int LA47_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==SASS_DEBUG||LA47_0==SASS_WARN) ) {
				int LA47_19 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_VAR) && (synpred9_Css3())) {
				alt47=5;
			}
			else if ( (LA47_0==SASS_IF) ) {
				int LA47_21 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_FOR) ) {
				int LA47_22 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_EACH) ) {
				int LA47_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_WHILE) ) {
				int LA47_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_CONTENT) ) {
				int LA47_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==IMPORT_SYM) ) {
				int LA47_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt47=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==PAGE_SYM) ) {
				int LA47_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=11;
				}

			}
			else if ( (LA47_0==FONT_FACE_SYM) ) {
				int LA47_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==MOZ_DOCUMENT_SYM) ) {
				int LA47_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA47_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( (LA47_0==MEDIA_SYM) ) {
				int LA47_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt47=5;
				}
				else if ( (true) ) {
					alt47=14;
				}

			}
			else if ( ((LA47_0 >= BOTTOMCENTER_SYM && LA47_0 <= BOTTOMRIGHT_SYM)||LA47_0==CHARSET_SYM||LA47_0==COUNTER_STYLE_SYM||(LA47_0 >= LEFTBOTTOM_SYM && LA47_0 <= LEFTTOP_SYM)||LA47_0==NAMESPACE_SYM||(LA47_0 >= RIGHTBOTTOM_SYM && LA47_0 <= RIGHTTOP_SYM)||LA47_0==SASS_ELSE||LA47_0==SASS_EXTEND||LA47_0==SASS_FUNCTION||LA47_0==SASS_RETURN||(LA47_0 >= TOPCENTER_SYM && LA47_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt47=5;
			}

			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(415,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem748);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(417,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(417,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem781);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(417,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:87: ( ( ws )? IMPORTANT_SYM )?
					int alt44=2;
					try { dbg.enterSubRule(44);
					try { dbg.enterDecision(44, decisionCanBacktrack[44]);

					try {
						isCyclicDecision = true;
						alt44 = dfa44.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(44);}

					switch (alt44) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(417,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ( ws )?
							int alt43=2;
							try { dbg.enterSubRule(43);
							try { dbg.enterDecision(43, decisionCanBacktrack[43]);

							int LA43_0 = input.LA(1);
							if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
								alt43=1;
							}
							} finally {dbg.exitDecision(43);}

							switch (alt43) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ws
									{
									dbg.location(417,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem784);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(43);}
							dbg.location(417,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(44);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(418,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(418,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem804);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(418,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:57: ( ( ws )? IMPORTANT_SYM )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					try {
						isCyclicDecision = true;
						alt46 = dfa46.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(418,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ( ws )?
							int alt45=2;
							try { dbg.enterSubRule(45);
							try { dbg.enterDecision(45, decisionCanBacktrack[45]);

							int LA45_0 = input.LA(1);
							if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
								alt45=1;
							}
							} finally {dbg.exitDecision(45);}

							switch (alt45) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ws
									{
									dbg.location(418,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem807);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(45);}
							dbg.location(418,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(419,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem875);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(420,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem887);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: {...}? sass_debug
					{
					dbg.location(421,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(421,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem897);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: {...}? sass_control
					{
					dbg.location(422,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(422,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem907);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: {...}? sass_content
					{
					dbg.location(423,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(423,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem917);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: {...}? importItem
					{
					dbg.location(424,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(424,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem927);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: rule
					{
					dbg.location(425,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem935);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: page
					{
					dbg.location(426,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem943);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: fontFace
					{
					dbg.location(427,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem951);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:428:7: vendorAtRule
					{
					dbg.location(428,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem959);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:7: media
					{
					dbg.location(430,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem972);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(431, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(433, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(434,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList986);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(434,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(50);

			loop50:
			while (true) {
				int alt50=2;
				try { dbg.enterDecision(50, decisionCanBacktrack[50]);

				try {
					isCyclicDecision = true;
					alt50 = dfa50.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(50);}

				switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(434,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:31: ( ws )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==COMMENT||LA48_0==NL||LA48_0==WS) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:31: ws
							{
							dbg.location(434,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList998);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(434,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1001); if (state.failed) return;dbg.location(434,41);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:41: ( ws )?
					int alt49=2;
					try { dbg.enterSubRule(49);
					try { dbg.enterDecision(49, decisionCanBacktrack[49]);

					int LA49_0 = input.LA(1);
					if ( (LA49_0==COMMENT||LA49_0==NL||LA49_0==WS) ) {
						alt49=1;
					}
					} finally {dbg.exitDecision(49);}

					switch (alt49) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:41: ws
							{
							dbg.location(434,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1003);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(49);}
					dbg.location(434,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1006);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop50;
				}
			}
			} finally {dbg.exitSubRule(50);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(435, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:437:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(437, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt59=3;
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			switch ( input.LA(1) ) {
			case GEN:
			case HASH_SYMBOL:
			case IDENT:
			case NOT:
				{
				alt59=1;
				}
				break;
			case LPAREN:
				{
				alt59=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt59=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(439,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:5: ( mediaQueryOperator ( ws )? )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==IDENT) ) {
						int LA52_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt52=1;
						}
					}
					else if ( (LA52_0==NOT) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:6: mediaQueryOperator ( ws )?
							{
							dbg.location(439,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1025);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(439,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:25: ( ws )?
							int alt51=2;
							try { dbg.enterSubRule(51);
							try { dbg.enterDecision(51, decisionCanBacktrack[51]);

							int LA51_0 = input.LA(1);
							if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
								alt51=1;
							}
							} finally {dbg.exitDecision(51);}

							switch (alt51) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:25: ws
									{
									dbg.location(439,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1027);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(51);}

							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(439,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1034);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(439,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:43: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(55);

					loop55:
					while (true) {
						int alt55=2;
						try { dbg.enterDecision(55, decisionCanBacktrack[55]);

						try {
							isCyclicDecision = true;
							alt55 = dfa55.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(55);}

						switch (alt55) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:45: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(439,45);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:45: ( ws )?
							int alt53=2;
							try { dbg.enterSubRule(53);
							try { dbg.enterDecision(53, decisionCanBacktrack[53]);

							int LA53_0 = input.LA(1);
							if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
								alt53=1;
							}
							} finally {dbg.exitDecision(53);}

							switch (alt53) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:45: ws
									{
									dbg.location(439,45);
									pushFollow(FOLLOW_ws_in_mediaQuery1038);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(53);}
							dbg.location(439,49);
							pushFollow(FOLLOW_key_and_in_mediaQuery1041);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(439,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:57: ( ws )?
							int alt54=2;
							try { dbg.enterSubRule(54);
							try { dbg.enterDecision(54, decisionCanBacktrack[54]);

							int LA54_0 = input.LA(1);
							if ( (LA54_0==COMMENT||LA54_0==NL||LA54_0==WS) ) {
								alt54=1;
							}
							} finally {dbg.exitDecision(54);}

							switch (alt54) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:57: ws
									{
									dbg.location(439,57);
									pushFollow(FOLLOW_ws_in_mediaQuery1043);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(54);}
							dbg.location(439,61);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1046);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop55;
						}
					}
					} finally {dbg.exitSubRule(55);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:7: mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(440,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1057);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(440,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:23: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(58);

					loop58:
					while (true) {
						int alt58=2;
						try { dbg.enterDecision(58, decisionCanBacktrack[58]);

						try {
							isCyclicDecision = true;
							alt58 = dfa58.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(58);}

						switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:25: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(440,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:25: ( ws )?
							int alt56=2;
							try { dbg.enterSubRule(56);
							try { dbg.enterDecision(56, decisionCanBacktrack[56]);

							int LA56_0 = input.LA(1);
							if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
								alt56=1;
							}
							} finally {dbg.exitDecision(56);}

							switch (alt56) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:25: ws
									{
									dbg.location(440,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1061);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(56);}
							dbg.location(440,29);
							pushFollow(FOLLOW_key_and_in_mediaQuery1064);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(440,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:37: ( ws )?
							int alt57=2;
							try { dbg.enterSubRule(57);
							try { dbg.enterDecision(57, decisionCanBacktrack[57]);

							int LA57_0 = input.LA(1);
							if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
								alt57=1;
							}
							} finally {dbg.exitDecision(57);}

							switch (alt57) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:37: ws
									{
									dbg.location(440,37);
									pushFollow(FOLLOW_ws_in_mediaQuery1066);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(57);}
							dbg.location(440,41);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1069);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop58;
						}
					}
					} finally {dbg.exitSubRule(58);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:441:7: {...}? cp_variable
					{
					dbg.location(441,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(441,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1082);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(442, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(444, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:3: ( key_only | NOT )
			int alt60=2;
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			int LA60_0 = input.LA(1);
			if ( (LA60_0==IDENT) ) {
				alt60=1;
			}
			else if ( (LA60_0==NOT) ) {
				alt60=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:5: key_only
					{
					dbg.location(445,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1094);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:16: NOT
					{
					dbg.location(445,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1098); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(446, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(448, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt61=3;
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt61=1;
				}
				break;
			case GEN:
				{
				alt61=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt61=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 61, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:4: IDENT
					{
					dbg.location(449,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1110); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:12: GEN
					{
					dbg.location(449,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1114); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(449,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(449,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1120);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(450, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:452:1: mediaExpression : LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ;
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(452, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:5: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:5: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
			{
			dbg.location(454,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1138); if (state.failed) return;dbg.location(454,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: ws
					{
					dbg.location(454,12);
					pushFollow(FOLLOW_ws_in_mediaExpression1140);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(454,16);
			pushFollow(FOLLOW_mediaFeature_in_mediaExpression1143);
			mediaFeature();
			state._fsp--;
			if (state.failed) return;dbg.location(454,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:29: ( mediaFeatureValue )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			try {
				isCyclicDecision = true;
				alt63 = dfa63.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:29: mediaFeatureValue
					{
					dbg.location(454,29);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1145);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(454,48);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:48: ( ws )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:48: ws
					{
					dbg.location(454,48);
					pushFollow(FOLLOW_ws_in_mediaExpression1148);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(454,52);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1151); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(455, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(457, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(459,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ws
					{
					dbg.location(459,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1172);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(459,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1175); if (state.failed) return;dbg.location(459,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:15: ( ws )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==COMMENT||LA66_0==NL||LA66_0==WS) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:15: ws
					{
					dbg.location(459,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1177);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(460,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:5: ({...}? cp_expression | expression )
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt67=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA67_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case IDENT:
				{
				int LA67_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA67_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA67_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA67_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EMS:
				{
				int LA67_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case REM:
				{
				int LA67_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EXS:
				{
				int LA67_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA67_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TIME:
				{
				int LA67_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case FREQ:
				{
				int LA67_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA67_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA67_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case STRING:
				{
				int LA67_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TILDE:
				{
				int LA67_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA67_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case GEN:
				{
				int LA67_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case URI:
				{
				int LA67_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case HASH:
				{
				int LA67_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA67_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA67_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA67_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA67_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA67_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA67_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:461:9: {...}? cp_expression
					{
					dbg.location(461,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(461,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1196);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:463:9: expression
					{
					dbg.location(463,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1216);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(465, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(467, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt69=3;
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt69=1;
				}
				break;
			case GEN:
				{
				alt69=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt69=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:4: IDENT
					{
					dbg.location(468,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1236); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:12: GEN
					{
					dbg.location(468,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1240); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(468,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(468,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:47: ( cp_variable | sass_interpolation_expression_var )
					int alt68=2;
					try { dbg.enterSubRule(68);
					try { dbg.enterDecision(68, decisionCanBacktrack[68]);

					int LA68_0 = input.LA(1);
					if ( (LA68_0==AT_IDENT||(LA68_0 >= BOTTOMCENTER_SYM && LA68_0 <= BOTTOMRIGHT_SYM)||LA68_0==CHARSET_SYM||LA68_0==COUNTER_STYLE_SYM||LA68_0==FONT_FACE_SYM||LA68_0==IMPORT_SYM||(LA68_0 >= LEFTBOTTOM_SYM && LA68_0 <= LEFTTOP_SYM)||LA68_0==MEDIA_SYM||LA68_0==MOZ_DOCUMENT_SYM||LA68_0==NAMESPACE_SYM||LA68_0==PAGE_SYM||(LA68_0 >= RIGHTBOTTOM_SYM && LA68_0 <= RIGHTTOP_SYM)||(LA68_0 >= SASS_AT_ROOT && LA68_0 <= SASS_DEBUG)||(LA68_0 >= SASS_EACH && LA68_0 <= SASS_ELSE)||LA68_0==SASS_EXTEND||(LA68_0 >= SASS_FOR && LA68_0 <= SASS_FUNCTION)||(LA68_0 >= SASS_IF && LA68_0 <= SASS_MIXIN)||(LA68_0 >= SASS_RETURN && LA68_0 <= SASS_WHILE)||(LA68_0 >= TOPCENTER_SYM && LA68_0 <= TOPRIGHT_SYM)||LA68_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt68=1;
					}
					else if ( (LA68_0==HASH_SYMBOL) ) {
						alt68=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 68, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(68);}

					switch (alt68) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:49: cp_variable
							{
							dbg.location(468,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1248);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:63: sass_interpolation_expression_var
							{
							dbg.location(468,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1252);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(68);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(469, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(471, 1);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(473,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt74=0;
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=3;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				int LA74_0 = input.LA(1);
				if ( ((LA74_0 >= AT_IDENT && LA74_0 <= AT_SIGN)||(LA74_0 >= BOTTOMCENTER_SYM && LA74_0 <= BOTTOMRIGHT_SYM)||(LA74_0 >= CHARSET_SYM && LA74_0 <= COLON)||LA74_0==COUNTER_STYLE_SYM||LA74_0==DCOLON||LA74_0==DOT||LA74_0==FONT_FACE_SYM||(LA74_0 >= GEN && LA74_0 <= GREATER)||(LA74_0 >= HASH && LA74_0 <= HASH_SYMBOL)||LA74_0==IDENT||LA74_0==IMPORT_SYM||(LA74_0 >= LBRACKET && LA74_0 <= LEFTTOP_SYM)||LA74_0==LESS_AND||(LA74_0 >= MEDIA_SYM && LA74_0 <= MOZ_DOCUMENT_SYM)||LA74_0==NAMESPACE_SYM||LA74_0==PAGE_SYM||(LA74_0 >= PIPE && LA74_0 <= PLUS)||(LA74_0 >= RIGHTBOTTOM_SYM && LA74_0 <= RIGHTTOP_SYM)||(LA74_0 >= SASS_AT_ROOT && LA74_0 <= SASS_DEBUG)||(LA74_0 >= SASS_EACH && LA74_0 <= SASS_ELSE)||(LA74_0 >= SASS_EXTEND && LA74_0 <= SASS_FUNCTION)||(LA74_0 >= SASS_IF && LA74_0 <= SASS_MIXIN)||(LA74_0 >= SASS_RETURN && LA74_0 <= SASS_WHILE)||LA74_0==STAR||LA74_0==TILDE||(LA74_0 >= TOPCENTER_SYM && LA74_0 <= TOPRIGHT_SYM)||LA74_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt74=1;
				}
				else if ( (LA74_0==SEMI) ) {
					alt74=2;
				}

				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(474,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(474,12);
					pushFollow(FOLLOW_bodyItem_in_body1286);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(474,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					try {
						isCyclicDecision = true;
						alt71 = dfa71.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(474,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:34: ( ws )?
							int alt70=2;
							try { dbg.enterSubRule(70);
							try { dbg.enterDecision(70, decisionCanBacktrack[70]);

							int LA70_0 = input.LA(1);
							if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
								alt70=1;
							}
							} finally {dbg.exitDecision(70);}

							switch (alt70) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:34: ws
									{
									dbg.location(474,34);
									pushFollow(FOLLOW_ws_in_body1296);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(70);}
							dbg.location(474,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1299); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(474,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:45: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:45: ws
							{
							dbg.location(474,45);
							pushFollow(FOLLOW_ws_in_body1303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:10: ( SEMI ( ws )? )
					{
					dbg.location(476,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:12: SEMI ( ws )?
					{
					dbg.location(476,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1330); if (state.failed) return;dbg.location(476,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:17: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:476:17: ws
							{
							dbg.location(476,17);
							pushFollow(FOLLOW_ws_in_body1332);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}

					}

					}
					break;

				default :
					if ( cnt74 >= 1 ) break loop74;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(74, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt74++;
			}
			} finally {dbg.exitSubRule(74);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(478, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(480, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt75=11;
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA75_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case DOT:
				{
				int LA75_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case HASH:
				{
				int LA75_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA75_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred12_Css3())) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA75_5 = input.LA(2);
				if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA75_6 = input.LA(2);
				if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=2;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA75_7 = input.LA(2);
				if ( (true) ) {
					alt75=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case IDENT:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt75=4;
				}
				break;
			case MEDIA_SYM:
				{
				int LA75_19 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA75_20 = input.LA(2);
				if ( ((synpred15_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA75_21 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA75_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA75_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA75_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA75_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA75_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt75=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA75_27 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA75_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA75_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA75_30 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA75_31 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA75_32 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA75_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(482,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1412);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(484,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(484,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1445);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(485,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(485,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1464);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:8: rule
					{
					dbg.location(486,8);
					pushFollow(FOLLOW_rule_in_bodyItem1473);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(487,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem1495);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:11: ( sass_map )=> sass_map
					{
					dbg.location(488,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem1512);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:11: at_rule
					{
					dbg.location(489,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem1524);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: {...}? importItem
					{
					dbg.location(491,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(491,40);
					pushFollow(FOLLOW_importItem_in_bodyItem1547);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:11: {...}? sass_debug
					{
					dbg.location(492,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(492,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem1561);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: {...}? sass_control
					{
					dbg.location(493,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(493,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem1575);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: {...}? sass_function_declaration
					{
					dbg.location(494,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(494,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem1589);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(495, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:500:1: at_rule : ( media | page | counterStyle | fontFace | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(500, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:501:5: ( media | page | counterStyle | fontFace | vendorAtRule )
			int alt76=5;
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt76=1;
				}
				break;
			case PAGE_SYM:
				{
				alt76=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt76=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt76=4;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt76=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 76, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:502:5: media
					{
					dbg.location(502,5);
					pushFollow(FOLLOW_media_in_at_rule1615);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:7: page
					{
					dbg.location(503,7);
					pushFollow(FOLLOW_page_in_at_rule1623);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:7: counterStyle
					{
					dbg.location(504,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule1631);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:505:7: fontFace
					{
					dbg.location(505,7);
					pushFollow(FOLLOW_fontFace_in_at_rule1639);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:7: vendorAtRule
					{
					dbg.location(506,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule1647);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(507, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(509, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt77=3;
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt77=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt77=2;
				}
				break;
			case AT_IDENT:
				{
				alt77=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:3: moz_document
					{
					dbg.location(510,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule1660);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:18: webkitKeyframes
					{
					dbg.location(510,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule1664);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:36: generic_at_rule
					{
					dbg.location(510,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule1668);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(510, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(512, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt79=3;
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt79=1;
				}
				break;
			case STRING:
				{
				alt79=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt79=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 79, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:2: IDENT
					{
					dbg.location(514,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId1678); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:10: STRING
					{
					dbg.location(514,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId1682); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(514,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(514,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:48: ( cp_variable | sass_interpolation_expression_var )
					int alt78=2;
					try { dbg.enterSubRule(78);
					try { dbg.enterDecision(78, decisionCanBacktrack[78]);

					int LA78_0 = input.LA(1);
					if ( (LA78_0==AT_IDENT||(LA78_0 >= BOTTOMCENTER_SYM && LA78_0 <= BOTTOMRIGHT_SYM)||LA78_0==CHARSET_SYM||LA78_0==COUNTER_STYLE_SYM||LA78_0==FONT_FACE_SYM||LA78_0==IMPORT_SYM||(LA78_0 >= LEFTBOTTOM_SYM && LA78_0 <= LEFTTOP_SYM)||LA78_0==MEDIA_SYM||LA78_0==MOZ_DOCUMENT_SYM||LA78_0==NAMESPACE_SYM||LA78_0==PAGE_SYM||(LA78_0 >= RIGHTBOTTOM_SYM && LA78_0 <= RIGHTTOP_SYM)||(LA78_0 >= SASS_AT_ROOT && LA78_0 <= SASS_DEBUG)||(LA78_0 >= SASS_EACH && LA78_0 <= SASS_ELSE)||LA78_0==SASS_EXTEND||(LA78_0 >= SASS_FOR && LA78_0 <= SASS_FUNCTION)||(LA78_0 >= SASS_IF && LA78_0 <= SASS_MIXIN)||(LA78_0 >= SASS_RETURN && LA78_0 <= SASS_WHILE)||(LA78_0 >= TOPCENTER_SYM && LA78_0 <= TOPRIGHT_SYM)||LA78_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt78=1;
					}
					else if ( (LA78_0==HASH_SYMBOL) ) {
						alt78=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 78, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(78);}

					switch (alt78) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:50: cp_variable
							{
							dbg.location(514,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId1690);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:64: sass_interpolation_expression_var
							{
							dbg.location(514,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId1694);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(78);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(515, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(517, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(518,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule1710); if (state.failed) return;dbg.location(518,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:16: ( ws )?
			int alt80=2;
			try { dbg.enterSubRule(80);
			try { dbg.enterDecision(80, decisionCanBacktrack[80]);

			int LA80_0 = input.LA(1);
			if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
				alt80=1;
			}
			} finally {dbg.exitDecision(80);}

			switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:16: ws
					{
					dbg.location(518,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule1712);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(80);}
			dbg.location(518,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:20: ( atRuleId ( ws )? )?
			int alt82=2;
			try { dbg.enterSubRule(82);
			try { dbg.enterDecision(82, decisionCanBacktrack[82]);

			int LA82_0 = input.LA(1);
			if ( (LA82_0==AT_IDENT||(LA82_0 >= BOTTOMCENTER_SYM && LA82_0 <= BOTTOMRIGHT_SYM)||LA82_0==CHARSET_SYM||LA82_0==COUNTER_STYLE_SYM||LA82_0==FONT_FACE_SYM||LA82_0==HASH_SYMBOL||LA82_0==IDENT||LA82_0==IMPORT_SYM||(LA82_0 >= LEFTBOTTOM_SYM && LA82_0 <= LEFTTOP_SYM)||LA82_0==MEDIA_SYM||LA82_0==MOZ_DOCUMENT_SYM||LA82_0==NAMESPACE_SYM||LA82_0==PAGE_SYM||(LA82_0 >= RIGHTBOTTOM_SYM && LA82_0 <= RIGHTTOP_SYM)||(LA82_0 >= SASS_AT_ROOT && LA82_0 <= SASS_DEBUG)||(LA82_0 >= SASS_EACH && LA82_0 <= SASS_ELSE)||LA82_0==SASS_EXTEND||(LA82_0 >= SASS_FOR && LA82_0 <= SASS_FUNCTION)||(LA82_0 >= SASS_IF && LA82_0 <= SASS_MIXIN)||(LA82_0 >= SASS_RETURN && LA82_0 <= SASS_WHILE)||LA82_0==STRING||(LA82_0 >= TOPCENTER_SYM && LA82_0 <= TOPRIGHT_SYM)||LA82_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt82=1;
			}
			} finally {dbg.exitDecision(82);}

			switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:22: atRuleId ( ws )?
					{
					dbg.location(518,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule1717);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(518,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:31: ( ws )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					int LA81_0 = input.LA(1);
					if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
						alt81=1;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:31: ws
							{
							dbg.location(518,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule1719);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}

					}
					break;

			}
			} finally {dbg.exitSubRule(82);}
			dbg.location(519,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule1733); if (state.failed) return;dbg.location(520,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule1744);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(521,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule1754); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(522, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(523, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(525,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1765); if (state.failed) return;dbg.location(525,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:19: ( ws )?
			int alt83=2;
			try { dbg.enterSubRule(83);
			try { dbg.enterDecision(83, decisionCanBacktrack[83]);

			int LA83_0 = input.LA(1);
			if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
				alt83=1;
			}
			} finally {dbg.exitDecision(83);}

			switch (alt83) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:19: ws
					{
					dbg.location(525,19);
					pushFollow(FOLLOW_ws_in_moz_document1767);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(83);}
			dbg.location(525,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:25: moz_document_function ( ws )?
			{
			dbg.location(525,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document1772);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(525,47);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:47: ( ws )?
			int alt84=2;
			try { dbg.enterSubRule(84);
			try { dbg.enterDecision(84, decisionCanBacktrack[84]);

			int LA84_0 = input.LA(1);
			if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
				alt84=1;
			}
			} finally {dbg.exitDecision(84);}

			switch (alt84) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:47: ws
					{
					dbg.location(525,47);
					pushFollow(FOLLOW_ws_in_moz_document1774);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(84);}

			}
			dbg.location(525,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(87);

			loop87:
			while (true) {
				int alt87=2;
				try { dbg.enterDecision(87, decisionCanBacktrack[87]);

				int LA87_0 = input.LA(1);
				if ( (LA87_0==COMMA) ) {
					alt87=1;
				}

				} finally {dbg.exitDecision(87);}

				switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(525,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document1780); if (state.failed) return;dbg.location(525,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:60: ( ws )?
					int alt85=2;
					try { dbg.enterSubRule(85);
					try { dbg.enterDecision(85, decisionCanBacktrack[85]);

					int LA85_0 = input.LA(1);
					if ( (LA85_0==COMMENT||LA85_0==NL||LA85_0==WS) ) {
						alt85=1;
					}
					} finally {dbg.exitDecision(85);}

					switch (alt85) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:60: ws
							{
							dbg.location(525,60);
							pushFollow(FOLLOW_ws_in_moz_document1782);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(85);}
					dbg.location(525,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document1785);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(525,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:86: ( ws )?
					int alt86=2;
					try { dbg.enterSubRule(86);
					try { dbg.enterDecision(86, decisionCanBacktrack[86]);

					int LA86_0 = input.LA(1);
					if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
						alt86=1;
					}
					} finally {dbg.exitDecision(86);}

					switch (alt86) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:86: ws
							{
							dbg.location(525,86);
							pushFollow(FOLLOW_ws_in_moz_document1787);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(86);}

					}
					break;

				default :
					break loop87;
				}
			}
			} finally {dbg.exitSubRule(87);}
			dbg.location(526,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document1794); if (state.failed) return;dbg.location(526,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:9: ( ws )?
			int alt88=2;
			try { dbg.enterSubRule(88);
			try { dbg.enterDecision(88, decisionCanBacktrack[88]);

			int LA88_0 = input.LA(1);
			if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
				alt88=1;
			}
			} finally {dbg.exitDecision(88);}

			switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:9: ws
					{
					dbg.location(526,9);
					pushFollow(FOLLOW_ws_in_moz_document1796);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(88);}
			dbg.location(527,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:3: ( body )?
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( ((LA89_0 >= AT_IDENT && LA89_0 <= AT_SIGN)||(LA89_0 >= BOTTOMCENTER_SYM && LA89_0 <= BOTTOMRIGHT_SYM)||(LA89_0 >= CHARSET_SYM && LA89_0 <= COLON)||LA89_0==COUNTER_STYLE_SYM||LA89_0==DCOLON||LA89_0==DOT||LA89_0==FONT_FACE_SYM||(LA89_0 >= GEN && LA89_0 <= GREATER)||(LA89_0 >= HASH && LA89_0 <= HASH_SYMBOL)||LA89_0==IDENT||LA89_0==IMPORT_SYM||(LA89_0 >= LBRACKET && LA89_0 <= LEFTTOP_SYM)||LA89_0==LESS_AND||(LA89_0 >= MEDIA_SYM && LA89_0 <= MOZ_DOCUMENT_SYM)||LA89_0==NAMESPACE_SYM||LA89_0==PAGE_SYM||(LA89_0 >= PIPE && LA89_0 <= PLUS)||(LA89_0 >= RIGHTBOTTOM_SYM && LA89_0 <= RIGHTTOP_SYM)||(LA89_0 >= SASS_AT_ROOT && LA89_0 <= SASS_DEBUG)||(LA89_0 >= SASS_EACH && LA89_0 <= SASS_ELSE)||(LA89_0 >= SASS_EXTEND && LA89_0 <= SASS_FUNCTION)||(LA89_0 >= SASS_IF && LA89_0 <= SASS_MIXIN)||(LA89_0 >= SASS_RETURN && LA89_0 <= SEMI)||LA89_0==STAR||LA89_0==TILDE||(LA89_0 >= TOPCENTER_SYM && LA89_0 <= TOPRIGHT_SYM)||LA89_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt89=1;
			}
			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:3: body
					{
					dbg.location(527,3);
					pushFollow(FOLLOW_body_in_moz_document1801);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}
			dbg.location(528,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document1806); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(529, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(531, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(532,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(534, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:537:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(537, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(539,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1843); if (state.failed) return;dbg.location(539,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:23: ( ws )?
			int alt90=2;
			try { dbg.enterSubRule(90);
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
				alt90=1;
			}
			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:23: ws
					{
					dbg.location(539,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1845);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(90);}
			dbg.location(539,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes1848);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(539,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:36: ( ws )?
			int alt91=2;
			try { dbg.enterSubRule(91);
			try { dbg.enterDecision(91, decisionCanBacktrack[91]);

			int LA91_0 = input.LA(1);
			if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
				alt91=1;
			}
			} finally {dbg.exitDecision(91);}

			switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:36: ws
					{
					dbg.location(539,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1850);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(91);}
			dbg.location(540,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes1854); if (state.failed) return;dbg.location(540,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:9: ( ws )?
			int alt92=2;
			try { dbg.enterSubRule(92);
			try { dbg.enterDecision(92, decisionCanBacktrack[92]);

			int LA92_0 = input.LA(1);
			if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
				alt92=1;
			}
			} finally {dbg.exitDecision(92);}

			switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:9: ws
					{
					dbg.location(540,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1856);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(92);}
			dbg.location(541,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(94);

			loop94:
			while (true) {
				int alt94=2;
				try { dbg.enterDecision(94, decisionCanBacktrack[94]);

				int LA94_0 = input.LA(1);
				if ( (LA94_0==IDENT||LA94_0==PERCENTAGE||LA94_0==SASS_CONTENT) ) {
					alt94=1;
				}

				} finally {dbg.exitDecision(94);}

				switch (alt94) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(541,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1863);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(541,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:26: ( ws )?
					int alt93=2;
					try { dbg.enterSubRule(93);
					try { dbg.enterDecision(93, decisionCanBacktrack[93]);

					int LA93_0 = input.LA(1);
					if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {
						alt93=1;
					}
					} finally {dbg.exitDecision(93);}

					switch (alt93) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:26: ws
							{
							dbg.location(541,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes1865);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(93);}

					}
					break;

				default :
					break loop94;
				}
			}
			} finally {dbg.exitSubRule(94);}
			dbg.location(542,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes1872); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(543, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(545, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt99=2;
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			int LA99_0 = input.LA(1);
			if ( (LA99_0==IDENT||LA99_0==PERCENTAGE) ) {
				alt99=1;
			}
			else if ( (LA99_0==SASS_CONTENT) ) {
				alt99=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(547,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1884);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(547,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:26: ( ws )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==COMMENT||LA95_0==NL||LA95_0==WS) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:26: ws
							{
							dbg.location(547,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1886);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(548,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock1890); if (state.failed) return;dbg.location(548,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:10: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:10: ws
							{
							dbg.location(548,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1893);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(548,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock1896);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(549,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:3: ( declarations )?
					int alt97=2;
					try { dbg.enterSubRule(97);
					try { dbg.enterDecision(97, decisionCanBacktrack[97]);

					int LA97_0 = input.LA(1);
					if ( ((LA97_0 >= AT_IDENT && LA97_0 <= AT_SIGN)||(LA97_0 >= BOTTOMCENTER_SYM && LA97_0 <= BOTTOMRIGHT_SYM)||(LA97_0 >= CHARSET_SYM && LA97_0 <= COLON)||LA97_0==COUNTER_STYLE_SYM||LA97_0==DCOLON||LA97_0==DOT||LA97_0==FONT_FACE_SYM||(LA97_0 >= GEN && LA97_0 <= GREATER)||(LA97_0 >= HASH && LA97_0 <= HASH_SYMBOL)||LA97_0==IDENT||LA97_0==IMPORT_SYM||(LA97_0 >= LBRACKET && LA97_0 <= LEFTTOP_SYM)||LA97_0==LESS_AND||(LA97_0 >= MEDIA_SYM && LA97_0 <= MOZ_DOCUMENT_SYM)||LA97_0==NAMESPACE_SYM||LA97_0==PAGE_SYM||(LA97_0 >= PIPE && LA97_0 <= PLUS)||(LA97_0 >= RIGHTBOTTOM_SYM && LA97_0 <= RIGHTTOP_SYM)||(LA97_0 >= SASS_AT_ROOT && LA97_0 <= SASS_DEBUG)||(LA97_0 >= SASS_EACH && LA97_0 <= SASS_ELSE)||(LA97_0 >= SASS_ERROR && LA97_0 <= SASS_FUNCTION)||(LA97_0 >= SASS_IF && LA97_0 <= SASS_MIXIN)||(LA97_0 >= SASS_RETURN && LA97_0 <= SEMI)||LA97_0==STAR||LA97_0==TILDE||(LA97_0 >= TOPCENTER_SYM && LA97_0 <= TOPRIGHT_SYM)||LA97_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt97=1;
					}
					} finally {dbg.exitDecision(97);}

					switch (alt97) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:3: declarations
							{
							dbg.location(549,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock1900);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(97);}
					dbg.location(550,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock1904); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(551,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(551,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(551,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock1921);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(551,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:61: ( SEMI )?
					int alt98=2;
					try { dbg.enterSubRule(98);
					try { dbg.enterDecision(98, decisionCanBacktrack[98]);

					int LA98_0 = input.LA(1);
					if ( (LA98_0==SEMI) ) {
						alt98=1;
					}
					} finally {dbg.exitDecision(98);}

					switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:61: SEMI
							{
							dbg.location(551,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock1923); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(98);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(552, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(554, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(556,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt100=3;
			try { dbg.enterSubRule(100);
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			int LA100_0 = input.LA(1);
			if ( (LA100_0==IDENT) ) {
				int LA100_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt100=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA100_0==PERCENTAGE) ) {
				alt100=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 100, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:4: {...}? IDENT
					{
					dbg.location(556,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(556,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1940); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:39: {...}? IDENT
					{
					dbg.location(556,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(556,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1946); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:72: PERCENTAGE
					{
					dbg.location(556,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1950); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(100);}
			dbg.location(556,85);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(104);

			loop104:
			while (true) {
				int alt104=2;
				try { dbg.enterDecision(104, decisionCanBacktrack[104]);

				try {
					isCyclicDecision = true;
					alt104 = dfa104.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(104);}

				switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(556,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:87: ( ws )?
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
						alt101=1;
					}
					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:87: ws
							{
							dbg.location(556,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1956);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}
					dbg.location(556,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors1959); if (state.failed) return;dbg.location(556,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:97: ( ws )?
					int alt102=2;
					try { dbg.enterSubRule(102);
					try { dbg.enterDecision(102, decisionCanBacktrack[102]);

					int LA102_0 = input.LA(1);
					if ( (LA102_0==COMMENT||LA102_0==NL||LA102_0==WS) ) {
						alt102=1;
					}
					} finally {dbg.exitDecision(102);}

					switch (alt102) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:97: ws
							{
							dbg.location(556,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1961);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(102);}
					dbg.location(556,101);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt103=3;
					try { dbg.enterSubRule(103);
					try { dbg.enterDecision(103, decisionCanBacktrack[103]);

					int LA103_0 = input.LA(1);
					if ( (LA103_0==IDENT) ) {
						int LA103_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt103=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt103=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 103, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA103_0==PERCENTAGE) ) {
						alt103=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 103, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(103);}

					switch (alt103) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:103: {...}? IDENT
							{
							dbg.location(556,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(556,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1968); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:138: {...}? IDENT
							{
							dbg.location(556,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(556,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1974); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:171: PERCENTAGE
							{
							dbg.location(556,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1978); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(103);}

					}
					break;

				default :
					break loop104;
				}
			}
			} finally {dbg.exitSubRule(104);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(557, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE ;
	public final void page() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(559, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE
			{
			dbg.location(560,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page1997); if (state.failed) return;dbg.location(560,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:16: ( ws )?
			int alt105=2;
			try { dbg.enterSubRule(105);
			try { dbg.enterDecision(105, decisionCanBacktrack[105]);

			int LA105_0 = input.LA(1);
			if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
				alt105=1;
			}
			} finally {dbg.exitDecision(105);}

			switch (alt105) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:16: ws
					{
					dbg.location(560,16);
					pushFollow(FOLLOW_ws_in_page1999);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(105);}
			dbg.location(560,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:20: ( IDENT ( ws )? )?
			int alt107=2;
			try { dbg.enterSubRule(107);
			try { dbg.enterDecision(107, decisionCanBacktrack[107]);

			int LA107_0 = input.LA(1);
			if ( (LA107_0==IDENT) ) {
				alt107=1;
			}
			} finally {dbg.exitDecision(107);}

			switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:22: IDENT ( ws )?
					{
					dbg.location(560,22);
					match(input,IDENT,FOLLOW_IDENT_in_page2004); if (state.failed) return;dbg.location(560,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:28: ( ws )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					int LA106_0 = input.LA(1);
					if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
						alt106=1;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:28: ws
							{
							dbg.location(560,28);
							pushFollow(FOLLOW_ws_in_page2006);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}

					}
					break;

			}
			} finally {dbg.exitSubRule(107);}
			dbg.location(560,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:35: ( pseudoPage ( ws )? )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COLON) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:36: pseudoPage ( ws )?
					{
					dbg.location(560,36);
					pushFollow(FOLLOW_pseudoPage_in_page2013);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(560,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:47: ( ws )?
					int alt108=2;
					try { dbg.enterSubRule(108);
					try { dbg.enterDecision(108, decisionCanBacktrack[108]);

					int LA108_0 = input.LA(1);
					if ( (LA108_0==COMMENT||LA108_0==NL||LA108_0==WS) ) {
						alt108=1;
					}
					} finally {dbg.exitDecision(108);}

					switch (alt108) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:47: ws
							{
							dbg.location(560,47);
							pushFollow(FOLLOW_ws_in_page2015);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(108);}

					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(561,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page2028); if (state.failed) return;dbg.location(561,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:16: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:16: ws
					{
					dbg.location(561,16);
					pushFollow(FOLLOW_ws_in_page2030);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(564,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:13: ( ( propertyDeclaration | margin ) ( ws )? )?
			int alt113=2;
			try { dbg.enterSubRule(113);
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			int LA113_0 = input.LA(1);
			if ( ((LA113_0 >= AT_IDENT && LA113_0 <= AT_SIGN)||(LA113_0 >= BOTTOMCENTER_SYM && LA113_0 <= BOTTOMRIGHT_SYM)||LA113_0==CHARSET_SYM||LA113_0==COUNTER_STYLE_SYM||LA113_0==FONT_FACE_SYM||LA113_0==GEN||LA113_0==HASH_SYMBOL||LA113_0==IDENT||LA113_0==IMPORT_SYM||(LA113_0 >= LEFTBOTTOM_SYM && LA113_0 <= LEFTTOP_SYM)||(LA113_0 >= MEDIA_SYM && LA113_0 <= MOZ_DOCUMENT_SYM)||LA113_0==NAMESPACE_SYM||LA113_0==PAGE_SYM||(LA113_0 >= RIGHTBOTTOM_SYM && LA113_0 <= RIGHTTOP_SYM)||(LA113_0 >= SASS_AT_ROOT && LA113_0 <= SASS_DEBUG)||(LA113_0 >= SASS_EACH && LA113_0 <= SASS_ELSE)||LA113_0==SASS_EXTEND||(LA113_0 >= SASS_FOR && LA113_0 <= SASS_FUNCTION)||(LA113_0 >= SASS_IF && LA113_0 <= SASS_MIXIN)||(LA113_0 >= SASS_RETURN && LA113_0 <= SASS_WHILE)||LA113_0==STAR||(LA113_0 >= TOPCENTER_SYM && LA113_0 <= TOPRIGHT_SYM)||LA113_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt113=1;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:14: ( propertyDeclaration | margin ) ( ws )?
					{
					dbg.location(564,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:14: ( propertyDeclaration | margin )
					int alt111=2;
					try { dbg.enterSubRule(111);
					try { dbg.enterDecision(111, decisionCanBacktrack[111]);

					try {
						isCyclicDecision = true;
						alt111 = dfa111.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(111);}

					switch (alt111) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:15: propertyDeclaration
							{
							dbg.location(564,15);
							pushFollow(FOLLOW_propertyDeclaration_in_page2073);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:35: margin
							{
							dbg.location(564,35);
							pushFollow(FOLLOW_margin_in_page2075);
							margin();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(111);}
					dbg.location(564,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:43: ( ws )?
					int alt112=2;
					try { dbg.enterSubRule(112);
					try { dbg.enterDecision(112, decisionCanBacktrack[112]);

					int LA112_0 = input.LA(1);
					if ( (LA112_0==COMMENT||LA112_0==NL||LA112_0==WS) ) {
						alt112=1;
					}
					} finally {dbg.exitDecision(112);}

					switch (alt112) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:43: ws
							{
							dbg.location(564,43);
							pushFollow(FOLLOW_ws_in_page2078);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(112);}

					}
					break;

			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(564,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:49: ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )*
			try { dbg.enterSubRule(118);

			loop118:
			while (true) {
				int alt118=2;
				try { dbg.enterDecision(118, decisionCanBacktrack[118]);

				int LA118_0 = input.LA(1);
				if ( (LA118_0==SEMI) ) {
					alt118=1;
				}

				} finally {dbg.exitDecision(118);}

				switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:50: SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )?
					{
					dbg.location(564,50);
					match(input,SEMI,FOLLOW_SEMI_in_page2084); if (state.failed) return;dbg.location(564,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:55: ( ws )?
					int alt114=2;
					try { dbg.enterSubRule(114);
					try { dbg.enterDecision(114, decisionCanBacktrack[114]);

					int LA114_0 = input.LA(1);
					if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
						alt114=1;
					}
					} finally {dbg.exitDecision(114);}

					switch (alt114) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:55: ws
							{
							dbg.location(564,55);
							pushFollow(FOLLOW_ws_in_page2086);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(114);}
					dbg.location(564,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:59: ( ( propertyDeclaration | margin ) ( ws )? )?
					int alt117=2;
					try { dbg.enterSubRule(117);
					try { dbg.enterDecision(117, decisionCanBacktrack[117]);

					int LA117_0 = input.LA(1);
					if ( ((LA117_0 >= AT_IDENT && LA117_0 <= AT_SIGN)||(LA117_0 >= BOTTOMCENTER_SYM && LA117_0 <= BOTTOMRIGHT_SYM)||LA117_0==CHARSET_SYM||LA117_0==COUNTER_STYLE_SYM||LA117_0==FONT_FACE_SYM||LA117_0==GEN||LA117_0==HASH_SYMBOL||LA117_0==IDENT||LA117_0==IMPORT_SYM||(LA117_0 >= LEFTBOTTOM_SYM && LA117_0 <= LEFTTOP_SYM)||(LA117_0 >= MEDIA_SYM && LA117_0 <= MOZ_DOCUMENT_SYM)||LA117_0==NAMESPACE_SYM||LA117_0==PAGE_SYM||(LA117_0 >= RIGHTBOTTOM_SYM && LA117_0 <= RIGHTTOP_SYM)||(LA117_0 >= SASS_AT_ROOT && LA117_0 <= SASS_DEBUG)||(LA117_0 >= SASS_EACH && LA117_0 <= SASS_ELSE)||LA117_0==SASS_EXTEND||(LA117_0 >= SASS_FOR && LA117_0 <= SASS_FUNCTION)||(LA117_0 >= SASS_IF && LA117_0 <= SASS_MIXIN)||(LA117_0 >= SASS_RETURN && LA117_0 <= SASS_WHILE)||LA117_0==STAR||(LA117_0 >= TOPCENTER_SYM && LA117_0 <= TOPRIGHT_SYM)||LA117_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt117=1;
					}
					} finally {dbg.exitDecision(117);}

					switch (alt117) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:60: ( propertyDeclaration | margin ) ( ws )?
							{
							dbg.location(564,60);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:60: ( propertyDeclaration | margin )
							int alt115=2;
							try { dbg.enterSubRule(115);
							try { dbg.enterDecision(115, decisionCanBacktrack[115]);

							try {
								isCyclicDecision = true;
								alt115 = dfa115.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(115);}

							switch (alt115) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:61: propertyDeclaration
									{
									dbg.location(564,61);
									pushFollow(FOLLOW_propertyDeclaration_in_page2091);
									propertyDeclaration();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:81: margin
									{
									dbg.location(564,81);
									pushFollow(FOLLOW_margin_in_page2093);
									margin();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(115);}
							dbg.location(564,89);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:89: ( ws )?
							int alt116=2;
							try { dbg.enterSubRule(116);
							try { dbg.enterDecision(116, decisionCanBacktrack[116]);

							int LA116_0 = input.LA(1);
							if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
								alt116=1;
							}
							} finally {dbg.exitDecision(116);}

							switch (alt116) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:89: ws
									{
									dbg.location(564,89);
									pushFollow(FOLLOW_ws_in_page2096);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(116);}

							}
							break;

					}
					} finally {dbg.exitSubRule(117);}

					}
					break;

				default :
					break loop118;
				}
			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(565,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page2111); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(566, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(568, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(569,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2128); if (state.failed) return;dbg.location(569,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:25: ( ws )?
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( (LA119_0==COMMENT||LA119_0==NL||LA119_0==WS) ) {
				alt119=1;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:25: ws
					{
					dbg.location(569,25);
					pushFollow(FOLLOW_ws_in_counterStyle2130);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(569,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2133); if (state.failed) return;dbg.location(569,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:35: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:35: ws
					{
					dbg.location(569,35);
					pushFollow(FOLLOW_ws_in_counterStyle2135);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(570,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2146); if (state.failed) return;dbg.location(570,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:16: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:16: ws
					{
					dbg.location(570,16);
					pushFollow(FOLLOW_ws_in_counterStyle2148);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(570,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2151);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(571,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:571:3: ( declarations )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( ((LA122_0 >= AT_IDENT && LA122_0 <= AT_SIGN)||(LA122_0 >= BOTTOMCENTER_SYM && LA122_0 <= BOTTOMRIGHT_SYM)||(LA122_0 >= CHARSET_SYM && LA122_0 <= COLON)||LA122_0==COUNTER_STYLE_SYM||LA122_0==DCOLON||LA122_0==DOT||LA122_0==FONT_FACE_SYM||(LA122_0 >= GEN && LA122_0 <= GREATER)||(LA122_0 >= HASH && LA122_0 <= HASH_SYMBOL)||LA122_0==IDENT||LA122_0==IMPORT_SYM||(LA122_0 >= LBRACKET && LA122_0 <= LEFTTOP_SYM)||LA122_0==LESS_AND||(LA122_0 >= MEDIA_SYM && LA122_0 <= MOZ_DOCUMENT_SYM)||LA122_0==NAMESPACE_SYM||LA122_0==PAGE_SYM||(LA122_0 >= PIPE && LA122_0 <= PLUS)||(LA122_0 >= RIGHTBOTTOM_SYM && LA122_0 <= RIGHTTOP_SYM)||(LA122_0 >= SASS_AT_ROOT && LA122_0 <= SASS_DEBUG)||(LA122_0 >= SASS_EACH && LA122_0 <= SASS_ELSE)||(LA122_0 >= SASS_ERROR && LA122_0 <= SASS_FUNCTION)||(LA122_0 >= SASS_IF && LA122_0 <= SASS_MIXIN)||(LA122_0 >= SASS_RETURN && LA122_0 <= SEMI)||LA122_0==STAR||LA122_0==TILDE||(LA122_0 >= TOPCENTER_SYM && LA122_0 <= TOPRIGHT_SYM)||LA122_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:571:3: declarations
					{
					dbg.location(571,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2155);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(572,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2166); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(573, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(575, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(576,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2183); if (state.failed) return;dbg.location(576,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:21: ( ws )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( (LA123_0==COMMENT||LA123_0==NL||LA123_0==WS) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:21: ws
					{
					dbg.location(576,21);
					pushFollow(FOLLOW_ws_in_fontFace2185);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(577,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace2196); if (state.failed) return;dbg.location(577,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:16: ( ws )?
			int alt124=2;
			try { dbg.enterSubRule(124);
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			int LA124_0 = input.LA(1);
			if ( (LA124_0==COMMENT||LA124_0==NL||LA124_0==WS) ) {
				alt124=1;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:16: ws
					{
					dbg.location(577,16);
					pushFollow(FOLLOW_ws_in_fontFace2198);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(124);}
			dbg.location(577,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace2201);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(578,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:3: ( declarations )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( ((LA125_0 >= AT_IDENT && LA125_0 <= AT_SIGN)||(LA125_0 >= BOTTOMCENTER_SYM && LA125_0 <= BOTTOMRIGHT_SYM)||(LA125_0 >= CHARSET_SYM && LA125_0 <= COLON)||LA125_0==COUNTER_STYLE_SYM||LA125_0==DCOLON||LA125_0==DOT||LA125_0==FONT_FACE_SYM||(LA125_0 >= GEN && LA125_0 <= GREATER)||(LA125_0 >= HASH && LA125_0 <= HASH_SYMBOL)||LA125_0==IDENT||LA125_0==IMPORT_SYM||(LA125_0 >= LBRACKET && LA125_0 <= LEFTTOP_SYM)||LA125_0==LESS_AND||(LA125_0 >= MEDIA_SYM && LA125_0 <= MOZ_DOCUMENT_SYM)||LA125_0==NAMESPACE_SYM||LA125_0==PAGE_SYM||(LA125_0 >= PIPE && LA125_0 <= PLUS)||(LA125_0 >= RIGHTBOTTOM_SYM && LA125_0 <= RIGHTTOP_SYM)||(LA125_0 >= SASS_AT_ROOT && LA125_0 <= SASS_DEBUG)||(LA125_0 >= SASS_EACH && LA125_0 <= SASS_ELSE)||(LA125_0 >= SASS_ERROR && LA125_0 <= SASS_FUNCTION)||(LA125_0 >= SASS_IF && LA125_0 <= SASS_MIXIN)||(LA125_0 >= SASS_RETURN && LA125_0 <= SEMI)||LA125_0==STAR||LA125_0==TILDE||(LA125_0 >= TOPCENTER_SYM && LA125_0 <= TOPRIGHT_SYM)||LA125_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:3: declarations
					{
					dbg.location(578,3);
					pushFollow(FOLLOW_declarations_in_fontFace2205);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(579,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace2216); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(580, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(582, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(583,4);
			pushFollow(FOLLOW_margin_sym_in_margin2230);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(583,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:15: ( ws )?
			int alt126=2;
			try { dbg.enterSubRule(126);
			try { dbg.enterDecision(126, decisionCanBacktrack[126]);

			int LA126_0 = input.LA(1);
			if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
				alt126=1;
			}
			} finally {dbg.exitDecision(126);}

			switch (alt126) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:15: ws
					{
					dbg.location(583,15);
					pushFollow(FOLLOW_ws_in_margin2232);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(126);}
			dbg.location(583,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin2235); if (state.failed) return;dbg.location(583,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:26: ( ws )?
			int alt127=2;
			try { dbg.enterSubRule(127);
			try { dbg.enterDecision(127, decisionCanBacktrack[127]);

			int LA127_0 = input.LA(1);
			if ( (LA127_0==COMMENT||LA127_0==NL||LA127_0==WS) ) {
				alt127=1;
			}
			} finally {dbg.exitDecision(127);}

			switch (alt127) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:26: ws
					{
					dbg.location(583,26);
					pushFollow(FOLLOW_ws_in_margin2237);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(127);}
			dbg.location(583,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin2240);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(583,53);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:53: ( declarations )?
			int alt128=2;
			try { dbg.enterSubRule(128);
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( ((LA128_0 >= AT_IDENT && LA128_0 <= AT_SIGN)||(LA128_0 >= BOTTOMCENTER_SYM && LA128_0 <= BOTTOMRIGHT_SYM)||(LA128_0 >= CHARSET_SYM && LA128_0 <= COLON)||LA128_0==COUNTER_STYLE_SYM||LA128_0==DCOLON||LA128_0==DOT||LA128_0==FONT_FACE_SYM||(LA128_0 >= GEN && LA128_0 <= GREATER)||(LA128_0 >= HASH && LA128_0 <= HASH_SYMBOL)||LA128_0==IDENT||LA128_0==IMPORT_SYM||(LA128_0 >= LBRACKET && LA128_0 <= LEFTTOP_SYM)||LA128_0==LESS_AND||(LA128_0 >= MEDIA_SYM && LA128_0 <= MOZ_DOCUMENT_SYM)||LA128_0==NAMESPACE_SYM||LA128_0==PAGE_SYM||(LA128_0 >= PIPE && LA128_0 <= PLUS)||(LA128_0 >= RIGHTBOTTOM_SYM && LA128_0 <= RIGHTTOP_SYM)||(LA128_0 >= SASS_AT_ROOT && LA128_0 <= SASS_DEBUG)||(LA128_0 >= SASS_EACH && LA128_0 <= SASS_ELSE)||(LA128_0 >= SASS_ERROR && LA128_0 <= SASS_FUNCTION)||(LA128_0 >= SASS_IF && LA128_0 <= SASS_MIXIN)||(LA128_0 >= SASS_RETURN && LA128_0 <= SEMI)||LA128_0==STAR||LA128_0==TILDE||(LA128_0 >= TOPCENTER_SYM && LA128_0 <= TOPRIGHT_SYM)||LA128_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt128=1;
			}
			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:583:53: declarations
					{
					dbg.location(583,53);
					pushFollow(FOLLOW_declarations_in_margin2242);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(128);}
			dbg.location(583,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin2245); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(584, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:586:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(586, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(587,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(604, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(606, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:7: COLON IDENT
			{
			dbg.location(607,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage2454); if (state.failed) return;dbg.location(607,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage2456); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(608, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(610, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(611,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(613, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(615, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:616:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(616,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(618, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(620, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable )
			int alt129=5;
			try { dbg.enterDecision(129, decisionCanBacktrack[129]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case HASH_SYMBOL:
					{
					alt129=1;
					}
					break;
				case AT_SIGN:
					{
					alt129=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt129=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 129, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt129=1;
				}
				break;
			case AT_SIGN:
				{
				alt129=2;
				}
				break;
			case MINUS:
				{
				int LA129_4 = input.LA(2);
				if ( (LA129_4==HASH_SYMBOL) ) {
					alt129=1;
				}
				else if ( (LA129_4==AT_SIGN) ) {
					alt129=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 129, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt129=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt129=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 129, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(129);}

			switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:625:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(625,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(625,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property2540);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(626,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(626,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property2550);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:7: IDENT
					{
					dbg.location(627,7);
					match(input,IDENT,FOLLOW_IDENT_in_property2558); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:7: GEN
					{
					dbg.location(628,7);
					match(input,GEN,FOLLOW_GEN_in_property2566); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:7: {...}? cp_variable
					{
					dbg.location(629,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(629,36);
					pushFollow(FOLLOW_cp_variable_in_property2576);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(631, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(636, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(638,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map2603);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(638,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map2605); if (state.failed) return;dbg.location(638,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:25: ( ws )?
			int alt130=2;
			try { dbg.enterSubRule(130);
			try { dbg.enterDecision(130, decisionCanBacktrack[130]);

			int LA130_0 = input.LA(1);
			if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
				alt130=1;
			}
			} finally {dbg.exitDecision(130);}

			switch (alt130) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:25: ws
					{
					dbg.location(638,25);
					pushFollow(FOLLOW_ws_in_sass_map2607);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(130);}
			dbg.location(638,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map2610); if (state.failed) return;dbg.location(638,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:36: ( ws )?
			int alt131=2;
			try { dbg.enterSubRule(131);
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
				alt131=1;
			}
			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:36: ws
					{
					dbg.location(638,36);
					pushFollow(FOLLOW_ws_in_sass_map2612);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(131);}
			dbg.location(638,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map2615);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(640,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:640:9: ( sass_map_pairs )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( ((LA132_0 >= AT_IDENT && LA132_0 <= AT_SIGN)||(LA132_0 >= BOTTOMCENTER_SYM && LA132_0 <= BOTTOMRIGHT_SYM)||LA132_0==CHARSET_SYM||LA132_0==COMMA||LA132_0==COUNTER_STYLE_SYM||LA132_0==FONT_FACE_SYM||LA132_0==GEN||LA132_0==HASH_SYMBOL||LA132_0==IDENT||LA132_0==IMPORT_SYM||(LA132_0 >= LEFTBOTTOM_SYM && LA132_0 <= LEFTTOP_SYM)||(LA132_0 >= MEDIA_SYM && LA132_0 <= MOZ_DOCUMENT_SYM)||LA132_0==NAMESPACE_SYM||LA132_0==NUMBER||LA132_0==PAGE_SYM||(LA132_0 >= RIGHTBOTTOM_SYM && LA132_0 <= RIGHTTOP_SYM)||(LA132_0 >= SASS_AT_ROOT && LA132_0 <= SASS_DEBUG)||(LA132_0 >= SASS_EACH && LA132_0 <= SASS_ELSE)||LA132_0==SASS_EXTEND||(LA132_0 >= SASS_FOR && LA132_0 <= SASS_FUNCTION)||(LA132_0 >= SASS_IF && LA132_0 <= SASS_MIXIN)||(LA132_0 >= SASS_RETURN && LA132_0 <= SASS_WHILE)||LA132_0==STRING||(LA132_0 >= TOPCENTER_SYM && LA132_0 <= TOPRIGHT_SYM)||LA132_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:640:9: sass_map_pairs
					{
					dbg.location(640,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map2634);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(641,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map2641); if (state.failed) return;dbg.location(641,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(135);

			loop135:
			while (true) {
				int alt135=3;
				try { dbg.enterDecision(135, decisionCanBacktrack[135]);

				try {
					isCyclicDecision = true;
					alt135 = dfa135.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(135);}

				switch (alt135) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(641,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(641,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:14: ( ws )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:14: ws
							{
							dbg.location(641,14);
							pushFollow(FOLLOW_ws_in_sass_map2645);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}
					dbg.location(641,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map2648); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(641,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(641,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:35: ( ws )?
					int alt134=2;
					try { dbg.enterSubRule(134);
					try { dbg.enterDecision(134, decisionCanBacktrack[134]);

					int LA134_0 = input.LA(1);
					if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
						alt134=1;
					}
					} finally {dbg.exitDecision(134);}

					switch (alt134) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:641:35: ws
							{
							dbg.location(641,35);
							pushFollow(FOLLOW_ws_in_sass_map2654);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(134);}
					dbg.location(641,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map2657); if (state.failed) return;
					}

					}
					break;

				default :
					break loop135;
				}
			}
			} finally {dbg.exitSubRule(135);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(642, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(644, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:645:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:646:5: cp_variable
			{
			dbg.location(646,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name2681);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(647, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(649, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(651,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt140=0;
			try { dbg.enterSubRule(140);

			loop140:
			while (true) {
				int alt140=3;
				try { dbg.enterDecision(140, decisionCanBacktrack[140]);

				int LA140_0 = input.LA(1);
				if ( ((LA140_0 >= AT_IDENT && LA140_0 <= AT_SIGN)||(LA140_0 >= BOTTOMCENTER_SYM && LA140_0 <= BOTTOMRIGHT_SYM)||LA140_0==CHARSET_SYM||LA140_0==COUNTER_STYLE_SYM||LA140_0==FONT_FACE_SYM||LA140_0==GEN||LA140_0==HASH_SYMBOL||LA140_0==IDENT||LA140_0==IMPORT_SYM||(LA140_0 >= LEFTBOTTOM_SYM && LA140_0 <= LEFTTOP_SYM)||(LA140_0 >= MEDIA_SYM && LA140_0 <= MOZ_DOCUMENT_SYM)||LA140_0==NAMESPACE_SYM||LA140_0==NUMBER||LA140_0==PAGE_SYM||(LA140_0 >= RIGHTBOTTOM_SYM && LA140_0 <= RIGHTTOP_SYM)||(LA140_0 >= SASS_AT_ROOT && LA140_0 <= SASS_DEBUG)||(LA140_0 >= SASS_EACH && LA140_0 <= SASS_ELSE)||LA140_0==SASS_EXTEND||(LA140_0 >= SASS_FOR && LA140_0 <= SASS_FUNCTION)||(LA140_0 >= SASS_IF && LA140_0 <= SASS_MIXIN)||(LA140_0 >= SASS_RETURN && LA140_0 <= SASS_WHILE)||LA140_0==STRING||(LA140_0 >= TOPCENTER_SYM && LA140_0 <= TOPRIGHT_SYM)||LA140_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt140=1;
				}
				else if ( (LA140_0==COMMA) ) {
					alt140=2;
				}

				} finally {dbg.exitDecision(140);}

				switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(652,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(652,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs2715);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(652,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					try {
						isCyclicDecision = true;
						alt137 = dfa137.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(652,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:40: ( ws )?
							int alt136=2;
							try { dbg.enterSubRule(136);
							try { dbg.enterDecision(136, decisionCanBacktrack[136]);

							int LA136_0 = input.LA(1);
							if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
								alt136=1;
							}
							} finally {dbg.exitDecision(136);}

							switch (alt136) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:40: ws
									{
									dbg.location(652,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs2725);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(136);}
							dbg.location(652,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2728); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(652,52);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:52: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:52: ws
							{
							dbg.location(652,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2732);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:10: ( COMMA ( ws )? )
					{
					dbg.location(654,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:12: COMMA ( ws )?
					{
					dbg.location(654,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2759); if (state.failed) return;dbg.location(654,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:18: ( ws )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( (LA139_0==COMMENT||LA139_0==NL||LA139_0==WS) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:18: ws
							{
							dbg.location(654,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2761);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}

					}

					}
					break;

				default :
					if ( cnt140 >= 1 ) break loop140;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(140, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt140++;
			}
			} finally {dbg.exitSubRule(140);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(656, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:1: sass_map_pair : ( NUMBER | STRING | ( ( function )=> function ) | property ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(658, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:5: ( ( NUMBER | STRING | ( ( function )=> function ) | property ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:9: ( NUMBER | STRING | ( ( function )=> function ) | property ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(660,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:9: ( NUMBER | STRING | ( ( function )=> function ) | property )
			int alt141=4;
			try { dbg.enterSubRule(141);
			try { dbg.enterDecision(141, decisionCanBacktrack[141]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt141=1;
				}
				break;
			case STRING:
				{
				alt141=2;
				}
				break;
			case IDENT:
				{
				int LA141_3 = input.LA(2);
				if ( (synpred18_Css3()) ) {
					alt141=3;
				}
				else if ( (true) ) {
					alt141=4;
				}

				}
				break;
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case GEN:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt141=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 141, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(141);}

			switch (alt141) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:10: NUMBER
					{
					dbg.location(660,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair2797); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:17: STRING
					{
					dbg.location(660,17);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair2799); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:24: ( ( function )=> function )
					{
					dbg.location(660,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:24: ( ( function )=> function )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:25: ( function )=> function
					{
					dbg.location(660,37);
					pushFollow(FOLLOW_function_in_sass_map_pair2806);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:47: property
					{
					dbg.location(660,47);
					pushFollow(FOLLOW_property_in_sass_map_pair2809);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(141);}
			dbg.location(660,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:57: ( ws )?
			int alt142=2;
			try { dbg.enterSubRule(142);
			try { dbg.enterDecision(142, decisionCanBacktrack[142]);

			int LA142_0 = input.LA(1);
			if ( (LA142_0==COMMENT||LA142_0==NL||LA142_0==WS) ) {
				alt142=1;
			}
			} finally {dbg.exitDecision(142);}

			switch (alt142) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:57: ws
					{
					dbg.location(660,57);
					pushFollow(FOLLOW_ws_in_sass_map_pair2812);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(142);}
			dbg.location(660,61);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair2815); if (state.failed) return;dbg.location(660,67);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:67: ( ws )?
			int alt143=2;
			try { dbg.enterSubRule(143);
			try { dbg.enterDecision(143, decisionCanBacktrack[143]);

			int LA143_0 = input.LA(1);
			if ( (LA143_0==COMMENT||LA143_0==NL||LA143_0==WS) ) {
				alt143=1;
			}
			} finally {dbg.exitDecision(143);}

			switch (alt143) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:67: ws
					{
					dbg.location(660,67);
					pushFollow(FOLLOW_ws_in_sass_map_pair2817);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(143);}
			dbg.location(660,71);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair2820);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(660,85);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:85: ( ( ws )? prio )?
			int alt145=2;
			try { dbg.enterSubRule(145);
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			try {
				isCyclicDecision = true;
				alt145 = dfa145.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:86: ( ws )? prio
					{
					dbg.location(660,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:86: ( ws )?
					int alt144=2;
					try { dbg.enterSubRule(144);
					try { dbg.enterDecision(144, decisionCanBacktrack[144]);

					int LA144_0 = input.LA(1);
					if ( (LA144_0==COMMENT||LA144_0==NL||LA144_0==WS) ) {
						alt144=1;
					}
					} finally {dbg.exitDecision(144);}

					switch (alt144) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:86: ws
							{
							dbg.location(660,86);
							pushFollow(FOLLOW_ws_in_sass_map_pair2823);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(144);}
					dbg.location(660,90);
					pushFollow(FOLLOW_prio_in_sass_map_pair2826);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(145);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(661, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(663, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(665,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt151=3;
			try { dbg.enterSubRule(151);
			try { dbg.enterDecision(151, decisionCanBacktrack[151]);

			try {
				isCyclicDecision = true;
				alt151 = dfa151.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(151);}

			switch (alt151) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(666,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(666,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2868); if (state.failed) return;dbg.location(666,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:27: ( ws selectorsGroup )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					try {
						isCyclicDecision = true;
						alt146 = dfa146.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:28: ws selectorsGroup
							{
							dbg.location(666,28);
							pushFollow(FOLLOW_ws_in_rule2871);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(666,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule2873);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(667,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(667,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2894); if (state.failed) return;dbg.location(667,29);
					pushFollow(FOLLOW_ws_in_rule2896);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(667,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule2898); if (state.failed) return;dbg.location(667,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:39: ( ws )?
					int alt147=2;
					try { dbg.enterSubRule(147);
					try { dbg.enterDecision(147, decisionCanBacktrack[147]);

					int LA147_0 = input.LA(1);
					if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
						alt147=1;
					}
					} finally {dbg.exitDecision(147);}

					switch (alt147) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:39: ws
							{
							dbg.location(667,39);
							pushFollow(FOLLOW_ws_in_rule2900);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(147);}
					dbg.location(667,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(667,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule2905); if (state.failed) return;dbg.location(667,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:128: ( ws )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					int LA148_0 = input.LA(1);
					if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
						alt148=1;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:128: ws
							{
							dbg.location(667,128);
							pushFollow(FOLLOW_ws_in_rule2909);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}
					dbg.location(667,132);
					match(input,COLON,FOLLOW_COLON_in_rule2912); if (state.failed) return;dbg.location(667,138);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:138: ( ws )?
					int alt149=2;
					try { dbg.enterSubRule(149);
					try { dbg.enterDecision(149, decisionCanBacktrack[149]);

					int LA149_0 = input.LA(1);
					if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
						alt149=1;
					}
					} finally {dbg.exitDecision(149);}

					switch (alt149) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:138: ws
							{
							dbg.location(667,138);
							pushFollow(FOLLOW_ws_in_rule2914);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(149);}
					dbg.location(667,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule2917); if (state.failed) return;dbg.location(667,148);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:148: ( ws )?
					int alt150=2;
					try { dbg.enterSubRule(150);
					try { dbg.enterDecision(150, decisionCanBacktrack[150]);

					int LA150_0 = input.LA(1);
					if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
						alt150=1;
					}
					} finally {dbg.exitDecision(150);}

					switch (alt150) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:148: ws
							{
							dbg.location(667,148);
							pushFollow(FOLLOW_ws_in_rule2919);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(150);}
					dbg.location(667,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule2922); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:15: selectorsGroup
					{
					dbg.location(668,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule2940);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(151);}
			dbg.location(669,11);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:11: ( ws )?
			int alt152=2;
			try { dbg.enterSubRule(152);
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			int LA152_0 = input.LA(1);
			if ( (LA152_0==COMMENT||LA152_0==NL||LA152_0==WS) ) {
				alt152=1;
			}
			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:11: ws
					{
					dbg.location(669,11);
					pushFollow(FOLLOW_ws_in_rule2952);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(152);}
			dbg.location(670,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule2959); if (state.failed) return;dbg.location(670,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:12: ( ws )?
			int alt153=2;
			try { dbg.enterSubRule(153);
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			int LA153_0 = input.LA(1);
			if ( (LA153_0==COMMENT||LA153_0==NL||LA153_0==WS) ) {
				alt153=1;
			}
			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:12: ws
					{
					dbg.location(670,12);
					pushFollow(FOLLOW_ws_in_rule2961);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(153);}
			dbg.location(670,16);
			pushFollow(FOLLOW_syncToFollow_in_rule2964);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(671,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:9: ( declarations )?
			int alt154=2;
			try { dbg.enterSubRule(154);
			try { dbg.enterDecision(154, decisionCanBacktrack[154]);

			int LA154_0 = input.LA(1);
			if ( ((LA154_0 >= AT_IDENT && LA154_0 <= AT_SIGN)||(LA154_0 >= BOTTOMCENTER_SYM && LA154_0 <= BOTTOMRIGHT_SYM)||(LA154_0 >= CHARSET_SYM && LA154_0 <= COLON)||LA154_0==COUNTER_STYLE_SYM||LA154_0==DCOLON||LA154_0==DOT||LA154_0==FONT_FACE_SYM||(LA154_0 >= GEN && LA154_0 <= GREATER)||(LA154_0 >= HASH && LA154_0 <= HASH_SYMBOL)||LA154_0==IDENT||LA154_0==IMPORT_SYM||(LA154_0 >= LBRACKET && LA154_0 <= LEFTTOP_SYM)||LA154_0==LESS_AND||(LA154_0 >= MEDIA_SYM && LA154_0 <= MOZ_DOCUMENT_SYM)||LA154_0==NAMESPACE_SYM||LA154_0==PAGE_SYM||(LA154_0 >= PIPE && LA154_0 <= PLUS)||(LA154_0 >= RIGHTBOTTOM_SYM && LA154_0 <= RIGHTTOP_SYM)||(LA154_0 >= SASS_AT_ROOT && LA154_0 <= SASS_DEBUG)||(LA154_0 >= SASS_EACH && LA154_0 <= SASS_ELSE)||(LA154_0 >= SASS_ERROR && LA154_0 <= SASS_FUNCTION)||(LA154_0 >= SASS_IF && LA154_0 <= SASS_MIXIN)||(LA154_0 >= SASS_RETURN && LA154_0 <= SEMI)||LA154_0==STAR||LA154_0==TILDE||(LA154_0 >= TOPCENTER_SYM && LA154_0 <= TOPRIGHT_SYM)||LA154_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt154=1;
			}
			} finally {dbg.exitDecision(154);}

			switch (alt154) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:9: declarations
					{
					dbg.location(671,9);
					pushFollow(FOLLOW_declarations_in_rule2974);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(154);}
			dbg.location(672,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule2981); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(673, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(680, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt168=2;
			try { dbg.enterDecision(168, decisionCanBacktrack[168]);

			try {
				isCyclicDecision = true;
				alt168 = dfa168.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(168);}

			switch (alt168) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(682,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(156);

					loop156:
					while (true) {
						int alt156=2;
						try { dbg.enterDecision(156, decisionCanBacktrack[156]);

						int LA156_0 = input.LA(1);
						if ( (LA156_0==SEMI) ) {
							alt156=1;
						}

						} finally {dbg.exitDecision(156);}

						switch (alt156) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:9: SEMI ( ws )?
							{
							dbg.location(682,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3015); if (state.failed) return;dbg.location(682,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:14: ( ws )?
							int alt155=2;
							try { dbg.enterSubRule(155);
							try { dbg.enterDecision(155, decisionCanBacktrack[155]);

							int LA155_0 = input.LA(1);
							if ( (LA155_0==COMMENT||LA155_0==NL||LA155_0==WS) ) {
								alt155=1;
							}
							} finally {dbg.exitDecision(155);}

							switch (alt155) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:14: ws
									{
									dbg.location(682,14);
									pushFollow(FOLLOW_ws_in_declarations3017);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(155);}

							}
							break;

						default :
							break loop156;
						}
					}
					} finally {dbg.exitSubRule(156);}
					dbg.location(682,21);
					pushFollow(FOLLOW_declaration_in_declarations3023);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(682,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(161);

					loop161:
					while (true) {
						int alt161=2;
						try { dbg.enterDecision(161, decisionCanBacktrack[161]);

						try {
							isCyclicDecision = true;
							alt161 = dfa161.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(161);}

						switch (alt161) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(682,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt160=2;
							try { dbg.enterSubRule(160);
							try { dbg.enterDecision(160, decisionCanBacktrack[160]);

							try {
								isCyclicDecision = true;
								alt160 = dfa160.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(160);}

							switch (alt160) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(682,35);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(682,36);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:36: ( ws )?
									int alt157=2;
									try { dbg.enterSubRule(157);
									try { dbg.enterDecision(157, decisionCanBacktrack[157]);

									int LA157_0 = input.LA(1);
									if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
										alt157=1;
									}
									} finally {dbg.exitDecision(157);}

									switch (alt157) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:36: ws
											{
											dbg.location(682,36);
											pushFollow(FOLLOW_ws_in_declarations3028);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(157);}
									dbg.location(682,40);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:40: ( SEMI ( ws )? )+
									int cnt159=0;
									try { dbg.enterSubRule(159);

									loop159:
									while (true) {
										int alt159=2;
										try { dbg.enterDecision(159, decisionCanBacktrack[159]);

										int LA159_0 = input.LA(1);
										if ( (LA159_0==SEMI) ) {
											alt159=1;
										}

										} finally {dbg.exitDecision(159);}

										switch (alt159) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:41: SEMI ( ws )?
											{
											dbg.location(682,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations3032); if (state.failed) return;dbg.location(682,46);
											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:46: ( ws )?
											int alt158=2;
											try { dbg.enterSubRule(158);
											try { dbg.enterDecision(158, decisionCanBacktrack[158]);

											int LA158_0 = input.LA(1);
											if ( (LA158_0==COMMENT||LA158_0==NL||LA158_0==WS) ) {
												alt158=1;
											}
											} finally {dbg.exitDecision(158);}

											switch (alt158) {
												case 1 :
													dbg.enterAlt(1);

													// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:46: ws
													{
													dbg.location(682,46);
													pushFollow(FOLLOW_ws_in_declarations3034);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(158);}

											}
											break;

										default :
											if ( cnt159 >= 1 ) break loop159;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(159, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt159++;
									}
									} finally {dbg.exitSubRule(159);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:53: ws
									{
									dbg.location(682,53);
									pushFollow(FOLLOW_ws_in_declarations3040);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(160);}
							dbg.location(682,57);
							pushFollow(FOLLOW_declaration_in_declarations3043);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop161;
						}
					}
					} finally {dbg.exitSubRule(161);}
					dbg.location(682,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt165=3;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					try {
						isCyclicDecision = true;
						alt165 = dfa165.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(682,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(682,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:73: ( ws )?
							int alt162=2;
							try { dbg.enterSubRule(162);
							try { dbg.enterDecision(162, decisionCanBacktrack[162]);

							int LA162_0 = input.LA(1);
							if ( (LA162_0==COMMENT||LA162_0==NL||LA162_0==WS) ) {
								alt162=1;
							}
							} finally {dbg.exitDecision(162);}

							switch (alt162) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:73: ws
									{
									dbg.location(682,73);
									pushFollow(FOLLOW_ws_in_declarations3049);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(162);}
							dbg.location(682,77);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:77: ( SEMI ( ws )? )+
							int cnt164=0;
							try { dbg.enterSubRule(164);

							loop164:
							while (true) {
								int alt164=2;
								try { dbg.enterDecision(164, decisionCanBacktrack[164]);

								int LA164_0 = input.LA(1);
								if ( (LA164_0==SEMI) ) {
									alt164=1;
								}

								} finally {dbg.exitDecision(164);}

								switch (alt164) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:78: SEMI ( ws )?
									{
									dbg.location(682,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations3053); if (state.failed) return;dbg.location(682,83);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:83: ( ws )?
									int alt163=2;
									try { dbg.enterSubRule(163);
									try { dbg.enterDecision(163, decisionCanBacktrack[163]);

									int LA163_0 = input.LA(1);
									if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
										alt163=1;
									}
									} finally {dbg.exitDecision(163);}

									switch (alt163) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:83: ws
											{
											dbg.location(682,83);
											pushFollow(FOLLOW_ws_in_declarations3055);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(163);}

									}
									break;

								default :
									if ( cnt164 >= 1 ) break loop164;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(164, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt164++;
							}
							} finally {dbg.exitSubRule(164);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:90: ws
							{
							dbg.location(682,90);
							pushFollow(FOLLOW_ws_in_declarations3061);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:8: ( SEMI ( ws )? )+
					{
					dbg.location(683,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:8: ( SEMI ( ws )? )+
					int cnt167=0;
					try { dbg.enterSubRule(167);

					loop167:
					while (true) {
						int alt167=2;
						try { dbg.enterDecision(167, decisionCanBacktrack[167]);

						int LA167_0 = input.LA(1);
						if ( (LA167_0==SEMI) ) {
							alt167=1;
						}

						} finally {dbg.exitDecision(167);}

						switch (alt167) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:9: SEMI ( ws )?
							{
							dbg.location(683,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3073); if (state.failed) return;dbg.location(683,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:14: ( ws )?
							int alt166=2;
							try { dbg.enterSubRule(166);
							try { dbg.enterDecision(166, decisionCanBacktrack[166]);

							int LA166_0 = input.LA(1);
							if ( (LA166_0==COMMENT||LA166_0==NL||LA166_0==WS) ) {
								alt166=1;
							}
							} finally {dbg.exitDecision(166);}

							switch (alt166) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:14: ws
									{
									dbg.location(683,14);
									pushFollow(FOLLOW_ws_in_declarations3075);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(166);}

							}
							break;

						default :
							if ( cnt167 >= 1 ) break loop167;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(167, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt167++;
					}
					} finally {dbg.exitSubRule(167);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(684, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(686, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt173=18;
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			int LA173_0 = input.LA(1);
			if ( (LA173_0==SASS_AT_ROOT) ) {
				int LA173_1 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_VAR) ) {
				int LA173_2 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==IDENT) ) {
				int LA173_3 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt173=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==HASH_SYMBOL) ) {
				int LA173_4 = input.LA(2);
				if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==AT_SIGN) ) {
				int LA173_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( ((synpred22_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MINUS) ) {
				int LA173_6 = input.LA(2);
				if ( ((synpred21_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt173=3;
				}
				else if ( ((synpred22_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==GEN) ) {
				int LA173_7 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt173=3;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt173=6;
				}
				else if ( (true) ) {
					alt173=18;
				}

			}
			else if ( (LA173_0==SASS_MIXIN) ) {
				int LA173_8 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( ((synpred25_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==GREATER||LA173_0==PLUS||LA173_0==TILDE) && (synpred22_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred22_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==LESS_AND) ) {
				int LA173_11 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt173=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==HASH) ) {
				int LA173_12 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt173=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==DOT) ) {
				int LA173_13 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt173=7;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==LBRACKET) && (synpred22_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==COLON||LA173_0==DCOLON) && (synpred22_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==STAR) ) {
				int LA173_16 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred23_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred24_Css3()) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==PIPE) && (synpred22_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==AT_IDENT) ) {
				int LA173_18 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_INCLUDE) ) {
				int LA173_19 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=8;
				}
				else if ( ((synpred27_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MEDIA_SYM) ) {
				int LA173_20 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==PAGE_SYM) ) {
				int LA173_21 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==COUNTER_STYLE_SYM) ) {
				int LA173_22 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==FONT_FACE_SYM) ) {
				int LA173_23 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MOZ_DOCUMENT_SYM) ) {
				int LA173_24 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA173_25 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_IF) ) {
				int LA173_26 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_FOR) ) {
				int LA173_27 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_EACH) ) {
				int LA173_28 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_WHILE) ) {
				int LA173_29 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_EXTEND) ) {
				int LA173_30 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_DEBUG||LA173_0==SASS_WARN) ) {
				int LA173_31 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_CONTENT) ) {
				int LA173_32 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_RETURN) ) {
				int LA173_33 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==IMPORT_SYM) ) {
				int LA173_34 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_ERROR) ) {
				alt173=16;
			}
			else if ( ((LA173_0 >= BOTTOMCENTER_SYM && LA173_0 <= BOTTOMRIGHT_SYM)||LA173_0==CHARSET_SYM||(LA173_0 >= LEFTBOTTOM_SYM && LA173_0 <= LEFTTOP_SYM)||LA173_0==NAMESPACE_SYM||(LA173_0 >= RIGHTBOTTOM_SYM && LA173_0 <= RIGHTTOP_SYM)||LA173_0==SASS_ELSE||LA173_0==SASS_FUNCTION||(LA173_0 >= TOPCENTER_SYM && LA173_0 <= TOPRIGHT_SYM)) ) {
				int LA173_36 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt173=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=3;
				}
				else if ( (((synpred23_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 173, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(688,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration3104);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:7: ( sass_map )=> sass_map
					{
					dbg.location(689,20);
					pushFollow(FOLLOW_sass_map_in_declaration3117);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(690,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration3129);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(691,145);
					pushFollow(FOLLOW_rule_in_declaration3192);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(692,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3204);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(694,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3243);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(695,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration3255);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(696,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3268);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(696,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:39: ( ( ws )? IMPORTANT_SYM )?
					int alt170=2;
					try { dbg.enterSubRule(170);
					try { dbg.enterDecision(170, decisionCanBacktrack[170]);

					try {
						isCyclicDecision = true;
						alt170 = dfa170.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(170);}

					switch (alt170) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(696,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:40: ( ws )?
							int alt169=2;
							try { dbg.enterSubRule(169);
							try { dbg.enterDecision(169, decisionCanBacktrack[169]);

							int LA169_0 = input.LA(1);
							if ( (LA169_0==COMMENT||LA169_0==NL||LA169_0==WS) ) {
								alt169=1;
							}
							} finally {dbg.exitDecision(169);}

							switch (alt169) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:40: ws
									{
									dbg.location(696,40);
									pushFollow(FOLLOW_ws_in_declaration3271);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(169);}
							dbg.location(696,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3274); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(170);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(697,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(697,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3291);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(697,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:57: ( ( ws )? IMPORTANT_SYM )?
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					try {
						isCyclicDecision = true;
						alt172 = dfa172.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(697,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:58: ( ws )?
							int alt171=2;
							try { dbg.enterSubRule(171);
							try { dbg.enterDecision(171, decisionCanBacktrack[171]);

							int LA171_0 = input.LA(1);
							if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
								alt171=1;
							}
							} finally {dbg.exitDecision(171);}

							switch (alt171) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:58: ws
									{
									dbg.location(697,58);
									pushFollow(FOLLOW_ws_in_declaration3294);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(171);}
							dbg.location(697,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3297); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:7: {...}? at_rule
					{
					dbg.location(698,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(698,36);
					pushFollow(FOLLOW_at_rule_in_declaration3313);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: {...}? sass_control
					{
					dbg.location(699,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(699,25);
					pushFollow(FOLLOW_sass_control_in_declaration3323);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: {...}? sass_extend
					{
					dbg.location(700,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(700,25);
					pushFollow(FOLLOW_sass_extend_in_declaration3333);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: {...}? sass_debug
					{
					dbg.location(701,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(701,25);
					pushFollow(FOLLOW_sass_debug_in_declaration3343);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: {...}? sass_content
					{
					dbg.location(702,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(702,25);
					pushFollow(FOLLOW_sass_content_in_declaration3353);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:7: {...}? sass_function_return
					{
					dbg.location(703,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(703,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration3363);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:7: {...}? sass_error
					{
					dbg.location(704,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(704,25);
					pushFollow(FOLLOW_sass_error_in_declaration3373);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:7: {...}? importItem
					{
					dbg.location(705,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(705,25);
					pushFollow(FOLLOW_importItem_in_declaration3383);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:706:7: GEN
					{
					dbg.location(706,7);
					match(input,GEN,FOLLOW_GEN_in_declaration3391); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(707, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(713, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:714:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(715,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup3425);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(715,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(176);

			loop176:
			while (true) {
				int alt176=2;
				try { dbg.enterDecision(176, decisionCanBacktrack[176]);

				try {
					isCyclicDecision = true;
					alt176 = dfa176.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(176);}

				switch (alt176) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(715,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ( ws )?
					int alt174=2;
					try { dbg.enterSubRule(174);
					try { dbg.enterDecision(174, decisionCanBacktrack[174]);

					int LA174_0 = input.LA(1);
					if ( (LA174_0==COMMENT||LA174_0==NL||LA174_0==WS) ) {
						alt174=1;
					}
					} finally {dbg.exitDecision(174);}

					switch (alt174) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ws
							{
							dbg.location(715,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup3428);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(174);}
					dbg.location(715,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3431); if (state.failed) return;dbg.location(715,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:29: ( ws )?
					int alt175=2;
					try { dbg.enterSubRule(175);
					try { dbg.enterDecision(175, decisionCanBacktrack[175]);

					int LA175_0 = input.LA(1);
					if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
						alt175=1;
					}
					} finally {dbg.exitDecision(175);}

					switch (alt175) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:29: ws
							{
							dbg.location(715,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup3433);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(175);}
					dbg.location(715,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup3436);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop176;
				}
			}
			} finally {dbg.exitSubRule(176);}
			dbg.location(715,44);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:44: ({...}? COMMA )?
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			int LA177_0 = input.LA(1);
			if ( (LA177_0==COMMA) ) {
				alt177=1;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:45: {...}? COMMA
					{
					dbg.location(715,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(715,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3443); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(177);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(716, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:718:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(718, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt184=2;
			try { dbg.enterDecision(184, decisionCanBacktrack[184]);

			try {
				isCyclicDecision = true;
				alt184 = dfa184.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(184);}

			switch (alt184) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(719,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:8: ( combinator ( ws )? )?
					int alt179=2;
					try { dbg.enterSubRule(179);
					try { dbg.enterDecision(179, decisionCanBacktrack[179]);

					int LA179_0 = input.LA(1);
					if ( (LA179_0==GREATER||LA179_0==PLUS||LA179_0==TILDE) ) {
						alt179=1;
					}
					} finally {dbg.exitDecision(179);}

					switch (alt179) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:9: combinator ( ws )?
							{
							dbg.location(719,9);
							pushFollow(FOLLOW_combinator_in_selector3464);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(719,20);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:20: ( ws )?
							int alt178=2;
							try { dbg.enterSubRule(178);
							try { dbg.enterDecision(178, decisionCanBacktrack[178]);

							int LA178_0 = input.LA(1);
							if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
								alt178=1;
							}
							} finally {dbg.exitDecision(178);}

							switch (alt178) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:20: ws
									{
									dbg.location(719,20);
									pushFollow(FOLLOW_ws_in_selector3466);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(178);}

							}
							break;

					}
					} finally {dbg.exitSubRule(179);}
					dbg.location(719,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector3471);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(719,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(183);

					loop183:
					while (true) {
						int alt183=2;
						try { dbg.enterDecision(183, decisionCanBacktrack[183]);

						try {
							isCyclicDecision = true;
							alt183 = dfa183.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(183);}

						switch (alt183) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(719,51);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt182=2;
							try { dbg.enterSubRule(182);
							try { dbg.enterDecision(182, decisionCanBacktrack[182]);

							try {
								isCyclicDecision = true;
								alt182 = dfa182.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(182);}

							switch (alt182) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(719,52);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:53: ( ws )? combinator ( ws )?
									{
									dbg.location(719,53);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:53: ( ws )?
									int alt180=2;
									try { dbg.enterSubRule(180);
									try { dbg.enterDecision(180, decisionCanBacktrack[180]);

									int LA180_0 = input.LA(1);
									if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
										alt180=1;
									}
									} finally {dbg.exitDecision(180);}

									switch (alt180) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:53: ws
											{
											dbg.location(719,53);
											pushFollow(FOLLOW_ws_in_selector3477);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(180);}
									dbg.location(719,57);
									pushFollow(FOLLOW_combinator_in_selector3480);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(719,68);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:68: ( ws )?
									int alt181=2;
									try { dbg.enterSubRule(181);
									try { dbg.enterDecision(181, decisionCanBacktrack[181]);

									int LA181_0 = input.LA(1);
									if ( (LA181_0==COMMENT||LA181_0==NL||LA181_0==WS) ) {
										alt181=1;
									}
									} finally {dbg.exitDecision(181);}

									switch (alt181) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:68: ws
											{
											dbg.location(719,68);
											pushFollow(FOLLOW_ws_in_selector3482);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(181);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:73: ws
									{
									dbg.location(719,73);
									pushFollow(FOLLOW_ws_in_selector3486);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(182);}
							dbg.location(719,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector3489);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop183;
						}
					}
					} finally {dbg.exitSubRule(183);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:10: {...}? combinator
					{
					dbg.location(720,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(720,28);
					pushFollow(FOLLOW_combinator_in_selector3504);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(721, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(723, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(724,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(726, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(728, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt193=2;
			try { dbg.enterDecision(193, decisionCanBacktrack[193]);

			int LA193_0 = input.LA(1);
			if ( (LA193_0==AT_SIGN||LA193_0==COLON||LA193_0==DCOLON||LA193_0==DOT||(LA193_0 >= HASH && LA193_0 <= HASH_SYMBOL)||LA193_0==LBRACKET||LA193_0==MINUS||LA193_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt193=1;
			}
			else if ( (LA193_0==LESS_AND) ) {
				int LA193_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt193=1;
				}
				else if ( (synpred29_Css3()) ) {
					alt193=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 193, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA193_0==IDENT) ) {
				int LA193_3 = input.LA(2);
				if ( (LA193_3==HASH_SYMBOL) ) {
					int LA193_7 = input.LA(3);
					if ( (LA193_7==LBRACE) ) {
						alt193=1;
					}
					else if ( (LA193_7==NAME) && (synpred29_Css3())) {
						alt193=2;
					}
					else if ( (LA193_7==IDENT||LA193_7==MINUS) && (synpred29_Css3())) {
						alt193=2;
					}
					else if ( (LA193_7==AT_SIGN) && (synpred29_Css3())) {
						alt193=2;
					}

				}
				else if ( (LA193_3==AT_SIGN) ) {
					alt193=1;
				}
				else if ( (LA193_3==PIPE) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COMMENT||LA193_3==NL||LA193_3==WS) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LESS_AND) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==HASH) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==DOT) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LBRACKET) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COLON||LA193_3==DCOLON) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==GREATER||LA193_3==PLUS||LA193_3==TILDE) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COMMA) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LBRACE) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==RPAREN) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==SEMI) && (synpred29_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==RBRACE) && (synpred29_Css3())) {
					alt193=2;
				}

			}
			else if ( (LA193_0==STAR) && (synpred29_Css3())) {
				alt193=2;
			}
			else if ( (LA193_0==PIPE) && (synpred29_Css3())) {
				alt193=2;
			}
			else if ( (LA193_0==GEN) && (synpred29_Css3())) {
				alt193=2;
			}

			} finally {dbg.exitDecision(193);}

			switch (alt193) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:730:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(730,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:730:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt185=3;
					try { dbg.enterSubRule(185);
					try { dbg.enterDecision(185, decisionCanBacktrack[185]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt185=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA185_2 = input.LA(2);
						if ( (LA185_2==LBRACE) ) {
							alt185=2;
						}
						else if ( (LA185_2==AT_SIGN||LA185_2==IDENT||LA185_2==MINUS||LA185_2==NAME) ) {
							alt185=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 185, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA185_3 = input.LA(2);
						if ( (LA185_3==HASH_SYMBOL) ) {
							alt185=2;
						}
						else if ( (LA185_3==AT_SIGN) ) {
							alt185=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 185, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt185=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 185, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(185);}

					switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:730:10: elementSubsequent
							{
							dbg.location(730,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3556);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:730:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(730,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(730,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3562);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(731,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(731,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3576);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(185);}
					dbg.location(731,64);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(189);

					loop189:
					while (true) {
						int alt189=2;
						try { dbg.enterDecision(189, decisionCanBacktrack[189]);

						int LA189_0 = input.LA(1);
						if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
							int LA189_1 = input.LA(2);
							if ( (synpred28_Css3()) ) {
								alt189=1;
							}

						}
						else if ( (LA189_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==LESS_AND) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==HASH) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==HASH_SYMBOL) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==DOT) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==LBRACKET) && (synpred28_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==COLON||LA189_0==DCOLON) && (synpred28_Css3())) {
							alt189=1;
						}

						} finally {dbg.exitDecision(189);}

						switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(731,79);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt188=2;
							try { dbg.enterSubRule(188);
							try { dbg.enterDecision(188, decisionCanBacktrack[188]);

							try {
								isCyclicDecision = true;
								alt188 = dfa188.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(188);}

							switch (alt188) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(731,80);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:81: ( ws )? elementSubsequent
									{
									dbg.location(731,81);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:81: ( ws )?
									int alt186=2;
									try { dbg.enterSubRule(186);
									try { dbg.enterDecision(186, decisionCanBacktrack[186]);

									int LA186_0 = input.LA(1);
									if ( (LA186_0==COMMENT||LA186_0==NL||LA186_0==WS) ) {
										alt186=1;
									}
									} finally {dbg.exitDecision(186);}

									switch (alt186) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:81: ws
											{
											dbg.location(731,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3591);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(186);}
									dbg.location(731,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3594);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(731,105);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(731,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3599);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(731,109);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt187=2;
									try { dbg.enterSubRule(187);
									try { dbg.enterDecision(187, decisionCanBacktrack[187]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA187_1 = input.LA(2);
										if ( (LA187_1==HASH_SYMBOL) ) {
											alt187=1;
										}
										else if ( (LA187_1==AT_SIGN) ) {
											alt187=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 187, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt187=1;
										}
										break;
									case AT_SIGN:
										{
										alt187=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 187, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(187);}

									switch (alt187) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(731,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(731,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3604);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(731,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(731,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3610);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(187);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(188);}

							}
							break;

						default :
							break loop189;
						}
					}
					} finally {dbg.exitSubRule(189);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(732,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence3624);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(732,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(192);

					loop192:
					while (true) {
						int alt192=2;
						try { dbg.enterDecision(192, decisionCanBacktrack[192]);

						int LA192_0 = input.LA(1);
						if ( (LA192_0==COMMENT||LA192_0==NL||LA192_0==WS) ) {
							int LA192_1 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt192=1;
							}

						}
						else if ( (LA192_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==LESS_AND) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==HASH) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==HASH_SYMBOL) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==DOT) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==LBRACKET) && (synpred30_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==COLON||LA192_0==DCOLON) && (synpred30_Css3())) {
							alt192=1;
						}

						} finally {dbg.exitDecision(192);}

						switch (alt192) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(732,48);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt191=2;
							try { dbg.enterSubRule(191);
							try { dbg.enterDecision(191, decisionCanBacktrack[191]);

							try {
								isCyclicDecision = true;
								alt191 = dfa191.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(191);}

							switch (alt191) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(732,49);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:50: ( ws )? elementSubsequent
									{
									dbg.location(732,50);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:50: ( ws )?
									int alt190=2;
									try { dbg.enterSubRule(190);
									try { dbg.enterDecision(190, decisionCanBacktrack[190]);

									int LA190_0 = input.LA(1);
									if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
										alt190=1;
									}
									} finally {dbg.exitDecision(190);}

									switch (alt190) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:50: ws
											{
											dbg.location(732,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3636);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(190);}
									dbg.location(732,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3639);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(732,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(732,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3646);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(732,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3648);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(191);}

							}
							break;

						default :
							break loop192;
						}
					}
					} finally {dbg.exitSubRule(192);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(733, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(740, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt194=8;
			try { dbg.enterDecision(194, decisionCanBacktrack[194]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt194=1;
				}
				break;
			case HASH:
				{
				alt194=2;
				}
				break;
			case DOT:
				{
				alt194=3;
				}
				break;
			case LBRACKET:
				{
				alt194=4;
				}
				break;
			case COLON:
				{
				alt194=5;
				}
				break;
			case DCOLON:
				{
				alt194=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt194=7;
				}
				break;
			case LESS_AND:
				{
				alt194=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 194, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(194);}

			switch (alt194) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:7: HASH_SYMBOL
					{
					dbg.location(741,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred3673); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:21: HASH
					{
					dbg.location(741,21);
					match(input,HASH,FOLLOW_HASH_in_esPred3677); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:28: DOT
					{
					dbg.location(741,28);
					match(input,DOT,FOLLOW_DOT_in_esPred3681); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:34: LBRACKET
					{
					dbg.location(741,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred3685); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:45: COLON
					{
					dbg.location(741,45);
					match(input,COLON,FOLLOW_COLON_in_esPred3689); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:53: DCOLON
					{
					dbg.location(741,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred3693); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(741,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3697); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:90: {...}? LESS_AND
					{
					dbg.location(741,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(741,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred3703); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(742, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(744, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(746,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt195=2;
			try { dbg.enterSubRule(195);
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			int LA195_0 = input.LA(1);
			if ( (LA195_0==IDENT) ) {
				int LA195_1 = input.LA(2);
				if ( (LA195_1==PIPE) && (synpred31_Css3())) {
					alt195=1;
				}
			}
			else if ( (LA195_0==STAR) ) {
				int LA195_2 = input.LA(2);
				if ( (LA195_2==PIPE) && (synpred31_Css3())) {
					alt195=1;
				}
			}
			else if ( (LA195_0==PIPE) && (synpred31_Css3())) {
				alt195=1;
			}
			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(746,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector3745);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(195);}
			dbg.location(746,49);
			pushFollow(FOLLOW_elementName_in_typeSelector3749);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(747, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(749, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(750,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:5: ( namespacePrefixName | STAR )?
			int alt196=3;
			try { dbg.enterSubRule(196);
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			int LA196_0 = input.LA(1);
			if ( (LA196_0==IDENT) ) {
				alt196=1;
			}
			else if ( (LA196_0==STAR) ) {
				alt196=2;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:7: namespacePrefixName
					{
					dbg.location(750,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix3764);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:29: STAR
					{
					dbg.location(750,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix3768); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(196);}
			dbg.location(750,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix3772); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(751, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(754, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(756,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo )
			int alt198=6;
			try { dbg.enterSubRule(198);
			try { dbg.enterDecision(198, decisionCanBacktrack[198]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt198=1;
				}
				break;
			case LESS_AND:
				{
				alt198=2;
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt198=3;
				}
				break;
			case DOT:
				{
				alt198=4;
				}
				break;
			case LBRACKET:
				{
				alt198=5;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt198=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 198, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(198);}

			switch (alt198) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:757:9: {...}? sass_extend_only_selector
					{
					dbg.location(757,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(757,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent3804);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:11: {...}? LESS_AND ( IDENT | NUMBER )*
					{
					dbg.location(758,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(758,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent3818); if (state.failed) return;dbg.location(758,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:49: ( IDENT | NUMBER )*
					try { dbg.enterSubRule(197);

					loop197:
					while (true) {
						int alt197=2;
						try { dbg.enterDecision(197, decisionCanBacktrack[197]);

						int LA197_0 = input.LA(1);
						if ( (LA197_0==IDENT||LA197_0==NUMBER) ) {
							alt197=1;
						}

						} finally {dbg.exitDecision(197);}

						switch (alt197) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(758,49);
							if ( input.LA(1)==IDENT||input.LA(1)==NUMBER ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							break loop197;
						}
					}
					} finally {dbg.exitSubRule(197);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:8: cssId
					{
					dbg.location(759,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent3836);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:8: cssClass
					{
					dbg.location(760,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent3845);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:11: slAttribute
					{
					dbg.location(761,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent3857);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:11: pseudo
					{
					dbg.location(762,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent3869);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(198);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(764, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(767, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt201=2;
			try { dbg.enterDecision(201, decisionCanBacktrack[201]);

			int LA201_0 = input.LA(1);
			if ( (LA201_0==HASH) ) {
				alt201=1;
			}
			else if ( (LA201_0==HASH_SYMBOL) ) {
				alt201=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 201, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(201);}

			switch (alt201) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(768,7);
					match(input,HASH,FOLLOW_HASH_in_cssId3893); if (state.failed) return;dbg.location(768,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:12: ({...}? sass_selector_interpolation_exp )?
					int alt199=2;
					try { dbg.enterSubRule(199);
					try { dbg.enterDecision(199, decisionCanBacktrack[199]);

					int LA199_0 = input.LA(1);
					if ( (LA199_0==IDENT||LA199_0==MINUS) ) {
						alt199=1;
					}
					else if ( (LA199_0==HASH_SYMBOL) ) {
						int LA199_2 = input.LA(2);
						if ( (LA199_2==LBRACE) ) {
							alt199=1;
						}
					}
					} finally {dbg.exitDecision(199);}

					switch (alt199) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(768,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(768,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId3898);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(199);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(770,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(770,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId3920); if (state.failed) return;dbg.location(771,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt200=2;
					try { dbg.enterSubRule(200);
					try { dbg.enterDecision(200, decisionCanBacktrack[200]);

					int LA200_0 = input.LA(1);
					if ( (LA200_0==NAME) ) {
						alt200=1;
					}
					else if ( (LA200_0==AT_SIGN||LA200_0==IDENT||LA200_0==MINUS) ) {
						alt200=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 200, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(200);}

					switch (alt200) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:15: NAME
							{
							dbg.location(771,15);
							match(input,NAME,FOLLOW_NAME_in_cssId3936); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(772,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(772,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId3956);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(200);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(775, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:1: cssClass : DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ;
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(781, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:782:5: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:782:7: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
			{
			dbg.location(782,7);
			match(input,DOT,FOLLOW_DOT_in_cssClass4007); if (state.failed) return;dbg.location(783,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
			int alt202=5;
			try { dbg.enterSubRule(202);
			try { dbg.enterDecision(202, decisionCanBacktrack[202]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case HASH_SYMBOL:
					{
					int LA202_7 = input.LA(3);
					if ( (LA202_7==LBRACE) ) {
						alt202=1;
					}
					else if ( (LA202_7==AT_SIGN||LA202_7==IDENT||LA202_7==MINUS||LA202_7==NAME) ) {
						alt202=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 202, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case AT_SIGN:
					{
					alt202=2;
					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DOT:
				case GREATER:
				case HASH:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt202=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 202, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt202=1;
				}
				break;
			case AT_SIGN:
				{
				alt202=2;
				}
				break;
			case MINUS:
				{
				int LA202_4 = input.LA(2);
				if ( (LA202_4==HASH_SYMBOL) ) {
					alt202=1;
				}
				else if ( (LA202_4==AT_SIGN) ) {
					alt202=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 202, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NOT:
				{
				alt202=4;
				}
				break;
			case GEN:
				{
				alt202=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 202, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(202);}

			switch (alt202) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:784:14: {...}? sass_selector_interpolation_exp
					{
					dbg.location(784,14);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isScssSource()");
					}dbg.location(784,33);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass4035);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:785:15: {...}? less_selector_interpolation_exp
					{
					dbg.location(785,15);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isLessSource()");
					}dbg.location(785,33);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass4053);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:15: IDENT
					{
					dbg.location(786,15);
					match(input,IDENT,FOLLOW_IDENT_in_cssClass4069); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:15: NOT
					{
					dbg.location(787,15);
					match(input,NOT,FOLLOW_NOT_in_cssClass4085); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:15: GEN
					{
					dbg.location(788,15);
					match(input,GEN,FOLLOW_GEN_in_cssClass4101); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(202);}

			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(790, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:797:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(797, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:798:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(798,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(799, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(801, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:802:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:802:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(802,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute4167); if (state.failed) return;dbg.location(803,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:6: ( namespacePrefix )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==IDENT) ) {
				int LA203_1 = input.LA(2);
				if ( (LA203_1==PIPE) ) {
					alt203=1;
				}
			}
			else if ( (LA203_0==PIPE||LA203_0==STAR) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:6: namespacePrefix
					{
					dbg.location(803,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute4174);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(803,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:23: ( ws )?
			int alt204=2;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			int LA204_0 = input.LA(1);
			if ( (LA204_0==COMMENT||LA204_0==NL||LA204_0==WS) ) {
				alt204=1;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:23: ws
					{
					dbg.location(803,23);
					pushFollow(FOLLOW_ws_in_slAttribute4177);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}
			dbg.location(804,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute4188);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(804,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:804:25: ( ws )?
			int alt205=2;
			try { dbg.enterSubRule(205);
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
				alt205=1;
			}
			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:804:25: ws
					{
					dbg.location(804,25);
					pushFollow(FOLLOW_ws_in_slAttribute4190);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(205);}
			dbg.location(806,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:806:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==BEGINS||LA208_0==CONTAINS||LA208_0==DASHMATCH||LA208_0==ENDS||LA208_0==INCLUDES||LA208_0==OPEQ) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:807:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(807,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(815,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:815:17: ( ws )?
					int alt206=2;
					try { dbg.enterSubRule(206);
					try { dbg.enterDecision(206, decisionCanBacktrack[206]);

					int LA206_0 = input.LA(1);
					if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
						alt206=1;
					}
					} finally {dbg.exitDecision(206);}

					switch (alt206) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:815:17: ws
							{
							dbg.location(815,17);
							pushFollow(FOLLOW_ws_in_slAttribute4404);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(206);}
					dbg.location(816,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute4423);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(817,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:17: ( ws )?
					int alt207=2;
					try { dbg.enterSubRule(207);
					try { dbg.enterDecision(207, decisionCanBacktrack[207]);

					int LA207_0 = input.LA(1);
					if ( (LA207_0==COMMENT||LA207_0==NL||LA207_0==WS) ) {
						alt207=1;
					}
					} finally {dbg.exitDecision(207);}

					switch (alt207) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:17: ws
							{
							dbg.location(817,17);
							pushFollow(FOLLOW_ws_in_slAttribute4441);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(207);}

					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(820,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute4466); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(821, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(828, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:4: IDENT
			{
			dbg.location(829,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName4482); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(830, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:832:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(832, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(833,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(838, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(840, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(841,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(842,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt221=4;
			try { dbg.enterSubRule(221);
			try { dbg.enterDecision(221, decisionCanBacktrack[221]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA221_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()")),""))) ) {
					alt221=1;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt221=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 221, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt221=2;
				}
				break;
			case NOT:
				{
				alt221=3;
				}
				break;
			case GEN:
				{
				alt221=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 221, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(221);}

			switch (alt221) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:843:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(843,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:843:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(844,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(845,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt213=2;
					try { dbg.enterSubRule(213);
					try { dbg.enterDecision(213, decisionCanBacktrack[213]);

					try {
						isCyclicDecision = true;
						alt213 = dfa213.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(213);}

					switch (alt213) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(846,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:25: ( ws )?
							int alt209=2;
							try { dbg.enterSubRule(209);
							try { dbg.enterDecision(209, decisionCanBacktrack[209]);

							int LA209_0 = input.LA(1);
							if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
								alt209=1;
							}
							} finally {dbg.exitDecision(209);}

							switch (alt209) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:25: ws
									{
									dbg.location(846,25);
									pushFollow(FOLLOW_ws_in_pseudo4674);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(209);}
							dbg.location(846,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4677); if (state.failed) return;dbg.location(846,36);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:36: ( ws )?
							int alt210=2;
							try { dbg.enterSubRule(210);
							try { dbg.enterDecision(210, decisionCanBacktrack[210]);

							int LA210_0 = input.LA(1);
							if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
								alt210=1;
							}
							} finally {dbg.exitDecision(210);}

							switch (alt210) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:36: ws
									{
									dbg.location(846,36);
									pushFollow(FOLLOW_ws_in_pseudo4679);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(210);}
							dbg.location(846,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:40: ( ( expression ( ws )? ) | STAR )?
							int alt212=3;
							try { dbg.enterSubRule(212);
							try { dbg.enterDecision(212, decisionCanBacktrack[212]);

							int LA212_0 = input.LA(1);
							if ( ((LA212_0 >= ANGLE && LA212_0 <= AT_SIGN)||(LA212_0 >= BOTTOMCENTER_SYM && LA212_0 <= BOTTOMRIGHT_SYM)||LA212_0==CHARSET_SYM||LA212_0==COUNTER_STYLE_SYM||LA212_0==DIMENSION||LA212_0==EMS||LA212_0==EXS||(LA212_0 >= FONT_FACE_SYM && LA212_0 <= FREQ)||LA212_0==GEN||(LA212_0 >= HASH && LA212_0 <= HASH_SYMBOL)||LA212_0==IDENT||LA212_0==IMPORT_SYM||(LA212_0 >= LEFTBOTTOM_SYM && LA212_0 <= LENGTH)||(LA212_0 >= LESS_AND && LA212_0 <= LESS_JS_STRING)||(LA212_0 >= MEDIA_SYM && LA212_0 <= MOZ_DOCUMENT_SYM)||LA212_0==NAMESPACE_SYM||LA212_0==NUMBER||(LA212_0 >= PAGE_SYM && LA212_0 <= PERCENTAGE_SYMBOL)||LA212_0==PLUS||(LA212_0 >= REM && LA212_0 <= RIGHTTOP_SYM)||(LA212_0 >= SASS_AT_ROOT && LA212_0 <= SASS_DEBUG)||(LA212_0 >= SASS_EACH && LA212_0 <= SASS_ELSE)||LA212_0==SASS_EXTEND||(LA212_0 >= SASS_FOR && LA212_0 <= SASS_FUNCTION)||(LA212_0 >= SASS_IF && LA212_0 <= SASS_MIXIN)||(LA212_0 >= SASS_RETURN && LA212_0 <= SASS_WHILE)||LA212_0==STRING||(LA212_0 >= TILDE && LA212_0 <= TOPRIGHT_SYM)||LA212_0==URI||LA212_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt212=1;
							}
							else if ( (LA212_0==STAR) ) {
								alt212=2;
							}
							} finally {dbg.exitDecision(212);}

							switch (alt212) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:42: ( expression ( ws )? )
									{
									dbg.location(846,42);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:43: expression ( ws )?
									{
									dbg.location(846,43);
									pushFollow(FOLLOW_expression_in_pseudo4685);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(846,54);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:54: ( ws )?
									int alt211=2;
									try { dbg.enterSubRule(211);
									try { dbg.enterDecision(211, decisionCanBacktrack[211]);

									int LA211_0 = input.LA(1);
									if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
										alt211=1;
									}
									} finally {dbg.exitDecision(211);}

									switch (alt211) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:54: ws
											{
											dbg.location(846,54);
											pushFollow(FOLLOW_ws_in_pseudo4687);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(211);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:61: STAR
									{
									dbg.location(846,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo4693); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(212);}
							dbg.location(846,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4698); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(213);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(849,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(849,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo4761);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN )
					{
					dbg.location(851,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:19: NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence ( ws )? )? RPAREN
					{
					dbg.location(851,19);
					match(input,NOT,FOLLOW_NOT_in_pseudo4799); if (state.failed) return;dbg.location(851,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:23: ( ws )?
					int alt214=2;
					try { dbg.enterSubRule(214);
					try { dbg.enterDecision(214, decisionCanBacktrack[214]);

					int LA214_0 = input.LA(1);
					if ( (LA214_0==COMMENT||LA214_0==NL||LA214_0==WS) ) {
						alt214=1;
					}
					} finally {dbg.exitDecision(214);}

					switch (alt214) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:23: ws
							{
							dbg.location(851,23);
							pushFollow(FOLLOW_ws_in_pseudo4801);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(214);}
					dbg.location(851,27);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4804); if (state.failed) return;dbg.location(851,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:34: ( ws )?
					int alt215=2;
					try { dbg.enterSubRule(215);
					try { dbg.enterDecision(215, decisionCanBacktrack[215]);

					int LA215_0 = input.LA(1);
					if ( (LA215_0==COMMENT||LA215_0==NL||LA215_0==WS) ) {
						alt215=1;
					}
					} finally {dbg.exitDecision(215);}

					switch (alt215) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:34: ws
							{
							dbg.location(851,34);
							pushFollow(FOLLOW_ws_in_pseudo4806);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(215);}
					dbg.location(851,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:38: ( simpleSelectorSequence ( ws )? )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( (LA217_0==AT_SIGN||LA217_0==COLON||LA217_0==DCOLON||LA217_0==DOT||LA217_0==GEN||(LA217_0 >= HASH && LA217_0 <= HASH_SYMBOL)||LA217_0==IDENT||LA217_0==LBRACKET||LA217_0==LESS_AND||LA217_0==MINUS||LA217_0==PIPE||LA217_0==SASS_EXTEND_ONLY_SELECTOR||LA217_0==STAR) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:39: simpleSelectorSequence ( ws )?
							{
							dbg.location(851,39);
							pushFollow(FOLLOW_simpleSelectorSequence_in_pseudo4810);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;dbg.location(851,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:62: ( ws )?
							int alt216=2;
							try { dbg.enterSubRule(216);
							try { dbg.enterDecision(216, decisionCanBacktrack[216]);

							int LA216_0 = input.LA(1);
							if ( (LA216_0==COMMENT||LA216_0==NL||LA216_0==WS) ) {
								alt216=1;
							}
							} finally {dbg.exitDecision(216);}

							switch (alt216) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:62: ws
									{
									dbg.location(851,62);
									pushFollow(FOLLOW_ws_in_pseudo4812);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(216);}

							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(851,68);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4817); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(853,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:18: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(853,18);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(853,36);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(853,65);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo4861); if (state.failed) return;dbg.location(853,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:71: ( ws )?
					int alt218=2;
					try { dbg.enterSubRule(218);
					try { dbg.enterDecision(218, decisionCanBacktrack[218]);

					int LA218_0 = input.LA(1);
					if ( (LA218_0==COMMENT||LA218_0==NL||LA218_0==WS) ) {
						alt218=1;
					}
					} finally {dbg.exitDecision(218);}

					switch (alt218) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:71: ws
							{
							dbg.location(853,71);
							pushFollow(FOLLOW_ws_in_pseudo4863);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(218);}
					dbg.location(853,75);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4866); if (state.failed) return;dbg.location(853,82);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:82: ( ws )?
					int alt219=2;
					try { dbg.enterSubRule(219);
					try { dbg.enterDecision(219, decisionCanBacktrack[219]);

					int LA219_0 = input.LA(1);
					if ( (LA219_0==COMMENT||LA219_0==NL||LA219_0==WS) ) {
						alt219=1;
					}
					} finally {dbg.exitDecision(219);}

					switch (alt219) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:82: ws
							{
							dbg.location(853,82);
							pushFollow(FOLLOW_ws_in_pseudo4868);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(219);}
					dbg.location(853,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:86: ( selectorsGroup )?
					int alt220=2;
					try { dbg.enterSubRule(220);
					try { dbg.enterDecision(220, decisionCanBacktrack[220]);

					int LA220_0 = input.LA(1);
					if ( (LA220_0==AT_SIGN||LA220_0==COLON||LA220_0==DCOLON||LA220_0==DOT||(LA220_0 >= GEN && LA220_0 <= GREATER)||(LA220_0 >= HASH && LA220_0 <= HASH_SYMBOL)||LA220_0==IDENT||LA220_0==LBRACKET||LA220_0==LESS_AND||LA220_0==MINUS||(LA220_0 >= PIPE && LA220_0 <= PLUS)||LA220_0==SASS_EXTEND_ONLY_SELECTOR||LA220_0==STAR||LA220_0==TILDE) ) {
						alt220=1;
					}
					} finally {dbg.exitDecision(220);}

					switch (alt220) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:86: selectorsGroup
							{
							dbg.location(853,86);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo4871);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(220);}
					dbg.location(853,102);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4874); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(221);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(855, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(857, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt230=2;
			try { dbg.enterDecision(230, decisionCanBacktrack[230]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA230_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case IDENT:
				{
				int LA230_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA230_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA230_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUS:
				{
				int LA230_5 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt230=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA230_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA230_7 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA230_8 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 230, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(230);}

			switch (alt230) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:1: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(859,1);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(859,30);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:30: ( STAR )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==STAR) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:30: STAR
							{
							dbg.location(859,30);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4910); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(859,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration4913);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(859,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:45: ( ws )?
					int alt223=2;
					try { dbg.enterSubRule(223);
					try { dbg.enterDecision(223, decisionCanBacktrack[223]);

					int LA223_0 = input.LA(1);
					if ( (LA223_0==COMMENT||LA223_0==NL||LA223_0==WS) ) {
						alt223=1;
					}
					} finally {dbg.exitDecision(223);}

					switch (alt223) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:45: ws
							{
							dbg.location(859,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4915);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(223);}
					dbg.location(859,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4918); if (state.failed) return;dbg.location(859,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:55: ( ws )?
					int alt224=2;
					try { dbg.enterSubRule(224);
					try { dbg.enterDecision(224, decisionCanBacktrack[224]);

					int LA224_0 = input.LA(1);
					if ( (LA224_0==COMMENT||LA224_0==NL||LA224_0==WS) ) {
						alt224=1;
					}
					} finally {dbg.exitDecision(224);}

					switch (alt224) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:55: ws
							{
							dbg.location(859,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4920);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(224);}
					dbg.location(859,59);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration4923);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(860,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:7: ( STAR )?
					int alt225=2;
					try { dbg.enterSubRule(225);
					try { dbg.enterDecision(225, decisionCanBacktrack[225]);

					int LA225_0 = input.LA(1);
					if ( (LA225_0==STAR) ) {
						alt225=1;
					}
					} finally {dbg.exitDecision(225);}

					switch (alt225) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:7: STAR
							{
							dbg.location(860,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4932); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(225);}
					dbg.location(860,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration4935);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(860,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:22: ( ws )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==COMMENT||LA226_0==NL||LA226_0==WS) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:22: ws
							{
							dbg.location(860,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4937);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(226);}
					dbg.location(860,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4940); if (state.failed) return;dbg.location(860,32);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:32: ( ws )?
					int alt227=2;
					try { dbg.enterSubRule(227);
					try { dbg.enterDecision(227, decisionCanBacktrack[227]);

					int LA227_0 = input.LA(1);
					if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
						alt227=1;
					}
					} finally {dbg.exitDecision(227);}

					switch (alt227) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:32: ws
							{
							dbg.location(860,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4942);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(227);}
					dbg.location(860,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration4945);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(860,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:50: ( ( ws )? prio )?
					int alt229=2;
					try { dbg.enterSubRule(229);
					try { dbg.enterDecision(229, decisionCanBacktrack[229]);

					try {
						isCyclicDecision = true;
						alt229 = dfa229.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(229);}

					switch (alt229) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:51: ( ws )? prio
							{
							dbg.location(860,51);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:51: ( ws )?
							int alt228=2;
							try { dbg.enterSubRule(228);
							try { dbg.enterDecision(228, decisionCanBacktrack[228]);

							int LA228_0 = input.LA(1);
							if ( (LA228_0==COMMENT||LA228_0==NL||LA228_0==WS) ) {
								alt228=1;
							}
							} finally {dbg.exitDecision(228);}

							switch (alt228) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:51: ws
									{
									dbg.location(860,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration4948);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(228);}
							dbg.location(860,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration4951);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(229);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(862, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(871, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:872:5: ({...}? cp_expression_list | propertyValue )
			int alt231=2;
			try { dbg.enterDecision(231, decisionCanBacktrack[231]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt231=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA231_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case IDENT:
				{
				int LA231_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA231_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA231_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA231_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case EMS:
				{
				int LA231_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case REM:
				{
				int LA231_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case EXS:
				{
				int LA231_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA231_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case TIME:
				{
				int LA231_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case FREQ:
				{
				int LA231_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA231_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA231_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case STRING:
				{
				int LA231_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case TILDE:
				{
				int LA231_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA231_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case GEN:
				{
				int LA231_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case URI:
				{
				int LA231_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case HASH:
				{
				int LA231_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (true) ) {
					alt231=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA231_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt231=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA231_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt231=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA231_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt231=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA231_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt231=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA231_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt231=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA231_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt231=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 231, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 231, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(231);}

			switch (alt231) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:873:5: {...}? cp_expression_list
					{
					dbg.location(873,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(873,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue4991);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:874:7: propertyValue
					{
					dbg.location(874,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue4999);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(875, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:877:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(877, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:878:2: ( expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:879:9: expression
			{
			dbg.location(879,9);
			pushFollow(FOLLOW_expression_in_propertyValue5021);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(880, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(883, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:885:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(886,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt232=0;
			try { dbg.enterSubRule(232);

			loop232:
			while (true) {
				int alt232=2;
				try { dbg.enterDecision(232, decisionCanBacktrack[232]);

				int LA232_0 = input.LA(1);
				if ( ((LA232_0 >= A && LA232_0 <= ANGLE)||(LA232_0 >= AT_SIGN && LA232_0 <= L)||(LA232_0 >= LBRACKET && LA232_0 <= R)||(LA232_0 >= RBRACKET && LA232_0 <= SASS_RETURN)||(LA232_0 >= SASS_WARN && LA232_0 <= SASS_WHILE)||(LA232_0 >= STRING && LA232_0 <= Z)) ) {
					alt232=1;
				}

				} finally {dbg.exitDecision(232);}

				switch (alt232) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(886,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_RETURN)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt232 >= 1 ) break loop232;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(232, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt232++;
			}
			} finally {dbg.exitSubRule(232);}
			dbg.location(886,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(887, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(891, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(897, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(899, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(904, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(906, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:910:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:911:13: SEMI
			{
			dbg.location(911,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI5191); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(912, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:915:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(915, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(920, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:922:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(922, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:7: IMPORTANT_SYM
			{
			dbg.location(923,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio5236); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(924, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:926:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(926, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(927,7);
			pushFollow(FOLLOW_term_in_expression5253);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(927,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(236);

			loop236:
			while (true) {
				int alt236=2;
				try { dbg.enterDecision(236, decisionCanBacktrack[236]);

				try {
					isCyclicDecision = true;
					alt236 = dfa236.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(236);}

				switch (alt236) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(927,66);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt235=3;
					try { dbg.enterSubRule(235);
					try { dbg.enterDecision(235, decisionCanBacktrack[235]);

					try {
						isCyclicDecision = true;
						alt235 = dfa235.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(235);}

					switch (alt235) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:68: ws
							{
							dbg.location(927,68);
							pushFollow(FOLLOW_ws_in_expression5285);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(927,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:74: ( ws )? operator ( ws )?
							{
							dbg.location(927,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:74: ( ws )?
							int alt233=2;
							try { dbg.enterSubRule(233);
							try { dbg.enterDecision(233, decisionCanBacktrack[233]);

							int LA233_0 = input.LA(1);
							if ( (LA233_0==COMMENT||LA233_0==NL||LA233_0==WS) ) {
								alt233=1;
							}
							} finally {dbg.exitDecision(233);}

							switch (alt233) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:74: ws
									{
									dbg.location(927,74);
									pushFollow(FOLLOW_ws_in_expression5290);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(233);}
							dbg.location(927,78);
							pushFollow(FOLLOW_operator_in_expression5293);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(927,87);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:87: ( ws )?
							int alt234=2;
							try { dbg.enterSubRule(234);
							try { dbg.enterDecision(234, decisionCanBacktrack[234]);

							int LA234_0 = input.LA(1);
							if ( (LA234_0==COMMENT||LA234_0==NL||LA234_0==WS) ) {
								alt234=1;
							}
							} finally {dbg.exitDecision(234);}

							switch (alt234) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:87: ws
									{
									dbg.location(927,87);
									pushFollow(FOLLOW_ws_in_expression5295);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(234);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(235);}
					dbg.location(927,109);
					pushFollow(FOLLOW_term_in_expression5304);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop236;
				}
			}
			} finally {dbg.exitSubRule(236);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(928, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(930, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(932,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:5: ( unaryOperator ( ws )? )?
			int alt238=2;
			try { dbg.enterSubRule(238);
			try { dbg.enterDecision(238, decisionCanBacktrack[238]);

			int LA238_0 = input.LA(1);
			if ( (LA238_0==MINUS||LA238_0==PLUS) ) {
				alt238=1;
			}
			} finally {dbg.exitDecision(238);}

			switch (alt238) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:7: unaryOperator ( ws )?
					{
					dbg.location(932,7);
					pushFollow(FOLLOW_unaryOperator_in_term5329);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(932,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:21: ( ws )?
					int alt237=2;
					try { dbg.enterSubRule(237);
					try { dbg.enterDecision(237, decisionCanBacktrack[237]);

					int LA237_0 = input.LA(1);
					if ( (LA237_0==COMMENT||LA237_0==NL||LA237_0==WS) ) {
						alt237=1;
					}
					} finally {dbg.exitDecision(237);}

					switch (alt237) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:21: ws
							{
							dbg.location(932,21);
							pushFollow(FOLLOW_ws_in_term5331);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(237);}

					}
					break;

			}
			} finally {dbg.exitSubRule(238);}
			dbg.location(933,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:5: ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt239=24;
			try { dbg.enterSubRule(239);
			try { dbg.enterDecision(239, decisionCanBacktrack[239]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA239_1 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt239=1;
				}
				else if ( (true) ) {
					alt239=2;
				}

				}
				break;
			case NUMBER:
				{
				alt239=3;
				}
				break;
			case PERCENTAGE:
				{
				alt239=4;
				}
				break;
			case LENGTH:
				{
				alt239=5;
				}
				break;
			case EMS:
				{
				alt239=6;
				}
				break;
			case REM:
				{
				alt239=7;
				}
				break;
			case EXS:
				{
				alt239=8;
				}
				break;
			case ANGLE:
				{
				alt239=9;
				}
				break;
			case TIME:
				{
				alt239=10;
				}
				break;
			case FREQ:
				{
				alt239=11;
				}
				break;
			case RESOLUTION:
				{
				alt239=12;
				}
				break;
			case DIMENSION:
				{
				alt239=13;
				}
				break;
			case STRING:
				{
				alt239=14;
				}
				break;
			case TILDE:
				{
				alt239=15;
				}
				break;
			case LESS_JS_STRING:
				{
				alt239=16;
				}
				break;
			case GEN:
				{
				alt239=17;
				}
				break;
			case URI:
				{
				alt239=18;
				}
				break;
			case HASH:
				{
				alt239=19;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt239=20;
				}
				break;
			case LESS_AND:
				{
				alt239=21;
				}
				break;
			case HASH_SYMBOL:
				{
				alt239=22;
				}
				break;
			case AT_SIGN:
				{
				alt239=23;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt239=24;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 239, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(239);}

			switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(934,36);
					pushFollow(FOLLOW_function_in_term5360);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:11: IDENT
					{
					dbg.location(935,11);
					match(input,IDENT,FOLLOW_IDENT_in_term5373); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:11: NUMBER
					{
					dbg.location(936,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term5385); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:937:11: PERCENTAGE
					{
					dbg.location(937,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term5397); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:938:11: LENGTH
					{
					dbg.location(938,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term5409); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:11: EMS
					{
					dbg.location(939,11);
					match(input,EMS,FOLLOW_EMS_in_term5421); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:11: REM
					{
					dbg.location(940,11);
					match(input,REM,FOLLOW_REM_in_term5433); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:11: EXS
					{
					dbg.location(941,11);
					match(input,EXS,FOLLOW_EXS_in_term5445); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:11: ANGLE
					{
					dbg.location(942,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term5457); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:11: TIME
					{
					dbg.location(943,11);
					match(input,TIME,FOLLOW_TIME_in_term5469); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:944:11: FREQ
					{
					dbg.location(944,11);
					match(input,FREQ,FOLLOW_FREQ_in_term5481); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:11: RESOLUTION
					{
					dbg.location(945,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term5493); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:946:11: DIMENSION
					{
					dbg.location(946,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term5505); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:11: STRING
					{
					dbg.location(947,11);
					match(input,STRING,FOLLOW_STRING_in_term5522); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(948,11);
					match(input,TILDE,FOLLOW_TILDE_in_term5534); if (state.failed) return;dbg.location(948,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:949:11: LESS_JS_STRING
					{
					dbg.location(949,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term5557); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:11: GEN
					{
					dbg.location(950,11);
					match(input,GEN,FOLLOW_GEN_in_term5572); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:11: URI
					{
					dbg.location(951,11);
					match(input,URI,FOLLOW_URI_in_term5584); if (state.failed) return;
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:952:11: hexColor
					{
					dbg.location(952,11);
					pushFollow(FOLLOW_hexColor_in_term5596);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:953:11: {...}? cp_variable
					{
					dbg.location(953,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(953,40);
					pushFollow(FOLLOW_cp_variable_in_term5610);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:11: {...}? LESS_AND
					{
					dbg.location(954,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(954,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term5624); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:955:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(955,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(955,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term5638);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:956:11: {...}? less_selector_interpolation
					{
					dbg.location(956,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(956,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term5652);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:11: {...}? cp_term_symbol
					{
					dbg.location(957,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(957,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term5666);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(239);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(959, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:964:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(964, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:7: PERCENTAGE_SYMBOL
			{
			dbg.location(965,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5693); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(966, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(968, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(969,5);
			pushFollow(FOLLOW_functionName_in_function5709);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(969,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:18: ( ws )?
			int alt240=2;
			try { dbg.enterSubRule(240);
			try { dbg.enterDecision(240, decisionCanBacktrack[240]);

			int LA240_0 = input.LA(1);
			if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
				alt240=1;
			}
			} finally {dbg.exitDecision(240);}

			switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:18: ws
					{
					dbg.location(969,18);
					pushFollow(FOLLOW_ws_in_function5711);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(240);}
			dbg.location(970,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function5716); if (state.failed) return;dbg.location(970,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:10: ( ws )?
			int alt241=2;
			try { dbg.enterSubRule(241);
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			int LA241_0 = input.LA(1);
			if ( (LA241_0==COMMENT||LA241_0==NL||LA241_0==WS) ) {
				alt241=1;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:10: ws
					{
					dbg.location(970,10);
					pushFollow(FOLLOW_ws_in_function5718);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(971,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:971:3: ( fnAttributes |)
			int alt242=2;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			int LA242_0 = input.LA(1);
			if ( ((LA242_0 >= ANGLE && LA242_0 <= AT_SIGN)||(LA242_0 >= BOTTOMCENTER_SYM && LA242_0 <= BOTTOMRIGHT_SYM)||LA242_0==CHARSET_SYM||LA242_0==COUNTER_STYLE_SYM||LA242_0==DIMENSION||LA242_0==EMS||LA242_0==EXS||(LA242_0 >= FONT_FACE_SYM && LA242_0 <= FREQ)||LA242_0==GEN||(LA242_0 >= HASH && LA242_0 <= HASH_SYMBOL)||(LA242_0 >= IDENT && LA242_0 <= IMPORT_SYM)||LA242_0==LBRACE||(LA242_0 >= LEFTBOTTOM_SYM && LA242_0 <= LENGTH)||(LA242_0 >= LESS_AND && LA242_0 <= LESS_JS_STRING)||LA242_0==LPAREN||(LA242_0 >= MEDIA_SYM && LA242_0 <= MOZ_DOCUMENT_SYM)||LA242_0==NAMESPACE_SYM||(LA242_0 >= NOT && LA242_0 <= NUMBER)||(LA242_0 >= PAGE_SYM && LA242_0 <= PERCENTAGE_SYMBOL)||LA242_0==PLUS||(LA242_0 >= REM && LA242_0 <= RIGHTTOP_SYM)||(LA242_0 >= SASS_AT_ROOT && LA242_0 <= SASS_DEBUG)||(LA242_0 >= SASS_EACH && LA242_0 <= SASS_ELSE)||LA242_0==SASS_EXTEND||(LA242_0 >= SASS_FOR && LA242_0 <= SASS_FUNCTION)||(LA242_0 >= SASS_IF && LA242_0 <= SASS_MIXIN)||(LA242_0 >= SASS_RETURN && LA242_0 <= SASS_WHILE)||LA242_0==STRING||(LA242_0 >= TILDE && LA242_0 <= TOPRIGHT_SYM)||LA242_0==URI||LA242_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt242=1;
			}
			else if ( (LA242_0==RPAREN) ) {
				alt242=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 242, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:21: fnAttributes
					{
					dbg.location(972,21);
					pushFollow(FOLLOW_fnAttributes_in_function5745);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:974:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}
			dbg.location(975,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function5776); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(976, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(982, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(987,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:9: ( IDENT COLON )?
			int alt243=2;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( (LA243_0==IDENT) ) {
				int LA243_1 = input.LA(2);
				if ( (LA243_1==COLON) ) {
					alt243=1;
				}
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:10: IDENT COLON
					{
					dbg.location(987,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5828); if (state.failed) return;dbg.location(987,16);
					match(input,COLON,FOLLOW_COLON_in_functionName5830); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(987,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName5834); if (state.failed) return;dbg.location(987,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:30: ( DOT IDENT )*
			try { dbg.enterSubRule(244);

			loop244:
			while (true) {
				int alt244=2;
				try { dbg.enterDecision(244, decisionCanBacktrack[244]);

				int LA244_0 = input.LA(1);
				if ( (LA244_0==DOT) ) {
					alt244=1;
				}

				} finally {dbg.exitDecision(244);}

				switch (alt244) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:31: DOT IDENT
					{
					dbg.location(987,31);
					match(input,DOT,FOLLOW_DOT_in_functionName5837); if (state.failed) return;dbg.location(987,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5839); if (state.failed) return;
					}
					break;

				default :
					break loop244;
				}
			}
			} finally {dbg.exitSubRule(244);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(988, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(990, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:991:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(992,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes5863);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(992,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(248);

			loop248:
			while (true) {
				int alt248=2;
				try { dbg.enterDecision(248, decisionCanBacktrack[248]);

				try {
					isCyclicDecision = true;
					alt248 = dfa248.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(248);}

				switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(992,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:18: ( ws )?
					int alt245=2;
					try { dbg.enterSubRule(245);
					try { dbg.enterDecision(245, decisionCanBacktrack[245]);

					int LA245_0 = input.LA(1);
					if ( (LA245_0==COMMENT||LA245_0==NL||LA245_0==WS) ) {
						alt245=1;
					}
					} finally {dbg.exitDecision(245);}

					switch (alt245) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:18: ws
							{
							dbg.location(992,18);
							pushFollow(FOLLOW_ws_in_fnAttributes5866);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(245);}
					dbg.location(992,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:22: ( COMMA |{...}? SEMI )
					int alt246=2;
					try { dbg.enterSubRule(246);
					try { dbg.enterDecision(246, decisionCanBacktrack[246]);

					int LA246_0 = input.LA(1);
					if ( (LA246_0==COMMA) ) {
						alt246=1;
					}
					else if ( (LA246_0==SEMI) ) {
						alt246=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 246, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(246);}

					switch (alt246) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:23: COMMA
							{
							dbg.location(992,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes5870); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:31: {...}? SEMI
							{
							dbg.location(992,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(992,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes5876); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(246);}
					dbg.location(992,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:55: ( ws )?
					int alt247=2;
					try { dbg.enterSubRule(247);
					try { dbg.enterDecision(247, decisionCanBacktrack[247]);

					int LA247_0 = input.LA(1);
					if ( (LA247_0==COMMENT||LA247_0==NL||LA247_0==WS) ) {
						alt247=1;
					}
					} finally {dbg.exitDecision(247);}

					switch (alt247) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:55: ws
							{
							dbg.location(992,55);
							pushFollow(FOLLOW_ws_in_fnAttributes5879);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(247);}
					dbg.location(992,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes5882);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop248;
				}
			}
			} finally {dbg.exitSubRule(248);}
			dbg.location(992,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:73: ( ws )?
			int alt249=2;
			try { dbg.enterSubRule(249);
			try { dbg.enterDecision(249, decisionCanBacktrack[249]);

			int LA249_0 = input.LA(1);
			if ( (LA249_0==COMMENT||LA249_0==NL||LA249_0==WS) ) {
				alt249=1;
			}
			} finally {dbg.exitDecision(249);}

			switch (alt249) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:73: ws
					{
					dbg.location(992,73);
					pushFollow(FOLLOW_ws_in_fnAttributes5886);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(249);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(993, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(995, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:996:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt252=3;
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==IDENT) ) {
				int LA252_1 = input.LA(2);
				if ( (synpred34_Css3()) ) {
					alt252=1;
				}
				else if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==AT_IDENT||(LA252_0 >= BOTTOMCENTER_SYM && LA252_0 <= BOTTOMRIGHT_SYM)||LA252_0==CHARSET_SYM||LA252_0==COUNTER_STYLE_SYM||LA252_0==FONT_FACE_SYM||LA252_0==IMPORT_SYM||(LA252_0 >= LEFTBOTTOM_SYM && LA252_0 <= LEFTTOP_SYM)||LA252_0==MEDIA_SYM||LA252_0==MOZ_DOCUMENT_SYM||LA252_0==NAMESPACE_SYM||LA252_0==PAGE_SYM||(LA252_0 >= RIGHTBOTTOM_SYM && LA252_0 <= RIGHTTOP_SYM)||(LA252_0 >= SASS_AT_ROOT && LA252_0 <= SASS_DEBUG)||(LA252_0 >= SASS_EACH && LA252_0 <= SASS_ELSE)||LA252_0==SASS_EXTEND||(LA252_0 >= SASS_FOR && LA252_0 <= SASS_FUNCTION)||(LA252_0 >= SASS_IF && LA252_0 <= SASS_MIXIN)||LA252_0==SASS_RETURN||(LA252_0 >= SASS_WARN && LA252_0 <= SASS_WHILE)||(LA252_0 >= TOPCENTER_SYM && LA252_0 <= TOPRIGHT_SYM)||LA252_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA252_2 = input.LA(2);
				if ( (((synpred34_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt252=1;
				}
				else if ( (((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt252=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==SASS_VAR) ) {
				int LA252_3 = input.LA(2);
				if ( (((synpred34_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt252=1;
				}
				else if ( (((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt252=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==LBRACE) && (synpred35_Css3())) {
				alt252=2;
			}
			else if ( (LA252_0==NOT) && (synpred35_Css3())) {
				alt252=2;
			}
			else if ( (LA252_0==MINUS||LA252_0==PLUS) ) {
				int LA252_6 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==NUMBER) ) {
				int LA252_7 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==PERCENTAGE) ) {
				int LA252_8 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==LENGTH) ) {
				int LA252_9 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==EMS) ) {
				int LA252_10 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==REM) ) {
				int LA252_11 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==EXS) ) {
				int LA252_12 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==ANGLE) ) {
				int LA252_13 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==TIME) ) {
				int LA252_14 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==FREQ) ) {
				int LA252_15 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==RESOLUTION) ) {
				int LA252_16 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==DIMENSION) ) {
				int LA252_17 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==STRING) ) {
				int LA252_18 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==TILDE) ) {
				int LA252_19 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==LESS_JS_STRING) ) {
				int LA252_20 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==GEN) ) {
				int LA252_21 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==URI) ) {
				int LA252_22 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==HASH) ) {
				int LA252_23 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt252=2;
				}
				else if ( (true) ) {
					alt252=3;
				}

			}
			else if ( (LA252_0==LESS_AND) ) {
				int LA252_24 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt252=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==HASH_SYMBOL) ) {
				int LA252_25 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt252=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==AT_SIGN) ) {
				int LA252_26 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt252=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==PERCENTAGE_SYMBOL) ) {
				int LA252_27 = input.LA(2);
				if ( ((synpred35_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt252=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt252=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA252_0==IMPORTANT_SYM) && (synpred35_Css3())) {
				alt252=2;
			}
			else if ( (LA252_0==LPAREN) && (synpred35_Css3())) {
				alt252=2;
			}

			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(997,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute5923);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(997,62);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:62: ( ws )?
					int alt250=2;
					try { dbg.enterSubRule(250);
					try { dbg.enterDecision(250, decisionCanBacktrack[250]);

					int LA250_0 = input.LA(1);
					if ( (LA250_0==COMMENT||LA250_0==NL||LA250_0==WS) ) {
						alt250=1;
					}
					} finally {dbg.exitDecision(250);}

					switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:62: ws
							{
							dbg.location(997,62);
							pushFollow(FOLLOW_ws_in_fnAttribute5925);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(250);}
					dbg.location(997,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(997,79);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:79: ( ws )?
					int alt251=2;
					try { dbg.enterSubRule(251);
					try { dbg.enterDecision(251, decisionCanBacktrack[251]);

					int LA251_0 = input.LA(1);
					if ( (LA251_0==COMMENT||LA251_0==NL||LA251_0==WS) ) {
						alt251=1;
					}
					} finally {dbg.exitDecision(251);}

					switch (alt251) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:79: ws
							{
							dbg.location(997,79);
							pushFollow(FOLLOW_ws_in_fnAttribute5934);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(251);}
					dbg.location(997,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute5937);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:11: ( cp_expression )=> cp_expression
					{
					dbg.location(998,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute5954);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:11: expression
					{
					dbg.location(999,11);
					pushFollow(FOLLOW_expression_in_fnAttribute5966);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1000, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1002:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1002, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1003:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt254=2;
			try { dbg.enterDecision(254, decisionCanBacktrack[254]);

			int LA254_0 = input.LA(1);
			if ( (LA254_0==IDENT) ) {
				alt254=1;
			}
			else if ( (LA254_0==AT_IDENT||(LA254_0 >= BOTTOMCENTER_SYM && LA254_0 <= BOTTOMRIGHT_SYM)||LA254_0==CHARSET_SYM||LA254_0==COUNTER_STYLE_SYM||LA254_0==FONT_FACE_SYM||LA254_0==IMPORT_SYM||(LA254_0 >= LEFTBOTTOM_SYM && LA254_0 <= LEFTTOP_SYM)||LA254_0==MEDIA_SYM||LA254_0==MOZ_DOCUMENT_SYM||LA254_0==NAMESPACE_SYM||LA254_0==PAGE_SYM||(LA254_0 >= RIGHTBOTTOM_SYM && LA254_0 <= RIGHTTOP_SYM)||(LA254_0 >= SASS_AT_ROOT && LA254_0 <= SASS_DEBUG)||(LA254_0 >= SASS_EACH && LA254_0 <= SASS_ELSE)||LA254_0==SASS_EXTEND||(LA254_0 >= SASS_FOR && LA254_0 <= SASS_FUNCTION)||(LA254_0 >= SASS_IF && LA254_0 <= SASS_MIXIN)||(LA254_0 >= SASS_RETURN && LA254_0 <= SASS_WHILE)||(LA254_0 >= TOPCENTER_SYM && LA254_0 <= TOPRIGHT_SYM)||LA254_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt254=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 254, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(254);}

			switch (alt254) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1004,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5989); if (state.failed) return;dbg.location(1004,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:19: ( DOT IDENT )*
					try { dbg.enterSubRule(253);

					loop253:
					while (true) {
						int alt253=2;
						try { dbg.enterDecision(253, decisionCanBacktrack[253]);

						int LA253_0 = input.LA(1);
						if ( (LA253_0==DOT) ) {
							alt253=1;
						}

						} finally {dbg.exitDecision(253);}

						switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:20: DOT IDENT
							{
							dbg.location(1004,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName5992); if (state.failed) return;dbg.location(1004,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5994); if (state.failed) return;
							}
							break;

						default :
							break loop253;
						}
					}
					} finally {dbg.exitSubRule(253);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:15: {...}? cp_variable
					{
					dbg.location(1005,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1005,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName6014);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1006, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1008:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1008, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt259=2;
			try { dbg.enterDecision(259, decisionCanBacktrack[259]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA259_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA259_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA259_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA259_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA259_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA259_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA259_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA259_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA259_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA259_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA259_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA259_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA259_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA259_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA259_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA259_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA259_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA259_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA259_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA259_20 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt259=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA259_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt259=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA259_22 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt259=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA259_23 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt259=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA259_24 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt259=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA259_25 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt259=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 259, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt259=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 259, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(259);}

			switch (alt259) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1010,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue6037);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1010,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(258);

					loop258:
					while (true) {
						int alt258=2;
						try { dbg.enterDecision(258, decisionCanBacktrack[258]);

						try {
							isCyclicDecision = true;
							alt258 = dfa258.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(258);}

						switch (alt258) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1010,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt257=3;
							try { dbg.enterSubRule(257);
							try { dbg.enterDecision(257, decisionCanBacktrack[257]);

							try {
								isCyclicDecision = true;
								alt257 = dfa257.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(257);}

							switch (alt257) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:73: ws
									{
									dbg.location(1010,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue6069);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1010,78);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1010,79);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:79: ( ws )?
									int alt255=2;
									try { dbg.enterSubRule(255);
									try { dbg.enterDecision(255, decisionCanBacktrack[255]);

									int LA255_0 = input.LA(1);
									if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
										alt255=1;
									}
									} finally {dbg.exitDecision(255);}

									switch (alt255) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:79: ws
											{
											dbg.location(1010,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6074);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(255);}
									dbg.location(1010,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue6077); if (state.failed) return;dbg.location(1010,91);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:91: ( ws )?
									int alt256=2;
									try { dbg.enterSubRule(256);
									try { dbg.enterDecision(256, decisionCanBacktrack[256]);

									int LA256_0 = input.LA(1);
									if ( (LA256_0==COMMENT||LA256_0==NL||LA256_0==WS) ) {
										alt256=1;
									}
									} finally {dbg.exitDecision(256);}

									switch (alt256) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:91: ws
											{
											dbg.location(1010,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6079);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(256);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(257);}
							dbg.location(1010,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue6088);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop258;
						}
					}
					} finally {dbg.exitSubRule(258);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:15: {...}? cp_math_expression
					{
					dbg.location(1011,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1011,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue6109);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1012, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1014:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1014, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1015:5: ( HASH )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1015:7: HASH
			{
			dbg.location(1015,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor6123); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1016, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1018, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1019:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1019:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1019,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1019:7: ( WS | NL | COMMENT )+
			int cnt260=0;
			try { dbg.enterSubRule(260);

			loop260:
			while (true) {
				int alt260=2;
				try { dbg.enterDecision(260, decisionCanBacktrack[260]);

				int LA260_0 = input.LA(1);
				if ( (LA260_0==COMMENT||LA260_0==NL||LA260_0==WS) ) {
					alt260=1;
				}

				} finally {dbg.exitDecision(260);}

				switch (alt260) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1019,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt260 >= 1 ) break loop260;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(260, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt260++;
			}
			} finally {dbg.exitSubRule(260);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1020, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1025:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1025, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt268=2;
			try { dbg.enterDecision(268, decisionCanBacktrack[268]);

			int LA268_0 = input.LA(1);
			if ( (LA268_0==AT_IDENT||(LA268_0 >= BOTTOMCENTER_SYM && LA268_0 <= BOTTOMRIGHT_SYM)||LA268_0==CHARSET_SYM||LA268_0==COUNTER_STYLE_SYM||LA268_0==FONT_FACE_SYM||LA268_0==IMPORT_SYM||(LA268_0 >= LEFTBOTTOM_SYM && LA268_0 <= LEFTTOP_SYM)||LA268_0==MEDIA_SYM||LA268_0==MOZ_DOCUMENT_SYM||LA268_0==NAMESPACE_SYM||LA268_0==PAGE_SYM||(LA268_0 >= RIGHTBOTTOM_SYM && LA268_0 <= RIGHTTOP_SYM)||(LA268_0 >= SASS_AT_ROOT && LA268_0 <= SASS_DEBUG)||(LA268_0 >= SASS_EACH && LA268_0 <= SASS_ELSE)||LA268_0==SASS_EXTEND||(LA268_0 >= SASS_FOR && LA268_0 <= SASS_FUNCTION)||(LA268_0 >= SASS_IF && LA268_0 <= SASS_MIXIN)||LA268_0==SASS_RETURN||(LA268_0 >= SASS_WARN && LA268_0 <= SASS_WHILE)||(LA268_0 >= TOPCENTER_SYM && LA268_0 <= TOPRIGHT_SYM)||LA268_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA268_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt268=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt268=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 268, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA268_0==SASS_VAR) ) {
				int LA268_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt268=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt268=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 268, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 268, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(268);}

			switch (alt268) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1027:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1027,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1027,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6183);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1027,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1027:39: ( ws )?
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					int LA261_0 = input.LA(1);
					if ( (LA261_0==COMMENT||LA261_0==NL||LA261_0==WS) ) {
						alt261=1;
					}
					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1027:39: ws
							{
							dbg.location(1027,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6185);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(261);}
					dbg.location(1027,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6188); if (state.failed) return;dbg.location(1027,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1027:49: ( ws )?
					int alt262=2;
					try { dbg.enterSubRule(262);
					try { dbg.enterDecision(262, decisionCanBacktrack[262]);

					int LA262_0 = input.LA(1);
					if ( (LA262_0==COMMENT||LA262_0==NL||LA262_0==WS) ) {
						alt262=1;
					}
					} finally {dbg.exitDecision(262);}

					switch (alt262) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1027:49: ws
							{
							dbg.location(1027,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6190);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(262);}
					dbg.location(1027,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6193);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1029,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1029,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6215);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1029,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:39: ( ws )?
					int alt263=2;
					try { dbg.enterSubRule(263);
					try { dbg.enterDecision(263, decisionCanBacktrack[263]);

					int LA263_0 = input.LA(1);
					if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
						alt263=1;
					}
					} finally {dbg.exitDecision(263);}

					switch (alt263) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:39: ws
							{
							dbg.location(1029,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6217);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(263);}
					dbg.location(1029,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6220); if (state.failed) return;dbg.location(1029,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:49: ( ws )?
					int alt264=2;
					try { dbg.enterSubRule(264);
					try { dbg.enterDecision(264, decisionCanBacktrack[264]);

					int LA264_0 = input.LA(1);
					if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
						alt264=1;
					}
					} finally {dbg.exitDecision(264);}

					switch (alt264) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:49: ws
							{
							dbg.location(1029,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6222);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(264);}
					dbg.location(1029,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6225);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1029,72);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(267);

					loop267:
					while (true) {
						int alt267=3;
						try { dbg.enterDecision(267, decisionCanBacktrack[267]);

						try {
							isCyclicDecision = true;
							alt267 = dfa267.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(267);}

						switch (alt267) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1029,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1029,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:74: ( ws )?
							int alt265=2;
							try { dbg.enterSubRule(265);
							try { dbg.enterDecision(265, decisionCanBacktrack[265]);

							int LA265_0 = input.LA(1);
							if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
								alt265=1;
							}
							} finally {dbg.exitDecision(265);}

							switch (alt265) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:74: ws
									{
									dbg.location(1029,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6229);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(265);}
							dbg.location(1029,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6232); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1029,94);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1029,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:95: ( ws )?
							int alt266=2;
							try { dbg.enterSubRule(266);
							try { dbg.enterDecision(266, decisionCanBacktrack[266]);

							int LA266_0 = input.LA(1);
							if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
								alt266=1;
							}
							} finally {dbg.exitDecision(266);}

							switch (alt266) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1029:95: ws
									{
									dbg.location(1029,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6238);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(266);}
							dbg.location(1029,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6241); if (state.failed) return;
							}

							}
							break;

						default :
							break loop267;
						}
					}
					} finally {dbg.exitSubRule(267);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1030, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1033, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) )
			int alt269=2;
			try { dbg.enterDecision(269, decisionCanBacktrack[269]);

			int LA269_0 = input.LA(1);
			if ( (LA269_0==AT_IDENT||(LA269_0 >= BOTTOMCENTER_SYM && LA269_0 <= BOTTOMRIGHT_SYM)||LA269_0==CHARSET_SYM||LA269_0==COUNTER_STYLE_SYM||LA269_0==FONT_FACE_SYM||LA269_0==IMPORT_SYM||(LA269_0 >= LEFTBOTTOM_SYM && LA269_0 <= LEFTTOP_SYM)||LA269_0==MEDIA_SYM||LA269_0==MOZ_DOCUMENT_SYM||LA269_0==NAMESPACE_SYM||LA269_0==PAGE_SYM||(LA269_0 >= RIGHTBOTTOM_SYM && LA269_0 <= RIGHTTOP_SYM)||(LA269_0 >= SASS_AT_ROOT && LA269_0 <= SASS_DEBUG)||(LA269_0 >= SASS_EACH && LA269_0 <= SASS_ELSE)||LA269_0==SASS_EXTEND||(LA269_0 >= SASS_FOR && LA269_0 <= SASS_FUNCTION)||(LA269_0 >= SASS_IF && LA269_0 <= SASS_MIXIN)||LA269_0==SASS_RETURN||(LA269_0 >= SASS_WARN && LA269_0 <= SASS_WHILE)||(LA269_0 >= TOPCENTER_SYM && LA269_0 <= TOPRIGHT_SYM)||LA269_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt269=1;
			}
			else if ( (LA269_0==SASS_VAR) ) {
				alt269=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 269, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(269);}

			switch (alt269) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1036,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1036,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:9: {...}? ( SASS_VAR )
					{
					dbg.location(1038,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1038,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:27: ( SASS_VAR )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:29: SASS_VAR
					{
					dbg.location(1038,29);
					match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable6465); if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1039, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1042, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1043:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1044:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1044,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list6495);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1045,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(272);

			loop272:
			while (true) {
				int alt272=2;
				try { dbg.enterDecision(272, decisionCanBacktrack[272]);

				try {
					isCyclicDecision = true;
					alt272 = dfa272.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(272);}

				switch (alt272) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1045,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:37: ( ws )?
					int alt270=2;
					try { dbg.enterSubRule(270);
					try { dbg.enterDecision(270, decisionCanBacktrack[270]);

					int LA270_0 = input.LA(1);
					if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
						alt270=1;
					}
					} finally {dbg.exitDecision(270);}

					switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:37: ws
							{
							dbg.location(1045,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list6514);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(270);}
					dbg.location(1045,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list6517); if (state.failed) return;dbg.location(1045,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:47: ( ws )?
					int alt271=2;
					try { dbg.enterSubRule(271);
					try { dbg.enterDecision(271, decisionCanBacktrack[271]);

					int LA271_0 = input.LA(1);
					if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
						alt271=1;
					}
					} finally {dbg.exitDecision(271);}

					switch (alt271) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:47: ws
							{
							dbg.location(1045,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list6519);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(271);}
					dbg.location(1045,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list6522);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop272;
				}
			}
			} finally {dbg.exitSubRule(272);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1046, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1058, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt281=3;
			try { dbg.enterDecision(281, decisionCanBacktrack[281]);

			int LA281_0 = input.LA(1);
			if ( (LA281_0==LBRACE) ) {
				alt281=1;
			}
			else if ( (LA281_0==NOT) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==MINUS||LA281_0==PLUS) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==IDENT) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==NUMBER) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==PERCENTAGE) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==LENGTH) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==EMS) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==REM) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==EXS) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==ANGLE) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==TIME) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==FREQ) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==RESOLUTION) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==DIMENSION) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==STRING) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==TILDE) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==LESS_JS_STRING) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==GEN) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==URI) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==HASH) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==AT_IDENT||(LA281_0 >= BOTTOMCENTER_SYM && LA281_0 <= BOTTOMRIGHT_SYM)||LA281_0==CHARSET_SYM||LA281_0==COUNTER_STYLE_SYM||LA281_0==FONT_FACE_SYM||LA281_0==IMPORT_SYM||(LA281_0 >= LEFTBOTTOM_SYM && LA281_0 <= LEFTTOP_SYM)||LA281_0==MEDIA_SYM||LA281_0==MOZ_DOCUMENT_SYM||LA281_0==NAMESPACE_SYM||LA281_0==PAGE_SYM||(LA281_0 >= RIGHTBOTTOM_SYM && LA281_0 <= RIGHTTOP_SYM)||(LA281_0 >= SASS_AT_ROOT && LA281_0 <= SASS_DEBUG)||(LA281_0 >= SASS_EACH && LA281_0 <= SASS_ELSE)||LA281_0==SASS_EXTEND||(LA281_0 >= SASS_FOR && LA281_0 <= SASS_FUNCTION)||(LA281_0 >= SASS_IF && LA281_0 <= SASS_MIXIN)||LA281_0==SASS_RETURN||(LA281_0 >= SASS_WARN && LA281_0 <= SASS_WHILE)||(LA281_0 >= TOPCENTER_SYM && LA281_0 <= TOPRIGHT_SYM)||LA281_0==WEBKIT_KEYFRAMES_SYM) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==SASS_VAR) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==LESS_AND) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==HASH_SYMBOL) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==AT_SIGN) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==PERCENTAGE_SYMBOL) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==IMPORTANT_SYM) && (synpred39_Css3())) {
				alt281=2;
			}
			else if ( (LA281_0==LPAREN) ) {
				int LA281_29 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt281=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt281=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 281, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 281, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(281);}

			switch (alt281) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1060,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1060,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1060,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression6558); if (state.failed) return;dbg.location(1060,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:31: ( ws )?
					int alt273=2;
					try { dbg.enterSubRule(273);
					try { dbg.enterDecision(273, decisionCanBacktrack[273]);

					int LA273_0 = input.LA(1);
					if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
						alt273=1;
					}
					} finally {dbg.exitDecision(273);}

					switch (alt273) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:31: ws
							{
							dbg.location(1060,31);
							pushFollow(FOLLOW_ws_in_cp_expression6560);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(273);}
					dbg.location(1060,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6563);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1060,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:48: ( declarations )?
					int alt274=2;
					try { dbg.enterSubRule(274);
					try { dbg.enterDecision(274, decisionCanBacktrack[274]);

					int LA274_0 = input.LA(1);
					if ( ((LA274_0 >= AT_IDENT && LA274_0 <= AT_SIGN)||(LA274_0 >= BOTTOMCENTER_SYM && LA274_0 <= BOTTOMRIGHT_SYM)||(LA274_0 >= CHARSET_SYM && LA274_0 <= COLON)||LA274_0==COUNTER_STYLE_SYM||LA274_0==DCOLON||LA274_0==DOT||LA274_0==FONT_FACE_SYM||(LA274_0 >= GEN && LA274_0 <= GREATER)||(LA274_0 >= HASH && LA274_0 <= HASH_SYMBOL)||LA274_0==IDENT||LA274_0==IMPORT_SYM||(LA274_0 >= LBRACKET && LA274_0 <= LEFTTOP_SYM)||LA274_0==LESS_AND||(LA274_0 >= MEDIA_SYM && LA274_0 <= MOZ_DOCUMENT_SYM)||LA274_0==NAMESPACE_SYM||LA274_0==PAGE_SYM||(LA274_0 >= PIPE && LA274_0 <= PLUS)||(LA274_0 >= RIGHTBOTTOM_SYM && LA274_0 <= RIGHTTOP_SYM)||(LA274_0 >= SASS_AT_ROOT && LA274_0 <= SASS_DEBUG)||(LA274_0 >= SASS_EACH && LA274_0 <= SASS_ELSE)||(LA274_0 >= SASS_ERROR && LA274_0 <= SASS_FUNCTION)||(LA274_0 >= SASS_IF && LA274_0 <= SASS_MIXIN)||(LA274_0 >= SASS_RETURN && LA274_0 <= SEMI)||LA274_0==STAR||LA274_0==TILDE||(LA274_0 >= TOPCENTER_SYM && LA274_0 <= TOPRIGHT_SYM)||LA274_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt274=1;
					}
					} finally {dbg.exitDecision(274);}

					switch (alt274) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:48: declarations
							{
							dbg.location(1060,48);
							pushFollow(FOLLOW_declarations_in_cp_expression6565);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(274);}
					dbg.location(1060,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression6568); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1061,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1061,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6584);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1062,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(278);

					loop278:
					while (true) {
						int alt278=3;
						try { dbg.enterDecision(278, decisionCanBacktrack[278]);

						try {
							isCyclicDecision = true;
							alt278 = dfa278.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(278);}

						switch (alt278) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1063,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1063,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:40: ( ws )?
							int alt275=2;
							try { dbg.enterSubRule(275);
							try { dbg.enterDecision(275, decisionCanBacktrack[275]);

							int LA275_0 = input.LA(1);
							if ( (LA275_0==COMMENT||LA275_0==NL||LA275_0==WS) ) {
								alt275=1;
							}
							} finally {dbg.exitDecision(275);}

							switch (alt275) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:40: ws
									{
									dbg.location(1063,40);
									pushFollow(FOLLOW_ws_in_cp_expression6608);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(275);}
							dbg.location(1063,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression6611);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1063,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:67: ( ws )?
							int alt276=2;
							try { dbg.enterSubRule(276);
							try { dbg.enterDecision(276, decisionCanBacktrack[276]);

							int LA276_0 = input.LA(1);
							if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
								alt276=1;
							}
							} finally {dbg.exitDecision(276);}

							switch (alt276) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:67: ws
									{
									dbg.location(1063,67);
									pushFollow(FOLLOW_ws_in_cp_expression6613);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(276);}

							}
							dbg.location(1063,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6617);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1064,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:37: ( ws )?
							int alt277=2;
							try { dbg.enterSubRule(277);
							try { dbg.enterDecision(277, decisionCanBacktrack[277]);

							int LA277_0 = input.LA(1);
							if ( (LA277_0==COMMENT||LA277_0==NL||LA277_0==WS) ) {
								alt277=1;
							}
							} finally {dbg.exitDecision(277);}

							switch (alt277) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:37: ws
									{
									dbg.location(1064,37);
									pushFollow(FOLLOW_ws_in_cp_expression6636);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(277);}
							dbg.location(1064,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6639);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop278;
						}
					}
					} finally {dbg.exitSubRule(278);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1066,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1066,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression6657); if (state.failed) return;dbg.location(1066,32);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:32: ( ws )?
					int alt279=2;
					try { dbg.enterSubRule(279);
					try { dbg.enterDecision(279, decisionCanBacktrack[279]);

					int LA279_0 = input.LA(1);
					if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
						alt279=1;
					}
					} finally {dbg.exitDecision(279);}

					switch (alt279) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:32: ws
							{
							dbg.location(1066,32);
							pushFollow(FOLLOW_ws_in_cp_expression6659);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(279);}
					dbg.location(1066,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6662);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1066,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:49: ( sass_map_pairs )?
					int alt280=2;
					try { dbg.enterSubRule(280);
					try { dbg.enterDecision(280, decisionCanBacktrack[280]);

					int LA280_0 = input.LA(1);
					if ( ((LA280_0 >= AT_IDENT && LA280_0 <= AT_SIGN)||(LA280_0 >= BOTTOMCENTER_SYM && LA280_0 <= BOTTOMRIGHT_SYM)||LA280_0==CHARSET_SYM||LA280_0==COMMA||LA280_0==COUNTER_STYLE_SYM||LA280_0==FONT_FACE_SYM||LA280_0==GEN||LA280_0==HASH_SYMBOL||LA280_0==IDENT||LA280_0==IMPORT_SYM||(LA280_0 >= LEFTBOTTOM_SYM && LA280_0 <= LEFTTOP_SYM)||(LA280_0 >= MEDIA_SYM && LA280_0 <= MOZ_DOCUMENT_SYM)||LA280_0==NAMESPACE_SYM||LA280_0==NUMBER||LA280_0==PAGE_SYM||(LA280_0 >= RIGHTBOTTOM_SYM && LA280_0 <= RIGHTTOP_SYM)||(LA280_0 >= SASS_AT_ROOT && LA280_0 <= SASS_DEBUG)||(LA280_0 >= SASS_EACH && LA280_0 <= SASS_ELSE)||LA280_0==SASS_EXTEND||(LA280_0 >= SASS_FOR && LA280_0 <= SASS_FUNCTION)||(LA280_0 >= SASS_IF && LA280_0 <= SASS_MIXIN)||(LA280_0 >= SASS_RETURN && LA280_0 <= SASS_WHILE)||LA280_0==STRING||(LA280_0 >= TOPCENTER_SYM && LA280_0 <= TOPRIGHT_SYM)||LA280_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt280=1;
					}
					} finally {dbg.exitDecision(280);}

					switch (alt280) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:49: sass_map_pairs
							{
							dbg.location(1066,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression6664);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(280);}
					dbg.location(1066,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression6667); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1067, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1069:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1069, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1070:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt282=8;
			try { dbg.enterDecision(282, decisionCanBacktrack[282]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA282_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt282=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt282=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt282=4;
				}
				break;
			case LESS:
				{
				alt282=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt282=6;
				}
				break;
			case GREATER:
				{
				alt282=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt282=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 282, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(282);}

			switch (alt282) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:5: key_or
					{
					dbg.location(1071,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator6688);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:14: key_and
					{
					dbg.location(1071,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator6692);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:25: CP_EQ
					{
					dbg.location(1071,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator6697); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:33: CP_NOT_EQ
					{
					dbg.location(1071,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator6701); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:45: LESS
					{
					dbg.location(1071,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator6705); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:52: LESS_OR_EQ
					{
					dbg.location(1071,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator6709); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:65: GREATER
					{
					dbg.location(1071,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator6713); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:75: GREATER_OR_EQ
					{
					dbg.location(1071,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6717); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1072, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1074, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1076,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:9: ( NOT ( ws )? )?
			int alt284=2;
			try { dbg.enterSubRule(284);
			try { dbg.enterDecision(284, decisionCanBacktrack[284]);

			int LA284_0 = input.LA(1);
			if ( (LA284_0==NOT) ) {
				alt284=1;
			}
			} finally {dbg.exitDecision(284);}

			switch (alt284) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:10: NOT ( ws )?
					{
					dbg.location(1076,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom6743); if (state.failed) return;dbg.location(1076,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:14: ( ws )?
					int alt283=2;
					try { dbg.enterSubRule(283);
					try { dbg.enterDecision(283, decisionCanBacktrack[283]);

					int LA283_0 = input.LA(1);
					if ( (LA283_0==COMMENT||LA283_0==NL||LA283_0==WS) ) {
						alt283=1;
					}
					} finally {dbg.exitDecision(283);}

					switch (alt283) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:14: ws
							{
							dbg.location(1076,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6745);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(283);}

					}
					break;

			}
			} finally {dbg.exitSubRule(284);}
			dbg.location(1077,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1077:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt288=2;
			try { dbg.enterSubRule(288);
			try { dbg.enterDecision(288, decisionCanBacktrack[288]);

			int LA288_0 = input.LA(1);
			if ( (LA288_0==MINUS||LA288_0==PLUS) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==IDENT) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==NUMBER) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==PERCENTAGE) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==LENGTH) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==EMS) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==REM) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==EXS) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==ANGLE) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==TIME) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==FREQ) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==RESOLUTION) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==DIMENSION) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==STRING) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==TILDE) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==LESS_JS_STRING) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==GEN) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==URI) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==HASH) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==AT_IDENT||(LA288_0 >= BOTTOMCENTER_SYM && LA288_0 <= BOTTOMRIGHT_SYM)||LA288_0==CHARSET_SYM||LA288_0==COUNTER_STYLE_SYM||LA288_0==FONT_FACE_SYM||LA288_0==IMPORT_SYM||(LA288_0 >= LEFTBOTTOM_SYM && LA288_0 <= LEFTTOP_SYM)||LA288_0==MEDIA_SYM||LA288_0==MOZ_DOCUMENT_SYM||LA288_0==NAMESPACE_SYM||LA288_0==PAGE_SYM||(LA288_0 >= RIGHTBOTTOM_SYM && LA288_0 <= RIGHTTOP_SYM)||(LA288_0 >= SASS_AT_ROOT && LA288_0 <= SASS_DEBUG)||(LA288_0 >= SASS_EACH && LA288_0 <= SASS_ELSE)||LA288_0==SASS_EXTEND||(LA288_0 >= SASS_FOR && LA288_0 <= SASS_FUNCTION)||(LA288_0 >= SASS_IF && LA288_0 <= SASS_MIXIN)||LA288_0==SASS_RETURN||(LA288_0 >= SASS_WARN && LA288_0 <= SASS_WHILE)||(LA288_0 >= TOPCENTER_SYM && LA288_0 <= TOPRIGHT_SYM)||LA288_0==WEBKIT_KEYFRAMES_SYM) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==SASS_VAR) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==LESS_AND) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==HASH_SYMBOL) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==AT_SIGN) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==PERCENTAGE_SYMBOL) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==IMPORTANT_SYM) && (synpred42_Css3())) {
				alt288=1;
			}
			else if ( (LA288_0==LPAREN) ) {
				int LA288_27 = input.LA(2);
				if ( (synpred42_Css3()) ) {
					alt288=1;
				}
				else if ( (true) ) {
					alt288=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 288, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(288);}

			switch (alt288) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1078,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom6776);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1079,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom6792); if (state.failed) return;dbg.location(1079,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:22: ( ws )?
					int alt285=2;
					try { dbg.enterSubRule(285);
					try { dbg.enterDecision(285, decisionCanBacktrack[285]);

					int LA285_0 = input.LA(1);
					if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
						alt285=1;
					}
					} finally {dbg.exitDecision(285);}

					switch (alt285) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:22: ws
							{
							dbg.location(1079,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6794);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(285);}
					dbg.location(1079,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:26: ( cp_expression_list ( ws )? )?
					int alt287=2;
					try { dbg.enterSubRule(287);
					try { dbg.enterDecision(287, decisionCanBacktrack[287]);

					int LA287_0 = input.LA(1);
					if ( ((LA287_0 >= ANGLE && LA287_0 <= AT_SIGN)||(LA287_0 >= BOTTOMCENTER_SYM && LA287_0 <= BOTTOMRIGHT_SYM)||LA287_0==CHARSET_SYM||LA287_0==COUNTER_STYLE_SYM||LA287_0==DIMENSION||LA287_0==EMS||LA287_0==EXS||(LA287_0 >= FONT_FACE_SYM && LA287_0 <= FREQ)||LA287_0==GEN||(LA287_0 >= HASH && LA287_0 <= HASH_SYMBOL)||(LA287_0 >= IDENT && LA287_0 <= IMPORT_SYM)||LA287_0==LBRACE||(LA287_0 >= LEFTBOTTOM_SYM && LA287_0 <= LENGTH)||(LA287_0 >= LESS_AND && LA287_0 <= LESS_JS_STRING)||LA287_0==LPAREN||(LA287_0 >= MEDIA_SYM && LA287_0 <= MOZ_DOCUMENT_SYM)||LA287_0==NAMESPACE_SYM||(LA287_0 >= NOT && LA287_0 <= NUMBER)||(LA287_0 >= PAGE_SYM && LA287_0 <= PERCENTAGE_SYMBOL)||LA287_0==PLUS||(LA287_0 >= REM && LA287_0 <= RIGHTTOP_SYM)||(LA287_0 >= SASS_AT_ROOT && LA287_0 <= SASS_DEBUG)||(LA287_0 >= SASS_EACH && LA287_0 <= SASS_ELSE)||LA287_0==SASS_EXTEND||(LA287_0 >= SASS_FOR && LA287_0 <= SASS_FUNCTION)||(LA287_0 >= SASS_IF && LA287_0 <= SASS_MIXIN)||(LA287_0 >= SASS_RETURN && LA287_0 <= SASS_WHILE)||LA287_0==STRING||(LA287_0 >= TILDE && LA287_0 <= TOPRIGHT_SYM)||LA287_0==URI||LA287_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt287=1;
					}
					} finally {dbg.exitDecision(287);}

					switch (alt287) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:27: cp_expression_list ( ws )?
							{
							dbg.location(1079,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom6798);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1079,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:46: ( ws )?
							int alt286=2;
							try { dbg.enterSubRule(286);
							try { dbg.enterDecision(286, decisionCanBacktrack[286]);

							int LA286_0 = input.LA(1);
							if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
								alt286=1;
							}
							} finally {dbg.exitDecision(286);}

							switch (alt286) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:46: ws
									{
									dbg.location(1079,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom6800);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(286);}

							}
							break;

					}
					} finally {dbg.exitSubRule(287);}
					dbg.location(1079,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom6805); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(288);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1081, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1084:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1084, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1086,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6837);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1087,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(289);

			loop289:
			while (true) {
				int alt289=2;
				try { dbg.enterDecision(289, decisionCanBacktrack[289]);

				int LA289_0 = input.LA(1);
				if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
					alt289=1;
				}

				} finally {dbg.exitDecision(289);}

				switch (alt289) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:6: ws cp_math_expression
					{
					dbg.location(1087,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions6844);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1087,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6846);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop289;
				}
			}
			} finally {dbg.exitSubRule(289);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1088, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1102, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1103,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6880);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1104,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(292);

			loop292:
			while (true) {
				int alt292=2;
				try { dbg.enterDecision(292, decisionCanBacktrack[292]);

				try {
					isCyclicDecision = true;
					alt292 = dfa292.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(292);}

				switch (alt292) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1105,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:48: ( ws )?
					int alt290=2;
					try { dbg.enterSubRule(290);
					try { dbg.enterDecision(290, decisionCanBacktrack[290]);

					int LA290_0 = input.LA(1);
					if ( (LA290_0==COMMENT||LA290_0==NL||LA290_0==WS) ) {
						alt290=1;
					}
					} finally {dbg.exitDecision(290);}

					switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:48: ws
							{
							dbg.location(1105,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression6922);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(290);}
					dbg.location(1105,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1105,78);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:78: ( ws )?
					int alt291=2;
					try { dbg.enterSubRule(291);
					try { dbg.enterDecision(291, decisionCanBacktrack[291]);

					int LA291_0 = input.LA(1);
					if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {
						alt291=1;
					}
					} finally {dbg.exitDecision(291);}

					switch (alt291) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:78: ws
							{
							dbg.location(1105,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression6935);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(291);}
					dbg.location(1105,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6938);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop292;
				}
			}
			} finally {dbg.exitSubRule(292);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1107, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1109, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt297=3;
			try { dbg.enterDecision(297, decisionCanBacktrack[297]);

			try {
				isCyclicDecision = true;
				alt297 = dfa297.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(297);}

			switch (alt297) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1111:5: term
					{
					dbg.location(1111,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom6971);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:7: IMPORTANT_SYM
					{
					dbg.location(1112,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6979); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1113,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:7: ( unaryOperator ( ws )? )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					int LA294_0 = input.LA(1);
					if ( (LA294_0==MINUS||LA294_0==PLUS) ) {
						alt294=1;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:9: unaryOperator ( ws )?
							{
							dbg.location(1113,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom6990);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1113,23);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:23: ( ws )?
							int alt293=2;
							try { dbg.enterSubRule(293);
							try { dbg.enterDecision(293, decisionCanBacktrack[293]);

							int LA293_0 = input.LA(1);
							if ( (LA293_0==COMMENT||LA293_0==NL||LA293_0==WS) ) {
								alt293=1;
							}
							} finally {dbg.exitDecision(293);}

							switch (alt293) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:23: ws
									{
									dbg.location(1113,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom6992);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(293);}

							}
							break;

					}
					} finally {dbg.exitSubRule(294);}
					dbg.location(1113,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom6998); if (state.failed) return;dbg.location(1113,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:37: ( ws )?
					int alt295=2;
					try { dbg.enterSubRule(295);
					try { dbg.enterDecision(295, decisionCanBacktrack[295]);

					int LA295_0 = input.LA(1);
					if ( (LA295_0==COMMENT||LA295_0==NL||LA295_0==WS) ) {
						alt295=1;
					}
					} finally {dbg.exitDecision(295);}

					switch (alt295) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:37: ws
							{
							dbg.location(1113,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7000);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(295);}
					dbg.location(1113,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom7003);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1113,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:60: ( ws )?
					int alt296=2;
					try { dbg.enterSubRule(296);
					try { dbg.enterDecision(296, decisionCanBacktrack[296]);

					int LA296_0 = input.LA(1);
					if ( (LA296_0==COMMENT||LA296_0==NL||LA296_0==WS) ) {
						alt296=1;
					}
					} finally {dbg.exitDecision(296);}

					switch (alt296) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:60: ws
							{
							dbg.location(1113,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7005);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(296);}
					dbg.location(1113,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom7008); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1114, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1122, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1123:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1124,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt309=2;
			try { dbg.enterSubRule(309);
			try { dbg.enterDecision(309, decisionCanBacktrack[309]);

			int LA309_0 = input.LA(1);
			if ( (LA309_0==DOT||LA309_0==HASH||LA309_0==LESS_AND) ) {
				alt309=1;
			}
			else if ( (LA309_0==SASS_MIXIN) ) {
				alt309=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 309, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(309);}

			switch (alt309) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1125,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1125,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt302=2;
					try { dbg.enterSubRule(302);
					try { dbg.enterDecision(302, decisionCanBacktrack[302]);

					int LA302_0 = input.LA(1);
					if ( (LA302_0==LESS_AND) ) {
						alt302=1;
					}
					else if ( (LA302_0==DOT||LA302_0==HASH) ) {
						alt302=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 302, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(302);}

					switch (alt302) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:28: LESS_AND
							{
							dbg.location(1125,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration7048); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1125,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1125,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt298=2;
							try { dbg.enterSubRule(298);
							try { dbg.enterDecision(298, decisionCanBacktrack[298]);

							int LA298_0 = input.LA(1);
							if ( (LA298_0==DOT) ) {
								alt298=1;
							}
							else if ( (LA298_0==HASH) ) {
								alt298=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 298, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(298);}

							switch (alt298) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:41: ( DOT cp_mixin_name )
									{
									dbg.location(1125,41);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:42: DOT cp_mixin_name
									{
									dbg.location(1125,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration7055); if (state.failed) return;dbg.location(1125,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration7057);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:63: HASH
									{
									dbg.location(1125,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration7062); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(298);}
							dbg.location(1125,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:69: ( ws )?
							int alt299=2;
							try { dbg.enterSubRule(299);
							try { dbg.enterDecision(299, decisionCanBacktrack[299]);

							int LA299_0 = input.LA(1);
							if ( (LA299_0==COMMENT||LA299_0==NL||LA299_0==WS) ) {
								alt299=1;
							}
							} finally {dbg.exitDecision(299);}

							switch (alt299) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:69: ws
									{
									dbg.location(1125,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7065);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(299);}
							dbg.location(1125,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7068); if (state.failed) return;dbg.location(1125,80);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:80: ( ws )?
							int alt300=2;
							try { dbg.enterSubRule(300);
							try { dbg.enterDecision(300, decisionCanBacktrack[300]);

							int LA300_0 = input.LA(1);
							if ( (LA300_0==COMMENT||LA300_0==NL||LA300_0==WS) ) {
								alt300=1;
							}
							} finally {dbg.exitDecision(300);}

							switch (alt300) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:80: ws
									{
									dbg.location(1125,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7070);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(300);}
							dbg.location(1125,84);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:84: ( cp_args_list )?
							int alt301=2;
							try { dbg.enterSubRule(301);
							try { dbg.enterDecision(301, decisionCanBacktrack[301]);

							int LA301_0 = input.LA(1);
							if ( (LA301_0==AT_IDENT||(LA301_0 >= BOTTOMCENTER_SYM && LA301_0 <= BOTTOMRIGHT_SYM)||LA301_0==CHARSET_SYM||(LA301_0 >= COUNTER_STYLE_SYM && LA301_0 <= CP_DOTS)||LA301_0==FONT_FACE_SYM||LA301_0==IDENT||LA301_0==IMPORT_SYM||(LA301_0 >= LEFTBOTTOM_SYM && LA301_0 <= LEFTTOP_SYM)||LA301_0==LESS_REST||LA301_0==MEDIA_SYM||LA301_0==MOZ_DOCUMENT_SYM||LA301_0==NAMESPACE_SYM||LA301_0==PAGE_SYM||(LA301_0 >= RIGHTBOTTOM_SYM && LA301_0 <= RIGHTTOP_SYM)||(LA301_0 >= SASS_AT_ROOT && LA301_0 <= SASS_DEBUG)||(LA301_0 >= SASS_EACH && LA301_0 <= SASS_ELSE)||LA301_0==SASS_EXTEND||(LA301_0 >= SASS_FOR && LA301_0 <= SASS_FUNCTION)||(LA301_0 >= SASS_IF && LA301_0 <= SASS_MIXIN)||(LA301_0 >= SASS_RETURN && LA301_0 <= SASS_WHILE)||(LA301_0 >= TOPCENTER_SYM && LA301_0 <= TOPRIGHT_SYM)||LA301_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt301=1;
							}
							} finally {dbg.exitDecision(301);}

							switch (alt301) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:84: cp_args_list
									{
									dbg.location(1125,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7073);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(301);}
							dbg.location(1125,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7076); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(302);}
					dbg.location(1125,107);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:107: ( ( ws )? less_mixin_guarded )?
					int alt304=2;
					try { dbg.enterSubRule(304);
					try { dbg.enterDecision(304, decisionCanBacktrack[304]);

					try {
						isCyclicDecision = true;
						alt304 = dfa304.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(304);}

					switch (alt304) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1125,108);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:108: ( ws )?
							int alt303=2;
							try { dbg.enterSubRule(303);
							try { dbg.enterDecision(303, decisionCanBacktrack[303]);

							int LA303_0 = input.LA(1);
							if ( (LA303_0==COMMENT||LA303_0==NL||LA303_0==WS) ) {
								alt303=1;
							}
							} finally {dbg.exitDecision(303);}

							switch (alt303) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:108: ws
									{
									dbg.location(1125,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7081);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(303);}
							dbg.location(1125,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7084);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(304);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1127,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1127,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7108); if (state.failed) return;dbg.location(1127,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7110);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1127,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration7112);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1127,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt308=2;
					try { dbg.enterSubRule(308);
					try { dbg.enterDecision(308, decisionCanBacktrack[308]);

					try {
						isCyclicDecision = true;
						alt308 = dfa308.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(308);}

					switch (alt308) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1127,56);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:56: ( ws )?
							int alt305=2;
							try { dbg.enterSubRule(305);
							try { dbg.enterDecision(305, decisionCanBacktrack[305]);

							int LA305_0 = input.LA(1);
							if ( (LA305_0==COMMENT||LA305_0==NL||LA305_0==WS) ) {
								alt305=1;
							}
							} finally {dbg.exitDecision(305);}

							switch (alt305) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:56: ws
									{
									dbg.location(1127,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7115);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(305);}
							dbg.location(1127,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7118); if (state.failed) return;dbg.location(1127,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:67: ( ws )?
							int alt306=2;
							try { dbg.enterSubRule(306);
							try { dbg.enterDecision(306, decisionCanBacktrack[306]);

							int LA306_0 = input.LA(1);
							if ( (LA306_0==COMMENT||LA306_0==NL||LA306_0==WS) ) {
								alt306=1;
							}
							} finally {dbg.exitDecision(306);}

							switch (alt306) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:67: ws
									{
									dbg.location(1127,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7120);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(306);}
							dbg.location(1127,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:71: ( cp_args_list )?
							int alt307=2;
							try { dbg.enterSubRule(307);
							try { dbg.enterDecision(307, decisionCanBacktrack[307]);

							int LA307_0 = input.LA(1);
							if ( (LA307_0==AT_IDENT||(LA307_0 >= BOTTOMCENTER_SYM && LA307_0 <= BOTTOMRIGHT_SYM)||LA307_0==CHARSET_SYM||(LA307_0 >= COUNTER_STYLE_SYM && LA307_0 <= CP_DOTS)||LA307_0==FONT_FACE_SYM||LA307_0==IDENT||LA307_0==IMPORT_SYM||(LA307_0 >= LEFTBOTTOM_SYM && LA307_0 <= LEFTTOP_SYM)||LA307_0==LESS_REST||LA307_0==MEDIA_SYM||LA307_0==MOZ_DOCUMENT_SYM||LA307_0==NAMESPACE_SYM||LA307_0==PAGE_SYM||(LA307_0 >= RIGHTBOTTOM_SYM && LA307_0 <= RIGHTTOP_SYM)||(LA307_0 >= SASS_AT_ROOT && LA307_0 <= SASS_DEBUG)||(LA307_0 >= SASS_EACH && LA307_0 <= SASS_ELSE)||LA307_0==SASS_EXTEND||(LA307_0 >= SASS_FOR && LA307_0 <= SASS_FUNCTION)||(LA307_0 >= SASS_IF && LA307_0 <= SASS_MIXIN)||(LA307_0 >= SASS_RETURN && LA307_0 <= SASS_WHILE)||(LA307_0 >= TOPCENTER_SYM && LA307_0 <= TOPRIGHT_SYM)||LA307_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt307=1;
							}
							} finally {dbg.exitDecision(307);}

							switch (alt307) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:71: cp_args_list
									{
									dbg.location(1127,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7123);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(307);}
							dbg.location(1127,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7126); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(308);}

					}
					break;

			}
			} finally {dbg.exitSubRule(309);}
			dbg.location(1129,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1129:5: ( ws )?
			int alt310=2;
			try { dbg.enterSubRule(310);
			try { dbg.enterDecision(310, decisionCanBacktrack[310]);

			int LA310_0 = input.LA(1);
			if ( (LA310_0==COMMENT||LA310_0==NL||LA310_0==WS) ) {
				alt310=1;
			}
			} finally {dbg.exitDecision(310);}

			switch (alt310) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1129:5: ws
					{
					dbg.location(1129,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7140);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(310);}
			dbg.location(1129,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration7143);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1130, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1134, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1136,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt322=2;
			try { dbg.enterSubRule(322);
			try { dbg.enterDecision(322, decisionCanBacktrack[322]);

			int LA322_0 = input.LA(1);
			if ( (LA322_0==AT_IDENT||LA322_0==DOT||LA322_0==HASH||LA322_0==LESS_AND) ) {
				alt322=1;
			}
			else if ( (LA322_0==SASS_INCLUDE) ) {
				alt322=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 322, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(322);}

			switch (alt322) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1137,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1137,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt311=4;
					try { dbg.enterSubRule(311);
					try { dbg.enterDecision(311, decisionCanBacktrack[311]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt311=1;
						}
						break;
					case HASH:
						{
						alt311=2;
						}
						break;
					case AT_IDENT:
						{
						alt311=3;
						}
						break;
					case LESS_AND:
						{
						alt311=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 311, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(311);}

					switch (alt311) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:28: DOT cp_mixin_name
							{
							dbg.location(1137,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call7179); if (state.failed) return;dbg.location(1137,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7181);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:48: HASH
							{
							dbg.location(1137,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call7185); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:55: AT_IDENT
							{
							dbg.location(1137,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call7189); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:66: LESS_AND
							{
							dbg.location(1137,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call7193); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(311);}
					dbg.location(1137,76);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:76: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt315=3;
					try { dbg.enterSubRule(315);
					try { dbg.enterDecision(315, decisionCanBacktrack[315]);

					int LA315_0 = input.LA(1);
					if ( (LA315_0==COLON||LA315_0==DCOLON) ) {
						int LA315_1 = input.LA(2);
						if ( (synpred44_Css3()) ) {
							alt315=1;
						}
					}
					else if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
						int LA315_2 = input.LA(2);
						if ( (synpred45_Css3()) ) {
							alt315=2;
						}
					}
					else if ( (LA315_0==LPAREN) && (synpred45_Css3())) {
						alt315=2;
					}
					} finally {dbg.exitDecision(315);}

					switch (alt315) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:77: ( pseudo )=> pseudo
							{
							dbg.location(1137,87);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call7201);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:96: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1137,110);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:110: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:111: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1137,111);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:111: ( ws )?
							int alt312=2;
							try { dbg.enterSubRule(312);
							try { dbg.enterDecision(312, decisionCanBacktrack[312]);

							int LA312_0 = input.LA(1);
							if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
								alt312=1;
							}
							} finally {dbg.exitDecision(312);}

							switch (alt312) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:111: ws
									{
									dbg.location(1137,111);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7213);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(312);}
							dbg.location(1137,115);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7216); if (state.failed) return;dbg.location(1137,122);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:122: ( ws )?
							int alt313=2;
							try { dbg.enterSubRule(313);
							try { dbg.enterDecision(313, decisionCanBacktrack[313]);

							int LA313_0 = input.LA(1);
							if ( (LA313_0==COMMENT||LA313_0==NL||LA313_0==WS) ) {
								alt313=1;
							}
							} finally {dbg.exitDecision(313);}

							switch (alt313) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:122: ws
									{
									dbg.location(1137,122);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7218);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(313);}
							dbg.location(1137,126);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:126: ( cp_mixin_call_args )?
							int alt314=2;
							try { dbg.enterSubRule(314);
							try { dbg.enterDecision(314, decisionCanBacktrack[314]);

							int LA314_0 = input.LA(1);
							if ( ((LA314_0 >= ANGLE && LA314_0 <= AT_SIGN)||(LA314_0 >= BOTTOMCENTER_SYM && LA314_0 <= BOTTOMRIGHT_SYM)||LA314_0==CHARSET_SYM||LA314_0==COUNTER_STYLE_SYM||LA314_0==DIMENSION||LA314_0==EMS||LA314_0==EXS||(LA314_0 >= FONT_FACE_SYM && LA314_0 <= FREQ)||LA314_0==GEN||(LA314_0 >= HASH && LA314_0 <= HASH_SYMBOL)||(LA314_0 >= IDENT && LA314_0 <= IMPORT_SYM)||LA314_0==LBRACE||(LA314_0 >= LEFTBOTTOM_SYM && LA314_0 <= LENGTH)||(LA314_0 >= LESS_AND && LA314_0 <= LESS_JS_STRING)||LA314_0==LPAREN||(LA314_0 >= MEDIA_SYM && LA314_0 <= MOZ_DOCUMENT_SYM)||LA314_0==NAMESPACE_SYM||(LA314_0 >= NOT && LA314_0 <= NUMBER)||(LA314_0 >= PAGE_SYM && LA314_0 <= PERCENTAGE_SYMBOL)||LA314_0==PLUS||(LA314_0 >= REM && LA314_0 <= RIGHTTOP_SYM)||(LA314_0 >= SASS_AT_ROOT && LA314_0 <= SASS_DEBUG)||(LA314_0 >= SASS_EACH && LA314_0 <= SASS_ELSE)||LA314_0==SASS_EXTEND||(LA314_0 >= SASS_FOR && LA314_0 <= SASS_FUNCTION)||(LA314_0 >= SASS_IF && LA314_0 <= SASS_MIXIN)||(LA314_0 >= SASS_RETURN && LA314_0 <= SASS_WHILE)||LA314_0==STRING||(LA314_0 >= TILDE && LA314_0 <= TOPRIGHT_SYM)||LA314_0==URI||LA314_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt314=1;
							}
							} finally {dbg.exitDecision(314);}

							switch (alt314) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:126: cp_mixin_call_args
									{
									dbg.location(1137,126);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7221);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(314);}
							dbg.location(1137,146);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7224); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(315);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1139,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1139,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call7249); if (state.failed) return;dbg.location(1139,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call7251);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1139,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7253);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1139,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt319=2;
					try { dbg.enterSubRule(319);
					try { dbg.enterDecision(319, decisionCanBacktrack[319]);

					try {
						isCyclicDecision = true;
						alt319 = dfa319.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(319);}

					switch (alt319) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1139,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:58: ( ws )?
							int alt316=2;
							try { dbg.enterSubRule(316);
							try { dbg.enterDecision(316, decisionCanBacktrack[316]);

							int LA316_0 = input.LA(1);
							if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
								alt316=1;
							}
							} finally {dbg.exitDecision(316);}

							switch (alt316) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:58: ws
									{
									dbg.location(1139,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7256);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(316);}
							dbg.location(1139,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7259); if (state.failed) return;dbg.location(1139,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:69: ( ws )?
							int alt317=2;
							try { dbg.enterSubRule(317);
							try { dbg.enterDecision(317, decisionCanBacktrack[317]);

							int LA317_0 = input.LA(1);
							if ( (LA317_0==COMMENT||LA317_0==NL||LA317_0==WS) ) {
								alt317=1;
							}
							} finally {dbg.exitDecision(317);}

							switch (alt317) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:69: ws
									{
									dbg.location(1139,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7261);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(317);}
							dbg.location(1139,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:73: ( cp_mixin_call_args )?
							int alt318=2;
							try { dbg.enterSubRule(318);
							try { dbg.enterDecision(318, decisionCanBacktrack[318]);

							int LA318_0 = input.LA(1);
							if ( ((LA318_0 >= ANGLE && LA318_0 <= AT_SIGN)||(LA318_0 >= BOTTOMCENTER_SYM && LA318_0 <= BOTTOMRIGHT_SYM)||LA318_0==CHARSET_SYM||LA318_0==COUNTER_STYLE_SYM||LA318_0==DIMENSION||LA318_0==EMS||LA318_0==EXS||(LA318_0 >= FONT_FACE_SYM && LA318_0 <= FREQ)||LA318_0==GEN||(LA318_0 >= HASH && LA318_0 <= HASH_SYMBOL)||(LA318_0 >= IDENT && LA318_0 <= IMPORT_SYM)||LA318_0==LBRACE||(LA318_0 >= LEFTBOTTOM_SYM && LA318_0 <= LENGTH)||(LA318_0 >= LESS_AND && LA318_0 <= LESS_JS_STRING)||LA318_0==LPAREN||(LA318_0 >= MEDIA_SYM && LA318_0 <= MOZ_DOCUMENT_SYM)||LA318_0==NAMESPACE_SYM||(LA318_0 >= NOT && LA318_0 <= NUMBER)||(LA318_0 >= PAGE_SYM && LA318_0 <= PERCENTAGE_SYMBOL)||LA318_0==PLUS||(LA318_0 >= REM && LA318_0 <= RIGHTTOP_SYM)||(LA318_0 >= SASS_AT_ROOT && LA318_0 <= SASS_DEBUG)||(LA318_0 >= SASS_EACH && LA318_0 <= SASS_ELSE)||LA318_0==SASS_EXTEND||(LA318_0 >= SASS_FOR && LA318_0 <= SASS_FUNCTION)||(LA318_0 >= SASS_IF && LA318_0 <= SASS_MIXIN)||(LA318_0 >= SASS_RETURN && LA318_0 <= SASS_WHILE)||LA318_0==STRING||(LA318_0 >= TILDE && LA318_0 <= TOPRIGHT_SYM)||LA318_0==URI||LA318_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt318=1;
							}
							} finally {dbg.exitDecision(318);}

							switch (alt318) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:73: cp_mixin_call_args
									{
									dbg.location(1139,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7264);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(318);}
							dbg.location(1139,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7267); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(319);}
					dbg.location(1139,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:102: ( ( ws )? cp_mixin_block )?
					int alt321=2;
					try { dbg.enterSubRule(321);
					try { dbg.enterDecision(321, decisionCanBacktrack[321]);

					try {
						isCyclicDecision = true;
						alt321 = dfa321.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(321);}

					switch (alt321) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:103: ( ws )? cp_mixin_block
							{
							dbg.location(1139,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:103: ( ws )?
							int alt320=2;
							try { dbg.enterSubRule(320);
							try { dbg.enterDecision(320, decisionCanBacktrack[320]);

							int LA320_0 = input.LA(1);
							if ( (LA320_0==COMMENT||LA320_0==NL||LA320_0==WS) ) {
								alt320=1;
							}
							} finally {dbg.exitDecision(320);}

							switch (alt320) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:103: ws
									{
									dbg.location(1139,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7272);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(320);}
							dbg.location(1139,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call7275);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(321);}

					}
					break;

			}
			} finally {dbg.exitSubRule(322);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1141, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1143, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1145:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1145,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block7304); if (state.failed) return;dbg.location(1145,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1145:12: ( ws )?
			int alt323=2;
			try { dbg.enterSubRule(323);
			try { dbg.enterDecision(323, decisionCanBacktrack[323]);

			int LA323_0 = input.LA(1);
			if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
				alt323=1;
			}
			} finally {dbg.exitDecision(323);}

			switch (alt323) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1145:12: ws
					{
					dbg.location(1145,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block7306);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(323);}
			dbg.location(1145,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block7309);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1146,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt326=3;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( ((LA326_0 >= AT_IDENT && LA326_0 <= AT_SIGN)||(LA326_0 >= BOTTOMCENTER_SYM && LA326_0 <= BOTTOMRIGHT_SYM)||(LA326_0 >= CHARSET_SYM && LA326_0 <= COLON)||LA326_0==COUNTER_STYLE_SYM||LA326_0==DCOLON||LA326_0==DOT||LA326_0==FONT_FACE_SYM||(LA326_0 >= GEN && LA326_0 <= GREATER)||(LA326_0 >= HASH && LA326_0 <= HASH_SYMBOL)||LA326_0==IMPORT_SYM||(LA326_0 >= LBRACKET && LA326_0 <= LEFTTOP_SYM)||LA326_0==LESS_AND||(LA326_0 >= MEDIA_SYM && LA326_0 <= MOZ_DOCUMENT_SYM)||LA326_0==NAMESPACE_SYM||LA326_0==PAGE_SYM||(LA326_0 >= PIPE && LA326_0 <= PLUS)||(LA326_0 >= RIGHTBOTTOM_SYM && LA326_0 <= RIGHTTOP_SYM)||LA326_0==SASS_AT_ROOT||LA326_0==SASS_DEBUG||(LA326_0 >= SASS_EACH && LA326_0 <= SASS_ELSE)||(LA326_0 >= SASS_ERROR && LA326_0 <= SASS_FUNCTION)||(LA326_0 >= SASS_IF && LA326_0 <= SASS_MIXIN)||(LA326_0 >= SASS_RETURN && LA326_0 <= SEMI)||LA326_0==STAR||LA326_0==TILDE||(LA326_0 >= TOPCENTER_SYM && LA326_0 <= TOPRIGHT_SYM)||LA326_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt326=1;
			}
			else if ( (LA326_0==IDENT) ) {
				int LA326_4 = input.LA(2);
				if ( (true) ) {
					alt326=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred46_Css3())) ) {
					alt326=2;
				}
			}
			else if ( (LA326_0==SASS_CONTENT) ) {
				int LA326_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt326=1;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt326=2;
				}
			}
			else if ( (LA326_0==PERCENTAGE) && (synpred46_Css3())) {
				alt326=2;
			}
			else if ( (LA326_0==RBRACE) ) {
				int LA326_39 = input.LA(2);
				if ( (synpred46_Css3()) ) {
					alt326=2;
				}
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:10: declarations
					{
					dbg.location(1146,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block7320);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1147,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(325);

					loop325:
					while (true) {
						int alt325=2;
						try { dbg.enterDecision(325, decisionCanBacktrack[325]);

						int LA325_0 = input.LA(1);
						if ( (LA325_0==IDENT||LA325_0==PERCENTAGE||LA325_0==SASS_CONTENT) ) {
							alt325=1;
						}

						} finally {dbg.exitDecision(325);}

						switch (alt325) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1147,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7335);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1147,26);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:26: ( ws )?
							int alt324=2;
							try { dbg.enterSubRule(324);
							try { dbg.enterDecision(324, decisionCanBacktrack[324]);

							int LA324_0 = input.LA(1);
							if ( (LA324_0==COMMENT||LA324_0==NL||LA324_0==WS) ) {
								alt324=1;
							}
							} finally {dbg.exitDecision(324);}

							switch (alt324) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:26: ws
									{
									dbg.location(1147,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block7337);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(324);}

							}
							break;

						default :
							break loop325;
						}
					}
					} finally {dbg.exitSubRule(325);}

					}
					break;

			}
			} finally {dbg.exitSubRule(326);}
			dbg.location(1148,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block7349); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1149, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1151:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1151, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:5: IDENT
			{
			dbg.location(1153,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name7370); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1154, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1156, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )?
			{
			dbg.location(1160,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7401);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1160,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(328);

			loop328:
			while (true) {
				int alt328=2;
				try { dbg.enterDecision(328, decisionCanBacktrack[328]);

				int LA328_0 = input.LA(1);
				if ( (LA328_0==COMMA||LA328_0==SEMI) ) {
					alt328=1;
				}

				} finally {dbg.exitDecision(328);}

				switch (alt328) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1160,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1160,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:40: ( ws )?
					int alt327=2;
					try { dbg.enterSubRule(327);
					try { dbg.enterDecision(327, decisionCanBacktrack[327]);

					int LA327_0 = input.LA(1);
					if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
						alt327=1;
					}
					} finally {dbg.exitDecision(327);}

					switch (alt327) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:40: ws
							{
							dbg.location(1160,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7413);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(327);}
					dbg.location(1160,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7416);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop328;
				}
			}
			} finally {dbg.exitSubRule(328);}
			dbg.location(1160,65);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:65: ( CP_DOTS ( ws )? )?
			int alt330=2;
			try { dbg.enterSubRule(330);
			try { dbg.enterDecision(330, decisionCanBacktrack[330]);

			int LA330_0 = input.LA(1);
			if ( (LA330_0==CP_DOTS) ) {
				alt330=1;
			}
			} finally {dbg.exitDecision(330);}

			switch (alt330) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:66: CP_DOTS ( ws )?
					{
					dbg.location(1160,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args7422); if (state.failed) return;dbg.location(1160,74);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:74: ( ws )?
					int alt329=2;
					try { dbg.enterSubRule(329);
					try { dbg.enterDecision(329, decisionCanBacktrack[329]);

					int LA329_0 = input.LA(1);
					if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
						alt329=1;
					}
					} finally {dbg.exitDecision(329);}

					switch (alt329) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:74: ws
							{
							dbg.location(1160,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7424);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(329);}

					}
					break;

			}
			} finally {dbg.exitSubRule(330);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1161, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1163, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1164:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1165,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt333=2;
			try { dbg.enterSubRule(333);
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			try {
				isCyclicDecision = true;
				alt333 = dfa333.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1166,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg7458);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1166,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:21: ( ws )?
					int alt331=2;
					try { dbg.enterSubRule(331);
					try { dbg.enterDecision(331, decisionCanBacktrack[331]);

					int LA331_0 = input.LA(1);
					if ( (LA331_0==COMMENT||LA331_0==NL||LA331_0==WS) ) {
						alt331=1;
					}
					} finally {dbg.exitDecision(331);}

					switch (alt331) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:21: ws
							{
							dbg.location(1166,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7460);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(331);}
					dbg.location(1166,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg7463); if (state.failed) return;dbg.location(1166,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:31: ( ws )?
					int alt332=2;
					try { dbg.enterSubRule(332);
					try { dbg.enterDecision(332, decisionCanBacktrack[332]);

					int LA332_0 = input.LA(1);
					if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
						alt332=1;
					}
					} finally {dbg.exitDecision(332);}

					switch (alt332) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:31: ws
							{
							dbg.location(1166,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7465);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(332);}
					dbg.location(1166,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7468);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:11: cp_expression
					{
					dbg.location(1167,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7480);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(333);}
			dbg.location(1168,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:7: ( ws )?
			int alt334=2;
			try { dbg.enterSubRule(334);
			try { dbg.enterDecision(334, decisionCanBacktrack[334]);

			int LA334_0 = input.LA(1);
			if ( (LA334_0==COMMENT||LA334_0==NL||LA334_0==WS) ) {
				alt334=1;
			}
			} finally {dbg.exitDecision(334);}

			switch (alt334) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:7: ws
					{
					dbg.location(1168,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7488);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(334);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1169, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1172, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt342=2;
			try { dbg.enterDecision(342, decisionCanBacktrack[342]);

			int LA342_0 = input.LA(1);
			if ( (LA342_0==AT_IDENT||(LA342_0 >= BOTTOMCENTER_SYM && LA342_0 <= BOTTOMRIGHT_SYM)||LA342_0==CHARSET_SYM||LA342_0==COUNTER_STYLE_SYM||LA342_0==FONT_FACE_SYM||LA342_0==IDENT||LA342_0==IMPORT_SYM||(LA342_0 >= LEFTBOTTOM_SYM && LA342_0 <= LEFTTOP_SYM)||LA342_0==MEDIA_SYM||LA342_0==MOZ_DOCUMENT_SYM||LA342_0==NAMESPACE_SYM||LA342_0==PAGE_SYM||(LA342_0 >= RIGHTBOTTOM_SYM && LA342_0 <= RIGHTTOP_SYM)||(LA342_0 >= SASS_AT_ROOT && LA342_0 <= SASS_DEBUG)||(LA342_0 >= SASS_EACH && LA342_0 <= SASS_ELSE)||LA342_0==SASS_EXTEND||(LA342_0 >= SASS_FOR && LA342_0 <= SASS_FUNCTION)||(LA342_0 >= SASS_IF && LA342_0 <= SASS_MIXIN)||(LA342_0 >= SASS_RETURN && LA342_0 <= SASS_WHILE)||(LA342_0 >= TOPCENTER_SYM && LA342_0 <= TOPRIGHT_SYM)||LA342_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt342=1;
			}
			else if ( (LA342_0==CP_DOTS||LA342_0==LESS_REST) ) {
				alt342=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 342, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(342);}

			switch (alt342) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1180,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1180,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list7535);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1180,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(336);

					loop336:
					while (true) {
						int alt336=2;
						try { dbg.enterDecision(336, decisionCanBacktrack[336]);

						try {
							isCyclicDecision = true;
							alt336 = dfa336.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(336);}

						switch (alt336) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1180,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1180,33);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:33: ( ws )?
							int alt335=2;
							try { dbg.enterSubRule(335);
							try { dbg.enterDecision(335, decisionCanBacktrack[335]);

							int LA335_0 = input.LA(1);
							if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
								alt335=1;
							}
							} finally {dbg.exitDecision(335);}

							switch (alt335) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:33: ws
									{
									dbg.location(1180,33);
									pushFollow(FOLLOW_ws_in_cp_args_list7549);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(335);}
							dbg.location(1180,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list7552);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop336;
						}
					}
					} finally {dbg.exitSubRule(336);}
					dbg.location(1180,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt338=2;
					try { dbg.enterSubRule(338);
					try { dbg.enterDecision(338, decisionCanBacktrack[338]);

					int LA338_0 = input.LA(1);
					if ( (LA338_0==COMMA||LA338_0==SEMI) ) {
						alt338=1;
					}
					} finally {dbg.exitDecision(338);}

					switch (alt338) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1180,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1180,64);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:64: ( ws )?
							int alt337=2;
							try { dbg.enterSubRule(337);
							try { dbg.enterDecision(337, decisionCanBacktrack[337]);

							int LA337_0 = input.LA(1);
							if ( (LA337_0==COMMENT||LA337_0==NL||LA337_0==WS) ) {
								alt337=1;
							}
							} finally {dbg.exitDecision(337);}

							switch (alt337) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:64: ws
									{
									dbg.location(1180,64);
									pushFollow(FOLLOW_ws_in_cp_args_list7567);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(337);}

							}
							break;

					}
					} finally {dbg.exitSubRule(338);}
					dbg.location(1180,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt340=2;
					try { dbg.enterSubRule(340);
					try { dbg.enterDecision(340, decisionCanBacktrack[340]);

					int LA340_0 = input.LA(1);
					if ( (LA340_0==CP_DOTS||LA340_0==LESS_REST) ) {
						alt340=1;
					}
					} finally {dbg.exitDecision(340);}

					switch (alt340) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1180,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1180,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:95: ( ws )?
							int alt339=2;
							try { dbg.enterSubRule(339);
							try { dbg.enterDecision(339, decisionCanBacktrack[339]);

							int LA339_0 = input.LA(1);
							if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
								alt339=1;
							}
							} finally {dbg.exitDecision(339);}

							switch (alt339) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:95: ws
									{
									dbg.location(1180,95);
									pushFollow(FOLLOW_ws_in_cp_args_list7583);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(339);}

							}
							break;

					}
					} finally {dbg.exitSubRule(340);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1182:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1182,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1182,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1182:27: ( ws )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1182:27: ws
							{
							dbg.location(1182,27);
							pushFollow(FOLLOW_ws_in_cp_args_list7608);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(341);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1183, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1186, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt347=2;
			try { dbg.enterDecision(347, decisionCanBacktrack[347]);

			int LA347_0 = input.LA(1);
			if ( (LA347_0==AT_IDENT||(LA347_0 >= BOTTOMCENTER_SYM && LA347_0 <= BOTTOMRIGHT_SYM)||LA347_0==CHARSET_SYM||LA347_0==COUNTER_STYLE_SYM||LA347_0==FONT_FACE_SYM||LA347_0==IMPORT_SYM||(LA347_0 >= LEFTBOTTOM_SYM && LA347_0 <= LEFTTOP_SYM)||LA347_0==MEDIA_SYM||LA347_0==MOZ_DOCUMENT_SYM||LA347_0==NAMESPACE_SYM||LA347_0==PAGE_SYM||(LA347_0 >= RIGHTBOTTOM_SYM && LA347_0 <= RIGHTTOP_SYM)||(LA347_0 >= SASS_AT_ROOT && LA347_0 <= SASS_DEBUG)||(LA347_0 >= SASS_EACH && LA347_0 <= SASS_ELSE)||LA347_0==SASS_EXTEND||(LA347_0 >= SASS_FOR && LA347_0 <= SASS_FUNCTION)||(LA347_0 >= SASS_IF && LA347_0 <= SASS_MIXIN)||(LA347_0 >= SASS_RETURN && LA347_0 <= SASS_WHILE)||(LA347_0 >= TOPCENTER_SYM && LA347_0 <= TOPRIGHT_SYM)||LA347_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt347=1;
			}
			else if ( (LA347_0==IDENT) ) {
				alt347=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 347, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(347);}

			switch (alt347) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1188,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg7631);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1188,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:17: ( ws )?
					int alt343=2;
					try { dbg.enterSubRule(343);
					try { dbg.enterDecision(343, decisionCanBacktrack[343]);

					int LA343_0 = input.LA(1);
					if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
						alt343=1;
					}
					} finally {dbg.exitDecision(343);}

					switch (alt343) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:17: ws
							{
							dbg.location(1188,17);
							pushFollow(FOLLOW_ws_in_cp_arg7633);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(343);}
					dbg.location(1188,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt346=2;
					try { dbg.enterSubRule(346);
					try { dbg.enterDecision(346, decisionCanBacktrack[346]);

					int LA346_0 = input.LA(1);
					if ( (LA346_0==COLON) ) {
						alt346=1;
					}
					} finally {dbg.exitDecision(346);}

					switch (alt346) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1188,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg7638); if (state.failed) return;dbg.location(1188,29);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:29: ( ws )?
							int alt344=2;
							try { dbg.enterSubRule(344);
							try { dbg.enterDecision(344, decisionCanBacktrack[344]);

							int LA344_0 = input.LA(1);
							if ( (LA344_0==COMMENT||LA344_0==NL||LA344_0==WS) ) {
								alt344=1;
							}
							} finally {dbg.exitDecision(344);}

							switch (alt344) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:29: ws
									{
									dbg.location(1188,29);
									pushFollow(FOLLOW_ws_in_cp_arg7640);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(344);}
							dbg.location(1188,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg7643);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1188,47);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:47: ( ws )?
							int alt345=2;
							try { dbg.enterSubRule(345);
							try { dbg.enterDecision(345, decisionCanBacktrack[345]);

							int LA345_0 = input.LA(1);
							if ( (LA345_0==COMMENT||LA345_0==NL||LA345_0==WS) ) {
								alt345=1;
							}
							} finally {dbg.exitDecision(345);}

							switch (alt345) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:47: ws
									{
									dbg.location(1188,47);
									pushFollow(FOLLOW_ws_in_cp_arg7645);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(345);}

							}
							break;

					}
					} finally {dbg.exitSubRule(346);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1189:7: {...}? IDENT
					{
					dbg.location(1189,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1189,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg7658); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1190, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1194, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1196,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded7681);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1196,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:15: ( ws )?
			int alt348=2;
			try { dbg.enterSubRule(348);
			try { dbg.enterDecision(348, decisionCanBacktrack[348]);

			int LA348_0 = input.LA(1);
			if ( (LA348_0==COMMENT||LA348_0==NL||LA348_0==WS) ) {
				alt348=1;
			}
			} finally {dbg.exitDecision(348);}

			switch (alt348) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:15: ws
					{
					dbg.location(1196,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded7683);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(348);}
			dbg.location(1196,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7686);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1196,34);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(352);

			loop352:
			while (true) {
				int alt352=2;
				try { dbg.enterDecision(352, decisionCanBacktrack[352]);

				try {
					isCyclicDecision = true;
					alt352 = dfa352.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(352);}

				switch (alt352) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1196,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:35: ( ws )?
					int alt349=2;
					try { dbg.enterSubRule(349);
					try { dbg.enterDecision(349, decisionCanBacktrack[349]);

					int LA349_0 = input.LA(1);
					if ( (LA349_0==COMMENT||LA349_0==NL||LA349_0==WS) ) {
						alt349=1;
					}
					} finally {dbg.exitDecision(349);}

					switch (alt349) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:35: ws
							{
							dbg.location(1196,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7689);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(349);}
					dbg.location(1196,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:39: ( COMMA | key_and )
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==COMMA) ) {
						alt350=1;
					}
					else if ( (LA350_0==IDENT) ) {
						alt350=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 350, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:40: COMMA
							{
							dbg.location(1196,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded7693); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:48: key_and
							{
							dbg.location(1196,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded7697);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(350);}
					dbg.location(1196,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:57: ( ws )?
					int alt351=2;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					int LA351_0 = input.LA(1);
					if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
						alt351=1;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:57: ws
							{
							dbg.location(1196,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7700);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}
					dbg.location(1196,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7703);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop352;
				}
			}
			} finally {dbg.exitSubRule(352);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1197, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1201, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1203,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:5: ( NOT ( ws )? )?
			int alt354=2;
			try { dbg.enterSubRule(354);
			try { dbg.enterDecision(354, decisionCanBacktrack[354]);

			int LA354_0 = input.LA(1);
			if ( (LA354_0==NOT) ) {
				alt354=1;
			}
			} finally {dbg.exitDecision(354);}

			switch (alt354) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:6: NOT ( ws )?
					{
					dbg.location(1203,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition7729); if (state.failed) return;dbg.location(1203,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:10: ( ws )?
					int alt353=2;
					try { dbg.enterSubRule(353);
					try { dbg.enterDecision(353, decisionCanBacktrack[353]);

					int LA353_0 = input.LA(1);
					if ( (LA353_0==COMMENT||LA353_0==NL||LA353_0==WS) ) {
						alt353=1;
					}
					} finally {dbg.exitDecision(353);}

					switch (alt353) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:10: ws
							{
							dbg.location(1203,10);
							pushFollow(FOLLOW_ws_in_less_condition7731);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(353);}

					}
					break;

			}
			} finally {dbg.exitSubRule(354);}
			dbg.location(1204,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition7740); if (state.failed) return;dbg.location(1204,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:12: ( ws )?
			int alt355=2;
			try { dbg.enterSubRule(355);
			try { dbg.enterDecision(355, decisionCanBacktrack[355]);

			int LA355_0 = input.LA(1);
			if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
				alt355=1;
			}
			} finally {dbg.exitDecision(355);}

			switch (alt355) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:12: ws
					{
					dbg.location(1204,12);
					pushFollow(FOLLOW_ws_in_less_condition7742);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(355);}
			dbg.location(1205,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1205:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1206,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:14: ( cp_variable | less_function_in_condition )
			int alt356=2;
			try { dbg.enterSubRule(356);
			try { dbg.enterDecision(356, decisionCanBacktrack[356]);

			int LA356_0 = input.LA(1);
			if ( (LA356_0==AT_IDENT||(LA356_0 >= BOTTOMCENTER_SYM && LA356_0 <= BOTTOMRIGHT_SYM)||LA356_0==CHARSET_SYM||LA356_0==COUNTER_STYLE_SYM||LA356_0==FONT_FACE_SYM||LA356_0==IMPORT_SYM||(LA356_0 >= LEFTBOTTOM_SYM && LA356_0 <= LEFTTOP_SYM)||LA356_0==MEDIA_SYM||LA356_0==MOZ_DOCUMENT_SYM||LA356_0==NAMESPACE_SYM||LA356_0==PAGE_SYM||(LA356_0 >= RIGHTBOTTOM_SYM && LA356_0 <= RIGHTTOP_SYM)||(LA356_0 >= SASS_AT_ROOT && LA356_0 <= SASS_DEBUG)||(LA356_0 >= SASS_EACH && LA356_0 <= SASS_ELSE)||LA356_0==SASS_EXTEND||(LA356_0 >= SASS_FOR && LA356_0 <= SASS_FUNCTION)||(LA356_0 >= SASS_IF && LA356_0 <= SASS_MIXIN)||(LA356_0 >= SASS_RETURN && LA356_0 <= SASS_WHILE)||(LA356_0 >= TOPCENTER_SYM && LA356_0 <= TOPRIGHT_SYM)||LA356_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt356=1;
			}
			else if ( (LA356_0==IDENT) ) {
				alt356=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 356, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(356);}

			switch (alt356) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:15: cp_variable
					{
					dbg.location(1206,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition7769);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:29: less_function_in_condition
					{
					dbg.location(1206,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition7773);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(356);}
			dbg.location(1206,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:57: ( ws )?
			int alt357=2;
			try { dbg.enterSubRule(357);
			try { dbg.enterDecision(357, decisionCanBacktrack[357]);

			int LA357_0 = input.LA(1);
			if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
				alt357=1;
			}
			} finally {dbg.exitDecision(357);}

			switch (alt357) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:57: ws
					{
					dbg.location(1206,57);
					pushFollow(FOLLOW_ws_in_less_condition7776);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(357);}
			dbg.location(1206,61);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt359=2;
			try { dbg.enterSubRule(359);
			try { dbg.enterDecision(359, decisionCanBacktrack[359]);

			int LA359_0 = input.LA(1);
			if ( ((LA359_0 >= GREATER && LA359_0 <= GREATER_OR_EQ)||LA359_0==LESS||LA359_0==LESS_OR_EQ||LA359_0==OPEQ) ) {
				alt359=1;
			}
			} finally {dbg.exitDecision(359);}

			switch (alt359) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1206,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition7780);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1206,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:86: ( ws )?
					int alt358=2;
					try { dbg.enterSubRule(358);
					try { dbg.enterDecision(358, decisionCanBacktrack[358]);

					int LA358_0 = input.LA(1);
					if ( (LA358_0==COMMENT||LA358_0==NL||LA358_0==WS) ) {
						alt358=1;
					}
					} finally {dbg.exitDecision(358);}

					switch (alt358) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:86: ws
							{
							dbg.location(1206,86);
							pushFollow(FOLLOW_ws_in_less_condition7782);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(358);}
					dbg.location(1206,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition7785);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(359);}

			}
			dbg.location(1208,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition7803); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1209, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1212:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1212, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1214,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition7825);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1214,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:18: ( ws )?
			int alt360=2;
			try { dbg.enterSubRule(360);
			try { dbg.enterDecision(360, decisionCanBacktrack[360]);

			int LA360_0 = input.LA(1);
			if ( (LA360_0==COMMENT||LA360_0==NL||LA360_0==WS) ) {
				alt360=1;
			}
			} finally {dbg.exitDecision(360);}

			switch (alt360) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:18: ws
					{
					dbg.location(1214,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7827);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(360);}
			dbg.location(1214,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition7830); if (state.failed) return;dbg.location(1214,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:29: ( ws )?
			int alt361=2;
			try { dbg.enterSubRule(361);
			try { dbg.enterDecision(361, decisionCanBacktrack[361]);

			int LA361_0 = input.LA(1);
			if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
				alt361=1;
			}
			} finally {dbg.exitDecision(361);}

			switch (alt361) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:29: ws
					{
					dbg.location(1214,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7832);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(361);}
			dbg.location(1214,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition7835);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1214,45);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:45: ( ws )?
			int alt362=2;
			try { dbg.enterSubRule(362);
			try { dbg.enterDecision(362, decisionCanBacktrack[362]);

			int LA362_0 = input.LA(1);
			if ( (LA362_0==COMMENT||LA362_0==NL||LA362_0==WS) ) {
				alt362=1;
			}
			} finally {dbg.exitDecision(362);}

			switch (alt362) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:45: ws
					{
					dbg.location(1214,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7837);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(362);}
			dbg.location(1214,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition7840); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1215, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1218:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1218, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1219:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:5: IDENT
			{
			dbg.location(1220,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name7862); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1221, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1223:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1223, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1224:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1224,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1226, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1228:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1228, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1228:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1229,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:5: ( IDENT | MINUS )?
			int alt363=2;
			try { dbg.enterSubRule(363);
			try { dbg.enterDecision(363, decisionCanBacktrack[363]);

			int LA363_0 = input.LA(1);
			if ( (LA363_0==IDENT||LA363_0==MINUS) ) {
				alt363=1;
			}
			} finally {dbg.exitDecision(363);}

			switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1229,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(363);}
			dbg.location(1229,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7925);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1229,50);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt365=3;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA365_1 = input.LA(2);
					if ( (LA365_1==AT_SIGN) ) {
						alt365=1;
					}
					else if ( ((LA365_1 >= COLON && LA365_1 <= COMMENT)||(LA365_1 >= DCOLON && LA365_1 <= DOT)||LA365_1==GREATER||(LA365_1 >= HASH && LA365_1 <= HASH_SYMBOL)||LA365_1==IDENT||(LA365_1 >= LBRACE && LA365_1 <= LBRACKET)||LA365_1==LENGTH||LA365_1==LESS_AND||LA365_1==MINUS||LA365_1==NL||LA365_1==PLUS||LA365_1==RBRACE||LA365_1==RPAREN||LA365_1==SASS_EXTEND_ONLY_SELECTOR||LA365_1==SEMI||LA365_1==TILDE||LA365_1==WS) ) {
						alt365=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt365=1;
					}
					break;
				case DIMENSION:
				case LENGTH:
					{
					alt365=2;
					}
					break;
			}
			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:51: less_selector_interpolation_exp
					{
					dbg.location(1229,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7928);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1229,85);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt364=0;
					try { dbg.enterSubRule(364);

					loop364:
					while (true) {
						int alt364=2;
						try { dbg.enterDecision(364, decisionCanBacktrack[364]);

						int LA364_0 = input.LA(1);
						if ( (LA364_0==DIMENSION||LA364_0==IDENT||LA364_0==LENGTH||LA364_0==MINUS) ) {
							alt364=1;
						}

						} finally {dbg.exitDecision(364);}

						switch (alt364) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1229,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt364 >= 1 ) break loop364;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(364, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt364++;
					}
					} finally {dbg.exitSubRule(364);}

					}
					break;

			}
			} finally {dbg.exitSubRule(365);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1230, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1232, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1234,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation7971); if (state.failed) return;dbg.location(1234,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation7973); if (state.failed) return;dbg.location(1234,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:20: ( ws )?
			int alt366=2;
			try { dbg.enterSubRule(366);
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			int LA366_0 = input.LA(1);
			if ( (LA366_0==COMMENT||LA366_0==NL||LA366_0==WS) ) {
				alt366=1;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:20: ws
					{
					dbg.location(1234,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7975);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1234,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation7978); if (state.failed) return;dbg.location(1234,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:30: ( ws )?
			int alt367=2;
			try { dbg.enterSubRule(367);
			try { dbg.enterDecision(367, decisionCanBacktrack[367]);

			int LA367_0 = input.LA(1);
			if ( (LA367_0==COMMENT||LA367_0==NL||LA367_0==WS) ) {
				alt367=1;
			}
			} finally {dbg.exitDecision(367);}

			switch (alt367) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:30: ws
					{
					dbg.location(1234,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7980);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(367);}
			dbg.location(1234,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation7983); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1235, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1238, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1239,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:5: ( IDENT | MINUS )?
			int alt368=2;
			try { dbg.enterSubRule(368);
			try { dbg.enterDecision(368, decisionCanBacktrack[368]);

			int LA368_0 = input.LA(1);
			if ( (LA368_0==IDENT||LA368_0==MINUS) ) {
				alt368=1;
			}
			} finally {dbg.exitDecision(368);}

			switch (alt368) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1239,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(368);}
			dbg.location(1239,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp8010);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1239,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt370=3;
			try { dbg.enterSubRule(370);
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA370_1 = input.LA(2);
					if ( (LA370_1==HASH_SYMBOL) ) {
						int LA370_5 = input.LA(3);
						if ( (LA370_5==LBRACE) ) {
							alt370=1;
						}
						else if ( (LA370_5==AT_SIGN||LA370_5==IDENT||LA370_5==MINUS||LA370_5==NAME) ) {
							alt370=2;
						}
					}
					else if ( ((LA370_1 >= COLON && LA370_1 <= COMMENT)||(LA370_1 >= DCOLON && LA370_1 <= DOT)||LA370_1==GREATER||LA370_1==HASH||LA370_1==IDENT||(LA370_1 >= LBRACE && LA370_1 <= LBRACKET)||LA370_1==LENGTH||LA370_1==LESS_AND||LA370_1==MINUS||LA370_1==NL||LA370_1==PLUS||LA370_1==RBRACE||LA370_1==RPAREN||LA370_1==SASS_EXTEND_ONLY_SELECTOR||LA370_1==SEMI||LA370_1==TILDE||LA370_1==WS) ) {
						alt370=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA370_2 = input.LA(2);
					if ( (LA370_2==LBRACE) ) {
						alt370=1;
					}
					}
					break;
				case DIMENSION:
				case LENGTH:
					{
					alt370=2;
					}
					break;
			}
			} finally {dbg.exitDecision(370);}

			switch (alt370) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:57: sass_selector_interpolation_exp
					{
					dbg.location(1239,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp8013);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1239,91);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt369=0;
					try { dbg.enterSubRule(369);

					loop369:
					while (true) {
						int alt369=2;
						try { dbg.enterDecision(369, decisionCanBacktrack[369]);

						int LA369_0 = input.LA(1);
						if ( (LA369_0==DIMENSION||LA369_0==IDENT||LA369_0==LENGTH||LA369_0==MINUS) ) {
							alt369=1;
						}

						} finally {dbg.exitDecision(369);}

						switch (alt369) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1239,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt369 >= 1 ) break loop369;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(369, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt369++;
					}
					} finally {dbg.exitSubRule(369);}

					}
					break;

			}
			} finally {dbg.exitSubRule(370);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1240, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1242, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1243:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1244,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var8060); if (state.failed) return;dbg.location(1244,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var8062); if (state.failed) return;dbg.location(1244,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:28: ( WS )?
			int alt371=2;
			try { dbg.enterSubRule(371);
			try { dbg.enterDecision(371, decisionCanBacktrack[371]);

			int LA371_0 = input.LA(1);
			if ( (LA371_0==WS) ) {
				alt371=1;
			}
			} finally {dbg.exitDecision(371);}

			switch (alt371) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:28: WS
					{
					dbg.location(1244,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var8064); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(371);}
			dbg.location(1244,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var8067);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1244,46);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:46: ( WS )?
			int alt372=2;
			try { dbg.enterSubRule(372);
			try { dbg.enterDecision(372, decisionCanBacktrack[372]);

			int LA372_0 = input.LA(1);
			if ( (LA372_0==WS) ) {
				alt372=1;
			}
			} finally {dbg.exitDecision(372);}

			switch (alt372) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:46: WS
					{
					dbg.location(1244,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var8069); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(372);}
			dbg.location(1244,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var8072); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1245, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1265:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1265, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1267,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties8112);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1267,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:14: ( ws )?
			int alt373=2;
			try { dbg.enterSubRule(373);
			try { dbg.enterDecision(373, decisionCanBacktrack[373]);

			int LA373_0 = input.LA(1);
			if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
				alt373=1;
			}
			} finally {dbg.exitDecision(373);}

			switch (alt373) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:14: ws
					{
					dbg.location(1267,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8114);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(373);}
			dbg.location(1267,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties8117); if (state.failed) return;dbg.location(1267,24);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:24: ( ws )?
			int alt374=2;
			try { dbg.enterSubRule(374);
			try { dbg.enterDecision(374, decisionCanBacktrack[374]);

			int LA374_0 = input.LA(1);
			if ( (LA374_0==COMMENT||LA374_0==NL||LA374_0==WS) ) {
				alt374=1;
			}
			} finally {dbg.exitDecision(374);}

			switch (alt374) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:24: ws
					{
					dbg.location(1267,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8119);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(374);}
			dbg.location(1267,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:28: ( propertyValue ( ws )? )?
			int alt376=2;
			try { dbg.enterSubRule(376);
			try { dbg.enterDecision(376, decisionCanBacktrack[376]);

			int LA376_0 = input.LA(1);
			if ( ((LA376_0 >= ANGLE && LA376_0 <= AT_SIGN)||(LA376_0 >= BOTTOMCENTER_SYM && LA376_0 <= BOTTOMRIGHT_SYM)||LA376_0==CHARSET_SYM||LA376_0==COUNTER_STYLE_SYM||LA376_0==DIMENSION||LA376_0==EMS||LA376_0==EXS||(LA376_0 >= FONT_FACE_SYM && LA376_0 <= FREQ)||LA376_0==GEN||(LA376_0 >= HASH && LA376_0 <= HASH_SYMBOL)||LA376_0==IDENT||LA376_0==IMPORT_SYM||(LA376_0 >= LEFTBOTTOM_SYM && LA376_0 <= LENGTH)||(LA376_0 >= LESS_AND && LA376_0 <= LESS_JS_STRING)||(LA376_0 >= MEDIA_SYM && LA376_0 <= MOZ_DOCUMENT_SYM)||LA376_0==NAMESPACE_SYM||LA376_0==NUMBER||(LA376_0 >= PAGE_SYM && LA376_0 <= PERCENTAGE_SYMBOL)||LA376_0==PLUS||(LA376_0 >= REM && LA376_0 <= RIGHTTOP_SYM)||(LA376_0 >= SASS_AT_ROOT && LA376_0 <= SASS_DEBUG)||(LA376_0 >= SASS_EACH && LA376_0 <= SASS_ELSE)||LA376_0==SASS_EXTEND||(LA376_0 >= SASS_FOR && LA376_0 <= SASS_FUNCTION)||(LA376_0 >= SASS_IF && LA376_0 <= SASS_MIXIN)||(LA376_0 >= SASS_RETURN && LA376_0 <= SASS_WHILE)||LA376_0==STRING||(LA376_0 >= TILDE && LA376_0 <= TOPRIGHT_SYM)||LA376_0==URI||LA376_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt376=1;
			}
			} finally {dbg.exitDecision(376);}

			switch (alt376) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:29: propertyValue ( ws )?
					{
					dbg.location(1267,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties8123);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1267,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:43: ( ws )?
					int alt375=2;
					try { dbg.enterSubRule(375);
					try { dbg.enterDecision(375, decisionCanBacktrack[375]);

					int LA375_0 = input.LA(1);
					if ( (LA375_0==COMMENT||LA375_0==NL||LA375_0==WS) ) {
						alt375=1;
					}
					} finally {dbg.exitDecision(375);}

					switch (alt375) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:43: ws
							{
							dbg.location(1267,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties8125);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(375);}

					}
					break;

			}
			} finally {dbg.exitSubRule(376);}
			dbg.location(1267,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties8130); if (state.failed) return;dbg.location(1267,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:56: ( ws )?
			int alt377=2;
			try { dbg.enterSubRule(377);
			try { dbg.enterDecision(377, decisionCanBacktrack[377]);

			int LA377_0 = input.LA(1);
			if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
				alt377=1;
			}
			} finally {dbg.exitDecision(377);}

			switch (alt377) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:56: ws
					{
					dbg.location(1267,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8132);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(377);}
			dbg.location(1267,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties8135);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1267,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:73: ( declarations )?
			int alt378=2;
			try { dbg.enterSubRule(378);
			try { dbg.enterDecision(378, decisionCanBacktrack[378]);

			int LA378_0 = input.LA(1);
			if ( ((LA378_0 >= AT_IDENT && LA378_0 <= AT_SIGN)||(LA378_0 >= BOTTOMCENTER_SYM && LA378_0 <= BOTTOMRIGHT_SYM)||(LA378_0 >= CHARSET_SYM && LA378_0 <= COLON)||LA378_0==COUNTER_STYLE_SYM||LA378_0==DCOLON||LA378_0==DOT||LA378_0==FONT_FACE_SYM||(LA378_0 >= GEN && LA378_0 <= GREATER)||(LA378_0 >= HASH && LA378_0 <= HASH_SYMBOL)||LA378_0==IDENT||LA378_0==IMPORT_SYM||(LA378_0 >= LBRACKET && LA378_0 <= LEFTTOP_SYM)||LA378_0==LESS_AND||(LA378_0 >= MEDIA_SYM && LA378_0 <= MOZ_DOCUMENT_SYM)||LA378_0==NAMESPACE_SYM||LA378_0==PAGE_SYM||(LA378_0 >= PIPE && LA378_0 <= PLUS)||(LA378_0 >= RIGHTBOTTOM_SYM && LA378_0 <= RIGHTTOP_SYM)||(LA378_0 >= SASS_AT_ROOT && LA378_0 <= SASS_DEBUG)||(LA378_0 >= SASS_EACH && LA378_0 <= SASS_ELSE)||(LA378_0 >= SASS_ERROR && LA378_0 <= SASS_FUNCTION)||(LA378_0 >= SASS_IF && LA378_0 <= SASS_MIXIN)||(LA378_0 >= SASS_RETURN && LA378_0 <= SEMI)||LA378_0==STAR||LA378_0==TILDE||(LA378_0 >= TOPCENTER_SYM && LA378_0 <= TOPRIGHT_SYM)||LA378_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt378=1;
			}
			} finally {dbg.exitDecision(378);}

			switch (alt378) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:73: declarations
					{
					dbg.location(1267,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties8137);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(378);}
			dbg.location(1267,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties8140); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1268, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1270:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1270, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1271:5: ( SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:5: SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )?
			{
			dbg.location(1272,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend8161); if (state.failed) return;dbg.location(1272,17);
			pushFollow(FOLLOW_ws_in_sass_extend8163);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend8165);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1272,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:43: ( ws SASS_OPTIONAL )?
			int alt379=2;
			try { dbg.enterSubRule(379);
			try { dbg.enterDecision(379, decisionCanBacktrack[379]);

			try {
				isCyclicDecision = true;
				alt379 = dfa379.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(379);}

			switch (alt379) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:44: ws SASS_OPTIONAL
					{
					dbg.location(1272,44);
					pushFollow(FOLLOW_ws_in_sass_extend8168);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1272,47);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend8170); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(379);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1273, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1275:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1275, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1276:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1277,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8193); if (state.failed) return;dbg.location(1277,31);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:31: ( sass_selector_interpolation_exp )?
			int alt380=2;
			try { dbg.enterSubRule(380);
			try { dbg.enterDecision(380, decisionCanBacktrack[380]);

			int LA380_0 = input.LA(1);
			if ( (LA380_0==IDENT||LA380_0==MINUS) ) {
				alt380=1;
			}
			else if ( (LA380_0==HASH_SYMBOL) ) {
				int LA380_2 = input.LA(2);
				if ( (LA380_2==LBRACE) ) {
					alt380=1;
				}
			}
			} finally {dbg.exitDecision(380);}

			switch (alt380) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:31: sass_selector_interpolation_exp
					{
					dbg.location(1277,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector8195);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(380);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1278, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1280:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1280, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1281:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1282,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1282,32);
			pushFollow(FOLLOW_ws_in_sass_debug8227);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1282,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug8229);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1283, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1285:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1285, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:5: SASS_ERROR ws STRING
			{
			dbg.location(1287,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error8250); if (state.failed) return;dbg.location(1287,16);
			pushFollow(FOLLOW_ws_in_sass_error8252);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1287,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error8254); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1288, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1290:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1290, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt381=4;
			try { dbg.enterDecision(381, decisionCanBacktrack[381]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt381=1;
				}
				break;
			case SASS_FOR:
				{
				alt381=2;
				}
				break;
			case SASS_EACH:
				{
				alt381=3;
				}
				break;
			case SASS_WHILE:
				{
				alt381=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 381, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(381);}

			switch (alt381) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:5: sass_if
					{
					dbg.location(1292,5);
					pushFollow(FOLLOW_sass_if_in_sass_control8275);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:15: sass_for
					{
					dbg.location(1292,15);
					pushFollow(FOLLOW_sass_for_in_sass_control8279);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:26: sass_each
					{
					dbg.location(1292,26);
					pushFollow(FOLLOW_sass_each_in_sass_control8283);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:38: sass_while
					{
					dbg.location(1292,38);
					pushFollow(FOLLOW_sass_while_in_sass_control8287);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1293, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1295:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1295, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1296:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1297,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if8308); if (state.failed) return;dbg.location(1297,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:13: ( ws )?
			int alt382=2;
			try { dbg.enterSubRule(382);
			try { dbg.enterDecision(382, decisionCanBacktrack[382]);

			int LA382_0 = input.LA(1);
			if ( (LA382_0==COMMENT||LA382_0==NL||LA382_0==WS) ) {
				alt382=1;
			}
			} finally {dbg.exitDecision(382);}

			switch (alt382) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:13: ws
					{
					dbg.location(1297,13);
					pushFollow(FOLLOW_ws_in_sass_if8310);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(382);}
			dbg.location(1297,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if8313);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1297,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:41: ( ws )?
			int alt383=2;
			try { dbg.enterSubRule(383);
			try { dbg.enterDecision(383, decisionCanBacktrack[383]);

			int LA383_0 = input.LA(1);
			if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
				alt383=1;
			}
			} finally {dbg.exitDecision(383);}

			switch (alt383) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:41: ws
					{
					dbg.location(1297,41);
					pushFollow(FOLLOW_ws_in_sass_if8315);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(383);}
			dbg.location(1297,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if8318);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1297,64);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:64: ( ( ws )? sass_else )?
			int alt385=2;
			try { dbg.enterSubRule(385);
			try { dbg.enterDecision(385, decisionCanBacktrack[385]);

			try {
				isCyclicDecision = true;
				alt385 = dfa385.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(385);}

			switch (alt385) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:65: ( ws )? sass_else
					{
					dbg.location(1297,65);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:65: ( ws )?
					int alt384=2;
					try { dbg.enterSubRule(384);
					try { dbg.enterDecision(384, decisionCanBacktrack[384]);

					int LA384_0 = input.LA(1);
					if ( (LA384_0==COMMENT||LA384_0==NL||LA384_0==WS) ) {
						alt384=1;
					}
					} finally {dbg.exitDecision(384);}

					switch (alt384) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:65: ws
							{
							dbg.location(1297,65);
							pushFollow(FOLLOW_ws_in_sass_if8321);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(384);}
					dbg.location(1297,69);
					pushFollow(FOLLOW_sass_else_in_sass_if8324);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(385);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1298, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1300:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1300, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt393=2;
			try { dbg.enterDecision(393, decisionCanBacktrack[393]);

			try {
				isCyclicDecision = true;
				alt393 = dfa393.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(393);}

			switch (alt393) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1302,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8347); if (state.failed) return;dbg.location(1302,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:15: ( ws )?
					int alt386=2;
					try { dbg.enterSubRule(386);
					try { dbg.enterDecision(386, decisionCanBacktrack[386]);

					int LA386_0 = input.LA(1);
					if ( (LA386_0==COMMENT||LA386_0==NL||LA386_0==WS) ) {
						alt386=1;
					}
					} finally {dbg.exitDecision(386);}

					switch (alt386) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:15: ws
							{
							dbg.location(1302,15);
							pushFollow(FOLLOW_ws_in_sass_else8349);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(386);}
					dbg.location(1302,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8352);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1304,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt388=2;
					try { dbg.enterSubRule(388);
					try { dbg.enterDecision(388, decisionCanBacktrack[388]);

					int LA388_0 = input.LA(1);
					if ( (LA388_0==SASS_ELSE) ) {
						alt388=1;
					}
					else if ( (LA388_0==SASS_ELSEIF) ) {
						alt388=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 388, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(388);}

					switch (alt388) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1304,6);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1304,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8366); if (state.failed) return;dbg.location(1304,17);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:17: ( ws )?
							int alt387=2;
							try { dbg.enterSubRule(387);
							try { dbg.enterDecision(387, decisionCanBacktrack[387]);

							int LA387_0 = input.LA(1);
							if ( (LA387_0==COMMENT||LA387_0==NL||LA387_0==WS) ) {
								alt387=1;
							}
							} finally {dbg.exitDecision(387);}

							switch (alt387) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:17: ws
									{
									dbg.location(1304,17);
									pushFollow(FOLLOW_ws_in_sass_else8368);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(387);}
							dbg.location(1304,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1304,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else8373); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:64: SASS_ELSEIF
							{
							dbg.location(1304,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else8380); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(388);}
					dbg.location(1304,77);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:77: ( ws )?
					int alt389=2;
					try { dbg.enterSubRule(389);
					try { dbg.enterDecision(389, decisionCanBacktrack[389]);

					int LA389_0 = input.LA(1);
					if ( (LA389_0==COMMENT||LA389_0==NL||LA389_0==WS) ) {
						alt389=1;
					}
					} finally {dbg.exitDecision(389);}

					switch (alt389) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:77: ws
							{
							dbg.location(1304,77);
							pushFollow(FOLLOW_ws_in_sass_else8383);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(389);}
					dbg.location(1304,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else8386);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1304,105);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:105: ( ws )?
					int alt390=2;
					try { dbg.enterSubRule(390);
					try { dbg.enterDecision(390, decisionCanBacktrack[390]);

					int LA390_0 = input.LA(1);
					if ( (LA390_0==COMMENT||LA390_0==NL||LA390_0==WS) ) {
						alt390=1;
					}
					} finally {dbg.exitDecision(390);}

					switch (alt390) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:105: ws
							{
							dbg.location(1304,105);
							pushFollow(FOLLOW_ws_in_sass_else8388);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(390);}
					dbg.location(1304,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8391);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1304,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:128: ( ( ws )? sass_else )?
					int alt392=2;
					try { dbg.enterSubRule(392);
					try { dbg.enterDecision(392, decisionCanBacktrack[392]);

					try {
						isCyclicDecision = true;
						alt392 = dfa392.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(392);}

					switch (alt392) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:129: ( ws )? sass_else
							{
							dbg.location(1304,129);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:129: ( ws )?
							int alt391=2;
							try { dbg.enterSubRule(391);
							try { dbg.enterDecision(391, decisionCanBacktrack[391]);

							int LA391_0 = input.LA(1);
							if ( (LA391_0==COMMENT||LA391_0==NL||LA391_0==WS) ) {
								alt391=1;
							}
							} finally {dbg.exitDecision(391);}

							switch (alt391) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:129: ws
									{
									dbg.location(1304,129);
									pushFollow(FOLLOW_ws_in_sass_else8394);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(391);}
							dbg.location(1304,133);
							pushFollow(FOLLOW_sass_else_in_sass_else8397);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(392);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1305, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1307, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1308:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:5: cp_expression
			{
			dbg.location(1309,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression8420);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1310, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1312:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1312, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1313:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1314,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for8441); if (state.failed) return;dbg.location(1314,14);
			pushFollow(FOLLOW_ws_in_sass_for8443);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for8445);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,29);
			pushFollow(FOLLOW_ws_in_sass_for8447);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1314,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8451); if (state.failed) return;dbg.location(1314,74);
			pushFollow(FOLLOW_ws_in_sass_for8455);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8457);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,96);
			pushFollow(FOLLOW_ws_in_sass_for8459);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1314,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8463); if (state.failed) return;dbg.location(1314,173);
			pushFollow(FOLLOW_ws_in_sass_for8467);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8469);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1314,195);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:195: ( ws )?
			int alt394=2;
			try { dbg.enterSubRule(394);
			try { dbg.enterDecision(394, decisionCanBacktrack[394]);

			int LA394_0 = input.LA(1);
			if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
				alt394=1;
			}
			} finally {dbg.exitDecision(394);}

			switch (alt394) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:195: ws
					{
					dbg.location(1314,195);
					pushFollow(FOLLOW_ws_in_sass_for8471);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(394);}
			dbg.location(1314,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for8474);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1315, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1317:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1317, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1318:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block
			{
			dbg.location(1319,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each8495); if (state.failed) return;dbg.location(1319,15);
			pushFollow(FOLLOW_ws_in_sass_each8497);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1319,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each8499);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1319,38);
			pushFollow(FOLLOW_ws_in_sass_each8501);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1319,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1319,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each8505); if (state.failed) return;dbg.location(1319,79);
			pushFollow(FOLLOW_ws_in_sass_each8509);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1319,82);
			pushFollow(FOLLOW_cp_expression_list_in_sass_each8511);
			cp_expression_list();
			state._fsp--;
			if (state.failed) return;dbg.location(1319,101);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:101: ( ws )?
			int alt395=2;
			try { dbg.enterSubRule(395);
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			int LA395_0 = input.LA(1);
			if ( (LA395_0==COMMENT||LA395_0==NL||LA395_0==WS) ) {
				alt395=1;
			}
			} finally {dbg.exitDecision(395);}

			switch (alt395) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:101: ws
					{
					dbg.location(1319,101);
					pushFollow(FOLLOW_ws_in_sass_each8513);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(395);}
			dbg.location(1319,105);
			pushFollow(FOLLOW_sass_control_block_in_sass_each8516);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1320, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1322:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1322, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1323:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1324,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables8537);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1324,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(398);

			loop398:
			while (true) {
				int alt398=2;
				try { dbg.enterDecision(398, decisionCanBacktrack[398]);

				try {
					isCyclicDecision = true;
					alt398 = dfa398.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(398);}

				switch (alt398) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1324,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:33: ( ws )?
					int alt396=2;
					try { dbg.enterSubRule(396);
					try { dbg.enterDecision(396, decisionCanBacktrack[396]);

					int LA396_0 = input.LA(1);
					if ( (LA396_0==COMMENT||LA396_0==NL||LA396_0==WS) ) {
						alt396=1;
					}
					} finally {dbg.exitDecision(396);}

					switch (alt396) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:33: ws
							{
							dbg.location(1324,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables8549);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(396);}
					dbg.location(1324,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables8552); if (state.failed) return;dbg.location(1324,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:43: ( ws )?
					int alt397=2;
					try { dbg.enterSubRule(397);
					try { dbg.enterDecision(397, decisionCanBacktrack[397]);

					int LA397_0 = input.LA(1);
					if ( (LA397_0==COMMENT||LA397_0==NL||LA397_0==WS) ) {
						alt397=1;
					}
					} finally {dbg.exitDecision(397);}

					switch (alt397) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:43: ws
							{
							dbg.location(1324,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables8554);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(397);}
					dbg.location(1324,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables8557);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop398;
				}
			}
			} finally {dbg.exitSubRule(398);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1325, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1327:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1327, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1329,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while8582); if (state.failed) return;dbg.location(1329,16);
			pushFollow(FOLLOW_ws_in_sass_while8584);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1329,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while8586);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1329,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:43: ( ws )?
			int alt399=2;
			try { dbg.enterSubRule(399);
			try { dbg.enterDecision(399, decisionCanBacktrack[399]);

			int LA399_0 = input.LA(1);
			if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {
				alt399=1;
			}
			} finally {dbg.exitDecision(399);}

			switch (alt399) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:43: ws
					{
					dbg.location(1329,43);
					pushFollow(FOLLOW_ws_in_sass_while8588);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(399);}
			dbg.location(1329,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while8591);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1330, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1332:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1332, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1334,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block8612); if (state.failed) return;dbg.location(1334,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:12: ( ws )?
			int alt400=2;
			try { dbg.enterSubRule(400);
			try { dbg.enterDecision(400, decisionCanBacktrack[400]);

			int LA400_0 = input.LA(1);
			if ( (LA400_0==COMMENT||LA400_0==NL||LA400_0==WS) ) {
				alt400=1;
			}
			} finally {dbg.exitDecision(400);}

			switch (alt400) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:12: ws
					{
					dbg.location(1334,12);
					pushFollow(FOLLOW_ws_in_sass_control_block8614);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(400);}
			dbg.location(1334,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:16: ( declarations )?
			int alt401=2;
			try { dbg.enterSubRule(401);
			try { dbg.enterDecision(401, decisionCanBacktrack[401]);

			int LA401_0 = input.LA(1);
			if ( ((LA401_0 >= AT_IDENT && LA401_0 <= AT_SIGN)||(LA401_0 >= BOTTOMCENTER_SYM && LA401_0 <= BOTTOMRIGHT_SYM)||(LA401_0 >= CHARSET_SYM && LA401_0 <= COLON)||LA401_0==COUNTER_STYLE_SYM||LA401_0==DCOLON||LA401_0==DOT||LA401_0==FONT_FACE_SYM||(LA401_0 >= GEN && LA401_0 <= GREATER)||(LA401_0 >= HASH && LA401_0 <= HASH_SYMBOL)||LA401_0==IDENT||LA401_0==IMPORT_SYM||(LA401_0 >= LBRACKET && LA401_0 <= LEFTTOP_SYM)||LA401_0==LESS_AND||(LA401_0 >= MEDIA_SYM && LA401_0 <= MOZ_DOCUMENT_SYM)||LA401_0==NAMESPACE_SYM||LA401_0==PAGE_SYM||(LA401_0 >= PIPE && LA401_0 <= PLUS)||(LA401_0 >= RIGHTBOTTOM_SYM && LA401_0 <= RIGHTTOP_SYM)||(LA401_0 >= SASS_AT_ROOT && LA401_0 <= SASS_DEBUG)||(LA401_0 >= SASS_EACH && LA401_0 <= SASS_ELSE)||(LA401_0 >= SASS_ERROR && LA401_0 <= SASS_FUNCTION)||(LA401_0 >= SASS_IF && LA401_0 <= SASS_MIXIN)||(LA401_0 >= SASS_RETURN && LA401_0 <= SEMI)||LA401_0==STAR||LA401_0==TILDE||(LA401_0 >= TOPCENTER_SYM && LA401_0 <= TOPRIGHT_SYM)||LA401_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt401=1;
			}
			} finally {dbg.exitDecision(401);}

			switch (alt401) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:16: declarations
					{
					dbg.location(1334,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block8617);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(401);}
			dbg.location(1334,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block8620); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1335, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1337:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1337, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1338:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1343,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration8662); if (state.failed) return;dbg.location(1343,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration8664);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1343,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration8666);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1343,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:41: ( ws )?
			int alt402=2;
			try { dbg.enterSubRule(402);
			try { dbg.enterDecision(402, decisionCanBacktrack[402]);

			int LA402_0 = input.LA(1);
			if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
				alt402=1;
			}
			} finally {dbg.exitDecision(402);}

			switch (alt402) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:41: ws
					{
					dbg.location(1343,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8668);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(402);}
			dbg.location(1343,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration8671); if (state.failed) return;dbg.location(1343,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:52: ( ws )?
			int alt403=2;
			try { dbg.enterSubRule(403);
			try { dbg.enterDecision(403, decisionCanBacktrack[403]);

			int LA403_0 = input.LA(1);
			if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
				alt403=1;
			}
			} finally {dbg.exitDecision(403);}

			switch (alt403) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:52: ws
					{
					dbg.location(1343,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8673);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(403);}
			dbg.location(1343,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:56: ( cp_args_list )?
			int alt404=2;
			try { dbg.enterSubRule(404);
			try { dbg.enterDecision(404, decisionCanBacktrack[404]);

			int LA404_0 = input.LA(1);
			if ( (LA404_0==AT_IDENT||(LA404_0 >= BOTTOMCENTER_SYM && LA404_0 <= BOTTOMRIGHT_SYM)||LA404_0==CHARSET_SYM||(LA404_0 >= COUNTER_STYLE_SYM && LA404_0 <= CP_DOTS)||LA404_0==FONT_FACE_SYM||LA404_0==IDENT||LA404_0==IMPORT_SYM||(LA404_0 >= LEFTBOTTOM_SYM && LA404_0 <= LEFTTOP_SYM)||LA404_0==LESS_REST||LA404_0==MEDIA_SYM||LA404_0==MOZ_DOCUMENT_SYM||LA404_0==NAMESPACE_SYM||LA404_0==PAGE_SYM||(LA404_0 >= RIGHTBOTTOM_SYM && LA404_0 <= RIGHTTOP_SYM)||(LA404_0 >= SASS_AT_ROOT && LA404_0 <= SASS_DEBUG)||(LA404_0 >= SASS_EACH && LA404_0 <= SASS_ELSE)||LA404_0==SASS_EXTEND||(LA404_0 >= SASS_FOR && LA404_0 <= SASS_FUNCTION)||(LA404_0 >= SASS_IF && LA404_0 <= SASS_MIXIN)||(LA404_0 >= SASS_RETURN && LA404_0 <= SASS_WHILE)||(LA404_0 >= TOPCENTER_SYM && LA404_0 <= TOPRIGHT_SYM)||LA404_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt404=1;
			}
			} finally {dbg.exitDecision(404);}

			switch (alt404) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:56: cp_args_list
					{
					dbg.location(1343,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration8676);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(404);}
			dbg.location(1343,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration8679); if (state.failed) return;dbg.location(1343,77);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:77: ( ws )?
			int alt405=2;
			try { dbg.enterSubRule(405);
			try { dbg.enterDecision(405, decisionCanBacktrack[405]);

			int LA405_0 = input.LA(1);
			if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {
				alt405=1;
			}
			} finally {dbg.exitDecision(405);}

			switch (alt405) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:77: ws
					{
					dbg.location(1343,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8681);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(405);}
			dbg.location(1343,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration8684); if (state.failed) return;dbg.location(1343,88);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:88: ( ws )?
			int alt406=2;
			try { dbg.enterSubRule(406);
			try { dbg.enterDecision(406, decisionCanBacktrack[406]);

			int LA406_0 = input.LA(1);
			if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
				alt406=1;
			}
			} finally {dbg.exitDecision(406);}

			switch (alt406) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:88: ws
					{
					dbg.location(1343,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8686);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(406);}
			dbg.location(1343,92);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:92: ( declarations )?
			int alt407=2;
			try { dbg.enterSubRule(407);
			try { dbg.enterDecision(407, decisionCanBacktrack[407]);

			int LA407_0 = input.LA(1);
			if ( ((LA407_0 >= AT_IDENT && LA407_0 <= AT_SIGN)||(LA407_0 >= BOTTOMCENTER_SYM && LA407_0 <= BOTTOMRIGHT_SYM)||(LA407_0 >= CHARSET_SYM && LA407_0 <= COLON)||LA407_0==COUNTER_STYLE_SYM||LA407_0==DCOLON||LA407_0==DOT||LA407_0==FONT_FACE_SYM||(LA407_0 >= GEN && LA407_0 <= GREATER)||(LA407_0 >= HASH && LA407_0 <= HASH_SYMBOL)||LA407_0==IDENT||LA407_0==IMPORT_SYM||(LA407_0 >= LBRACKET && LA407_0 <= LEFTTOP_SYM)||LA407_0==LESS_AND||(LA407_0 >= MEDIA_SYM && LA407_0 <= MOZ_DOCUMENT_SYM)||LA407_0==NAMESPACE_SYM||LA407_0==PAGE_SYM||(LA407_0 >= PIPE && LA407_0 <= PLUS)||(LA407_0 >= RIGHTBOTTOM_SYM && LA407_0 <= RIGHTTOP_SYM)||(LA407_0 >= SASS_AT_ROOT && LA407_0 <= SASS_DEBUG)||(LA407_0 >= SASS_EACH && LA407_0 <= SASS_ELSE)||(LA407_0 >= SASS_ERROR && LA407_0 <= SASS_FUNCTION)||(LA407_0 >= SASS_IF && LA407_0 <= SASS_MIXIN)||(LA407_0 >= SASS_RETURN && LA407_0 <= SEMI)||LA407_0==STAR||LA407_0==TILDE||(LA407_0 >= TOPCENTER_SYM && LA407_0 <= TOPRIGHT_SYM)||LA407_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt407=1;
			}
			} finally {dbg.exitDecision(407);}

			switch (alt407) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:92: declarations
					{
					dbg.location(1343,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration8689);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(407);}
			dbg.location(1343,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration8692); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1344, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1346, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1347:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:5: IDENT
			{
			dbg.location(1348,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name8713); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1349, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1351:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1351, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1353,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return8734); if (state.failed) return;dbg.location(1353,17);
			pushFollow(FOLLOW_ws_in_sass_function_return8736);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1353,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return8738);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1354, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1356:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1356, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:5: SASS_CONTENT
			{
			dbg.location(1358,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content8759); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1361:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1361, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1361:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:5: {...}? IDENT
			{
			dbg.location(1362,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1362,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types8778); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1363, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1368, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:5: {...}? IDENT
			{
			dbg.location(1369,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1369,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when8801); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1370, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1372:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1372, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1372:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:5: {...}? IDENT
			{
			dbg.location(1373,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1373,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and8820); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1374, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1376:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1376, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1376:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:5: {...}? IDENT
			{
			dbg.location(1377,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1377,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or8838); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1378, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1380:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1380, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1380:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1381:5: {...}? IDENT
			{
			dbg.location(1381,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1381,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only8856); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1382, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ( ws )? mediaQueryList
		{
		dbg.location(386,45);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ( ws )?
		int alt408=2;
		try { dbg.enterSubRule(408);
		try { dbg.enterDecision(408, decisionCanBacktrack[408]);

		int LA408_0 = input.LA(1);
		if ( (LA408_0==COMMENT||LA408_0==NL||LA408_0==WS) ) {
			alt408=1;
		}
		} finally {dbg.exitDecision(408);}

		switch (alt408) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ws
				{
				dbg.location(386,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3365);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(408);}
		dbg.location(386,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3368);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ( ws )? mediaQueryList
		{
		dbg.location(389,99);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ( ws )?
		int alt409=2;
		try { dbg.enterSubRule(409);
		try { dbg.enterDecision(409, decisionCanBacktrack[409]);

		int LA409_0 = input.LA(1);
		if ( (LA409_0==COMMENT||LA409_0==NL||LA409_0==WS) ) {
			alt409=1;
		}
		} finally {dbg.exitDecision(409);}

		switch (alt409) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ws
				{
				dbg.location(389,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3429);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(409);}
		dbg.location(389,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3432);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ( ws )? mediaQueryList
		{
		dbg.location(391,102);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ( ws )?
		int alt410=2;
		try { dbg.enterSubRule(410);
		try { dbg.enterDecision(410, decisionCanBacktrack[410]);

		int LA410_0 = input.LA(1);
		if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
			alt410=1;
		}
		} finally {dbg.exitDecision(410);}

		switch (alt410) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ws
				{
				dbg.location(391,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3483);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(410);}
		dbg.location(391,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3486);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ( ws )? SEMI
		{
		dbg.location(406,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ( ws )?
		int alt411=2;
		try { dbg.enterSubRule(411);
		try { dbg.enterDecision(411, decisionCanBacktrack[411]);

		int LA411_0 = input.LA(1);
		if ( (LA411_0==COMMENT||LA411_0==NL||LA411_0==WS) ) {
			alt411=1;
		}
		} finally {dbg.exitDecision(411);}

		switch (alt411) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ws
				{
				dbg.location(406,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css3605);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(411);}
		dbg.location(406,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css3608); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt416=2;
		try { dbg.enterDecision(416, decisionCanBacktrack[416]);

		int LA416_0 = input.LA(1);
		if ( (LA416_0==SASS_MIXIN) ) {
			alt416=1;
		}
		else if ( (LA416_0==DOT||LA416_0==HASH) ) {
			alt416=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 416, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(416);}

		switch (alt416) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:6: SASS_MIXIN
				{
				dbg.location(415,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css3706); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(415,19);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(415,20);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:20: ( ( DOT IDENT ) | HASH )
				int alt412=2;
				try { dbg.enterSubRule(412);
				try { dbg.enterDecision(412, decisionCanBacktrack[412]);

				int LA412_0 = input.LA(1);
				if ( (LA412_0==DOT) ) {
					alt412=1;
				}
				else if ( (LA412_0==HASH) ) {
					alt412=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 412, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(412);}

				switch (alt412) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:21: ( DOT IDENT )
						{
						dbg.location(415,21);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:22: DOT IDENT
						{
						dbg.location(415,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css3713); if (state.failed) return;dbg.location(415,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css3715); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:35: HASH
						{
						dbg.location(415,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css3720); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(412);}
				dbg.location(415,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:41: ( ws )?
				int alt413=2;
				try { dbg.enterSubRule(413);
				try { dbg.enterDecision(413, decisionCanBacktrack[413]);

				int LA413_0 = input.LA(1);
				if ( (LA413_0==COMMENT||LA413_0==NL||LA413_0==WS) ) {
					alt413=1;
				}
				} finally {dbg.exitDecision(413);}

				switch (alt413) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:41: ws
						{
						dbg.location(415,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css3723);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(413);}
				dbg.location(415,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css3726); if (state.failed) return;dbg.location(415,52);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:52: (~ RPAREN )*
				try { dbg.enterSubRule(414);

				loop414:
				while (true) {
					int alt414=2;
					try { dbg.enterDecision(414, decisionCanBacktrack[414]);

					int LA414_0 = input.LA(1);
					if ( ((LA414_0 >= A && LA414_0 <= RIGHTTOP_SYM)||(LA414_0 >= S && LA414_0 <= Z)) ) {
						alt414=1;
					}

					} finally {dbg.exitDecision(414);}

					switch (alt414) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(415,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop414;
					}
				}
				} finally {dbg.exitSubRule(414);}
				dbg.location(415,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css3734); if (state.failed) return;dbg.location(415,70);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(415);

				loop415:
				while (true) {
					int alt415=2;
					try { dbg.enterDecision(415, decisionCanBacktrack[415]);

					int LA415_0 = input.LA(1);
					if ( ((LA415_0 >= A && LA415_0 <= L)||(LA415_0 >= LBRACKET && LA415_0 <= SASS_WHILE)||(LA415_0 >= SOLIDUS && LA415_0 <= Z)) ) {
						alt415=1;
					}

					} finally {dbg.exitDecision(415);}

					switch (alt415) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(415,70);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop415;
					}
				}
				} finally {dbg.exitSubRule(415);}
				dbg.location(415,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css3744); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(417,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css3762);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(417,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:22: ( ( ws )? IMPORTANT_SYM )?
		int alt418=2;
		try { dbg.enterSubRule(418);
		try { dbg.enterDecision(418, decisionCanBacktrack[418]);

		try {
			isCyclicDecision = true;
			alt418 = dfa418.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(418);}

		switch (alt418) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(417,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ( ws )?
				int alt417=2;
				try { dbg.enterSubRule(417);
				try { dbg.enterDecision(417, decisionCanBacktrack[417]);

				int LA417_0 = input.LA(1);
				if ( (LA417_0==COMMENT||LA417_0==NL||LA417_0==WS) ) {
					alt417=1;
				}
				} finally {dbg.exitDecision(417);}

				switch (alt417) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ws
						{
						dbg.location(417,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css3765);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(417);}
				dbg.location(417,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(418);}
		dbg.location(417,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:43: ( ws )?
		int alt419=2;
		try { dbg.enterSubRule(419);
		try { dbg.enterDecision(419, decisionCanBacktrack[419]);

		int LA419_0 = input.LA(1);
		if ( (LA419_0==COMMENT||LA419_0==NL||LA419_0==WS) ) {
			alt419=1;
		}
		} finally {dbg.exitDecision(419);}

		switch (alt419) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:43: ws
				{
				dbg.location(417,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css3772);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(419);}
		dbg.location(417,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css3775); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:8: cp_mixin_call
		{
		dbg.location(418,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css3798);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(419,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt425=3;
		try { dbg.enterSubRule(425);
		try { dbg.enterDecision(425, decisionCanBacktrack[425]);

		try {
			isCyclicDecision = true;
			alt425 = dfa425.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(425);}

		switch (alt425) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(419,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(419,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css3823); if (state.failed) return;dbg.location(419,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:23: ( ws selectorsGroup )?
				int alt420=2;
				try { dbg.enterSubRule(420);
				try { dbg.enterDecision(420, decisionCanBacktrack[420]);

				try {
					isCyclicDecision = true;
					alt420 = dfa420.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(420);}

				switch (alt420) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:24: ws selectorsGroup
						{
						dbg.location(419,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css3826);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(419,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css3828);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(420);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(419,48);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(419,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css3837); if (state.failed) return;dbg.location(419,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css3839);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(419,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css3841); if (state.failed) return;dbg.location(419,72);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:72: ( ws )?
				int alt421=2;
				try { dbg.enterSubRule(421);
				try { dbg.enterDecision(421, decisionCanBacktrack[421]);

				int LA421_0 = input.LA(1);
				if ( (LA421_0==COMMENT||LA421_0==NL||LA421_0==WS) ) {
					alt421=1;
				}
				} finally {dbg.exitDecision(421);}

				switch (alt421) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:72: ws
						{
						dbg.location(419,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css3843);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(421);}
				dbg.location(419,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css3846); if (state.failed) return;dbg.location(419,82);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:82: ( ws )?
				int alt422=2;
				try { dbg.enterSubRule(422);
				try { dbg.enterDecision(422, decisionCanBacktrack[422]);

				int LA422_0 = input.LA(1);
				if ( (LA422_0==COMMENT||LA422_0==NL||LA422_0==WS) ) {
					alt422=1;
				}
				} finally {dbg.exitDecision(422);}

				switch (alt422) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:82: ws
						{
						dbg.location(419,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css3848);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(422);}
				dbg.location(419,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css3851); if (state.failed) return;dbg.location(419,92);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:92: ( ws )?
				int alt423=2;
				try { dbg.enterSubRule(423);
				try { dbg.enterDecision(423, decisionCanBacktrack[423]);

				int LA423_0 = input.LA(1);
				if ( (LA423_0==COMMENT||LA423_0==NL||LA423_0==WS) ) {
					alt423=1;
				}
				} finally {dbg.exitDecision(423);}

				switch (alt423) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:92: ws
						{
						dbg.location(419,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css3853);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(423);}
				dbg.location(419,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css3856); if (state.failed) return;dbg.location(419,102);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:102: ( ws )?
				int alt424=2;
				try { dbg.enterSubRule(424);
				try { dbg.enterDecision(424, decisionCanBacktrack[424]);

				int LA424_0 = input.LA(1);
				if ( (LA424_0==COMMENT||LA424_0==NL||LA424_0==WS) ) {
					alt424=1;
				}
				} finally {dbg.exitDecision(424);}

				switch (alt424) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:102: ws
						{
						dbg.location(419,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css3858);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(424);}
				dbg.location(419,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css3861); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:116: selectorsGroup
				{
				dbg.location(419,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css3866);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(425);}
		dbg.location(419,132);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:132: ( ws )?
		int alt426=2;
		try { dbg.enterSubRule(426);
		try { dbg.enterDecision(426, decisionCanBacktrack[426]);

		int LA426_0 = input.LA(1);
		if ( (LA426_0==COMMENT||LA426_0==NL||LA426_0==WS) ) {
			alt426=1;
		}
		} finally {dbg.exitDecision(426);}

		switch (alt426) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:132: ws
				{
				dbg.location(419,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css3869);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(426);}
		dbg.location(419,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css3872); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:8: propertyDeclaration
		{
		dbg.location(420,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css3884);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:18: ( ws )? COMMA
		{
		dbg.location(434,18);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:18: ( ws )?
		int alt427=2;
		try { dbg.enterSubRule(427);
		try { dbg.enterDecision(427, decisionCanBacktrack[427]);

		int LA427_0 = input.LA(1);
		if ( (LA427_0==COMMENT||LA427_0==NL||LA427_0==WS) ) {
			alt427=1;
		}
		} finally {dbg.exitDecision(427);}

		switch (alt427) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:18: ws
				{
				dbg.location(434,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css3991);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(427);}
		dbg.location(434,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css3994); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:23: ( ws )? SEMI
		{
		dbg.location(474,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:23: ( ws )?
		int alt428=2;
		try { dbg.enterSubRule(428);
		try { dbg.enterDecision(428, decisionCanBacktrack[428]);

		int LA428_0 = input.LA(1);
		if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
			alt428=1;
		}
		} finally {dbg.exitDecision(428);}

		switch (alt428) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:23: ws
				{
				dbg.location(474,23);
				pushFollow(FOLLOW_ws_in_synpred11_Css31290);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(428);}
		dbg.location(474,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred11_Css31293); if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt433=2;
		try { dbg.enterDecision(433, decisionCanBacktrack[433]);

		int LA433_0 = input.LA(1);
		if ( (LA433_0==SASS_MIXIN) ) {
			alt433=1;
		}
		else if ( (LA433_0==DOT||LA433_0==HASH) ) {
			alt433=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 433, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(433);}

		switch (alt433) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:10: SASS_MIXIN
				{
				dbg.location(482,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred12_Css31368); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(482,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(482,24);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:24: ( ( DOT IDENT ) | HASH )
				int alt429=2;
				try { dbg.enterSubRule(429);
				try { dbg.enterDecision(429, decisionCanBacktrack[429]);

				int LA429_0 = input.LA(1);
				if ( (LA429_0==DOT) ) {
					alt429=1;
				}
				else if ( (LA429_0==HASH) ) {
					alt429=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 429, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(429);}

				switch (alt429) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:25: ( DOT IDENT )
						{
						dbg.location(482,25);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:26: DOT IDENT
						{
						dbg.location(482,26);
						match(input,DOT,FOLLOW_DOT_in_synpred12_Css31375); if (state.failed) return;dbg.location(482,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred12_Css31377); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:39: HASH
						{
						dbg.location(482,39);
						match(input,HASH,FOLLOW_HASH_in_synpred12_Css31382); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(429);}
				dbg.location(482,45);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:45: ( ws )?
				int alt430=2;
				try { dbg.enterSubRule(430);
				try { dbg.enterDecision(430, decisionCanBacktrack[430]);

				int LA430_0 = input.LA(1);
				if ( (LA430_0==COMMENT||LA430_0==NL||LA430_0==WS) ) {
					alt430=1;
				}
				} finally {dbg.exitDecision(430);}

				switch (alt430) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:45: ws
						{
						dbg.location(482,45);
						pushFollow(FOLLOW_ws_in_synpred12_Css31385);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(430);}
				dbg.location(482,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred12_Css31388); if (state.failed) return;dbg.location(482,56);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:56: (~ RPAREN )*
				try { dbg.enterSubRule(431);

				loop431:
				while (true) {
					int alt431=2;
					try { dbg.enterDecision(431, decisionCanBacktrack[431]);

					int LA431_0 = input.LA(1);
					if ( ((LA431_0 >= A && LA431_0 <= RIGHTTOP_SYM)||(LA431_0 >= S && LA431_0 <= Z)) ) {
						alt431=1;
					}

					} finally {dbg.exitDecision(431);}

					switch (alt431) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(482,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop431;
					}
				}
				} finally {dbg.exitSubRule(431);}
				dbg.location(482,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred12_Css31396); if (state.failed) return;dbg.location(482,74);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(432);

				loop432:
				while (true) {
					int alt432=2;
					try { dbg.enterDecision(432, decisionCanBacktrack[432]);

					int LA432_0 = input.LA(1);
					if ( ((LA432_0 >= A && LA432_0 <= L)||(LA432_0 >= LBRACKET && LA432_0 <= R)||(LA432_0 >= RBRACKET && LA432_0 <= SASS_WHILE)||(LA432_0 >= SOLIDUS && LA432_0 <= Z)) ) {
						alt432=1;
					}

					} finally {dbg.exitDecision(432);}

					switch (alt432) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(482,74);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop432;
					}
				}
				} finally {dbg.exitSubRule(432);}
				dbg.location(482,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred12_Css31408); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(484,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred13_Css31434);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(484,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:26: ( ws )?
		int alt434=2;
		try { dbg.enterSubRule(434);
		try { dbg.enterDecision(434, decisionCanBacktrack[434]);

		int LA434_0 = input.LA(1);
		if ( (LA434_0==COMMENT||LA434_0==NL||LA434_0==WS) ) {
			alt434=1;
		}
		} finally {dbg.exitDecision(434);}

		switch (alt434) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:26: ws
				{
				dbg.location(484,26);
				pushFollow(FOLLOW_ws_in_synpred13_Css31436);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(434);}
		dbg.location(484,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred13_Css31439); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:12: cp_mixin_call
		{
		dbg.location(485,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred14_Css31458);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:12: cp_variable ( ws )? COLON
		{
		dbg.location(487,12);
		pushFollow(FOLLOW_cp_variable_in_synpred15_Css31486);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(487,24);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:24: ( ws )?
		int alt435=2;
		try { dbg.enterSubRule(435);
		try { dbg.enterDecision(435, decisionCanBacktrack[435]);

		int LA435_0 = input.LA(1);
		if ( (LA435_0==COMMENT||LA435_0==NL||LA435_0==WS) ) {
			alt435=1;
		}
		} finally {dbg.exitDecision(435);}

		switch (alt435) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:24: ws
				{
				dbg.location(487,24);
				pushFollow(FOLLOW_ws_in_synpred15_Css31488);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(435);}
		dbg.location(487,28);
		match(input,COLON,FOLLOW_COLON_in_synpred15_Css31491); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:12: sass_map
		{
		dbg.location(488,12);
		pushFollow(FOLLOW_sass_map_in_synpred16_Css31508);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:28: ( ws )? COMMA
		{
		dbg.location(652,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:28: ( ws )?
		int alt436=2;
		try { dbg.enterSubRule(436);
		try { dbg.enterDecision(436, decisionCanBacktrack[436]);

		int LA436_0 = input.LA(1);
		if ( (LA436_0==COMMENT||LA436_0==NL||LA436_0==WS) ) {
			alt436=1;
		}
		} finally {dbg.exitDecision(436);}

		switch (alt436) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:28: ws
				{
				dbg.location(652,28);
				pushFollow(FOLLOW_ws_in_synpred17_Css32719);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(436);}
		dbg.location(652,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred17_Css32722); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:25: ( function )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:26: function
		{
		dbg.location(660,26);
		pushFollow(FOLLOW_function_in_synpred18_Css32803);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:6: cp_variable_declaration
		{
		dbg.location(688,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred19_Css33101);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:8: sass_map
		{
		dbg.location(689,8);
		pushFollow(FOLLOW_sass_map_in_synpred20_Css33113);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:8: sass_nested_properties
		{
		dbg.location(690,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred21_Css33126);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(691,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt442=3;
		try { dbg.enterSubRule(442);
		try { dbg.enterDecision(442, decisionCanBacktrack[442]);

		try {
			isCyclicDecision = true;
			alt442 = dfa442.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(442);}

		switch (alt442) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(691,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(691,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred22_Css33140); if (state.failed) return;dbg.location(691,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:23: ( ws selectorsGroup )?
				int alt437=2;
				try { dbg.enterSubRule(437);
				try { dbg.enterDecision(437, decisionCanBacktrack[437]);

				try {
					isCyclicDecision = true;
					alt437 = dfa437.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(437);}

				switch (alt437) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:24: ws selectorsGroup
						{
						dbg.location(691,24);
						pushFollow(FOLLOW_ws_in_synpred22_Css33143);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(691,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred22_Css33145);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(437);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(691,48);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(691,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred22_Css33154); if (state.failed) return;dbg.location(691,62);
				pushFollow(FOLLOW_ws_in_synpred22_Css33156);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(691,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred22_Css33158); if (state.failed) return;dbg.location(691,72);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:72: ( ws )?
				int alt438=2;
				try { dbg.enterSubRule(438);
				try { dbg.enterDecision(438, decisionCanBacktrack[438]);

				int LA438_0 = input.LA(1);
				if ( (LA438_0==COMMENT||LA438_0==NL||LA438_0==WS) ) {
					alt438=1;
				}
				} finally {dbg.exitDecision(438);}

				switch (alt438) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:72: ws
						{
						dbg.location(691,72);
						pushFollow(FOLLOW_ws_in_synpred22_Css33160);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(438);}
				dbg.location(691,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred22_Css33163); if (state.failed) return;dbg.location(691,82);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:82: ( ws )?
				int alt439=2;
				try { dbg.enterSubRule(439);
				try { dbg.enterDecision(439, decisionCanBacktrack[439]);

				int LA439_0 = input.LA(1);
				if ( (LA439_0==COMMENT||LA439_0==NL||LA439_0==WS) ) {
					alt439=1;
				}
				} finally {dbg.exitDecision(439);}

				switch (alt439) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:82: ws
						{
						dbg.location(691,82);
						pushFollow(FOLLOW_ws_in_synpred22_Css33165);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(439);}
				dbg.location(691,86);
				match(input,COLON,FOLLOW_COLON_in_synpred22_Css33168); if (state.failed) return;dbg.location(691,92);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:92: ( ws )?
				int alt440=2;
				try { dbg.enterSubRule(440);
				try { dbg.enterDecision(440, decisionCanBacktrack[440]);

				int LA440_0 = input.LA(1);
				if ( (LA440_0==COMMENT||LA440_0==NL||LA440_0==WS) ) {
					alt440=1;
				}
				} finally {dbg.exitDecision(440);}

				switch (alt440) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:92: ws
						{
						dbg.location(691,92);
						pushFollow(FOLLOW_ws_in_synpred22_Css33170);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(440);}
				dbg.location(691,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred22_Css33173); if (state.failed) return;dbg.location(691,102);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:102: ( ws )?
				int alt441=2;
				try { dbg.enterSubRule(441);
				try { dbg.enterDecision(441, decisionCanBacktrack[441]);

				int LA441_0 = input.LA(1);
				if ( (LA441_0==COMMENT||LA441_0==NL||LA441_0==WS) ) {
					alt441=1;
				}
				} finally {dbg.exitDecision(441);}

				switch (alt441) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:102: ws
						{
						dbg.location(691,102);
						pushFollow(FOLLOW_ws_in_synpred22_Css33175);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(441);}
				dbg.location(691,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred22_Css33178); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:116: selectorsGroup
				{
				dbg.location(691,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred22_Css33183);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(442);}
		dbg.location(691,132);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:132: ( ws )?
		int alt443=2;
		try { dbg.enterSubRule(443);
		try { dbg.enterDecision(443, decisionCanBacktrack[443]);

		int LA443_0 = input.LA(1);
		if ( (LA443_0==COMMENT||LA443_0==NL||LA443_0==WS) ) {
			alt443=1;
		}
		} finally {dbg.exitDecision(443);}

		switch (alt443) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:132: ws
				{
				dbg.location(691,132);
				pushFollow(FOLLOW_ws_in_synpred22_Css33186);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(443);}
		dbg.location(691,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred22_Css33189); if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:8: propertyDeclaration
		{
		dbg.location(692,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred23_Css33201);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(694,8);
		pushFollow(FOLLOW_property_in_synpred24_Css33218);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(694,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:17: ( ws )?
		int alt444=2;
		try { dbg.enterSubRule(444);
		try { dbg.enterDecision(444, decisionCanBacktrack[444]);

		int LA444_0 = input.LA(1);
		if ( (LA444_0==COMMENT||LA444_0==NL||LA444_0==WS) ) {
			alt444=1;
		}
		} finally {dbg.exitDecision(444);}

		switch (alt444) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:17: ws
				{
				dbg.location(694,17);
				pushFollow(FOLLOW_ws_in_synpred24_Css33220);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(444);}
		dbg.location(694,21);
		match(input,COLON,FOLLOW_COLON_in_synpred24_Css33223); if (state.failed) return;dbg.location(694,27);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(445);

		loop445:
		while (true) {
			int alt445=2;
			try { dbg.enterDecision(445, decisionCanBacktrack[445]);

			int LA445_0 = input.LA(1);
			if ( ((LA445_0 >= A && LA445_0 <= L)||(LA445_0 >= LBRACKET && LA445_0 <= R)||(LA445_0 >= RBRACKET && LA445_0 <= SASS_WHILE)||(LA445_0 >= SOLIDUS && LA445_0 <= Z)) ) {
				alt445=1;
			}

			} finally {dbg.exitDecision(445);}

			switch (alt445) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(694,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop445;
			}
		}
		} finally {dbg.exitSubRule(445);}
		dbg.location(694,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:8: cp_mixin_declaration
		{
		dbg.location(695,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred25_Css33252);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:8: cp_mixin_call
		{
		dbg.location(696,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred26_Css33264);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:8: cp_mixin_call
		{
		dbg.location(697,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred27_Css33285);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:66: ( ws )? esPred
		{
		dbg.location(731,66);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:66: ( ws )?
		int alt446=2;
		try { dbg.enterSubRule(446);
		try { dbg.enterDecision(446, decisionCanBacktrack[446]);

		int LA446_0 = input.LA(1);
		if ( (LA446_0==COMMENT||LA446_0==NL||LA446_0==WS) ) {
			alt446=1;
		}
		} finally {dbg.exitDecision(446);}

		switch (alt446) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:66: ws
				{
				dbg.location(731,66);
				pushFollow(FOLLOW_ws_in_synpred28_Css33583);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(446);}
		dbg.location(731,70);
		pushFollow(FOLLOW_esPred_in_synpred28_Css33586);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:5: typeSelector
		{
		dbg.location(732,5);
		pushFollow(FOLLOW_typeSelector_in_synpred29_Css33621);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:35: ( ws )? esPred
		{
		dbg.location(732,35);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:35: ( ws )?
		int alt447=2;
		try { dbg.enterSubRule(447);
		try { dbg.enterDecision(447, decisionCanBacktrack[447]);

		int LA447_0 = input.LA(1);
		if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
			alt447=1;
		}
		} finally {dbg.exitDecision(447);}

		switch (alt447) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:35: ws
				{
				dbg.location(732,35);
				pushFollow(FOLLOW_ws_in_synpred30_Css33628);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(447);}
		dbg.location(732,39);
		pushFollow(FOLLOW_esPred_in_synpred30_Css33631);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(746,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:8: ( IDENT | STAR )?
		int alt448=2;
		try { dbg.enterSubRule(448);
		try { dbg.enterDecision(448, decisionCanBacktrack[448]);

		int LA448_0 = input.LA(1);
		if ( (LA448_0==IDENT||LA448_0==STAR) ) {
			alt448=1;
		}
		} finally {dbg.exitDecision(448);}

		switch (alt448) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(746,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(448);}
		dbg.location(746,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred31_Css33742); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(927,15);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt451=3;
		try { dbg.enterSubRule(451);
		try { dbg.enterDecision(451, decisionCanBacktrack[451]);

		try {
			isCyclicDecision = true;
			alt451 = dfa451.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(451);}

		switch (alt451) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:17: ws
				{
				dbg.location(927,17);
				pushFollow(FOLLOW_ws_in_synpred32_Css35260);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(927,22);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:23: ( ws )? operator ( ws )?
				{
				dbg.location(927,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:23: ( ws )?
				int alt449=2;
				try { dbg.enterSubRule(449);
				try { dbg.enterDecision(449, decisionCanBacktrack[449]);

				int LA449_0 = input.LA(1);
				if ( (LA449_0==COMMENT||LA449_0==NL||LA449_0==WS) ) {
					alt449=1;
				}
				} finally {dbg.exitDecision(449);}

				switch (alt449) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:23: ws
						{
						dbg.location(927,23);
						pushFollow(FOLLOW_ws_in_synpred32_Css35265);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(449);}
				dbg.location(927,27);
				pushFollow(FOLLOW_operator_in_synpred32_Css35268);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(927,36);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:36: ( ws )?
				int alt450=2;
				try { dbg.enterSubRule(450);
				try { dbg.enterDecision(450, decisionCanBacktrack[450]);

				int LA450_0 = input.LA(1);
				if ( (LA450_0==COMMENT||LA450_0==NL||LA450_0==WS) ) {
					alt450=1;
				}
				} finally {dbg.exitDecision(450);}

				switch (alt450) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:36: ws
						{
						dbg.location(927,36);
						pushFollow(FOLLOW_ws_in_synpred32_Css35270);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(450);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(451);}
		dbg.location(927,58);
		pushFollow(FOLLOW_term_in_synpred32_Css35279);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:10: functionName ( ws )? LPAREN
		{
		dbg.location(934,10);
		pushFollow(FOLLOW_functionName_in_synpred33_Css35352);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(934,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:23: ( ws )?
		int alt452=2;
		try { dbg.enterSubRule(452);
		try { dbg.enterDecision(452, decisionCanBacktrack[452]);

		int LA452_0 = input.LA(1);
		if ( (LA452_0==COMMENT||LA452_0==NL||LA452_0==WS) ) {
			alt452=1;
		}
		} finally {dbg.exitDecision(452);}

		switch (alt452) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:23: ws
				{
				dbg.location(934,23);
				pushFollow(FOLLOW_ws_in_synpred33_Css35354);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(452);}
		dbg.location(934,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred33_Css35357); if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(997,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred34_Css35910);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(997,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:26: ( ws )?
		int alt453=2;
		try { dbg.enterSubRule(453);
		try { dbg.enterDecision(453, decisionCanBacktrack[453]);

		int LA453_0 = input.LA(1);
		if ( (LA453_0==COMMENT||LA453_0==NL||LA453_0==WS) ) {
			alt453=1;
		}
		} finally {dbg.exitDecision(453);}

		switch (alt453) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:26: ws
				{
				dbg.location(997,26);
				pushFollow(FOLLOW_ws_in_synpred34_Css35912);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(453);}
		dbg.location(997,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:12: cp_expression
		{
		dbg.location(998,12);
		pushFollow(FOLLOW_cp_expression_in_synpred35_Css35950);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1010,21);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt456=3;
		try { dbg.enterSubRule(456);
		try { dbg.enterDecision(456, decisionCanBacktrack[456]);

		try {
			isCyclicDecision = true;
			alt456 = dfa456.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(456);}

		switch (alt456) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:23: ws
				{
				dbg.location(1010,23);
				pushFollow(FOLLOW_ws_in_synpred36_Css36044);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1010,28);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1010,29);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:29: ( ws )?
				int alt454=2;
				try { dbg.enterSubRule(454);
				try { dbg.enterDecision(454, decisionCanBacktrack[454]);

				int LA454_0 = input.LA(1);
				if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
					alt454=1;
				}
				} finally {dbg.exitDecision(454);}

				switch (alt454) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:29: ws
						{
						dbg.location(1010,29);
						pushFollow(FOLLOW_ws_in_synpred36_Css36049);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(454);}
				dbg.location(1010,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred36_Css36052); if (state.failed) return;dbg.location(1010,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:41: ( ws )?
				int alt455=2;
				try { dbg.enterSubRule(455);
				try { dbg.enterDecision(455, decisionCanBacktrack[455]);

				int LA455_0 = input.LA(1);
				if ( (LA455_0==COMMENT||LA455_0==NL||LA455_0==WS) ) {
					alt455=1;
				}
				} finally {dbg.exitDecision(455);}

				switch (alt455) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:41: ws
						{
						dbg.location(1010,41);
						pushFollow(FOLLOW_ws_in_synpred36_Css36054);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(455);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(456);}
		dbg.location(1010,63);
		pushFollow(FOLLOW_term_in_synpred36_Css36063);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1045,7);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:7: ( ws )?
		int alt457=2;
		try { dbg.enterSubRule(457);
		try { dbg.enterDecision(457, decisionCanBacktrack[457]);

		int LA457_0 = input.LA(1);
		if ( (LA457_0==COMMENT||LA457_0==NL||LA457_0==WS) ) {
			alt457=1;
		}
		} finally {dbg.exitDecision(457);}

		switch (alt457) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:7: ws
				{
				dbg.location(1045,7);
				pushFollow(FOLLOW_ws_in_synpred38_Css36503);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(457);}
		dbg.location(1045,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred38_Css36506); if (state.failed) return;dbg.location(1045,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:17: ( ws )?
		int alt458=2;
		try { dbg.enterSubRule(458);
		try { dbg.enterDecision(458, decisionCanBacktrack[458]);

		int LA458_0 = input.LA(1);
		if ( (LA458_0==COMMENT||LA458_0==NL||LA458_0==WS) ) {
			alt458=1;
		}
		} finally {dbg.exitDecision(458);}

		switch (alt458) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:17: ws
				{
				dbg.location(1045,17);
				pushFollow(FOLLOW_ws_in_synpred38_Css36508);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(458);}
		dbg.location(1045,21);
		pushFollow(FOLLOW_cp_expression_in_synpred38_Css36511);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:8: cp_expression_atom
		{
		dbg.location(1061,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred39_Css36578);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:10: ( ws )? cp_expression_operator
		{
		dbg.location(1063,10);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:10: ( ws )?
		int alt459=2;
		try { dbg.enterSubRule(459);
		try { dbg.enterDecision(459, decisionCanBacktrack[459]);

		int LA459_0 = input.LA(1);
		if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
			alt459=1;
		}
		} finally {dbg.exitDecision(459);}

		switch (alt459) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:10: ws
				{
				dbg.location(1063,10);
				pushFollow(FOLLOW_ws_in_synpred40_Css36601);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(459);}
		dbg.location(1063,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred40_Css36604);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:12: ( ws )? cp_expression_atom
		{
		dbg.location(1064,12);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:12: ( ws )?
		int alt460=2;
		try { dbg.enterSubRule(460);
		try { dbg.enterDecision(460, decisionCanBacktrack[460]);

		int LA460_0 = input.LA(1);
		if ( (LA460_0==COMMENT||LA460_0==NL||LA460_0==WS) ) {
			alt460=1;
		}
		} finally {dbg.exitDecision(460);}

		switch (alt460) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:12: ws
				{
				dbg.location(1064,12);
				pushFollow(FOLLOW_ws_in_synpred41_Css36630);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(460);}
		dbg.location(1064,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred41_Css36633);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:14: cp_math_expression
		{
		dbg.location(1078,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred42_Css36773);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1105,14);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:14: ( ws )?
		int alt461=2;
		try { dbg.enterSubRule(461);
		try { dbg.enterDecision(461, decisionCanBacktrack[461]);

		int LA461_0 = input.LA(1);
		if ( (LA461_0==COMMENT||LA461_0==NL||LA461_0==WS) ) {
			alt461=1;
		}
		} finally {dbg.exitDecision(461);}

		switch (alt461) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:14: ws
				{
				dbg.location(1105,14);
				pushFollow(FOLLOW_ws_in_synpred43_Css36906);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(461);}
		dbg.location(1105,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:77: ( pseudo )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:78: pseudo
		{
		dbg.location(1137,78);
		pushFollow(FOLLOW_pseudo_in_synpred44_Css37198);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:96: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:97: ( ws )? LPAREN
		{
		dbg.location(1137,97);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:97: ( ws )?
		int alt462=2;
		try { dbg.enterSubRule(462);
		try { dbg.enterDecision(462, decisionCanBacktrack[462]);

		int LA462_0 = input.LA(1);
		if ( (LA462_0==COMMENT||LA462_0==NL||LA462_0==WS) ) {
			alt462=1;
		}
		} finally {dbg.exitDecision(462);}

		switch (alt462) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1137:97: ws
				{
				dbg.location(1137,97);
				pushFollow(FOLLOW_ws_in_synpred45_Css37206);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(462);}
		dbg.location(1137,101);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred45_Css37209); if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:26: webkitKeyframeSelectors
		{
		dbg.location(1146,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred46_Css37325);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:20: ( ws )? COMMA
		{
		dbg.location(1324,20);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:20: ( ws )?
		int alt463=2;
		try { dbg.enterSubRule(463);
		try { dbg.enterDecision(463, decisionCanBacktrack[463]);

		int LA463_0 = input.LA(1);
		if ( (LA463_0==COMMENT||LA463_0==NL||LA463_0==WS) ) {
			alt463=1;
		}
		} finally {dbg.exitDecision(463);}

		switch (alt463) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:20: ws
				{
				dbg.location(1324,20);
				pushFollow(FOLLOW_ws_in_synpred47_Css38542);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(463);}
		dbg.location(1324,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred47_Css38545); if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// Delegated rules

	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA24 dfa24 = new DFA24(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA46 dfa46 = new DFA46(this);
	protected DFA50 dfa50 = new DFA50(this);
	protected DFA55 dfa55 = new DFA55(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA63 dfa63 = new DFA63(this);
	protected DFA71 dfa71 = new DFA71(this);
	protected DFA104 dfa104 = new DFA104(this);
	protected DFA111 dfa111 = new DFA111(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA135 dfa135 = new DFA135(this);
	protected DFA137 dfa137 = new DFA137(this);
	protected DFA145 dfa145 = new DFA145(this);
	protected DFA151 dfa151 = new DFA151(this);
	protected DFA146 dfa146 = new DFA146(this);
	protected DFA168 dfa168 = new DFA168(this);
	protected DFA161 dfa161 = new DFA161(this);
	protected DFA160 dfa160 = new DFA160(this);
	protected DFA165 dfa165 = new DFA165(this);
	protected DFA170 dfa170 = new DFA170(this);
	protected DFA172 dfa172 = new DFA172(this);
	protected DFA176 dfa176 = new DFA176(this);
	protected DFA184 dfa184 = new DFA184(this);
	protected DFA183 dfa183 = new DFA183(this);
	protected DFA182 dfa182 = new DFA182(this);
	protected DFA188 dfa188 = new DFA188(this);
	protected DFA191 dfa191 = new DFA191(this);
	protected DFA213 dfa213 = new DFA213(this);
	protected DFA229 dfa229 = new DFA229(this);
	protected DFA236 dfa236 = new DFA236(this);
	protected DFA235 dfa235 = new DFA235(this);
	protected DFA248 dfa248 = new DFA248(this);
	protected DFA258 dfa258 = new DFA258(this);
	protected DFA257 dfa257 = new DFA257(this);
	protected DFA267 dfa267 = new DFA267(this);
	protected DFA272 dfa272 = new DFA272(this);
	protected DFA278 dfa278 = new DFA278(this);
	protected DFA292 dfa292 = new DFA292(this);
	protected DFA297 dfa297 = new DFA297(this);
	protected DFA304 dfa304 = new DFA304(this);
	protected DFA308 dfa308 = new DFA308(this);
	protected DFA319 dfa319 = new DFA319(this);
	protected DFA321 dfa321 = new DFA321(this);
	protected DFA333 dfa333 = new DFA333(this);
	protected DFA336 dfa336 = new DFA336(this);
	protected DFA352 dfa352 = new DFA352(this);
	protected DFA379 dfa379 = new DFA379(this);
	protected DFA385 dfa385 = new DFA385(this);
	protected DFA393 dfa393 = new DFA393(this);
	protected DFA392 dfa392 = new DFA392(this);
	protected DFA398 dfa398 = new DFA398(this);
	protected DFA418 dfa418 = new DFA418(this);
	protected DFA425 dfa425 = new DFA425(this);
	protected DFA420 dfa420 = new DFA420(this);
	protected DFA442 dfa442 = new DFA442(this);
	protected DFA437 dfa437 = new DFA437(this);
	protected DFA451 dfa451 = new DFA451(this);
	protected DFA456 dfa456 = new DFA456(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "347:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "349:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\3\uffff\1\1\5\uffff\1\1\1\uffff\1\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff"+
			"\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff\3\1\2\uffff"+
			"\3\1\1\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\uffff\5\1\1\uffff\1\1\2\uffff"+
			"\1\1\1\uffff\5\1\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 356:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA32_eotS =
		"\10\uffff";
	static final String DFA32_eofS =
		"\10\uffff";
	static final String DFA32_minS =
		"\1\64\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_maxS =
		"\1\64\2\u0092\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA32_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\1",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\3\12\uffff\1\3\4\uffff\1\2",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\5\12\uffff\1\5\4\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "384:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA32_3 = input.LA(1);
						 
						int index32_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_3);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA32_5 = input.LA(1);
						 
						int index32_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 32, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA24_eotS =
		"\4\uffff";
	static final String DFA24_eofS =
		"\2\2\2\uffff";
	static final String DFA24_minS =
		"\2\6\2\uffff";
	static final String DFA24_maxS =
		"\2\u0092\2\uffff";
	static final String DFA24_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA24_specialS =
		"\4\uffff}>";
	static final String[] DFA24_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
	static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
	static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
	static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
	static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
	static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
	static final short[][] DFA24_transition;

	static {
		int numStates = DFA24_transitionS.length;
		DFA24_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
		}
	}

	protected class DFA24 extends DFA {

		public DFA24(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 24;
			this.eot = DFA24_eot;
			this.eof = DFA24_eof;
			this.min = DFA24_min;
			this.max = DFA24_max;
			this.accept = DFA24_accept;
			this.special = DFA24_special;
			this.transition = DFA24_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 389:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\6\uffff";
	static final String DFA38_eofS =
		"\6\uffff";
	static final String DFA38_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA38_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA38_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "406:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA38_2 = input.LA(1);
						 
						int index38_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA38_4 = input.LA(1);
						 
						int index38_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 38, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA44_eotS =
		"\4\uffff";
	static final String DFA44_eofS =
		"\4\uffff";
	static final String DFA44_minS =
		"\2\6\2\uffff";
	static final String DFA44_maxS =
		"\2\u0092\2\uffff";
	static final String DFA44_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\4\uffff}>";
	static final String[] DFA44_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "417:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA46_eotS =
		"\4\uffff";
	static final String DFA46_eofS =
		"\4\uffff";
	static final String DFA46_minS =
		"\2\6\2\uffff";
	static final String DFA46_maxS =
		"\2\u0092\2\uffff";
	static final String DFA46_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA46_specialS =
		"\4\uffff}>";
	static final String[] DFA46_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
	static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
	static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
	static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
	static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
	static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
	static final short[][] DFA46_transition;

	static {
		int numStates = DFA46_transitionS.length;
		DFA46_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
		}
	}

	protected class DFA46 extends DFA {

		public DFA46(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 46;
			this.eot = DFA46_eot;
			this.eof = DFA46_eof;
			this.min = DFA46_min;
			this.max = DFA46_max;
			this.accept = DFA46_accept;
			this.special = DFA46_special;
			this.transition = DFA46_transition;
		}
		@Override
		public String getDescription() {
			return "418:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA50_eotS =
		"\4\uffff";
	static final String DFA50_eofS =
		"\2\2\2\uffff";
	static final String DFA50_minS =
		"\2\6\2\uffff";
	static final String DFA50_maxS =
		"\2\u0092\2\uffff";
	static final String DFA50_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA50_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA50_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 434:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA50_1 = input.LA(1);
						 
						int index50_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_1==EOF||(LA50_1 >= AT_IDENT && LA50_1 <= AT_SIGN)||(LA50_1 >= BOTTOMCENTER_SYM && LA50_1 <= BOTTOMRIGHT_SYM)||(LA50_1 >= CHARSET_SYM && LA50_1 <= COLON)||LA50_1==COUNTER_STYLE_SYM||LA50_1==DCOLON||LA50_1==DOT||LA50_1==FONT_FACE_SYM||(LA50_1 >= GEN && LA50_1 <= GREATER)||(LA50_1 >= HASH && LA50_1 <= HASH_SYMBOL)||LA50_1==IDENT||LA50_1==IMPORT_SYM||(LA50_1 >= LBRACE && LA50_1 <= LEFTTOP_SYM)||LA50_1==LESS_AND||(LA50_1 >= MEDIA_SYM && LA50_1 <= MOZ_DOCUMENT_SYM)||LA50_1==NAMESPACE_SYM||LA50_1==PAGE_SYM||(LA50_1 >= PIPE && LA50_1 <= PLUS)||LA50_1==RBRACE||(LA50_1 >= RIGHTBOTTOM_SYM && LA50_1 <= RIGHTTOP_SYM)||(LA50_1 >= SASS_AT_ROOT && LA50_1 <= SASS_DEBUG)||(LA50_1 >= SASS_EACH && LA50_1 <= SASS_ELSE)||(LA50_1 >= SASS_ERROR && LA50_1 <= SASS_FUNCTION)||(LA50_1 >= SASS_IF && LA50_1 <= SASS_MIXIN)||(LA50_1 >= SASS_RETURN && LA50_1 <= SEMI)||LA50_1==STAR||LA50_1==TILDE||(LA50_1 >= TOPCENTER_SYM && LA50_1 <= TOPRIGHT_SYM)||LA50_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_1==COMMENT||LA50_1==NL||LA50_1==WS) ) {s = 1;}
						else if ( (LA50_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index50_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA50_0 = input.LA(1);
						 
						int index50_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {s = 1;}
						else if ( (LA50_0==EOF||(LA50_0 >= AT_IDENT && LA50_0 <= AT_SIGN)||(LA50_0 >= BOTTOMCENTER_SYM && LA50_0 <= BOTTOMRIGHT_SYM)||(LA50_0 >= CHARSET_SYM && LA50_0 <= COLON)||LA50_0==COUNTER_STYLE_SYM||LA50_0==DCOLON||LA50_0==DOT||LA50_0==FONT_FACE_SYM||(LA50_0 >= GEN && LA50_0 <= GREATER)||(LA50_0 >= HASH && LA50_0 <= HASH_SYMBOL)||LA50_0==IDENT||LA50_0==IMPORT_SYM||(LA50_0 >= LBRACE && LA50_0 <= LEFTTOP_SYM)||LA50_0==LESS_AND||(LA50_0 >= MEDIA_SYM && LA50_0 <= MOZ_DOCUMENT_SYM)||LA50_0==NAMESPACE_SYM||LA50_0==PAGE_SYM||(LA50_0 >= PIPE && LA50_0 <= PLUS)||LA50_0==RBRACE||(LA50_0 >= RIGHTBOTTOM_SYM && LA50_0 <= RIGHTTOP_SYM)||(LA50_0 >= SASS_AT_ROOT && LA50_0 <= SASS_DEBUG)||(LA50_0 >= SASS_EACH && LA50_0 <= SASS_ELSE)||(LA50_0 >= SASS_EXTEND && LA50_0 <= SASS_FUNCTION)||(LA50_0 >= SASS_IF && LA50_0 <= SASS_MIXIN)||(LA50_0 >= SASS_RETURN && LA50_0 <= SEMI)||LA50_0==STAR||LA50_0==TILDE||(LA50_0 >= TOPCENTER_SYM && LA50_0 <= TOPRIGHT_SYM)||LA50_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index50_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 50, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA55_eotS =
		"\10\uffff";
	static final String DFA55_eofS =
		"\2\2\6\uffff";
	static final String DFA55_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA55_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA55_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA55_specialS =
		"\10\uffff}>";
	static final String[] DFA55_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
	static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
	static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
	static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
	static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
	static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
	static final short[][] DFA55_transition;

	static {
		int numStates = DFA55_transitionS.length;
		DFA55_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
		}
	}

	protected class DFA55 extends DFA {

		public DFA55(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 55;
			this.eot = DFA55_eot;
			this.eof = DFA55_eof;
			this.min = DFA55_min;
			this.max = DFA55_max;
			this.accept = DFA55_accept;
			this.special = DFA55_special;
			this.transition = DFA55_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:43: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA58_eotS =
		"\10\uffff";
	static final String DFA58_eofS =
		"\2\2\6\uffff";
	static final String DFA58_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA58_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA58_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA58_specialS =
		"\10\uffff}>";
	static final String[] DFA58_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 440:23: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA63_eotS =
		"\4\uffff";
	static final String DFA63_eofS =
		"\4\uffff";
	static final String DFA63_minS =
		"\2\23\2\uffff";
	static final String DFA63_maxS =
		"\2\u0092\2\uffff";
	static final String DFA63_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA63_specialS =
		"\4\uffff}>";
	static final String[] DFA63_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"",
			""
	};

	static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
	static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
	static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
	static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
	static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
	static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
	static final short[][] DFA63_transition;

	static {
		int numStates = DFA63_transitionS.length;
		DFA63_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
		}
	}

	protected class DFA63 extends DFA {

		public DFA63(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 63;
			this.eot = DFA63_eot;
			this.eof = DFA63_eof;
			this.min = DFA63_min;
			this.max = DFA63_max;
			this.accept = DFA63_accept;
			this.special = DFA63_special;
			this.transition = DFA63_transition;
		}
		@Override
		public String getDescription() {
			return "454:29: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA71_eotS =
		"\6\uffff";
	static final String DFA71_eofS =
		"\2\3\4\uffff";
	static final String DFA71_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA71_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA71_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
	static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
	static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
	static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
	static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
	static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
	static final short[][] DFA71_transition;

	static {
		int numStates = DFA71_transitionS.length;
		DFA71_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
		}
	}

	protected class DFA71 extends DFA {

		public DFA71(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}
		@Override
		public String getDescription() {
			return "474:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA71_2 = input.LA(1);
						 
						int index71_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA71_4 = input.LA(1);
						 
						int index71_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 71, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA104_eotS =
		"\4\uffff";
	static final String DFA104_eofS =
		"\1\2\3\uffff";
	static final String DFA104_minS =
		"\2\24\2\uffff";
	static final String DFA104_maxS =
		"\2\u0092\2\uffff";
	static final String DFA104_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA104_specialS =
		"\4\uffff}>";
	static final String[] DFA104_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
	static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
	static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
	static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
	static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
	static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
	static final short[][] DFA104_transition;

	static {
		int numStates = DFA104_transitionS.length;
		DFA104_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
		}
	}

	protected class DFA104 extends DFA {

		public DFA104(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 104;
			this.eot = DFA104_eot;
			this.eof = DFA104_eof;
			this.min = DFA104_min;
			this.max = DFA104_max;
			this.accept = DFA104_accept;
			this.special = DFA104_special;
			this.transition = DFA104_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 556:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA111_eotS =
		"\5\uffff";
	static final String DFA111_eofS =
		"\5\uffff";
	static final String DFA111_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA111_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA111_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA111_specialS =
		"\5\uffff}>";
	static final String[] DFA111_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
	static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
	static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
	static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
	static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
	static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
	static final short[][] DFA111_transition;

	static {
		int numStates = DFA111_transitionS.length;
		DFA111_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
		}
	}

	protected class DFA111 extends DFA {

		public DFA111(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 111;
			this.eot = DFA111_eot;
			this.eof = DFA111_eof;
			this.min = DFA111_min;
			this.max = DFA111_max;
			this.accept = DFA111_accept;
			this.special = DFA111_special;
			this.transition = DFA111_transition;
		}
		@Override
		public String getDescription() {
			return "564:14: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\5\uffff";
	static final String DFA115_eofS =
		"\5\uffff";
	static final String DFA115_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA115_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA115_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA115_specialS =
		"\5\uffff}>";
	static final String[] DFA115_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "564:60: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA135_eotS =
		"\5\uffff";
	static final String DFA135_eofS =
		"\2\2\3\uffff";
	static final String DFA135_minS =
		"\2\6\3\uffff";
	static final String DFA135_maxS =
		"\2\u0092\3\uffff";
	static final String DFA135_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA135_specialS =
		"\5\uffff}>";
	static final String[] DFA135_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
	static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
	static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
	static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
	static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
	static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
	static final short[][] DFA135_transition;

	static {
		int numStates = DFA135_transitionS.length;
		DFA135_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
		}
	}

	protected class DFA135 extends DFA {

		public DFA135(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 135;
			this.eot = DFA135_eot;
			this.eof = DFA135_eof;
			this.min = DFA135_min;
			this.max = DFA135_max;
			this.accept = DFA135_accept;
			this.special = DFA135_special;
			this.transition = DFA135_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 641:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA137_eotS =
		"\6\uffff";
	static final String DFA137_eofS =
		"\6\uffff";
	static final String DFA137_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA137_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA137_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff"+
			"\1\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA137_eot = DFA.unpackEncodedString(DFA137_eotS);
	static final short[] DFA137_eof = DFA.unpackEncodedString(DFA137_eofS);
	static final char[] DFA137_min = DFA.unpackEncodedStringToUnsignedChars(DFA137_minS);
	static final char[] DFA137_max = DFA.unpackEncodedStringToUnsignedChars(DFA137_maxS);
	static final short[] DFA137_accept = DFA.unpackEncodedString(DFA137_acceptS);
	static final short[] DFA137_special = DFA.unpackEncodedString(DFA137_specialS);
	static final short[][] DFA137_transition;

	static {
		int numStates = DFA137_transitionS.length;
		DFA137_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA137_transition[i] = DFA.unpackEncodedString(DFA137_transitionS[i]);
		}
	}

	protected class DFA137 extends DFA {

		public DFA137(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 137;
			this.eot = DFA137_eot;
			this.eof = DFA137_eof;
			this.min = DFA137_min;
			this.max = DFA137_max;
			this.accept = DFA137_accept;
			this.special = DFA137_special;
			this.transition = DFA137_transition;
		}
		@Override
		public String getDescription() {
			return "652:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA137_2 = input.LA(1);
						 
						int index137_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred17_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA137_4 = input.LA(1);
						 
						int index137_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred17_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 137, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA145_eotS =
		"\4\uffff";
	static final String DFA145_eofS =
		"\4\uffff";
	static final String DFA145_minS =
		"\2\6\2\uffff";
	static final String DFA145_maxS =
		"\2\u0092\2\uffff";
	static final String DFA145_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA145_specialS =
		"\4\uffff}>";
	static final String[] DFA145_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3\3"+
			"\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1"+
			"\3\3\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA145_eot = DFA.unpackEncodedString(DFA145_eotS);
	static final short[] DFA145_eof = DFA.unpackEncodedString(DFA145_eofS);
	static final char[] DFA145_min = DFA.unpackEncodedStringToUnsignedChars(DFA145_minS);
	static final char[] DFA145_max = DFA.unpackEncodedStringToUnsignedChars(DFA145_maxS);
	static final short[] DFA145_accept = DFA.unpackEncodedString(DFA145_acceptS);
	static final short[] DFA145_special = DFA.unpackEncodedString(DFA145_specialS);
	static final short[][] DFA145_transition;

	static {
		int numStates = DFA145_transitionS.length;
		DFA145_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA145_transition[i] = DFA.unpackEncodedString(DFA145_transitionS[i]);
		}
	}

	protected class DFA145 extends DFA {

		public DFA145(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 145;
			this.eot = DFA145_eot;
			this.eof = DFA145_eof;
			this.min = DFA145_min;
			this.max = DFA145_max;
			this.accept = DFA145_accept;
			this.special = DFA145_special;
			this.transition = DFA145_transition;
		}
		@Override
		public String getDescription() {
			return "660:85: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA151_eotS =
		"\6\uffff";
	static final String DFA151_eofS =
		"\6\uffff";
	static final String DFA151_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA151_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA151_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA151_specialS =
		"\6\uffff}>";
	static final String[] DFA151_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2\2\2"+
			"\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff"+
			"\1\1\10\uffff\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\1\4\1\uffff\1\4\12\uffff\2\4\2"+
			"\uffff\2\4\2\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1"+
			"\4\7\uffff\1\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15"+
			"\uffff\1\3",
			"",
			""
	};

	static final short[] DFA151_eot = DFA.unpackEncodedString(DFA151_eotS);
	static final short[] DFA151_eof = DFA.unpackEncodedString(DFA151_eofS);
	static final char[] DFA151_min = DFA.unpackEncodedStringToUnsignedChars(DFA151_minS);
	static final char[] DFA151_max = DFA.unpackEncodedStringToUnsignedChars(DFA151_maxS);
	static final short[] DFA151_accept = DFA.unpackEncodedString(DFA151_acceptS);
	static final short[] DFA151_special = DFA.unpackEncodedString(DFA151_specialS);
	static final short[][] DFA151_transition;

	static {
		int numStates = DFA151_transitionS.length;
		DFA151_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA151_transition[i] = DFA.unpackEncodedString(DFA151_transitionS[i]);
		}
	}

	protected class DFA151 extends DFA {

		public DFA151(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 151;
			this.eot = DFA151_eot;
			this.eof = DFA151_eof;
			this.min = DFA151_min;
			this.max = DFA151_max;
			this.accept = DFA151_accept;
			this.special = DFA151_special;
			this.transition = DFA151_transition;
		}
		@Override
		public String getDescription() {
			return "665:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA146_eotS =
		"\4\uffff";
	static final String DFA146_eofS =
		"\4\uffff";
	static final String DFA146_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA146_maxS =
		"\2\u0092\2\uffff";
	static final String DFA146_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA146_specialS =
		"\4\uffff}>";
	static final String[] DFA146_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA146_eot = DFA.unpackEncodedString(DFA146_eotS);
	static final short[] DFA146_eof = DFA.unpackEncodedString(DFA146_eofS);
	static final char[] DFA146_min = DFA.unpackEncodedStringToUnsignedChars(DFA146_minS);
	static final char[] DFA146_max = DFA.unpackEncodedStringToUnsignedChars(DFA146_maxS);
	static final short[] DFA146_accept = DFA.unpackEncodedString(DFA146_acceptS);
	static final short[] DFA146_special = DFA.unpackEncodedString(DFA146_specialS);
	static final short[][] DFA146_transition;

	static {
		int numStates = DFA146_transitionS.length;
		DFA146_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA146_transition[i] = DFA.unpackEncodedString(DFA146_transitionS[i]);
		}
	}

	protected class DFA146 extends DFA {

		public DFA146(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 146;
			this.eot = DFA146_eot;
			this.eof = DFA146_eof;
			this.min = DFA146_min;
			this.max = DFA146_max;
			this.accept = DFA146_accept;
			this.special = DFA146_special;
			this.transition = DFA146_transition;
		}
		@Override
		public String getDescription() {
			return "666:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA168_eotS =
		"\5\uffff";
	static final String DFA168_eofS =
		"\5\uffff";
	static final String DFA168_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA168_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA168_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA168_specialS =
		"\5\uffff}>";
	static final String[] DFA168_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff\4\2\1\1\1\uffff\1\2"+
			"\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			""
	};

	static final short[] DFA168_eot = DFA.unpackEncodedString(DFA168_eotS);
	static final short[] DFA168_eof = DFA.unpackEncodedString(DFA168_eofS);
	static final char[] DFA168_min = DFA.unpackEncodedStringToUnsignedChars(DFA168_minS);
	static final char[] DFA168_max = DFA.unpackEncodedStringToUnsignedChars(DFA168_maxS);
	static final short[] DFA168_accept = DFA.unpackEncodedString(DFA168_acceptS);
	static final short[] DFA168_special = DFA.unpackEncodedString(DFA168_specialS);
	static final short[][] DFA168_transition;

	static {
		int numStates = DFA168_transitionS.length;
		DFA168_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA168_transition[i] = DFA.unpackEncodedString(DFA168_transitionS[i]);
		}
	}

	protected class DFA168 extends DFA {

		public DFA168(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 168;
			this.eot = DFA168_eot;
			this.eof = DFA168_eof;
			this.min = DFA168_min;
			this.max = DFA168_max;
			this.accept = DFA168_accept;
			this.special = DFA168_special;
			this.transition = DFA168_transition;
		}
		@Override
		public String getDescription() {
			return "680:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA161_eotS =
		"\6\uffff";
	static final String DFA161_eofS =
		"\6\uffff";
	static final String DFA161_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA161_maxS =
		"\3\u0092\2\uffff\1\u0092";
	static final String DFA161_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA161_specialS =
		"\6\uffff}>";
	static final String[] DFA161_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5"
	};

	static final short[] DFA161_eot = DFA.unpackEncodedString(DFA161_eotS);
	static final short[] DFA161_eof = DFA.unpackEncodedString(DFA161_eofS);
	static final char[] DFA161_min = DFA.unpackEncodedStringToUnsignedChars(DFA161_minS);
	static final char[] DFA161_max = DFA.unpackEncodedStringToUnsignedChars(DFA161_maxS);
	static final short[] DFA161_accept = DFA.unpackEncodedString(DFA161_acceptS);
	static final short[] DFA161_special = DFA.unpackEncodedString(DFA161_specialS);
	static final short[][] DFA161_transition;

	static {
		int numStates = DFA161_transitionS.length;
		DFA161_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA161_transition[i] = DFA.unpackEncodedString(DFA161_transitionS[i]);
		}
	}

	protected class DFA161 extends DFA {

		public DFA161(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 161;
			this.eot = DFA161_eot;
			this.eof = DFA161_eof;
			this.min = DFA161_min;
			this.max = DFA161_max;
			this.accept = DFA161_accept;
			this.special = DFA161_special;
			this.transition = DFA161_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 682:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA160_eotS =
		"\4\uffff";
	static final String DFA160_eofS =
		"\4\uffff";
	static final String DFA160_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA160_maxS =
		"\2\u0092\2\uffff";
	static final String DFA160_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA160_specialS =
		"\4\uffff}>";
	static final String[] DFA160_transitionS = {
			"\1\1\73\uffff\1\1\55\uffff\1\2\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
	static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
	static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
	static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
	static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
	static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
	static final short[][] DFA160_transition;

	static {
		int numStates = DFA160_transitionS.length;
		DFA160_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
		}
	}

	protected class DFA160 extends DFA {

		public DFA160(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 160;
			this.eot = DFA160_eot;
			this.eof = DFA160_eof;
			this.min = DFA160_min;
			this.max = DFA160_max;
			this.accept = DFA160_accept;
			this.special = DFA160_special;
			this.transition = DFA160_transition;
		}
		@Override
		public String getDescription() {
			return "682:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA165_eotS =
		"\5\uffff";
	static final String DFA165_eofS =
		"\5\uffff";
	static final String DFA165_minS =
		"\2\25\3\uffff";
	static final String DFA165_maxS =
		"\2\u0092\3\uffff";
	static final String DFA165_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA165_specialS =
		"\5\uffff}>";
	static final String[] DFA165_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\1\1\73\uffff\1\1\17\uffff\1\4\35\uffff\1\2\22\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA165_eot = DFA.unpackEncodedString(DFA165_eotS);
	static final short[] DFA165_eof = DFA.unpackEncodedString(DFA165_eofS);
	static final char[] DFA165_min = DFA.unpackEncodedStringToUnsignedChars(DFA165_minS);
	static final char[] DFA165_max = DFA.unpackEncodedStringToUnsignedChars(DFA165_maxS);
	static final short[] DFA165_accept = DFA.unpackEncodedString(DFA165_acceptS);
	static final short[] DFA165_special = DFA.unpackEncodedString(DFA165_specialS);
	static final short[][] DFA165_transition;

	static {
		int numStates = DFA165_transitionS.length;
		DFA165_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA165_transition[i] = DFA.unpackEncodedString(DFA165_transitionS[i]);
		}
	}

	protected class DFA165 extends DFA {

		public DFA165(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 165;
			this.eot = DFA165_eot;
			this.eof = DFA165_eof;
			this.min = DFA165_min;
			this.max = DFA165_max;
			this.accept = DFA165_accept;
			this.special = DFA165_special;
			this.transition = DFA165_transition;
		}
		@Override
		public String getDescription() {
			return "682:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA170_eotS =
		"\4\uffff";
	static final String DFA170_eofS =
		"\4\uffff";
	static final String DFA170_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA170_maxS =
		"\2\u0092\2\uffff";
	static final String DFA170_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA170_specialS =
		"\4\uffff}>";
	static final String[] DFA170_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA170_eot = DFA.unpackEncodedString(DFA170_eotS);
	static final short[] DFA170_eof = DFA.unpackEncodedString(DFA170_eofS);
	static final char[] DFA170_min = DFA.unpackEncodedStringToUnsignedChars(DFA170_minS);
	static final char[] DFA170_max = DFA.unpackEncodedStringToUnsignedChars(DFA170_maxS);
	static final short[] DFA170_accept = DFA.unpackEncodedString(DFA170_acceptS);
	static final short[] DFA170_special = DFA.unpackEncodedString(DFA170_specialS);
	static final short[][] DFA170_transition;

	static {
		int numStates = DFA170_transitionS.length;
		DFA170_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA170_transition[i] = DFA.unpackEncodedString(DFA170_transitionS[i]);
		}
	}

	protected class DFA170 extends DFA {

		public DFA170(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 170;
			this.eot = DFA170_eot;
			this.eof = DFA170_eof;
			this.min = DFA170_min;
			this.max = DFA170_max;
			this.accept = DFA170_accept;
			this.special = DFA170_special;
			this.transition = DFA170_transition;
		}
		@Override
		public String getDescription() {
			return "696:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA172_eotS =
		"\4\uffff";
	static final String DFA172_eofS =
		"\4\uffff";
	static final String DFA172_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA172_maxS =
		"\2\u0092\2\uffff";
	static final String DFA172_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA172_specialS =
		"\4\uffff}>";
	static final String[] DFA172_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
	static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
	static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
	static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
	static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
	static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
	static final short[][] DFA172_transition;

	static {
		int numStates = DFA172_transitionS.length;
		DFA172_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
		}
	}

	protected class DFA172 extends DFA {

		public DFA172(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 172;
			this.eot = DFA172_eot;
			this.eof = DFA172_eof;
			this.min = DFA172_min;
			this.max = DFA172_max;
			this.accept = DFA172_accept;
			this.special = DFA172_special;
			this.transition = DFA172_transition;
		}
		@Override
		public String getDescription() {
			return "697:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA176_eotS =
		"\6\uffff";
	static final String DFA176_eofS =
		"\6\uffff";
	static final String DFA176_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA176_maxS =
		"\3\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA176_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA176_specialS =
		"\6\uffff}>";
	static final String[] DFA176_transitionS = {
			"\1\1\1\2\44\uffff\1\3\26\uffff\1\2\26\uffff\1\3\51\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\11\uffff\1\3\12\uffff\1\5\15\uffff\1\5\2\uffff\1\5"+
			"\15\uffff\1\4",
			"\1\5\1\2\44\uffff\1\3\26\uffff\1\2\100\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\24\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			""
	};

	static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
	static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
	static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
	static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
	static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
	static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
	static final short[][] DFA176_transition;

	static {
		int numStates = DFA176_transitionS.length;
		DFA176_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
		}
	}

	protected class DFA176 extends DFA {

		public DFA176(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 176;
			this.eot = DFA176_eot;
			this.eof = DFA176_eof;
			this.min = DFA176_min;
			this.max = DFA176_max;
			this.accept = DFA176_accept;
			this.special = DFA176_special;
			this.transition = DFA176_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 715:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA184_eotS =
		"\5\uffff";
	static final String DFA184_eofS =
		"\5\uffff";
	static final String DFA184_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA184_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA184_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA184_specialS =
		"\5\uffff}>";
	static final String[] DFA184_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\1\2\1\1\2\uffff\2"+
			"\2\2\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1"+
			"\24\uffff\1\2\15\uffff\1\2\2\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\1\2\1\uffff\1\2\12\uffff\1\2\3\uffff"+
			"\2\2\2\uffff\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3"+
			"\13\uffff\1\2\12\uffff\1\4\12\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\1\2\1\uffff\1\2\12\uffff\1\2\3\uffff"+
			"\2\2\2\uffff\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3"+
			"\13\uffff\1\2\25\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			""
	};

	static final short[] DFA184_eot = DFA.unpackEncodedString(DFA184_eotS);
	static final short[] DFA184_eof = DFA.unpackEncodedString(DFA184_eofS);
	static final char[] DFA184_min = DFA.unpackEncodedStringToUnsignedChars(DFA184_minS);
	static final char[] DFA184_max = DFA.unpackEncodedStringToUnsignedChars(DFA184_maxS);
	static final short[] DFA184_accept = DFA.unpackEncodedString(DFA184_acceptS);
	static final short[] DFA184_special = DFA.unpackEncodedString(DFA184_specialS);
	static final short[][] DFA184_transition;

	static {
		int numStates = DFA184_transitionS.length;
		DFA184_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA184_transition[i] = DFA.unpackEncodedString(DFA184_transitionS[i]);
		}
	}

	protected class DFA184 extends DFA {

		public DFA184(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 184;
			this.eot = DFA184_eot;
			this.eof = DFA184_eof;
			this.min = DFA184_min;
			this.max = DFA184_max;
			this.accept = DFA184_accept;
			this.special = DFA184_special;
			this.transition = DFA184_transition;
		}
		@Override
		public String getDescription() {
			return "718:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA183_eotS =
		"\4\uffff";
	static final String DFA183_eofS =
		"\4\uffff";
	static final String DFA183_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA183_maxS =
		"\2\u0092\2\uffff";
	static final String DFA183_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA183_specialS =
		"\4\uffff}>";
	static final String[] DFA183_transitionS = {
			"\1\2\1\1\25\uffff\1\3\16\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\33\uffff\1\3\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1"+
			"\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA183_eot = DFA.unpackEncodedString(DFA183_eotS);
	static final short[] DFA183_eof = DFA.unpackEncodedString(DFA183_eofS);
	static final char[] DFA183_min = DFA.unpackEncodedStringToUnsignedChars(DFA183_minS);
	static final char[] DFA183_max = DFA.unpackEncodedStringToUnsignedChars(DFA183_maxS);
	static final short[] DFA183_accept = DFA.unpackEncodedString(DFA183_acceptS);
	static final short[] DFA183_special = DFA.unpackEncodedString(DFA183_specialS);
	static final short[][] DFA183_transition;

	static {
		int numStates = DFA183_transitionS.length;
		DFA183_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA183_transition[i] = DFA.unpackEncodedString(DFA183_transitionS[i]);
		}
	}

	protected class DFA183 extends DFA {

		public DFA183(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 183;
			this.eot = DFA183_eot;
			this.eof = DFA183_eof;
			this.min = DFA183_min;
			this.max = DFA183_max;
			this.accept = DFA183_accept;
			this.special = DFA183_special;
			this.transition = DFA183_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 719:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA182_eotS =
		"\4\uffff";
	static final String DFA182_eofS =
		"\4\uffff";
	static final String DFA182_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA182_maxS =
		"\2\u0092\2\uffff";
	static final String DFA182_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA182_specialS =
		"\4\uffff}>";
	static final String[] DFA182_transitionS = {
			"\1\1\25\uffff\1\2\45\uffff\1\1\14\uffff\1\2\45\uffff\1\2\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\1\3\1"+
			"\2\2\uffff\2\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\1\3\1\2\24\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff"+
			"\1\1",
			"",
			""
	};

	static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
	static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
	static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
	static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
	static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
	static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
	static final short[][] DFA182_transition;

	static {
		int numStates = DFA182_transitionS.length;
		DFA182_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
		}
	}

	protected class DFA182 extends DFA {

		public DFA182(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 182;
			this.eot = DFA182_eot;
			this.eof = DFA182_eof;
			this.min = DFA182_min;
			this.max = DFA182_max;
			this.accept = DFA182_accept;
			this.special = DFA182_special;
			this.transition = DFA182_transition;
		}
		@Override
		public String getDescription() {
			return "719:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA188_eotS =
		"\5\uffff";
	static final String DFA188_eofS =
		"\5\uffff";
	static final String DFA188_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA188_maxS =
		"\2\u0092\1\uffff\1\117\1\uffff";
	static final String DFA188_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA188_specialS =
		"\5\uffff}>";
	static final String[] DFA188_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13\uffff\1\2\5"+
			"\uffff\1\2\17\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1"+
			"\3\2\uffff\1\4\10\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff"+
			"\1\2\36\uffff\1\1",
			"",
			"\1\2\52\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
	static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
	static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
	static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
	static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
	static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
	static final short[][] DFA188_transition;

	static {
		int numStates = DFA188_transitionS.length;
		DFA188_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
		}
	}

	protected class DFA188 extends DFA {

		public DFA188(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 188;
			this.eot = DFA188_eot;
			this.eof = DFA188_eof;
			this.min = DFA188_min;
			this.max = DFA188_max;
			this.accept = DFA188_accept;
			this.special = DFA188_special;
			this.transition = DFA188_transition;
		}
		@Override
		public String getDescription() {
			return "731:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA191_eotS =
		"\5\uffff";
	static final String DFA191_eofS =
		"\5\uffff";
	static final String DFA191_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA191_maxS =
		"\2\u0092\1\uffff\1\117\1\uffff";
	static final String DFA191_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA191_specialS =
		"\5\uffff}>";
	static final String[] DFA191_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13\uffff\1\2\5"+
			"\uffff\1\2\17\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1\3\2\uffff\1"+
			"\4\10\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\36\uffff"+
			"\1\1",
			"",
			"\1\2\52\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA191_eot = DFA.unpackEncodedString(DFA191_eotS);
	static final short[] DFA191_eof = DFA.unpackEncodedString(DFA191_eofS);
	static final char[] DFA191_min = DFA.unpackEncodedStringToUnsignedChars(DFA191_minS);
	static final char[] DFA191_max = DFA.unpackEncodedStringToUnsignedChars(DFA191_maxS);
	static final short[] DFA191_accept = DFA.unpackEncodedString(DFA191_acceptS);
	static final short[] DFA191_special = DFA.unpackEncodedString(DFA191_specialS);
	static final short[][] DFA191_transition;

	static {
		int numStates = DFA191_transitionS.length;
		DFA191_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA191_transition[i] = DFA.unpackEncodedString(DFA191_transitionS[i]);
		}
	}

	protected class DFA191 extends DFA {

		public DFA191(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 191;
			this.eot = DFA191_eot;
			this.eof = DFA191_eof;
			this.min = DFA191_min;
			this.max = DFA191_max;
			this.accept = DFA191_accept;
			this.special = DFA191_special;
			this.transition = DFA191_transition;
		}
		@Override
		public String getDescription() {
			return "732:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA213_eotS =
		"\4\uffff";
	static final String DFA213_eofS =
		"\2\3\2\uffff";
	static final String DFA213_minS =
		"\2\6\2\uffff";
	static final String DFA213_maxS =
		"\2\u0092\2\uffff";
	static final String DFA213_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA213_specialS =
		"\4\uffff}>";
	static final String[] DFA213_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\11\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA213_eot = DFA.unpackEncodedString(DFA213_eotS);
	static final short[] DFA213_eof = DFA.unpackEncodedString(DFA213_eofS);
	static final char[] DFA213_min = DFA.unpackEncodedStringToUnsignedChars(DFA213_minS);
	static final char[] DFA213_max = DFA.unpackEncodedStringToUnsignedChars(DFA213_maxS);
	static final short[] DFA213_accept = DFA.unpackEncodedString(DFA213_acceptS);
	static final short[] DFA213_special = DFA.unpackEncodedString(DFA213_specialS);
	static final short[][] DFA213_transition;

	static {
		int numStates = DFA213_transitionS.length;
		DFA213_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA213_transition[i] = DFA.unpackEncodedString(DFA213_transitionS[i]);
		}
	}

	protected class DFA213 extends DFA {

		public DFA213(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 213;
			this.eot = DFA213_eot;
			this.eof = DFA213_eof;
			this.min = DFA213_min;
			this.max = DFA213_max;
			this.accept = DFA213_accept;
			this.special = DFA213_special;
			this.transition = DFA213_transition;
		}
		@Override
		public String getDescription() {
			return "845:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA229_eotS =
		"\4\uffff";
	static final String DFA229_eofS =
		"\1\3\3\uffff";
	static final String DFA229_minS =
		"\2\6\2\uffff";
	static final String DFA229_maxS =
		"\2\u0092\2\uffff";
	static final String DFA229_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA229_specialS =
		"\4\uffff}>";
	static final String[] DFA229_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA229_eot = DFA.unpackEncodedString(DFA229_eotS);
	static final short[] DFA229_eof = DFA.unpackEncodedString(DFA229_eofS);
	static final char[] DFA229_min = DFA.unpackEncodedStringToUnsignedChars(DFA229_minS);
	static final char[] DFA229_max = DFA.unpackEncodedStringToUnsignedChars(DFA229_maxS);
	static final short[] DFA229_accept = DFA.unpackEncodedString(DFA229_acceptS);
	static final short[] DFA229_special = DFA.unpackEncodedString(DFA229_specialS);
	static final short[][] DFA229_transition;

	static {
		int numStates = DFA229_transitionS.length;
		DFA229_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA229_transition[i] = DFA.unpackEncodedString(DFA229_transitionS[i]);
		}
	}

	protected class DFA229 extends DFA {

		public DFA229(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 229;
			this.eot = DFA229_eot;
			this.eof = DFA229_eof;
			this.min = DFA229_min;
			this.max = DFA229_max;
			this.accept = DFA229_accept;
			this.special = DFA229_special;
			this.transition = DFA229_transition;
		}
		@Override
		public String getDescription() {
			return "860:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA236_eotS =
		"\74\uffff";
	static final String DFA236_eofS =
		"\1\2\73\uffff";
	static final String DFA236_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\1\0\2\uffff\3\0\2\uffff\20\0"+
		"\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA236_maxS =
		"\1\u0092\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\1\0\2\uffff\3\0\2\uffff\20"+
		"\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA236_acceptS =
		"\2\uffff\1\2\47\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA236_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\2\uffff"+
		"\1\12\1\13\1\14\2\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1"+
		"\26\1\27\1\30\1\31\1\32\1\33\1\34\2\uffff\1\35\1\uffff\1\36\20\uffff}>";
	static final String[] DFA236_transitionS = {
			"\1\62\1\12\1\23\2\uffff\5\46\3\uffff\1\46\1\2\1\51\1\1\1\uffff\1\46\5"+
			"\uffff\1\2\1\66\1\2\1\uffff\1\57\3\uffff\1\61\1\uffff\1\41\1\64\1\uffff"+
			"\1\27\1\2\2\uffff\1\10\1\17\2\uffff\1\22\1\2\1\37\5\uffff\2\2\3\46\1"+
			"\56\1\uffff\1\6\1\71\5\uffff\1\44\1\24\1\42\5\uffff\1\46\1\1\4\uffff"+
			"\1\54\3\uffff\1\40\1\55\1\73\1\2\1\15\2\uffff\1\2\1\uffff\1\60\1\65\3"+
			"\46\1\2\1\uffff\1\14\1\36\1\30\1\uffff\1\34\1\46\2\uffff\1\45\1\2\1\33"+
			"\1\46\1\uffff\1\32\1\13\1\11\1\uffff\1\46\1\31\1\30\1\35\1\2\1\52\1\2"+
			"\1\67\1\uffff\1\53\1\63\5\46\2\uffff\1\72\3\uffff\1\43\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA236_eot = DFA.unpackEncodedString(DFA236_eotS);
	static final short[] DFA236_eof = DFA.unpackEncodedString(DFA236_eofS);
	static final char[] DFA236_min = DFA.unpackEncodedStringToUnsignedChars(DFA236_minS);
	static final char[] DFA236_max = DFA.unpackEncodedStringToUnsignedChars(DFA236_maxS);
	static final short[] DFA236_accept = DFA.unpackEncodedString(DFA236_acceptS);
	static final short[] DFA236_special = DFA.unpackEncodedString(DFA236_specialS);
	static final short[][] DFA236_transition;

	static {
		int numStates = DFA236_transitionS.length;
		DFA236_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA236_transition[i] = DFA.unpackEncodedString(DFA236_transitionS[i]);
		}
	}

	protected class DFA236 extends DFA {

		public DFA236(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 236;
			this.eot = DFA236_eot;
			this.eof = DFA236_eof;
			this.min = DFA236_min;
			this.max = DFA236_max;
			this.accept = DFA236_accept;
			this.special = DFA236_special;
			this.transition = DFA236_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 927:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA236_0 = input.LA(1);
						 
						int index236_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA236_0==COMMENT||LA236_0==NL||LA236_0==WS) ) {s = 1;}
						else if ( (LA236_0==EOF||LA236_0==COLON||LA236_0==DCOLON||LA236_0==DOT||LA236_0==GREATER||LA236_0==IMPORTANT_SYM||(LA236_0 >= LBRACE && LA236_0 <= LBRACKET)||LA236_0==PIPE||LA236_0==RBRACE||LA236_0==RPAREN||LA236_0==SASS_EXTEND_ONLY_SELECTOR||LA236_0==SEMI||LA236_0==STAR) ) {s = 2;}
						else if ( (LA236_0==LESS_AND) ) {s = 6;}
						else if ( (LA236_0==HASH) ) {s = 8;}
						else if ( (LA236_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA236_0==AT_IDENT) ) {s = 10;}
						else if ( (LA236_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA236_0==SASS_AT_ROOT) ) {s = 12;}
						else if ( (LA236_0==PLUS) ) {s = 13;}
						else if ( (LA236_0==HASH_SYMBOL) ) {s = 15;}
						else if ( (LA236_0==IDENT) ) {s = 18;}
						else if ( (LA236_0==AT_SIGN) ) {s = 19;}
						else if ( (LA236_0==MINUS) ) {s = 20;}
						else if ( (LA236_0==GEN) ) {s = 23;}
						else if ( (LA236_0==SASS_DEBUG||LA236_0==SASS_WARN) ) {s = 24;}
						else if ( (LA236_0==SASS_VAR) ) {s = 25;}
						else if ( (LA236_0==SASS_IF) ) {s = 26;}
						else if ( (LA236_0==SASS_FOR) ) {s = 27;}
						else if ( (LA236_0==SASS_EACH) ) {s = 28;}
						else if ( (LA236_0==SASS_WHILE) ) {s = 29;}
						else if ( (LA236_0==SASS_CONTENT) ) {s = 30;}
						else if ( (LA236_0==IMPORT_SYM) ) {s = 31;}
						else if ( (LA236_0==PAGE_SYM) ) {s = 32;}
						else if ( (LA236_0==FONT_FACE_SYM) ) {s = 33;}
						else if ( (LA236_0==MOZ_DOCUMENT_SYM) ) {s = 34;}
						else if ( (LA236_0==WEBKIT_KEYFRAMES_SYM) ) {s = 35;}
						else if ( (LA236_0==MEDIA_SYM) ) {s = 36;}
						else if ( (LA236_0==SASS_EXTEND) ) {s = 37;}
						else if ( ((LA236_0 >= BOTTOMCENTER_SYM && LA236_0 <= BOTTOMRIGHT_SYM)||LA236_0==CHARSET_SYM||LA236_0==COUNTER_STYLE_SYM||(LA236_0 >= LEFTBOTTOM_SYM && LA236_0 <= LEFTTOP_SYM)||LA236_0==NAMESPACE_SYM||(LA236_0 >= RIGHTBOTTOM_SYM && LA236_0 <= RIGHTTOP_SYM)||LA236_0==SASS_ELSE||LA236_0==SASS_FUNCTION||LA236_0==SASS_RETURN||(LA236_0 >= TOPCENTER_SYM && LA236_0 <= TOPRIGHT_SYM)) ) {s = 38;}
						else if ( (LA236_0==COMMA) ) {s = 41;}
						else if ( (LA236_0==SOLIDUS) && (synpred32_Css3())) {s = 42;}
						else if ( (LA236_0==TILDE) ) {s = 43;}
						else if ( (LA236_0==NUMBER) && (synpred32_Css3())) {s = 44;}
						else if ( (LA236_0==PERCENTAGE) && (synpred32_Css3())) {s = 45;}
						else if ( (LA236_0==LENGTH) && (synpred32_Css3())) {s = 46;}
						else if ( (LA236_0==EMS) && (synpred32_Css3())) {s = 47;}
						else if ( (LA236_0==REM) && (synpred32_Css3())) {s = 48;}
						else if ( (LA236_0==EXS) && (synpred32_Css3())) {s = 49;}
						else if ( (LA236_0==ANGLE) && (synpred32_Css3())) {s = 50;}
						else if ( (LA236_0==TIME) && (synpred32_Css3())) {s = 51;}
						else if ( (LA236_0==FREQ) && (synpred32_Css3())) {s = 52;}
						else if ( (LA236_0==RESOLUTION) && (synpred32_Css3())) {s = 53;}
						else if ( (LA236_0==DIMENSION) && (synpred32_Css3())) {s = 54;}
						else if ( (LA236_0==STRING) && (synpred32_Css3())) {s = 55;}
						else if ( (LA236_0==LESS_JS_STRING) && (synpred32_Css3())) {s = 57;}
						else if ( (LA236_0==URI) && (synpred32_Css3())) {s = 58;}
						else if ( (LA236_0==PERCENTAGE_SYMBOL) && (synpred32_Css3())) {s = 59;}
						 
						input.seek(index236_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA236_1 = input.LA(1);
						 
						int index236_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA236_6 = input.LA(1);
						 
						int index236_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_6);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA236_8 = input.LA(1);
						 
						int index236_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA236_9 = input.LA(1);
						 
						int index236_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_9);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA236_10 = input.LA(1);
						 
						int index236_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_10);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA236_11 = input.LA(1);
						 
						int index236_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_11);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA236_12 = input.LA(1);
						 
						int index236_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_12);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA236_13 = input.LA(1);
						 
						int index236_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_13);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA236_15 = input.LA(1);
						 
						int index236_15 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA236_18 = input.LA(1);
						 
						int index236_18 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_18);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA236_19 = input.LA(1);
						 
						int index236_19 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred32_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index236_19);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA236_20 = input.LA(1);
						 
						int index236_20 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_20);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA236_23 = input.LA(1);
						 
						int index236_23 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_23);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA236_24 = input.LA(1);
						 
						int index236_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_24);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA236_25 = input.LA(1);
						 
						int index236_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_25);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA236_26 = input.LA(1);
						 
						int index236_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_26);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA236_27 = input.LA(1);
						 
						int index236_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_27);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA236_28 = input.LA(1);
						 
						int index236_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_28);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA236_29 = input.LA(1);
						 
						int index236_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_29);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA236_30 = input.LA(1);
						 
						int index236_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_30);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA236_31 = input.LA(1);
						 
						int index236_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index236_31);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA236_32 = input.LA(1);
						 
						int index236_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_32);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA236_33 = input.LA(1);
						 
						int index236_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_33);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA236_34 = input.LA(1);
						 
						int index236_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_34);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA236_35 = input.LA(1);
						 
						int index236_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA236_36 = input.LA(1);
						 
						int index236_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA236_37 = input.LA(1);
						 
						int index236_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index236_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA236_38 = input.LA(1);
						 
						int index236_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index236_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA236_41 = input.LA(1);
						 
						int index236_41 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_41);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA236_43 = input.LA(1);
						 
						int index236_43 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index236_43);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 236, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA235_eotS =
		"\5\uffff";
	static final String DFA235_eofS =
		"\5\uffff";
	static final String DFA235_minS =
		"\2\5\3\uffff";
	static final String DFA235_maxS =
		"\2\u0092\3\uffff";
	static final String DFA235_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA235_specialS =
		"\5\uffff}>";
	static final String[] DFA235_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA235_eot = DFA.unpackEncodedString(DFA235_eotS);
	static final short[] DFA235_eof = DFA.unpackEncodedString(DFA235_eofS);
	static final char[] DFA235_min = DFA.unpackEncodedStringToUnsignedChars(DFA235_minS);
	static final char[] DFA235_max = DFA.unpackEncodedStringToUnsignedChars(DFA235_maxS);
	static final short[] DFA235_accept = DFA.unpackEncodedString(DFA235_acceptS);
	static final short[] DFA235_special = DFA.unpackEncodedString(DFA235_specialS);
	static final short[][] DFA235_transition;

	static {
		int numStates = DFA235_transitionS.length;
		DFA235_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA235_transition[i] = DFA.unpackEncodedString(DFA235_transitionS[i]);
		}
	}

	protected class DFA235 extends DFA {

		public DFA235(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 235;
			this.eot = DFA235_eot;
			this.eof = DFA235_eof;
			this.min = DFA235_min;
			this.max = DFA235_max;
			this.accept = DFA235_accept;
			this.special = DFA235_special;
			this.transition = DFA235_transition;
		}
		@Override
		public String getDescription() {
			return "927:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA248_eotS =
		"\4\uffff";
	static final String DFA248_eofS =
		"\4\uffff";
	static final String DFA248_minS =
		"\2\24\2\uffff";
	static final String DFA248_maxS =
		"\2\u0092\2\uffff";
	static final String DFA248_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA248_specialS =
		"\4\uffff}>";
	static final String[] DFA248_transitionS = {
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA248_eot = DFA.unpackEncodedString(DFA248_eotS);
	static final short[] DFA248_eof = DFA.unpackEncodedString(DFA248_eofS);
	static final char[] DFA248_min = DFA.unpackEncodedStringToUnsignedChars(DFA248_minS);
	static final char[] DFA248_max = DFA.unpackEncodedStringToUnsignedChars(DFA248_maxS);
	static final short[] DFA248_accept = DFA.unpackEncodedString(DFA248_acceptS);
	static final short[] DFA248_special = DFA.unpackEncodedString(DFA248_specialS);
	static final short[][] DFA248_transition;

	static {
		int numStates = DFA248_transitionS.length;
		DFA248_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA248_transition[i] = DFA.unpackEncodedString(DFA248_transitionS[i]);
		}
	}

	protected class DFA248 extends DFA {

		public DFA248(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 248;
			this.eot = DFA248_eot;
			this.eof = DFA248_eof;
			this.min = DFA248_min;
			this.max = DFA248_max;
			this.accept = DFA248_accept;
			this.special = DFA248_special;
			this.transition = DFA248_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 992:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA258_eotS =
		"\43\uffff";
	static final String DFA258_eofS =
		"\43\uffff";
	static final String DFA258_minS =
		"\2\5\41\uffff";
	static final String DFA258_maxS =
		"\2\u0092\41\uffff";
	static final String DFA258_acceptS =
		"\2\uffff\1\2\40\1";
	static final String DFA258_specialS =
		"\1\1\1\0\41\uffff}>";
	static final String[] DFA258_transitionS = {
			"\1\14\1\27\1\33\2\uffff\5\27\3\uffff\1\27\1\uffff\1\2\1\1\1\uffff\1\27"+
			"\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\27\1\16\1\uffff\1\24"+
			"\3\uffff\1\26\1\32\2\uffff\1\5\1\uffff\1\27\7\uffff\3\27\1\10\1\uffff"+
			"\1\31\1\23\5\uffff\1\27\1\4\1\27\5\uffff\1\27\1\1\4\uffff\1\6\3\uffff"+
			"\1\27\1\7\1\34\1\uffff\1\4\4\uffff\1\12\1\17\3\27\1\2\1\uffff\3\27\1"+
			"\uffff\2\27\2\uffff\1\27\1\uffff\2\27\1\uffff\3\27\1\uffff\1\27\1\30"+
			"\2\27\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\27\2\uffff\1\25\3\uffff"+
			"\1\27\1\1",
			"\1\14\1\35\1\41\2\uffff\5\35\3\uffff\1\35\1\uffff\1\2\1\1\1\uffff\1"+
			"\35\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\35\1\16\1\uffff"+
			"\1\24\3\uffff\1\26\1\40\2\uffff\1\5\1\uffff\1\35\7\uffff\3\35\1\10\1"+
			"\uffff\1\37\1\23\5\uffff\1\35\1\4\1\35\5\uffff\1\35\1\1\4\uffff\1\6\3"+
			"\uffff\1\35\1\7\1\42\1\uffff\1\4\4\uffff\1\12\1\17\3\35\1\2\1\uffff\3"+
			"\35\1\uffff\2\35\2\uffff\1\35\1\uffff\2\35\1\uffff\3\35\1\uffff\1\35"+
			"\1\36\2\35\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\35\2\uffff\1\25\3"+
			"\uffff\1\35\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA258_eot = DFA.unpackEncodedString(DFA258_eotS);
	static final short[] DFA258_eof = DFA.unpackEncodedString(DFA258_eofS);
	static final char[] DFA258_min = DFA.unpackEncodedStringToUnsignedChars(DFA258_minS);
	static final char[] DFA258_max = DFA.unpackEncodedStringToUnsignedChars(DFA258_maxS);
	static final short[] DFA258_accept = DFA.unpackEncodedString(DFA258_acceptS);
	static final short[] DFA258_special = DFA.unpackEncodedString(DFA258_specialS);
	static final short[][] DFA258_transition;

	static {
		int numStates = DFA258_transitionS.length;
		DFA258_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA258_transition[i] = DFA.unpackEncodedString(DFA258_transitionS[i]);
		}
	}

	protected class DFA258 extends DFA {

		public DFA258(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 258;
			this.eot = DFA258_eot;
			this.eof = DFA258_eof;
			this.min = DFA258_min;
			this.max = DFA258_max;
			this.accept = DFA258_accept;
			this.special = DFA258_special;
			this.transition = DFA258_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1010:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA258_1 = input.LA(1);
						 
						int index258_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA258_1==COMMA||LA258_1==RPAREN||LA258_1==SEMI) ) {s = 2;}
						else if ( (LA258_1==COMMENT||LA258_1==NL||LA258_1==WS) ) {s = 1;}
						else if ( (LA258_1==MINUS||LA258_1==PLUS) && (synpred36_Css3())) {s = 4;}
						else if ( (LA258_1==IDENT) && (synpred36_Css3())) {s = 5;}
						else if ( (LA258_1==NUMBER) && (synpred36_Css3())) {s = 6;}
						else if ( (LA258_1==PERCENTAGE) && (synpred36_Css3())) {s = 7;}
						else if ( (LA258_1==LENGTH) && (synpred36_Css3())) {s = 8;}
						else if ( (LA258_1==EMS) && (synpred36_Css3())) {s = 9;}
						else if ( (LA258_1==REM) && (synpred36_Css3())) {s = 10;}
						else if ( (LA258_1==EXS) && (synpred36_Css3())) {s = 11;}
						else if ( (LA258_1==ANGLE) && (synpred36_Css3())) {s = 12;}
						else if ( (LA258_1==TIME) && (synpred36_Css3())) {s = 13;}
						else if ( (LA258_1==FREQ) && (synpred36_Css3())) {s = 14;}
						else if ( (LA258_1==RESOLUTION) && (synpred36_Css3())) {s = 15;}
						else if ( (LA258_1==DIMENSION) && (synpred36_Css3())) {s = 16;}
						else if ( (LA258_1==STRING) && (synpred36_Css3())) {s = 17;}
						else if ( (LA258_1==TILDE) && (synpred36_Css3())) {s = 18;}
						else if ( (LA258_1==LESS_JS_STRING) && (synpred36_Css3())) {s = 19;}
						else if ( (LA258_1==GEN) && (synpred36_Css3())) {s = 20;}
						else if ( (LA258_1==URI) && (synpred36_Css3())) {s = 21;}
						else if ( (LA258_1==HASH) && (synpred36_Css3())) {s = 22;}
						else if ( (LA258_1==AT_IDENT||(LA258_1 >= BOTTOMCENTER_SYM && LA258_1 <= BOTTOMRIGHT_SYM)||LA258_1==CHARSET_SYM||LA258_1==COUNTER_STYLE_SYM||LA258_1==FONT_FACE_SYM||LA258_1==IMPORT_SYM||(LA258_1 >= LEFTBOTTOM_SYM && LA258_1 <= LEFTTOP_SYM)||LA258_1==MEDIA_SYM||LA258_1==MOZ_DOCUMENT_SYM||LA258_1==NAMESPACE_SYM||LA258_1==PAGE_SYM||(LA258_1 >= RIGHTBOTTOM_SYM && LA258_1 <= RIGHTTOP_SYM)||(LA258_1 >= SASS_AT_ROOT && LA258_1 <= SASS_DEBUG)||(LA258_1 >= SASS_EACH && LA258_1 <= SASS_ELSE)||LA258_1==SASS_EXTEND||(LA258_1 >= SASS_FOR && LA258_1 <= SASS_FUNCTION)||(LA258_1 >= SASS_IF && LA258_1 <= SASS_MIXIN)||LA258_1==SASS_RETURN||(LA258_1 >= SASS_WARN && LA258_1 <= SASS_WHILE)||(LA258_1 >= TOPCENTER_SYM && LA258_1 <= TOPRIGHT_SYM)||LA258_1==WEBKIT_KEYFRAMES_SYM) && (synpred36_Css3())) {s = 29;}
						else if ( (LA258_1==SASS_VAR) && (synpred36_Css3())) {s = 30;}
						else if ( (LA258_1==LESS_AND) && (synpred36_Css3())) {s = 31;}
						else if ( (LA258_1==HASH_SYMBOL) && (synpred36_Css3())) {s = 32;}
						else if ( (LA258_1==AT_SIGN) && (synpred36_Css3())) {s = 33;}
						else if ( (LA258_1==PERCENTAGE_SYMBOL) && (synpred36_Css3())) {s = 34;}
						else if ( (LA258_1==SOLIDUS) && (synpred36_Css3())) {s = 3;}
						 
						input.seek(index258_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA258_0 = input.LA(1);
						 
						int index258_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {s = 1;}
						else if ( (LA258_0==COMMA||LA258_0==RPAREN||LA258_0==SEMI) ) {s = 2;}
						else if ( (LA258_0==SOLIDUS) && (synpred36_Css3())) {s = 3;}
						else if ( (LA258_0==MINUS||LA258_0==PLUS) && (synpred36_Css3())) {s = 4;}
						else if ( (LA258_0==IDENT) && (synpred36_Css3())) {s = 5;}
						else if ( (LA258_0==NUMBER) && (synpred36_Css3())) {s = 6;}
						else if ( (LA258_0==PERCENTAGE) && (synpred36_Css3())) {s = 7;}
						else if ( (LA258_0==LENGTH) && (synpred36_Css3())) {s = 8;}
						else if ( (LA258_0==EMS) && (synpred36_Css3())) {s = 9;}
						else if ( (LA258_0==REM) && (synpred36_Css3())) {s = 10;}
						else if ( (LA258_0==EXS) && (synpred36_Css3())) {s = 11;}
						else if ( (LA258_0==ANGLE) && (synpred36_Css3())) {s = 12;}
						else if ( (LA258_0==TIME) && (synpred36_Css3())) {s = 13;}
						else if ( (LA258_0==FREQ) && (synpred36_Css3())) {s = 14;}
						else if ( (LA258_0==RESOLUTION) && (synpred36_Css3())) {s = 15;}
						else if ( (LA258_0==DIMENSION) && (synpred36_Css3())) {s = 16;}
						else if ( (LA258_0==STRING) && (synpred36_Css3())) {s = 17;}
						else if ( (LA258_0==TILDE) && (synpred36_Css3())) {s = 18;}
						else if ( (LA258_0==LESS_JS_STRING) && (synpred36_Css3())) {s = 19;}
						else if ( (LA258_0==GEN) && (synpred36_Css3())) {s = 20;}
						else if ( (LA258_0==URI) && (synpred36_Css3())) {s = 21;}
						else if ( (LA258_0==HASH) && (synpred36_Css3())) {s = 22;}
						else if ( (LA258_0==AT_IDENT||(LA258_0 >= BOTTOMCENTER_SYM && LA258_0 <= BOTTOMRIGHT_SYM)||LA258_0==CHARSET_SYM||LA258_0==COUNTER_STYLE_SYM||LA258_0==FONT_FACE_SYM||LA258_0==IMPORT_SYM||(LA258_0 >= LEFTBOTTOM_SYM && LA258_0 <= LEFTTOP_SYM)||LA258_0==MEDIA_SYM||LA258_0==MOZ_DOCUMENT_SYM||LA258_0==NAMESPACE_SYM||LA258_0==PAGE_SYM||(LA258_0 >= RIGHTBOTTOM_SYM && LA258_0 <= RIGHTTOP_SYM)||(LA258_0 >= SASS_AT_ROOT && LA258_0 <= SASS_DEBUG)||(LA258_0 >= SASS_EACH && LA258_0 <= SASS_ELSE)||LA258_0==SASS_EXTEND||(LA258_0 >= SASS_FOR && LA258_0 <= SASS_FUNCTION)||(LA258_0 >= SASS_IF && LA258_0 <= SASS_MIXIN)||LA258_0==SASS_RETURN||(LA258_0 >= SASS_WARN && LA258_0 <= SASS_WHILE)||(LA258_0 >= TOPCENTER_SYM && LA258_0 <= TOPRIGHT_SYM)||LA258_0==WEBKIT_KEYFRAMES_SYM) && (synpred36_Css3())) {s = 23;}
						else if ( (LA258_0==SASS_VAR) && (synpred36_Css3())) {s = 24;}
						else if ( (LA258_0==LESS_AND) && (synpred36_Css3())) {s = 25;}
						else if ( (LA258_0==HASH_SYMBOL) && (synpred36_Css3())) {s = 26;}
						else if ( (LA258_0==AT_SIGN) && (synpred36_Css3())) {s = 27;}
						else if ( (LA258_0==PERCENTAGE_SYMBOL) && (synpred36_Css3())) {s = 28;}
						 
						input.seek(index258_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 258, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA257_eotS =
		"\5\uffff";
	static final String DFA257_eofS =
		"\5\uffff";
	static final String DFA257_minS =
		"\2\5\3\uffff";
	static final String DFA257_maxS =
		"\2\u0092\3\uffff";
	static final String DFA257_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA257_specialS =
		"\5\uffff}>";
	static final String[] DFA257_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA257_eot = DFA.unpackEncodedString(DFA257_eotS);
	static final short[] DFA257_eof = DFA.unpackEncodedString(DFA257_eofS);
	static final char[] DFA257_min = DFA.unpackEncodedStringToUnsignedChars(DFA257_minS);
	static final char[] DFA257_max = DFA.unpackEncodedStringToUnsignedChars(DFA257_maxS);
	static final short[] DFA257_accept = DFA.unpackEncodedString(DFA257_acceptS);
	static final short[] DFA257_special = DFA.unpackEncodedString(DFA257_specialS);
	static final short[][] DFA257_transition;

	static {
		int numStates = DFA257_transitionS.length;
		DFA257_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA257_transition[i] = DFA.unpackEncodedString(DFA257_transitionS[i]);
		}
	}

	protected class DFA257 extends DFA {

		public DFA257(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 257;
			this.eot = DFA257_eot;
			this.eof = DFA257_eof;
			this.min = DFA257_min;
			this.max = DFA257_max;
			this.accept = DFA257_accept;
			this.special = DFA257_special;
			this.transition = DFA257_transition;
		}
		@Override
		public String getDescription() {
			return "1010:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA267_eotS =
		"\5\uffff";
	static final String DFA267_eofS =
		"\2\2\3\uffff";
	static final String DFA267_minS =
		"\2\6\3\uffff";
	static final String DFA267_maxS =
		"\2\u0092\3\uffff";
	static final String DFA267_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA267_specialS =
		"\5\uffff}>";
	static final String[] DFA267_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA267_eot = DFA.unpackEncodedString(DFA267_eotS);
	static final short[] DFA267_eof = DFA.unpackEncodedString(DFA267_eofS);
	static final char[] DFA267_min = DFA.unpackEncodedStringToUnsignedChars(DFA267_minS);
	static final char[] DFA267_max = DFA.unpackEncodedStringToUnsignedChars(DFA267_maxS);
	static final short[] DFA267_accept = DFA.unpackEncodedString(DFA267_acceptS);
	static final short[] DFA267_special = DFA.unpackEncodedString(DFA267_specialS);
	static final short[][] DFA267_transition;

	static {
		int numStates = DFA267_transitionS.length;
		DFA267_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA267_transition[i] = DFA.unpackEncodedString(DFA267_transitionS[i]);
		}
	}

	protected class DFA267 extends DFA {

		public DFA267(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 267;
			this.eot = DFA267_eot;
			this.eof = DFA267_eof;
			this.min = DFA267_min;
			this.max = DFA267_max;
			this.accept = DFA267_accept;
			this.special = DFA267_special;
			this.transition = DFA267_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1029:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA272_eotS =
		"\4\uffff";
	static final String DFA272_eofS =
		"\2\2\2\uffff";
	static final String DFA272_minS =
		"\2\6\2\uffff";
	static final String DFA272_maxS =
		"\2\u0092\2\uffff";
	static final String DFA272_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA272_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA272_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\2\uffff\10\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\1\uffff\11\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA272_eot = DFA.unpackEncodedString(DFA272_eotS);
	static final short[] DFA272_eof = DFA.unpackEncodedString(DFA272_eofS);
	static final char[] DFA272_min = DFA.unpackEncodedStringToUnsignedChars(DFA272_minS);
	static final char[] DFA272_max = DFA.unpackEncodedStringToUnsignedChars(DFA272_maxS);
	static final short[] DFA272_accept = DFA.unpackEncodedString(DFA272_acceptS);
	static final short[] DFA272_special = DFA.unpackEncodedString(DFA272_specialS);
	static final short[][] DFA272_transition;

	static {
		int numStates = DFA272_transitionS.length;
		DFA272_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA272_transition[i] = DFA.unpackEncodedString(DFA272_transitionS[i]);
		}
	}

	protected class DFA272 extends DFA {

		public DFA272(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 272;
			this.eot = DFA272_eot;
			this.eof = DFA272_eof;
			this.min = DFA272_min;
			this.max = DFA272_max;
			this.accept = DFA272_accept;
			this.special = DFA272_special;
			this.transition = DFA272_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1045:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA272_0 = input.LA(1);
						 
						int index272_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA272_0==COMMENT||LA272_0==NL||LA272_0==WS) ) {s = 1;}
						else if ( (LA272_0==EOF||(LA272_0 >= AT_IDENT && LA272_0 <= AT_SIGN)||(LA272_0 >= BOTTOMCENTER_SYM && LA272_0 <= BOTTOMRIGHT_SYM)||(LA272_0 >= CHARSET_SYM && LA272_0 <= COLON)||LA272_0==COUNTER_STYLE_SYM||LA272_0==DCOLON||LA272_0==DOT||LA272_0==FONT_FACE_SYM||(LA272_0 >= GEN && LA272_0 <= GREATER)||(LA272_0 >= HASH && LA272_0 <= HASH_SYMBOL)||LA272_0==IDENT||LA272_0==IMPORT_SYM||(LA272_0 >= LBRACE && LA272_0 <= LEFTTOP_SYM)||LA272_0==LESS_AND||(LA272_0 >= MEDIA_SYM && LA272_0 <= MOZ_DOCUMENT_SYM)||LA272_0==NAMESPACE_SYM||LA272_0==PAGE_SYM||(LA272_0 >= PIPE && LA272_0 <= PLUS)||LA272_0==RBRACE||(LA272_0 >= RIGHTBOTTOM_SYM && LA272_0 <= RPAREN)||(LA272_0 >= SASS_AT_ROOT && LA272_0 <= SASS_ELSE)||(LA272_0 >= SASS_EXTEND && LA272_0 <= SASS_MIXIN)||(LA272_0 >= SASS_RETURN && LA272_0 <= SEMI)||LA272_0==STAR||LA272_0==TILDE||(LA272_0 >= TOPCENTER_SYM && LA272_0 <= TOPRIGHT_SYM)||LA272_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA272_0==COMMA) && (synpred38_Css3())) {s = 3;}
						 
						input.seek(index272_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA272_1 = input.LA(1);
						 
						int index272_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA272_1==EOF||(LA272_1 >= AT_IDENT && LA272_1 <= AT_SIGN)||(LA272_1 >= BOTTOMCENTER_SYM && LA272_1 <= BOTTOMRIGHT_SYM)||(LA272_1 >= CHARSET_SYM && LA272_1 <= COLON)||LA272_1==COUNTER_STYLE_SYM||LA272_1==DCOLON||LA272_1==DOT||LA272_1==FONT_FACE_SYM||(LA272_1 >= GEN && LA272_1 <= GREATER)||(LA272_1 >= HASH && LA272_1 <= HASH_SYMBOL)||LA272_1==IDENT||LA272_1==IMPORT_SYM||(LA272_1 >= LBRACE && LA272_1 <= LEFTTOP_SYM)||LA272_1==LESS_AND||(LA272_1 >= MEDIA_SYM && LA272_1 <= MOZ_DOCUMENT_SYM)||LA272_1==NAMESPACE_SYM||LA272_1==PAGE_SYM||(LA272_1 >= PIPE && LA272_1 <= PLUS)||LA272_1==RBRACE||(LA272_1 >= RIGHTBOTTOM_SYM && LA272_1 <= RPAREN)||(LA272_1 >= SASS_AT_ROOT && LA272_1 <= SASS_ELSE)||(LA272_1 >= SASS_ERROR && LA272_1 <= SASS_MIXIN)||(LA272_1 >= SASS_RETURN && LA272_1 <= SEMI)||LA272_1==STAR||LA272_1==TILDE||(LA272_1 >= TOPCENTER_SYM && LA272_1 <= TOPRIGHT_SYM)||LA272_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA272_1==COMMENT||LA272_1==NL||LA272_1==WS) ) {s = 1;}
						else if ( (LA272_1==COMMA) && (synpred38_Css3())) {s = 3;}
						 
						input.seek(index272_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 272, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA278_eotS =
		"\111\uffff";
	static final String DFA278_eofS =
		"\1\2\110\uffff";
	static final String DFA278_minS =
		"\1\5\1\0\1\uffff\1\0\1\uffff\11\0\2\uffff\1\0\1\uffff\6\0\5\uffff\15\0"+
		"\1\uffff\2\0\5\uffff\1\0\4\uffff\1\0\2\uffff\1\0\16\uffff";
	static final String DFA278_maxS =
		"\1\u0092\1\0\1\uffff\1\0\1\uffff\11\0\2\uffff\1\0\1\uffff\6\0\5\uffff"+
		"\15\0\1\uffff\2\0\5\uffff\1\0\4\uffff\1\0\2\uffff\1\0\16\uffff";
	static final String DFA278_acceptS =
		"\2\uffff\1\3\60\uffff\4\1\1\uffff\1\1\1\2\1\uffff\16\2";
	static final String DFA278_specialS =
		"\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2"+
		"\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\5\uffff\1\23\1\24\1"+
		"\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\uffff\1\40\1\41"+
		"\5\uffff\1\42\4\uffff\1\43\2\uffff\1\44\16\uffff}>";
	static final String[] DFA278_transitionS = {
			"\1\100\1\23\1\12\2\uffff\5\54\3\uffff\1\54\2\2\1\62\1\uffff\1\51\1\2"+
			"\1\63\1\64\2\uffff\1\2\1\104\1\2\1\uffff\1\75\3\uffff\1\77\1\uffff\1"+
			"\44\1\102\1\uffff\1\13\1\27\1\70\1\uffff\1\22\1\11\2\uffff\1\7\1\3\1"+
			"\42\5\uffff\2\2\3\54\1\74\1\65\1\20\1\105\1\66\1\2\1\uffff\1\110\1\uffff"+
			"\1\47\1\10\1\45\5\uffff\1\54\1\62\3\uffff\1\71\1\5\3\uffff\1\43\1\73"+
			"\1\107\1\2\1\67\2\uffff\1\2\1\uffff\1\76\1\103\3\54\1\2\1\uffff\1\25"+
			"\1\41\1\26\1\2\1\37\1\54\2\uffff\1\50\1\2\1\36\1\53\1\2\1\35\1\24\1\14"+
			"\1\uffff\1\54\1\15\1\26\1\40\1\2\1\uffff\1\2\1\6\1\uffff\1\72\1\101\5"+
			"\54\2\uffff\1\106\3\uffff\1\46\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA278_eot = DFA.unpackEncodedString(DFA278_eotS);
	static final short[] DFA278_eof = DFA.unpackEncodedString(DFA278_eofS);
	static final char[] DFA278_min = DFA.unpackEncodedStringToUnsignedChars(DFA278_minS);
	static final char[] DFA278_max = DFA.unpackEncodedStringToUnsignedChars(DFA278_maxS);
	static final short[] DFA278_accept = DFA.unpackEncodedString(DFA278_acceptS);
	static final short[] DFA278_special = DFA.unpackEncodedString(DFA278_specialS);
	static final short[][] DFA278_transition;

	static {
		int numStates = DFA278_transitionS.length;
		DFA278_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA278_transition[i] = DFA.unpackEncodedString(DFA278_transitionS[i]);
		}
	}

	protected class DFA278 extends DFA {

		public DFA278(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 278;
			this.eot = DFA278_eot;
			this.eof = DFA278_eof;
			this.min = DFA278_min;
			this.max = DFA278_max;
			this.accept = DFA278_accept;
			this.special = DFA278_special;
			this.transition = DFA278_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1062:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA278_0 = input.LA(1);
						 
						int index278_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA278_0==WS) ) {s = 1;}
						else if ( (LA278_0==EOF||(LA278_0 >= COLON && LA278_0 <= COMMA)||LA278_0==CP_DOTS||LA278_0==DCOLON||LA278_0==DOT||(LA278_0 >= LBRACE && LA278_0 <= LBRACKET)||LA278_0==LESS_REST||LA278_0==PIPE||LA278_0==RBRACE||LA278_0==RPAREN||LA278_0==SASS_DEFAULT||LA278_0==SASS_EXTEND_ONLY_SELECTOR||LA278_0==SASS_GLOBAL||LA278_0==SEMI||LA278_0==STAR) ) {s = 2;}
						else if ( (LA278_0==IMPORTANT_SYM) ) {s = 3;}
						else if ( (LA278_0==NUMBER) ) {s = 5;}
						else if ( (LA278_0==STRING) ) {s = 6;}
						else if ( (LA278_0==IDENT) ) {s = 7;}
						else if ( (LA278_0==MINUS) ) {s = 8;}
						else if ( (LA278_0==HASH_SYMBOL) ) {s = 9;}
						else if ( (LA278_0==AT_SIGN) ) {s = 10;}
						else if ( (LA278_0==GEN) ) {s = 11;}
						else if ( (LA278_0==SASS_MIXIN) ) {s = 12;}
						else if ( (LA278_0==SASS_VAR) ) {s = 13;}
						else if ( (LA278_0==LESS_AND) ) {s = 16;}
						else if ( (LA278_0==HASH) ) {s = 18;}
						else if ( (LA278_0==AT_IDENT) ) {s = 19;}
						else if ( (LA278_0==SASS_INCLUDE) ) {s = 20;}
						else if ( (LA278_0==SASS_AT_ROOT) ) {s = 21;}
						else if ( (LA278_0==SASS_DEBUG||LA278_0==SASS_WARN) ) {s = 22;}
						else if ( (LA278_0==GREATER) ) {s = 23;}
						else if ( (LA278_0==SASS_IF) ) {s = 29;}
						else if ( (LA278_0==SASS_FOR) ) {s = 30;}
						else if ( (LA278_0==SASS_EACH) ) {s = 31;}
						else if ( (LA278_0==SASS_WHILE) ) {s = 32;}
						else if ( (LA278_0==SASS_CONTENT) ) {s = 33;}
						else if ( (LA278_0==IMPORT_SYM) ) {s = 34;}
						else if ( (LA278_0==PAGE_SYM) ) {s = 35;}
						else if ( (LA278_0==FONT_FACE_SYM) ) {s = 36;}
						else if ( (LA278_0==MOZ_DOCUMENT_SYM) ) {s = 37;}
						else if ( (LA278_0==WEBKIT_KEYFRAMES_SYM) ) {s = 38;}
						else if ( (LA278_0==MEDIA_SYM) ) {s = 39;}
						else if ( (LA278_0==SASS_EXTEND) ) {s = 40;}
						else if ( (LA278_0==COUNTER_STYLE_SYM) ) {s = 41;}
						else if ( (LA278_0==SASS_FUNCTION) ) {s = 43;}
						else if ( ((LA278_0 >= BOTTOMCENTER_SYM && LA278_0 <= BOTTOMRIGHT_SYM)||LA278_0==CHARSET_SYM||(LA278_0 >= LEFTBOTTOM_SYM && LA278_0 <= LEFTTOP_SYM)||LA278_0==NAMESPACE_SYM||(LA278_0 >= RIGHTBOTTOM_SYM && LA278_0 <= RIGHTTOP_SYM)||LA278_0==SASS_ELSE||LA278_0==SASS_RETURN||(LA278_0 >= TOPCENTER_SYM && LA278_0 <= TOPRIGHT_SYM)) ) {s = 44;}
						else if ( (LA278_0==COMMENT||LA278_0==NL) ) {s = 50;}
						else if ( (LA278_0==CP_EQ) && (synpred40_Css3())) {s = 51;}
						else if ( (LA278_0==CP_NOT_EQ) && (synpred40_Css3())) {s = 52;}
						else if ( (LA278_0==LESS) && (synpred40_Css3())) {s = 53;}
						else if ( (LA278_0==LESS_OR_EQ) && (synpred40_Css3())) {s = 54;}
						else if ( (LA278_0==PLUS) ) {s = 55;}
						else if ( (LA278_0==GREATER_OR_EQ) && (synpred40_Css3())) {s = 56;}
						else if ( (LA278_0==NOT) && (synpred41_Css3())) {s = 57;}
						else if ( (LA278_0==TILDE) ) {s = 58;}
						else if ( (LA278_0==PERCENTAGE) && (synpred41_Css3())) {s = 59;}
						else if ( (LA278_0==LENGTH) && (synpred41_Css3())) {s = 60;}
						else if ( (LA278_0==EMS) && (synpred41_Css3())) {s = 61;}
						else if ( (LA278_0==REM) && (synpred41_Css3())) {s = 62;}
						else if ( (LA278_0==EXS) && (synpred41_Css3())) {s = 63;}
						else if ( (LA278_0==ANGLE) && (synpred41_Css3())) {s = 64;}
						else if ( (LA278_0==TIME) && (synpred41_Css3())) {s = 65;}
						else if ( (LA278_0==FREQ) && (synpred41_Css3())) {s = 66;}
						else if ( (LA278_0==RESOLUTION) && (synpred41_Css3())) {s = 67;}
						else if ( (LA278_0==DIMENSION) && (synpred41_Css3())) {s = 68;}
						else if ( (LA278_0==LESS_JS_STRING) && (synpred41_Css3())) {s = 69;}
						else if ( (LA278_0==URI) && (synpred41_Css3())) {s = 70;}
						else if ( (LA278_0==PERCENTAGE_SYMBOL) && (synpred41_Css3())) {s = 71;}
						else if ( (LA278_0==LPAREN) && (synpred41_Css3())) {s = 72;}
						 
						input.seek(index278_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA278_1 = input.LA(1);
						 
						int index278_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 56;}
						else if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA278_3 = input.LA(1);
						 
						int index278_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_3);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA278_5 = input.LA(1);
						 
						int index278_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA278_6 = input.LA(1);
						 
						int index278_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA278_7 = input.LA(1);
						 
						int index278_7 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))&&synpred40_Css3())) ) {s = 56;}
						else if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA278_8 = input.LA(1);
						 
						int index278_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA278_9 = input.LA(1);
						 
						int index278_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA278_10 = input.LA(1);
						 
						int index278_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index278_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA278_11 = input.LA(1);
						 
						int index278_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA278_12 = input.LA(1);
						 
						int index278_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_12);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA278_13 = input.LA(1);
						 
						int index278_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 72;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index278_13);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA278_16 = input.LA(1);
						 
						int index278_16 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_16);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA278_18 = input.LA(1);
						 
						int index278_18 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_18);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA278_19 = input.LA(1);
						 
						int index278_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_19);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA278_20 = input.LA(1);
						 
						int index278_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( ((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_20);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA278_21 = input.LA(1);
						 
						int index278_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_21);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA278_22 = input.LA(1);
						 
						int index278_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_22);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA278_23 = input.LA(1);
						 
						int index278_23 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 56;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_23);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA278_29 = input.LA(1);
						 
						int index278_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_29);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA278_30 = input.LA(1);
						 
						int index278_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_30);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA278_31 = input.LA(1);
						 
						int index278_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_31);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA278_32 = input.LA(1);
						 
						int index278_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_32);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA278_33 = input.LA(1);
						 
						int index278_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_33);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA278_34 = input.LA(1);
						 
						int index278_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")))) ) {s = 2;}
						 
						input.seek(index278_34);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA278_35 = input.LA(1);
						 
						int index278_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA278_36 = input.LA(1);
						 
						int index278_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA278_37 = input.LA(1);
						 
						int index278_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA278_38 = input.LA(1);
						 
						int index278_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA278_39 = input.LA(1);
						 
						int index278_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_39);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA278_40 = input.LA(1);
						 
						int index278_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_40);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA278_41 = input.LA(1);
						 
						int index278_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_41);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA278_43 = input.LA(1);
						 
						int index278_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index278_43);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA278_44 = input.LA(1);
						 
						int index278_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 72;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index278_44);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA278_50 = input.LA(1);
						 
						int index278_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 56;}
						else if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_50);
						if ( s>=0 ) return s;
						break;

					case 35 : 
						int LA278_55 = input.LA(1);
						 
						int index278_55 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_55);
						if ( s>=0 ) return s;
						break;

					case 36 : 
						int LA278_58 = input.LA(1);
						 
						int index278_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index278_58);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 278, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA292_eotS =
		"\112\uffff";
	static final String DFA292_eofS =
		"\1\2\111\uffff";
	static final String DFA292_minS =
		"\1\5\1\0\13\uffff\1\0\31\uffff\1\0\11\uffff\1\0\26\uffff\1\0\1\uffff";
	static final String DFA292_maxS =
		"\1\u0092\1\0\13\uffff\1\0\31\uffff\1\0\11\uffff\1\0\26\uffff\1\0\1\uffff";
	static final String DFA292_acceptS =
		"\2\uffff\1\2\106\uffff\1\1";
	static final String DFA292_specialS =
		"\1\0\1\1\13\uffff\1\2\31\uffff\1\3\11\uffff\1\4\26\uffff\1\5\1\uffff}>";
	static final String[] DFA292_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\110\1\uffff\4\2\2\uffff\3\2\1\uffff\1"+
			"\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\110\3\uffff\2\2"+
			"\3\uffff\4\2\1\47\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\10\2\1"+
			"\uffff\5\2\1\111\1\61\1\2\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA292_eot = DFA.unpackEncodedString(DFA292_eotS);
	static final short[] DFA292_eof = DFA.unpackEncodedString(DFA292_eofS);
	static final char[] DFA292_min = DFA.unpackEncodedStringToUnsignedChars(DFA292_minS);
	static final char[] DFA292_max = DFA.unpackEncodedStringToUnsignedChars(DFA292_maxS);
	static final short[] DFA292_accept = DFA.unpackEncodedString(DFA292_acceptS);
	static final short[] DFA292_special = DFA.unpackEncodedString(DFA292_specialS);
	static final short[][] DFA292_transition;

	static {
		int numStates = DFA292_transitionS.length;
		DFA292_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA292_transition[i] = DFA.unpackEncodedString(DFA292_transitionS[i]);
		}
	}

	protected class DFA292 extends DFA {

		public DFA292(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 292;
			this.eot = DFA292_eot;
			this.eof = DFA292_eof;
			this.min = DFA292_min;
			this.max = DFA292_max;
			this.accept = DFA292_accept;
			this.special = DFA292_special;
			this.transition = DFA292_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1104:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA292_0 = input.LA(1);
						 
						int index292_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA292_0==WS) ) {s = 1;}
						else if ( (LA292_0==EOF||(LA292_0 >= ANGLE && LA292_0 <= AT_SIGN)||(LA292_0 >= BOTTOMCENTER_SYM && LA292_0 <= BOTTOMRIGHT_SYM)||(LA292_0 >= CHARSET_SYM && LA292_0 <= COMMA)||(LA292_0 >= COUNTER_STYLE_SYM && LA292_0 <= CP_NOT_EQ)||(LA292_0 >= DCOLON && LA292_0 <= DOT)||LA292_0==EMS||LA292_0==EXS||(LA292_0 >= FONT_FACE_SYM && LA292_0 <= FREQ)||(LA292_0 >= GEN && LA292_0 <= GREATER_OR_EQ)||(LA292_0 >= HASH && LA292_0 <= HASH_SYMBOL)||(LA292_0 >= IDENT && LA292_0 <= IMPORT_SYM)||(LA292_0 >= LBRACE && LA292_0 <= LESS_REST)||LA292_0==LPAREN||LA292_0==MEDIA_SYM||LA292_0==MOZ_DOCUMENT_SYM||LA292_0==NAMESPACE_SYM||(LA292_0 >= NOT && LA292_0 <= NUMBER)||(LA292_0 >= PAGE_SYM && LA292_0 <= PIPE)||LA292_0==RBRACE||(LA292_0 >= REM && LA292_0 <= RPAREN)||(LA292_0 >= SASS_AT_ROOT && LA292_0 <= SASS_ELSE)||(LA292_0 >= SASS_EXTEND && LA292_0 <= SASS_MIXIN)||(LA292_0 >= SASS_RETURN && LA292_0 <= SEMI)||LA292_0==STRING||(LA292_0 >= TILDE && LA292_0 <= TOPRIGHT_SYM)||LA292_0==URI||LA292_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA292_0==MINUS) ) {s = 13;}
						else if ( (LA292_0==PLUS) ) {s = 39;}
						else if ( (LA292_0==STAR) ) {s = 49;}
						else if ( (LA292_0==COMMENT||LA292_0==NL) ) {s = 72;}
						else if ( (LA292_0==SOLIDUS) && (synpred43_Css3())) {s = 73;}
						 
						input.seek(index292_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA292_1 = input.LA(1);
						 
						int index292_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index292_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA292_13 = input.LA(1);
						 
						int index292_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index292_13);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA292_39 = input.LA(1);
						 
						int index292_39 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index292_39);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA292_49 = input.LA(1);
						 
						int index292_49 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index292_49);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA292_72 = input.LA(1);
						 
						int index292_72 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred43_Css3()) ) {s = 73;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index292_72);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 292, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA297_eotS =
		"\6\uffff";
	static final String DFA297_eofS =
		"\6\uffff";
	static final String DFA297_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA297_maxS =
		"\1\u0091\1\u0092\3\uffff\1\u0092";
	static final String DFA297_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA297_specialS =
		"\6\uffff}>";
	static final String[] DFA297_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\3\1\2\7\uffff"+
			"\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5"
	};

	static final short[] DFA297_eot = DFA.unpackEncodedString(DFA297_eotS);
	static final short[] DFA297_eof = DFA.unpackEncodedString(DFA297_eofS);
	static final char[] DFA297_min = DFA.unpackEncodedStringToUnsignedChars(DFA297_minS);
	static final char[] DFA297_max = DFA.unpackEncodedStringToUnsignedChars(DFA297_maxS);
	static final short[] DFA297_accept = DFA.unpackEncodedString(DFA297_acceptS);
	static final short[] DFA297_special = DFA.unpackEncodedString(DFA297_specialS);
	static final short[][] DFA297_transition;

	static {
		int numStates = DFA297_transitionS.length;
		DFA297_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA297_transition[i] = DFA.unpackEncodedString(DFA297_transitionS[i]);
		}
	}

	protected class DFA297 extends DFA {

		public DFA297(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 297;
			this.eot = DFA297_eot;
			this.eof = DFA297_eof;
			this.min = DFA297_min;
			this.max = DFA297_max;
			this.accept = DFA297_accept;
			this.special = DFA297_special;
			this.transition = DFA297_transition;
		}
		@Override
		public String getDescription() {
			return "1109:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA304_eotS =
		"\4\uffff";
	static final String DFA304_eofS =
		"\4\uffff";
	static final String DFA304_minS =
		"\2\25\2\uffff";
	static final String DFA304_maxS =
		"\2\u0092\2\uffff";
	static final String DFA304_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA304_specialS =
		"\4\uffff}>";
	static final String[] DFA304_transitionS = {
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA304_eot = DFA.unpackEncodedString(DFA304_eotS);
	static final short[] DFA304_eof = DFA.unpackEncodedString(DFA304_eofS);
	static final char[] DFA304_min = DFA.unpackEncodedStringToUnsignedChars(DFA304_minS);
	static final char[] DFA304_max = DFA.unpackEncodedStringToUnsignedChars(DFA304_maxS);
	static final short[] DFA304_accept = DFA.unpackEncodedString(DFA304_acceptS);
	static final short[] DFA304_special = DFA.unpackEncodedString(DFA304_specialS);
	static final short[][] DFA304_transition;

	static {
		int numStates = DFA304_transitionS.length;
		DFA304_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA304_transition[i] = DFA.unpackEncodedString(DFA304_transitionS[i]);
		}
	}

	protected class DFA304 extends DFA {

		public DFA304(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 304;
			this.eot = DFA304_eot;
			this.eof = DFA304_eof;
			this.min = DFA304_min;
			this.max = DFA304_max;
			this.accept = DFA304_accept;
			this.special = DFA304_special;
			this.transition = DFA304_transition;
		}
		@Override
		public String getDescription() {
			return "1125:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA308_eotS =
		"\4\uffff";
	static final String DFA308_eofS =
		"\4\uffff";
	static final String DFA308_minS =
		"\2\25\2\uffff";
	static final String DFA308_maxS =
		"\2\u0092\2\uffff";
	static final String DFA308_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA308_specialS =
		"\4\uffff}>";
	static final String[] DFA308_transitionS = {
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA308_eot = DFA.unpackEncodedString(DFA308_eotS);
	static final short[] DFA308_eof = DFA.unpackEncodedString(DFA308_eofS);
	static final char[] DFA308_min = DFA.unpackEncodedStringToUnsignedChars(DFA308_minS);
	static final char[] DFA308_max = DFA.unpackEncodedStringToUnsignedChars(DFA308_maxS);
	static final short[] DFA308_accept = DFA.unpackEncodedString(DFA308_acceptS);
	static final short[] DFA308_special = DFA.unpackEncodedString(DFA308_specialS);
	static final short[][] DFA308_transition;

	static {
		int numStates = DFA308_transitionS.length;
		DFA308_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA308_transition[i] = DFA.unpackEncodedString(DFA308_transitionS[i]);
		}
	}

	protected class DFA308 extends DFA {

		public DFA308(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 308;
			this.eot = DFA308_eot;
			this.eof = DFA308_eof;
			this.min = DFA308_min;
			this.max = DFA308_max;
			this.accept = DFA308_accept;
			this.special = DFA308_special;
			this.transition = DFA308_transition;
		}
		@Override
		public String getDescription() {
			return "1127:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA319_eotS =
		"\4\uffff";
	static final String DFA319_eofS =
		"\2\3\2\uffff";
	static final String DFA319_minS =
		"\2\6\2\uffff";
	static final String DFA319_maxS =
		"\2\u0092\2\uffff";
	static final String DFA319_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA319_specialS =
		"\4\uffff}>";
	static final String[] DFA319_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA319_eot = DFA.unpackEncodedString(DFA319_eotS);
	static final short[] DFA319_eof = DFA.unpackEncodedString(DFA319_eofS);
	static final char[] DFA319_min = DFA.unpackEncodedStringToUnsignedChars(DFA319_minS);
	static final char[] DFA319_max = DFA.unpackEncodedStringToUnsignedChars(DFA319_maxS);
	static final short[] DFA319_accept = DFA.unpackEncodedString(DFA319_acceptS);
	static final short[] DFA319_special = DFA.unpackEncodedString(DFA319_specialS);
	static final short[][] DFA319_transition;

	static {
		int numStates = DFA319_transitionS.length;
		DFA319_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA319_transition[i] = DFA.unpackEncodedString(DFA319_transitionS[i]);
		}
	}

	protected class DFA319 extends DFA {

		public DFA319(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 319;
			this.eot = DFA319_eot;
			this.eof = DFA319_eof;
			this.min = DFA319_min;
			this.max = DFA319_max;
			this.accept = DFA319_accept;
			this.special = DFA319_special;
			this.transition = DFA319_transition;
		}
		@Override
		public String getDescription() {
			return "1139:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA321_eotS =
		"\4\uffff";
	static final String DFA321_eofS =
		"\2\3\2\uffff";
	static final String DFA321_minS =
		"\2\6\2\uffff";
	static final String DFA321_maxS =
		"\2\u0092\2\uffff";
	static final String DFA321_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA321_specialS =
		"\4\uffff}>";
	static final String[] DFA321_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA321_eot = DFA.unpackEncodedString(DFA321_eotS);
	static final short[] DFA321_eof = DFA.unpackEncodedString(DFA321_eofS);
	static final char[] DFA321_min = DFA.unpackEncodedStringToUnsignedChars(DFA321_minS);
	static final char[] DFA321_max = DFA.unpackEncodedStringToUnsignedChars(DFA321_maxS);
	static final short[] DFA321_accept = DFA.unpackEncodedString(DFA321_acceptS);
	static final short[] DFA321_special = DFA.unpackEncodedString(DFA321_specialS);
	static final short[][] DFA321_transition;

	static {
		int numStates = DFA321_transitionS.length;
		DFA321_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA321_transition[i] = DFA.unpackEncodedString(DFA321_transitionS[i]);
		}
	}

	protected class DFA321 extends DFA {

		public DFA321(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 321;
			this.eot = DFA321_eot;
			this.eof = DFA321_eof;
			this.min = DFA321_min;
			this.max = DFA321_max;
			this.accept = DFA321_accept;
			this.special = DFA321_special;
			this.transition = DFA321_transition;
		}
		@Override
		public String getDescription() {
			return "1139:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA333_eotS =
		"\7\uffff";
	static final String DFA333_eofS =
		"\7\uffff";
	static final String DFA333_minS =
		"\3\5\1\uffff\1\5\1\uffff\1\5";
	static final String DFA333_maxS =
		"\1\u0091\2\u0092\1\uffff\1\u0092\1\uffff\1\u0092";
	static final String DFA333_acceptS =
		"\3\uffff\1\2\1\uffff\1\1\1\uffff";
	static final String DFA333_specialS =
		"\7\uffff}>";
	static final String[] DFA333_transitionS = {
			"\1\3\1\1\1\3\2\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\1\1\1\3\1\uffff\1\3\3\uffff\2\3\2\uffff\2\3"+
			"\1\1\5\uffff\1\3\1\uffff\3\1\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\1"+
			"\1\3\1\1\5\uffff\1\1\4\uffff\2\3\3\uffff\1\1\2\3\1\uffff\1\3\4\uffff"+
			"\2\3\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2\1\1\uffff\3\1"+
			"\1\uffff\1\1\1\2\2\1\3\uffff\1\3\1\uffff\2\3\5\1\2\uffff\1\3\3\uffff"+
			"\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6"
	};

	static final short[] DFA333_eot = DFA.unpackEncodedString(DFA333_eotS);
	static final short[] DFA333_eof = DFA.unpackEncodedString(DFA333_eofS);
	static final char[] DFA333_min = DFA.unpackEncodedStringToUnsignedChars(DFA333_minS);
	static final char[] DFA333_max = DFA.unpackEncodedStringToUnsignedChars(DFA333_maxS);
	static final short[] DFA333_accept = DFA.unpackEncodedString(DFA333_acceptS);
	static final short[] DFA333_special = DFA.unpackEncodedString(DFA333_specialS);
	static final short[][] DFA333_transition;

	static {
		int numStates = DFA333_transitionS.length;
		DFA333_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA333_transition[i] = DFA.unpackEncodedString(DFA333_transitionS[i]);
		}
	}

	protected class DFA333 extends DFA {

		public DFA333(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 333;
			this.eot = DFA333_eot;
			this.eof = DFA333_eof;
			this.min = DFA333_min;
			this.max = DFA333_max;
			this.accept = DFA333_accept;
			this.special = DFA333_special;
			this.transition = DFA333_transition;
		}
		@Override
		public String getDescription() {
			return "1165:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA336_eotS =
		"\5\uffff";
	static final String DFA336_eofS =
		"\5\uffff";
	static final String DFA336_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA336_maxS =
		"\1\177\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA336_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA336_specialS =
		"\5\uffff}>";
	static final String[] DFA336_transitionS = {
			"\1\1\3\uffff\1\2\53\uffff\1\2\43\uffff\1\2\26\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			""
	};

	static final short[] DFA336_eot = DFA.unpackEncodedString(DFA336_eotS);
	static final short[] DFA336_eof = DFA.unpackEncodedString(DFA336_eofS);
	static final char[] DFA336_min = DFA.unpackEncodedStringToUnsignedChars(DFA336_minS);
	static final char[] DFA336_max = DFA.unpackEncodedStringToUnsignedChars(DFA336_maxS);
	static final short[] DFA336_accept = DFA.unpackEncodedString(DFA336_acceptS);
	static final short[] DFA336_special = DFA.unpackEncodedString(DFA336_specialS);
	static final short[][] DFA336_transition;

	static {
		int numStates = DFA336_transitionS.length;
		DFA336_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA336_transition[i] = DFA.unpackEncodedString(DFA336_transitionS[i]);
		}
	}

	protected class DFA336 extends DFA {

		public DFA336(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 336;
			this.eot = DFA336_eot;
			this.eof = DFA336_eof;
			this.min = DFA336_min;
			this.max = DFA336_max;
			this.accept = DFA336_accept;
			this.special = DFA336_special;
			this.transition = DFA336_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1180:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA352_eotS =
		"\4\uffff";
	static final String DFA352_eofS =
		"\4\uffff";
	static final String DFA352_minS =
		"\2\24\2\uffff";
	static final String DFA352_maxS =
		"\2\u0092\2\uffff";
	static final String DFA352_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA352_specialS =
		"\4\uffff}>";
	static final String[] DFA352_transitionS = {
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA352_eot = DFA.unpackEncodedString(DFA352_eotS);
	static final short[] DFA352_eof = DFA.unpackEncodedString(DFA352_eofS);
	static final char[] DFA352_min = DFA.unpackEncodedStringToUnsignedChars(DFA352_minS);
	static final char[] DFA352_max = DFA.unpackEncodedStringToUnsignedChars(DFA352_maxS);
	static final short[] DFA352_accept = DFA.unpackEncodedString(DFA352_acceptS);
	static final short[] DFA352_special = DFA.unpackEncodedString(DFA352_specialS);
	static final short[][] DFA352_transition;

	static {
		int numStates = DFA352_transitionS.length;
		DFA352_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA352_transition[i] = DFA.unpackEncodedString(DFA352_transitionS[i]);
		}
	}

	protected class DFA352 extends DFA {

		public DFA352(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 352;
			this.eot = DFA352_eot;
			this.eof = DFA352_eof;
			this.min = DFA352_min;
			this.max = DFA352_max;
			this.accept = DFA352_accept;
			this.special = DFA352_special;
			this.transition = DFA352_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1196:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA379_eotS =
		"\4\uffff";
	static final String DFA379_eofS =
		"\4\uffff";
	static final String DFA379_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA379_maxS =
		"\2\u0092\2\uffff";
	static final String DFA379_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA379_specialS =
		"\4\uffff}>";
	static final String[] DFA379_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\2\35\uffff\1\2\22\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\3\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA379_eot = DFA.unpackEncodedString(DFA379_eotS);
	static final short[] DFA379_eof = DFA.unpackEncodedString(DFA379_eofS);
	static final char[] DFA379_min = DFA.unpackEncodedStringToUnsignedChars(DFA379_minS);
	static final char[] DFA379_max = DFA.unpackEncodedStringToUnsignedChars(DFA379_maxS);
	static final short[] DFA379_accept = DFA.unpackEncodedString(DFA379_acceptS);
	static final short[] DFA379_special = DFA.unpackEncodedString(DFA379_specialS);
	static final short[][] DFA379_transition;

	static {
		int numStates = DFA379_transitionS.length;
		DFA379_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA379_transition[i] = DFA.unpackEncodedString(DFA379_transitionS[i]);
		}
	}

	protected class DFA379 extends DFA {

		public DFA379(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 379;
			this.eot = DFA379_eot;
			this.eof = DFA379_eof;
			this.min = DFA379_min;
			this.max = DFA379_max;
			this.accept = DFA379_accept;
			this.special = DFA379_special;
			this.transition = DFA379_transition;
		}
		@Override
		public String getDescription() {
			return "1272:43: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA385_eotS =
		"\10\uffff";
	static final String DFA385_eofS =
		"\2\4\6\uffff";
	static final String DFA385_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA385_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA385_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA385_specialS =
		"\10\uffff}>";
	static final String[] DFA385_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4"+
			"\1\uffff\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff"+
			"\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA385_eot = DFA.unpackEncodedString(DFA385_eotS);
	static final short[] DFA385_eof = DFA.unpackEncodedString(DFA385_eofS);
	static final char[] DFA385_min = DFA.unpackEncodedStringToUnsignedChars(DFA385_minS);
	static final char[] DFA385_max = DFA.unpackEncodedStringToUnsignedChars(DFA385_maxS);
	static final short[] DFA385_accept = DFA.unpackEncodedString(DFA385_acceptS);
	static final short[] DFA385_special = DFA.unpackEncodedString(DFA385_specialS);
	static final short[][] DFA385_transition;

	static {
		int numStates = DFA385_transitionS.length;
		DFA385_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA385_transition[i] = DFA.unpackEncodedString(DFA385_transitionS[i]);
		}
	}

	protected class DFA385 extends DFA {

		public DFA385(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 385;
			this.eot = DFA385_eot;
			this.eof = DFA385_eof;
			this.min = DFA385_min;
			this.max = DFA385_max;
			this.accept = DFA385_accept;
			this.special = DFA385_special;
			this.transition = DFA385_transition;
		}
		@Override
		public String getDescription() {
			return "1297:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA393_eotS =
		"\5\uffff";
	static final String DFA393_eofS =
		"\5\uffff";
	static final String DFA393_minS =
		"\1\157\1\25\1\uffff\1\25\1\uffff";
	static final String DFA393_maxS =
		"\1\160\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA393_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA393_specialS =
		"\5\uffff}>";
	static final String[] DFA393_transitionS = {
			"\1\1\1\2",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA393_eot = DFA.unpackEncodedString(DFA393_eotS);
	static final short[] DFA393_eof = DFA.unpackEncodedString(DFA393_eofS);
	static final char[] DFA393_min = DFA.unpackEncodedStringToUnsignedChars(DFA393_minS);
	static final char[] DFA393_max = DFA.unpackEncodedStringToUnsignedChars(DFA393_maxS);
	static final short[] DFA393_accept = DFA.unpackEncodedString(DFA393_acceptS);
	static final short[] DFA393_special = DFA.unpackEncodedString(DFA393_specialS);
	static final short[][] DFA393_transition;

	static {
		int numStates = DFA393_transitionS.length;
		DFA393_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA393_transition[i] = DFA.unpackEncodedString(DFA393_transitionS[i]);
		}
	}

	protected class DFA393 extends DFA {

		public DFA393(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 393;
			this.eot = DFA393_eot;
			this.eof = DFA393_eof;
			this.min = DFA393_min;
			this.max = DFA393_max;
			this.accept = DFA393_accept;
			this.special = DFA393_special;
			this.transition = DFA393_transition;
		}
		@Override
		public String getDescription() {
			return "1300:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA392_eotS =
		"\10\uffff";
	static final String DFA392_eofS =
		"\2\4\6\uffff";
	static final String DFA392_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA392_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA392_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA392_specialS =
		"\10\uffff}>";
	static final String[] DFA392_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4"+
			"\1\uffff\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff"+
			"\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA392_eot = DFA.unpackEncodedString(DFA392_eotS);
	static final short[] DFA392_eof = DFA.unpackEncodedString(DFA392_eofS);
	static final char[] DFA392_min = DFA.unpackEncodedStringToUnsignedChars(DFA392_minS);
	static final char[] DFA392_max = DFA.unpackEncodedStringToUnsignedChars(DFA392_maxS);
	static final short[] DFA392_accept = DFA.unpackEncodedString(DFA392_acceptS);
	static final short[] DFA392_special = DFA.unpackEncodedString(DFA392_specialS);
	static final short[][] DFA392_transition;

	static {
		int numStates = DFA392_transitionS.length;
		DFA392_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA392_transition[i] = DFA.unpackEncodedString(DFA392_transitionS[i]);
		}
	}

	protected class DFA392 extends DFA {

		public DFA392(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 392;
			this.eot = DFA392_eot;
			this.eof = DFA392_eof;
			this.min = DFA392_min;
			this.max = DFA392_max;
			this.accept = DFA392_accept;
			this.special = DFA392_special;
			this.transition = DFA392_transition;
		}
		@Override
		public String getDescription() {
			return "1304:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA398_eotS =
		"\4\uffff";
	static final String DFA398_eofS =
		"\4\uffff";
	static final String DFA398_minS =
		"\2\24\2\uffff";
	static final String DFA398_maxS =
		"\2\u0092\2\uffff";
	static final String DFA398_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA398_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA398_transitionS = {
			"\1\2\1\1\73\uffff\1\1\100\uffff\1\1",
			"\1\2\1\1\34\uffff\1\3\36\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA398_eot = DFA.unpackEncodedString(DFA398_eotS);
	static final short[] DFA398_eof = DFA.unpackEncodedString(DFA398_eofS);
	static final char[] DFA398_min = DFA.unpackEncodedStringToUnsignedChars(DFA398_minS);
	static final char[] DFA398_max = DFA.unpackEncodedStringToUnsignedChars(DFA398_maxS);
	static final short[] DFA398_accept = DFA.unpackEncodedString(DFA398_acceptS);
	static final short[] DFA398_special = DFA.unpackEncodedString(DFA398_specialS);
	static final short[][] DFA398_transition;

	static {
		int numStates = DFA398_transitionS.length;
		DFA398_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA398_transition[i] = DFA.unpackEncodedString(DFA398_transitionS[i]);
		}
	}

	protected class DFA398 extends DFA {

		public DFA398(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 398;
			this.eot = DFA398_eot;
			this.eof = DFA398_eof;
			this.min = DFA398_min;
			this.max = DFA398_max;
			this.accept = DFA398_accept;
			this.special = DFA398_special;
			this.transition = DFA398_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1324:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA398_0 = input.LA(1);
						 
						int index398_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {s = 1;}
						else if ( (LA398_0==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index398_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA398_1 = input.LA(1);
						 
						int index398_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA398_1==IDENT) ) {s = 3;}
						else if ( (LA398_1==COMMENT||LA398_1==NL||LA398_1==WS) ) {s = 1;}
						else if ( (LA398_1==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index398_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 398, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA418_eotS =
		"\4\uffff";
	static final String DFA418_eofS =
		"\4\uffff";
	static final String DFA418_minS =
		"\2\25\2\uffff";
	static final String DFA418_maxS =
		"\2\u0092\2\uffff";
	static final String DFA418_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA418_specialS =
		"\4\uffff}>";
	static final String[] DFA418_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA418_eot = DFA.unpackEncodedString(DFA418_eotS);
	static final short[] DFA418_eof = DFA.unpackEncodedString(DFA418_eofS);
	static final char[] DFA418_min = DFA.unpackEncodedStringToUnsignedChars(DFA418_minS);
	static final char[] DFA418_max = DFA.unpackEncodedStringToUnsignedChars(DFA418_maxS);
	static final short[] DFA418_accept = DFA.unpackEncodedString(DFA418_acceptS);
	static final short[] DFA418_special = DFA.unpackEncodedString(DFA418_specialS);
	static final short[][] DFA418_transition;

	static {
		int numStates = DFA418_transitionS.length;
		DFA418_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA418_transition[i] = DFA.unpackEncodedString(DFA418_transitionS[i]);
		}
	}

	protected class DFA418 extends DFA {

		public DFA418(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 418;
			this.eot = DFA418_eot;
			this.eof = DFA418_eof;
			this.min = DFA418_min;
			this.max = DFA418_max;
			this.accept = DFA418_accept;
			this.special = DFA418_special;
			this.transition = DFA418_transition;
		}
		@Override
		public String getDescription() {
			return "417:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA425_eotS =
		"\6\uffff";
	static final String DFA425_eofS =
		"\6\uffff";
	static final String DFA425_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA425_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA425_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA425_specialS =
		"\6\uffff}>";
	static final String[] DFA425_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2\2\2"+
			"\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff"+
			"\1\1\10\uffff\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\1\4\1\uffff\1\4\12\uffff\2\4\2"+
			"\uffff\2\4\2\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1"+
			"\4\7\uffff\1\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15"+
			"\uffff\1\3",
			"",
			""
	};

	static final short[] DFA425_eot = DFA.unpackEncodedString(DFA425_eotS);
	static final short[] DFA425_eof = DFA.unpackEncodedString(DFA425_eofS);
	static final char[] DFA425_min = DFA.unpackEncodedStringToUnsignedChars(DFA425_minS);
	static final char[] DFA425_max = DFA.unpackEncodedStringToUnsignedChars(DFA425_maxS);
	static final short[] DFA425_accept = DFA.unpackEncodedString(DFA425_acceptS);
	static final short[] DFA425_special = DFA.unpackEncodedString(DFA425_specialS);
	static final short[][] DFA425_transition;

	static {
		int numStates = DFA425_transitionS.length;
		DFA425_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA425_transition[i] = DFA.unpackEncodedString(DFA425_transitionS[i]);
		}
	}

	protected class DFA425 extends DFA {

		public DFA425(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 425;
			this.eot = DFA425_eot;
			this.eof = DFA425_eof;
			this.min = DFA425_min;
			this.max = DFA425_max;
			this.accept = DFA425_accept;
			this.special = DFA425_special;
			this.transition = DFA425_transition;
		}
		@Override
		public String getDescription() {
			return "419:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA420_eotS =
		"\4\uffff";
	static final String DFA420_eofS =
		"\4\uffff";
	static final String DFA420_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA420_maxS =
		"\2\u0092\2\uffff";
	static final String DFA420_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA420_specialS =
		"\4\uffff}>";
	static final String[] DFA420_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA420_eot = DFA.unpackEncodedString(DFA420_eotS);
	static final short[] DFA420_eof = DFA.unpackEncodedString(DFA420_eofS);
	static final char[] DFA420_min = DFA.unpackEncodedStringToUnsignedChars(DFA420_minS);
	static final char[] DFA420_max = DFA.unpackEncodedStringToUnsignedChars(DFA420_maxS);
	static final short[] DFA420_accept = DFA.unpackEncodedString(DFA420_acceptS);
	static final short[] DFA420_special = DFA.unpackEncodedString(DFA420_specialS);
	static final short[][] DFA420_transition;

	static {
		int numStates = DFA420_transitionS.length;
		DFA420_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA420_transition[i] = DFA.unpackEncodedString(DFA420_transitionS[i]);
		}
	}

	protected class DFA420 extends DFA {

		public DFA420(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 420;
			this.eot = DFA420_eot;
			this.eof = DFA420_eof;
			this.min = DFA420_min;
			this.max = DFA420_max;
			this.accept = DFA420_accept;
			this.special = DFA420_special;
			this.transition = DFA420_transition;
		}
		@Override
		public String getDescription() {
			return "419:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA442_eotS =
		"\6\uffff";
	static final String DFA442_eofS =
		"\6\uffff";
	static final String DFA442_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA442_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA442_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA442_specialS =
		"\6\uffff}>";
	static final String[] DFA442_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2\2\2"+
			"\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff"+
			"\1\1\10\uffff\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\1\4\1\uffff\1\4\12\uffff\2\4\2"+
			"\uffff\2\4\2\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1"+
			"\4\7\uffff\1\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15"+
			"\uffff\1\3",
			"",
			""
	};

	static final short[] DFA442_eot = DFA.unpackEncodedString(DFA442_eotS);
	static final short[] DFA442_eof = DFA.unpackEncodedString(DFA442_eofS);
	static final char[] DFA442_min = DFA.unpackEncodedStringToUnsignedChars(DFA442_minS);
	static final char[] DFA442_max = DFA.unpackEncodedStringToUnsignedChars(DFA442_maxS);
	static final short[] DFA442_accept = DFA.unpackEncodedString(DFA442_acceptS);
	static final short[] DFA442_special = DFA.unpackEncodedString(DFA442_specialS);
	static final short[][] DFA442_transition;

	static {
		int numStates = DFA442_transitionS.length;
		DFA442_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA442_transition[i] = DFA.unpackEncodedString(DFA442_transitionS[i]);
		}
	}

	protected class DFA442 extends DFA {

		public DFA442(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 442;
			this.eot = DFA442_eot;
			this.eof = DFA442_eof;
			this.min = DFA442_min;
			this.max = DFA442_max;
			this.accept = DFA442_accept;
			this.special = DFA442_special;
			this.transition = DFA442_transition;
		}
		@Override
		public String getDescription() {
			return "691:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA437_eotS =
		"\4\uffff";
	static final String DFA437_eofS =
		"\4\uffff";
	static final String DFA437_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA437_maxS =
		"\2\u0092\2\uffff";
	static final String DFA437_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA437_specialS =
		"\4\uffff}>";
	static final String[] DFA437_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA437_eot = DFA.unpackEncodedString(DFA437_eotS);
	static final short[] DFA437_eof = DFA.unpackEncodedString(DFA437_eofS);
	static final char[] DFA437_min = DFA.unpackEncodedStringToUnsignedChars(DFA437_minS);
	static final char[] DFA437_max = DFA.unpackEncodedStringToUnsignedChars(DFA437_maxS);
	static final short[] DFA437_accept = DFA.unpackEncodedString(DFA437_acceptS);
	static final short[] DFA437_special = DFA.unpackEncodedString(DFA437_specialS);
	static final short[][] DFA437_transition;

	static {
		int numStates = DFA437_transitionS.length;
		DFA437_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA437_transition[i] = DFA.unpackEncodedString(DFA437_transitionS[i]);
		}
	}

	protected class DFA437 extends DFA {

		public DFA437(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 437;
			this.eot = DFA437_eot;
			this.eof = DFA437_eof;
			this.min = DFA437_min;
			this.max = DFA437_max;
			this.accept = DFA437_accept;
			this.special = DFA437_special;
			this.transition = DFA437_transition;
		}
		@Override
		public String getDescription() {
			return "691:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA451_eotS =
		"\5\uffff";
	static final String DFA451_eofS =
		"\5\uffff";
	static final String DFA451_minS =
		"\2\5\3\uffff";
	static final String DFA451_maxS =
		"\2\u0092\3\uffff";
	static final String DFA451_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA451_specialS =
		"\5\uffff}>";
	static final String[] DFA451_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA451_eot = DFA.unpackEncodedString(DFA451_eotS);
	static final short[] DFA451_eof = DFA.unpackEncodedString(DFA451_eofS);
	static final char[] DFA451_min = DFA.unpackEncodedStringToUnsignedChars(DFA451_minS);
	static final char[] DFA451_max = DFA.unpackEncodedStringToUnsignedChars(DFA451_maxS);
	static final short[] DFA451_accept = DFA.unpackEncodedString(DFA451_acceptS);
	static final short[] DFA451_special = DFA.unpackEncodedString(DFA451_specialS);
	static final short[][] DFA451_transition;

	static {
		int numStates = DFA451_transitionS.length;
		DFA451_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA451_transition[i] = DFA.unpackEncodedString(DFA451_transitionS[i]);
		}
	}

	protected class DFA451 extends DFA {

		public DFA451(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 451;
			this.eot = DFA451_eot;
			this.eof = DFA451_eof;
			this.min = DFA451_min;
			this.max = DFA451_max;
			this.accept = DFA451_accept;
			this.special = DFA451_special;
			this.transition = DFA451_transition;
		}
		@Override
		public String getDescription() {
			return "927:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA456_eotS =
		"\5\uffff";
	static final String DFA456_eofS =
		"\5\uffff";
	static final String DFA456_minS =
		"\2\5\3\uffff";
	static final String DFA456_maxS =
		"\2\u0092\3\uffff";
	static final String DFA456_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA456_specialS =
		"\5\uffff}>";
	static final String[] DFA456_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA456_eot = DFA.unpackEncodedString(DFA456_eotS);
	static final short[] DFA456_eof = DFA.unpackEncodedString(DFA456_eofS);
	static final char[] DFA456_min = DFA.unpackEncodedStringToUnsignedChars(DFA456_minS);
	static final char[] DFA456_max = DFA.unpackEncodedStringToUnsignedChars(DFA456_maxS);
	static final short[] DFA456_accept = DFA.unpackEncodedString(DFA456_acceptS);
	static final short[] DFA456_special = DFA.unpackEncodedString(DFA456_specialS);
	static final short[][] DFA456_transition;

	static {
		int numStates = DFA456_transitionS.length;
		DFA456_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA456_transition[i] = DFA.unpackEncodedString(DFA456_transitionS[i]);
		}
	}

	protected class DFA456 extends DFA {

		public DFA456(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 456;
			this.eot = DFA456_eot;
			this.eof = DFA456_eof;
			this.min = DFA456_min;
			this.max = DFA456_max;
			this.accept = DFA456_accept;
			this.special = DFA456_special;
			this.transition = DFA456_transition;
		}
		@Override
		public String getDescription() {
			return "1010:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet129 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_charSet_in_styleSheet139 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_styleSheet141 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_imports_in_styleSheet155 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet166 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_styleSheet177 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces202 = new BitSet(new long[]{0x0000000000200002L,0x0000000000030000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespaces204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace220 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace222 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace226 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace233 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespace235 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_namespace238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_charSet287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_charSetValue_in_charSet290 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_charSet292 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_charSet295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports323 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports325 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_imports328 = new BitSet(new long[]{0x0010000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0010000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem356 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem358 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem361 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem371 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem407 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem412 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem415 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem418 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem423 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem435 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem462 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000002004L});
	public static final BitSet FOLLOW_LPAREN_in_importItem468 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem470 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem472 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem474 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem479 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem489 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media510 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_media512 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_media530 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_media538 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media545 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_media547 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_media550 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_mediaBody_in_media560 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_media567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody601 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody611 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody614 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody618 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody645 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody647 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody666 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBody669 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody674 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem781 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem784 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem804 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem807 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem875 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem887 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem927 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem935 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem943 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem959 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem972 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList986 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList998 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1001 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1003 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1006 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1025 = new BitSet(new long[]{0x0004840000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1027 = new BitSet(new long[]{0x0004840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1034 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1038 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1043 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1046 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1057 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1061 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1064 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1069 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1114 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1120 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1138 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1140 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1143 = new BitSet(new long[]{0x0000000000280000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1145 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1148 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1151 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1172 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1175 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1177 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1286 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1296 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_body1299 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1303 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_body1330 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1332 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1412 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem1473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem1495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem1512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem1524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem1547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem1561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem1575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem1589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule1615 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule1623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule1631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule1639 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule1647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule1660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule1664 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule1668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId1678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId1682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId1690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId1694 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule1710 = new BitSet(new long[]{0x7414808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1712 = new BitSet(new long[]{0x7414808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule1717 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1719 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule1733 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule1744 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule1754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1765 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1772 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1774 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document1780 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1785 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1787 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document1794 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_moz_document1796 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_moz_document1801 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document1806 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1843 = new BitSet(new long[]{0x7014808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1845 = new BitSet(new long[]{0x7014808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes1848 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1850 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes1854 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1856 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1863 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1865 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes1872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1884 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1886 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock1890 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1893 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock1896 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock1900 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock1904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock1921 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock1923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1940 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1946 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1950 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1956 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors1959 = new BitSet(new long[]{0x0004000000200000L,0x0000000008020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1961 = new BitSet(new long[]{0x0004000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1968 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1974 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1978 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page1997 = new BitSet(new long[]{0x0404000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page1999 = new BitSet(new long[]{0x0404000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page2004 = new BitSet(new long[]{0x0400000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2006 = new BitSet(new long[]{0x0400000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page2013 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2015 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page2028 = new BitSet(new long[]{0x7014848000A47CC0L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page2030 = new BitSet(new long[]{0x7014848000847CC0L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2073 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2075 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2078 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_SEMI_in_page2084 = new BitSet(new long[]{0x7014848000A47CC0L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page2086 = new BitSet(new long[]{0x7014848000847CC0L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2091 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2093 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2096 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_page2111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2128 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2130 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2133 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2135 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2146 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_counterStyle2148 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2151 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2155 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2166 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2183 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fontFace2185 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace2196 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_fontFace2198 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace2201 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_fontFace2205 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace2216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin2230 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_margin2232 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin2235 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_margin2237 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin2240 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_margin2242 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin2245 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage2454 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage2456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property2540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property2550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property2558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property2566 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property2576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map2603 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map2605 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2607 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map2610 = new BitSet(new long[]{0x7014848000B47CC0L,0x7BB4DDE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map2612 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map2615 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map2634 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map2641 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2645 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map2648 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2654 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map2657 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name2681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs2715 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2725 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2728 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2732 = new BitSet(new long[]{0x7014848000947CC2L,0x7BB4DCE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2759 = new BitSet(new long[]{0x7014848000B47CC2L,0x7BB4DCE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2761 = new BitSet(new long[]{0x7014848000947CC2L,0x7BB4DCE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair2797 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair2799 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_function_in_sass_map_pair2806 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair2809 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2812 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair2815 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2817 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair2820 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2823 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair2826 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2868 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2871 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2873 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2894 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_rule2898 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2900 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2905 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2909 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule2912 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2914 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2917 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2919 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule2922 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2940 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2952 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule2959 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_rule2961 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_rule2964 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_rule2974 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule2981 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3015 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations3017 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations3023 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3028 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations3032 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations3034 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_ws_in_declarations3040 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7BBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations3043 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3049 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations3053 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3055 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_ws_in_declarations3061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3073 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3075 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration3104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration3117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration3129 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration3192 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3243 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration3255 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3268 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3271 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3291 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3294 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3297 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration3313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration3323 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration3333 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration3343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration3353 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration3363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration3373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration3383 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration3391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3425 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3428 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3431 = new BitSet(new long[]{0x0804CC00A0280080L,0x0008000060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3433 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3436 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3443 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector3464 = new BitSet(new long[]{0x0804C400A0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3466 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3471 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_ws_in_selector3477 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_combinator_in_selector3480 = new BitSet(new long[]{0x0804C400A0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3482 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_selector3486 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3489 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_combinator_in_selector3504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3556 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3562 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3576 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3591 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3594 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3599 = new BitSet(new long[]{0x0004800000000080L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3604 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3610 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence3624 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3636 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3639 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3646 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3648 = new BitSet(new long[]{0x0800C000A0280002L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred3673 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred3677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred3681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred3685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred3689 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred3693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred3703 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector3745 = new BitSet(new long[]{0x0004040000000000L,0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_elementName_in_typeSelector3749 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix3764 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix3768 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix3772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent3804 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent3818 = new BitSet(new long[]{0x0004000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent3836 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent3845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent3857 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent3869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId3893 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId3898 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId3920 = new BitSet(new long[]{0x0004000000000080L,0x0000000000008200L});
	public static final BitSet FOLLOW_NAME_in_cssId3936 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId3956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass4007 = new BitSet(new long[]{0x0004840000000080L,0x0000000000200200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass4035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass4053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass4069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass4085 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass4101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute4167 = new BitSet(new long[]{0x0004000000200000L,0x0000000020020000L,0x0000000000040002L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute4174 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4177 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute4188 = new BitSet(new long[]{0x0020000410600200L,0x0000000401020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4190 = new BitSet(new long[]{0x0020000410400200L,0x0000000401000000L});
	public static final BitSet FOLLOW_set_in_slAttribute4224 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_slAttribute4404 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute4423 = new BitSet(new long[]{0x0000000000200000L,0x0000000400020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4441 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute4466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName4482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo4554 = new BitSet(new long[]{0x0004840000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_set_in_pseudo4617 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4674 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4677 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DDF85C430706L,0x00000000000627F6L});
	public static final BitSet FOLLOW_ws_in_pseudo4679 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DDF85C410706L,0x00000000000227F6L});
	public static final BitSet FOLLOW_expression_in_pseudo4685 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4687 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo4693 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4698 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo4761 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo4799 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4801 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4804 = new BitSet(new long[]{0x0804C400A0280080L,0x0008010020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_pseudo4806 = new BitSet(new long[]{0x0804C400A0080080L,0x0008010020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_pseudo4810 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4812 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo4861 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4863 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4866 = new BitSet(new long[]{0x0804CC00A0280080L,0x0008010060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_pseudo4868 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008010060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo4871 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4910 = new BitSet(new long[]{0x7014848000847CC0L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4913 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4915 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4918 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4920 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration4923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4932 = new BitSet(new long[]{0x7014848000847CC0L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4935 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4937 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4940 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4942 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration4945 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4948 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration4951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue4991 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue4999 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue5021 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate5090 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI5191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio5236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression5253 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_expression5285 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_expression5290 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_expression5293 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_expression5295 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_expression5304 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_unaryOperator_in_term5329 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF81C430506L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_term5331 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF81C410506L,0x00000000000227F4L});
	public static final BitSet FOLLOW_function_in_term5360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term5373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term5385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term5397 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term5409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term5421 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term5433 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term5445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term5457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term5469 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term5481 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term5493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term5505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term5522 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term5534 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_term5536 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term5557 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term5572 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term5584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term5596 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term5610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term5624 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term5638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term5652 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term5666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function5709 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_function5711 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_function5716 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_function5718 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributes_in_function5745 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function5776 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName5828 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName5830 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5834 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName5837 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5839 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5863 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5866 = new BitSet(new long[]{0x0000000000100000L,0x8000000000000000L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes5870 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes5876 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5879 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5882 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5886 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute5923 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5925 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute5928 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5934 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute5937 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute5954 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute5966 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5989 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName5992 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5994 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName6014 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6037 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6069 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6074 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue6077 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6079 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6088 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue6109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor6123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6183 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6185 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6188 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6190 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6193 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6215 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6217 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6220 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6222 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6225 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6229 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6232 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6238 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6241 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_set_in_cp_variable6281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable6465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6495 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6514 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list6517 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6519 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6522 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression6558 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_expression6560 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6563 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_expression6565 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression6568 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6584 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6608 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression6611 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6613 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6617 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6636 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6639 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression6657 = new BitSet(new long[]{0x7014848000B47CC0L,0x7BB4DDE004430700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6659 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6662 = new BitSet(new long[]{0x7014848000947CC0L,0x7BB4DDE004410700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression6664 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression6667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator6688 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator6692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator6697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator6701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator6705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator6709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator6713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6717 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom6743 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6745 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom6776 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom6792 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6794 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom6798 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6800 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom6805 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6837 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions6844 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6846 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6880 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6922 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_cp_math_expression6925 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6935 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6938 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom6971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom6990 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom6998 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7000 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom7003 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7005 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom7008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration7048 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration7055 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration7057 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration7062 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7068 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7070 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7073 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7076 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7081 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7084 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7108 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7110 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration7112 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7118 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7120 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7123 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7126 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7140 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration7143 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call7179 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7181 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call7185 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call7189 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call7193 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call7201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7213 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7216 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7218 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7221 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7224 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call7249 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7251 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7253 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7259 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7261 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7264 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7267 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7272 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call7275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block7304 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE26C030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7306 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block7309 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block7320 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7335 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7337 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block7349 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name7370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7401 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args7405 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7413 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7416 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args7422 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg7458 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7460 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg7463 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7465 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7468 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7480 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7488 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7535 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7539 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7549 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7552 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7559 = new BitSet(new long[]{0x0000000001200002L,0x0000000000020010L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7567 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7575 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7583 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list7600 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg7631 = new BitSet(new long[]{0x0000000000280002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7633 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg7638 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_arg7640 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg7643 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7645 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg7658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded7681 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7686 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7689 = new BitSet(new long[]{0x0004000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded7693 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded7697 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7703 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_NOT_in_less_condition7729 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7731 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition7740 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_condition7742 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition7769 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition7773 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7776 = new BitSet(new long[]{0x0000180000000000L,0x0000010001000009L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition7780 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_less_condition7782 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition7785 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition7803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition7825 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition7830 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7832 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition7835 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7837 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition7840 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name7862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7925 = new BitSet(new long[]{0x8004000040000082L,0x0000000000000200L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation7971 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation7973 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7975 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation7978 = new BitSet(new long[]{0x0000000000200000L,0x0000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7980 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation7983 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp8010 = new BitSet(new long[]{0x8004800040000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp8013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var8060 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var8062 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var8064 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var8067 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var8069 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var8072 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties8112 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8114 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties8117 = new BitSet(new long[]{0xF414C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8119 = new BitSet(new long[]{0xF414C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties8123 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8125 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties8130 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8132 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties8135 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties8137 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties8140 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend8161 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8163 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend8165 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8168 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend8170 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8193 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector8195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug8217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_debug8227 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug8229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error8250 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_error8252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_STRING_in_sass_error8254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control8275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control8279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control8283 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control8287 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if8308 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_if8310 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if8313 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8315 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if8318 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8321 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if8324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8347 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8349 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8366 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8368 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else8373 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else8380 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_else8383 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else8386 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8388 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8391 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8394 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else8397 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression8420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for8441 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8443 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for8445 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8447 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8451 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8455 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8457 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8459 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8463 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8467 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8469 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8471 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for8474 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each8495 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8497 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each8499 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8501 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each8505 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8509 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each8511 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8513 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each8516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8537 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8549 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables8552 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8554 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8557 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while8582 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8584 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while8586 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8588 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while8591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block8612 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_control_block8614 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block8617 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block8620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration8662 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8664 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration8666 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration8671 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8673 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration8676 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration8679 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8681 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration8684 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8686 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration8689 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration8692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name8713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return8734 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return8736 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return8738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content8759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types8778 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when8801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and8820 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or8838 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only8856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3365 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3429 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3432 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3483 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css3605 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css3608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css3706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css3713 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css3715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css3720 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css3723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css3726 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css3734 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css3744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css3762 = new BitSet(new long[]{0x0008000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3765 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3772 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css3775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css3798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css3823 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3826 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css3828 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css3837 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css3841 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3843 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css3846 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3848 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css3851 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3853 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css3856 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3858 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css3861 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css3866 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css3869 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css3872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css3884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css3991 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css3994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31290 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred11_Css31293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred12_Css31368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred12_Css31375 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred12_Css31377 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred12_Css31382 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred12_Css31388 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred12_Css31396 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFDFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred12_Css31408 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred13_Css31434 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred13_Css31436 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred13_Css31439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred14_Css31458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred15_Css31486 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31488 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred15_Css31491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred16_Css31508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css32719 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred17_Css32722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred18_Css32803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred19_Css33101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred20_Css33113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred21_Css33126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred22_Css33140 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33143 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred22_Css33145 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred22_Css33154 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33156 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred22_Css33158 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33160 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred22_Css33163 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33165 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred22_Css33168 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33170 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred22_Css33173 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33175 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred22_Css33178 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred22_Css33183 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33186 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred22_Css33189 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred23_Css33201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred24_Css33218 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css33220 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred24_Css33223 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_set_in_synpred24_Css33235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred25_Css33252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred26_Css33264 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred27_Css33285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33583 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred28_Css33586 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred29_Css33621 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33628 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred30_Css33631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred31_Css33742 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35260 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35265 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_synpred32_Css35268 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35270 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred32_Css35279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred33_Css35352 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred33_Css35354 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred33_Css35357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred34_Css35910 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35912 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_synpred34_Css35915 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred35_Css35950 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36044 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36049 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred36_Css36052 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36054 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred36_Css36063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36503 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred38_Css36506 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36508 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_synpred38_Css36511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred39_Css36578 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36601 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred40_Css36604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred41_Css36630 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred41_Css36633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred42_Css36773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css36906 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_synpred43_Css36909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred44_Css37198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css37206 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred45_Css37209 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred46_Css37325 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred47_Css38542 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred47_Css38545 = new BitSet(new long[]{0x0000000000000002L});
}
