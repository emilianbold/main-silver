// $ANTLR 3.5.2 /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2014-11-05 15:15:33

/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", "INCLUDES", "INVALID", 
		"J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", 
		"LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", 
		"LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", 
		"MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", 
		"NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", 
		"PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", 
		"RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", 
		"SASS_FOR", "SASS_FUNCTION", "SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", 
		"SASS_MIXIN", "SASS_OPTIONAL", "SASS_RETURN", "SASS_VAR", "SASS_WARN", 
		"SASS_WHILE", "SEMI", "SOLIDUS", "STAR", "STRING", "T", "TILDE", "TIME", 
		"TOPCENTER_SYM", "TOPLEFTCORNER_SYM", "TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", 
		"TOPRIGHT_SYM", "U", "UNICODE", "URI", "URL", "V", "W", "WEBKIT_KEYFRAMES_SYM", 
		"WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int I=49;
	public static final int IDENT=50;
	public static final int IMPORTANT_SYM=51;
	public static final int IMPORT_SYM=52;
	public static final int INCLUDES=53;
	public static final int INVALID=54;
	public static final int J=55;
	public static final int K=56;
	public static final int L=57;
	public static final int LBRACE=58;
	public static final int LBRACKET=59;
	public static final int LEFTBOTTOM_SYM=60;
	public static final int LEFTMIDDLE_SYM=61;
	public static final int LEFTTOP_SYM=62;
	public static final int LENGTH=63;
	public static final int LESS=64;
	public static final int LESS_AND=65;
	public static final int LESS_JS_STRING=66;
	public static final int LESS_OR_EQ=67;
	public static final int LESS_REST=68;
	public static final int LINE_COMMENT=69;
	public static final int LPAREN=70;
	public static final int M=71;
	public static final int MEDIA_SYM=72;
	public static final int MINUS=73;
	public static final int MOZ_DOCUMENT_SYM=74;
	public static final int MOZ_DOMAIN=75;
	public static final int MOZ_REGEXP=76;
	public static final int MOZ_URL_PREFIX=77;
	public static final int N=78;
	public static final int NAME=79;
	public static final int NAMESPACE_SYM=80;
	public static final int NL=81;
	public static final int NMCHAR=82;
	public static final int NMSTART=83;
	public static final int NONASCII=84;
	public static final int NOT=85;
	public static final int NUMBER=86;
	public static final int O=87;
	public static final int OPEQ=88;
	public static final int P=89;
	public static final int PAGE_SYM=90;
	public static final int PERCENTAGE=91;
	public static final int PERCENTAGE_SYMBOL=92;
	public static final int PIPE=93;
	public static final int PLUS=94;
	public static final int Q=95;
	public static final int R=96;
	public static final int RBRACE=97;
	public static final int RBRACKET=98;
	public static final int REM=99;
	public static final int RESOLUTION=100;
	public static final int RIGHTBOTTOM_SYM=101;
	public static final int RIGHTMIDDLE_SYM=102;
	public static final int RIGHTTOP_SYM=103;
	public static final int RPAREN=104;
	public static final int S=105;
	public static final int SASS_AT_ROOT=106;
	public static final int SASS_CONTENT=107;
	public static final int SASS_DEBUG=108;
	public static final int SASS_DEFAULT=109;
	public static final int SASS_EACH=110;
	public static final int SASS_ELSE=111;
	public static final int SASS_EXTEND=112;
	public static final int SASS_EXTEND_ONLY_SELECTOR=113;
	public static final int SASS_FOR=114;
	public static final int SASS_FUNCTION=115;
	public static final int SASS_GLOBAL=116;
	public static final int SASS_IF=117;
	public static final int SASS_INCLUDE=118;
	public static final int SASS_MIXIN=119;
	public static final int SASS_OPTIONAL=120;
	public static final int SASS_RETURN=121;
	public static final int SASS_VAR=122;
	public static final int SASS_WARN=123;
	public static final int SASS_WHILE=124;
	public static final int SEMI=125;
	public static final int SOLIDUS=126;
	public static final int STAR=127;
	public static final int STRING=128;
	public static final int T=129;
	public static final int TILDE=130;
	public static final int TIME=131;
	public static final int TOPCENTER_SYM=132;
	public static final int TOPLEFTCORNER_SYM=133;
	public static final int TOPLEFT_SYM=134;
	public static final int TOPRIGHTCORNER_SYM=135;
	public static final int TOPRIGHT_SYM=136;
	public static final int U=137;
	public static final int UNICODE=138;
	public static final int URI=139;
	public static final int URL=140;
	public static final int V=141;
	public static final int W=142;
	public static final int WEBKIT_KEYFRAMES_SYM=143;
	public static final int WS=144;
	public static final int X=145;
	public static final int Y=146;
	public static final int Z=147;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "propertyDeclaration", "synpred40_Css3", "declaration", 
		"synpred31_Css3", "less_import_types", "synpred46_Css3", "bodyItem", "key_only", 
		"synpred15_Css3", "synpred41_Css3", "cssId", "cp_expression", "synpred39_Css3", 
		"synpred30_Css3", "synpred27_Css3", "sass_map_pairs", "cp_mixin_call", 
		"typeSelector", "pseudoPage", "less_condition_operator", "cp_mixin_block", 
		"mediaExpression", "esPred", "namespacePrefixName", "sass_extend_only_selector", 
		"less_selector_interpolation", "sass_each_variables", "cp_expression_atom", 
		"cp_mixin_call_arg", "namespaces", "synpred36_Css3", "operator", "mediaQuery", 
		"fnAttributes", "synpred42_Css3", "selectorsGroup", "expression", "synpred19_Css3", 
		"pseudo", "sass_while", "styleSheet", "webkitKeyframesBlock", "sass_if", 
		"sass_selector_interpolation_expression", "synpred9_Css3", "sass_content", 
		"synpred21_Css3", "resourceIdentifier", "propertyValue", "synpred47_Css3", 
		"synpred45_Css3", "synpred11_Css3", "slAttributeName", "syncToDeclarationsRule", 
		"slAttributeValue", "synpred12_Css3", "synpred8_Css3", "cp_arg", "cp_math_expression_atom", 
		"property", "fontFace", "mediaQueryOperator", "atRuleId", "synpred34_Css3", 
		"charSet", "synpred14_Css3", "vendorAtRule", "selector", "mediaFeatureValue", 
		"synpred6_Css3", "less_mixin_guarded", "function", "synpred25_Css3", "expressionPredicate", 
		"cp_variable", "sass_function_return", "cp_mixin_declaration", "media", 
		"cp_expression_operator", "synpred5_Css3", "sass_control", "synpred2_Css3", 
		"syncTo_RBRACE", "mediaQueryList", "importItem", "cp_mixin_call_args", 
		"sass_function_name", "sass_interpolation_expression_var", "sass_declaration_interpolation_expression", 
		"declarations", "elementSubsequent", "synpred7_Css3", "charSetValue", 
		"less_when", "less_condition", "sass_function_declaration", "sass_control_expression", 
		"generic_at_rule", "key_or", "slAttribute", "synpred37_Css3", "synpred3_Css3", 
		"at_rule", "less_fn_name", "namespacePrefix", "syncToFollow", "cp_math_expression", 
		"body", "cp_expression_list", "cp_variable_declaration", "synpred33_Css3", 
		"sass_map", "prio", "mediaBody", "synpred13_Css3", "sass_each", "unaryOperator", 
		"fnAttribute", "synpred24_Css3", "sass_for", "syncTo_SEMI", "synpred16_Css3", 
		"fnAttributeName", "synpred26_Css3", "synpred38_Css3", "page", "cp_propertyValue", 
		"sass_else", "synpred28_Css3", "cp_args_list", "synpred17_Css3", "cp_term_symbol", 
		"cp_mixin_name", "mediaType", "synpred1_Css3", "synpred44_Css3", "margin_sym", 
		"mediaFeature", "cp_math_expressions", "key_and", "synpred10_Css3", "sass_map_name", 
		"synpred43_Css3", "synpred22_Css3", "synpred4_Css3", "sass_nested_properties", 
		"sass_control_block", "less_function_in_condition", "synpred29_Css3", 
		"webkitKeyframes", "synpred35_Css3", "hexColor", "synpred18_Css3", "cssClass", 
		"synpred20_Css3", "fnAttributeValue", "synpred23_Css3", "functionName", 
		"sass_debug", "sass_map_pair", "moz_document", "sass_extend", "rule", 
		"simpleSelectorSequence", "combinator", "counterStyle", "term", "namespace", 
		"moz_document_function", "webkitKeyframeSelectors", "elementName", "synpred32_Css3", 
		"imports", "ws", "margin", "mediaBodyItem"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, true, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, true, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, true, false, true, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, false, true, 
		    false, false, false, false, false, false, true, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	/**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	    /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:330:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(330, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:331:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(332,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:6: ws
					{
					dbg.location(332,6);
					pushFollow(FOLLOW_ws_in_styleSheet120);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(333,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:8: charSet ( ws )?
					{
					dbg.location(333,8);
					pushFollow(FOLLOW_charSet_in_styleSheet130);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(333,16);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:16: ws
							{
							dbg.location(333,16);
							pushFollow(FOLLOW_ws_in_styleSheet132);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(334,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:9: imports
					{
					dbg.location(334,9);
					pushFollow(FOLLOW_imports_in_styleSheet146);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(335,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:335:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:335:9: namespaces
					{
					dbg.location(335,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet157);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(336,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COMMA)||LA6_0==COUNTER_STYLE_SYM||LA6_0==DCOLON||LA6_0==DOT||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||LA6_0==RBRACKET||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_FUNCTION)||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||(LA6_0 >= SASS_RETURN && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: body
					{
					dbg.location(336,9);
					pushFollow(FOLLOW_body_in_styleSheet168);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(337,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet176); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(338, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:340:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(340, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:341:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:2: ( namespace ( ws )? )+
			{
			dbg.location(342,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:4: namespace ( ws )?
					{
					dbg.location(342,4);
					pushFollow(FOLLOW_namespace_in_namespaces193);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(342,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:14: ws
							{
							dbg.location(342,14);
							pushFollow(FOLLOW_ws_in_namespaces195);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(343, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:345:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(345, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(346,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace211); if (state.failed) return;dbg.location(346,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:19: ws
					{
					dbg.location(346,19);
					pushFollow(FOLLOW_ws_in_namespace213);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(346,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:24: namespacePrefixName ( ws )?
					{
					dbg.location(346,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace217);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(346,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:44: ws
							{
							dbg.location(346,44);
							pushFollow(FOLLOW_ws_in_namespace219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(346,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace224);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(346,69);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:69: ws
					{
					dbg.location(346,69);
					pushFollow(FOLLOW_ws_in_namespace226);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(346,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace229); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(347, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(349, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:5: IDENT
			{
			dbg.location(350,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName242); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(351, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(353, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(354,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(355, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:357:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(357, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(358,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet276); if (state.failed) return;dbg.location(358,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:21: ws
					{
					dbg.location(358,21);
					pushFollow(FOLLOW_ws_in_charSet278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(358,25);
			pushFollow(FOLLOW_charSetValue_in_charSet281);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(358,38);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ws
					{
					dbg.location(358,38);
					pushFollow(FOLLOW_ws_in_charSet283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(358,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet286); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(361, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:2: ( STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:4: STRING
			{
			dbg.location(362,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue300); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(363, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:1: imports : ( importItem ( ws )? SEMI ( ws )? )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(365, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:366:2: ( ( importItem ( ws )? SEMI ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:2: ( importItem ( ws )? SEMI ( ws )? )+
			{
			dbg.location(367,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:2: ( importItem ( ws )? SEMI ( ws )? )+
			int cnt17=0;
			try { dbg.enterSubRule(17);

			loop17:
			while (true) {
				int alt17=2;
				try { dbg.enterDecision(17, decisionCanBacktrack[17]);

				int LA17_0 = input.LA(1);
				if ( (LA17_0==IMPORT_SYM) ) {
					int LA17_29 = input.LA(2);
					if ( (!(evalPredicate((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt17=1;
					}

				}

				} finally {dbg.exitDecision(17);}

				switch (alt17) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:4: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(367,4);
					pushFollow(FOLLOW_importItem_in_imports314);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(367,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:15: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:15: ws
							{
							dbg.location(367,15);
							pushFollow(FOLLOW_ws_in_imports316);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(367,19);
					match(input,SEMI,FOLLOW_SEMI_in_imports319); if (state.failed) return;dbg.location(367,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:24: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:24: ws
							{
							dbg.location(367,24);
							pushFollow(FOLLOW_ws_in_imports321);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(17, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt17++;
			}
			} finally {dbg.exitSubRule(17);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(368, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(370, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:371:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt32=3;
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(372,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem347); if (state.failed) return;dbg.location(372,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:20: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:20: ws
							{
							dbg.location(372,20);
							pushFollow(FOLLOW_ws_in_importItem349);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(372,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem352);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(372,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						int LA20_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IDENT) ) {
						int LA20_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==NOT) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==GEN) ) {
						int LA20_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==HASH_SYMBOL) ) {
						int LA20_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred1_Css3())) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==LPAREN) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==SASS_MIXIN) ) {
						int LA20_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_VAR) ) {
						int LA20_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_INCLUDE) ) {
						int LA20_12 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EXTEND) ) {
						int LA20_13 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_DEBUG||LA20_0==SASS_WARN) ) {
						int LA20_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_IF) ) {
						int LA20_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FOR) ) {
						int LA20_18 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EACH) ) {
						int LA20_19 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_WHILE) ) {
						int LA20_20 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_CONTENT) ) {
						int LA20_21 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IMPORT_SYM) ) {
						int LA20_22 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_AT_ROOT) ) {
						int LA20_23 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==PAGE_SYM) ) {
						int LA20_24 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==FONT_FACE_SYM) ) {
						int LA20_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MOZ_DOCUMENT_SYM) ) {
						int LA20_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA20_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==AT_IDENT) ) {
						int LA20_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MEDIA_SYM) ) {
						int LA20_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==COUNTER_STYLE_SYM) ) {
						int LA20_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FUNCTION) ) {
						int LA20_43 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_RETURN) ) {
						int LA20_44 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( ((LA20_0 >= BOTTOMCENTER_SYM && LA20_0 <= BOTTOMRIGHT_SYM)||LA20_0==CHARSET_SYM||(LA20_0 >= LEFTBOTTOM_SYM && LA20_0 <= LEFTTOP_SYM)||LA20_0==NAMESPACE_SYM||(LA20_0 >= RIGHTBOTTOM_SYM && LA20_0 <= RIGHTTOP_SYM)||LA20_0==SASS_ELSE||(LA20_0 >= TOPCENTER_SYM && LA20_0 <= TOPRIGHT_SYM)) ) {
						int LA20_45 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(372,66);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:66: ( ws )?
							int alt19=2;
							try { dbg.enterSubRule(19);
							try { dbg.enterDecision(19, decisionCanBacktrack[19]);

							int LA19_0 = input.LA(1);
							if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
								alt19=1;
							}
							} finally {dbg.exitDecision(19);}

							switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:66: ws
									{
									dbg.location(372,66);
									pushFollow(FOLLOW_ws_in_importItem362);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(19);}
							dbg.location(372,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem365);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(375,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(375,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem398); if (state.failed) return;dbg.location(375,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:38: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:38: ws
							{
							dbg.location(375,38);
							pushFollow(FOLLOW_ws_in_importItem400);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(375,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem403);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(375,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(24);

					loop24:
					while (true) {
						int alt24=2;
						try { dbg.enterDecision(24, decisionCanBacktrack[24]);

						try {
							isCyclicDecision = true;
							alt24 = dfa24.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(24);}

						switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(375,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ( ws )?
							int alt22=2;
							try { dbg.enterSubRule(22);
							try { dbg.enterDecision(22, decisionCanBacktrack[22]);

							int LA22_0 = input.LA(1);
							if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
								alt22=1;
							}
							} finally {dbg.exitDecision(22);}

							switch (alt22) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:62: ws
									{
									dbg.location(375,62);
									pushFollow(FOLLOW_ws_in_importItem406);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(22);}
							dbg.location(375,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem409); if (state.failed) return;dbg.location(375,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:72: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:72: ws
									{
									dbg.location(375,72);
									pushFollow(FOLLOW_ws_in_importItem411);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(375,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem414);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop24;
						}
					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(375,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
						int LA26_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IDENT) ) {
						int LA26_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==NOT) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==GEN) ) {
						int LA26_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==HASH_SYMBOL) ) {
						int LA26_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==LPAREN) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==SASS_MIXIN) ) {
						int LA26_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_VAR) ) {
						int LA26_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_INCLUDE) ) {
						int LA26_12 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EXTEND) ) {
						int LA26_13 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_DEBUG||LA26_0==SASS_WARN) ) {
						int LA26_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_IF) ) {
						int LA26_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FOR) ) {
						int LA26_18 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EACH) ) {
						int LA26_19 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_WHILE) ) {
						int LA26_20 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_CONTENT) ) {
						int LA26_21 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IMPORT_SYM) ) {
						int LA26_22 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_AT_ROOT) ) {
						int LA26_23 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==PAGE_SYM) ) {
						int LA26_24 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==FONT_FACE_SYM) ) {
						int LA26_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MOZ_DOCUMENT_SYM) ) {
						int LA26_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA26_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==AT_IDENT) ) {
						int LA26_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MEDIA_SYM) ) {
						int LA26_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==COUNTER_STYLE_SYM) ) {
						int LA26_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FUNCTION) ) {
						int LA26_43 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_RETURN) ) {
						int LA26_44 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( ((LA26_0 >= BOTTOMCENTER_SYM && LA26_0 <= BOTTOMRIGHT_SYM)||LA26_0==CHARSET_SYM||(LA26_0 >= LEFTBOTTOM_SYM && LA26_0 <= LEFTTOP_SYM)||LA26_0==NAMESPACE_SYM||(LA26_0 >= RIGHTBOTTOM_SYM && LA26_0 <= RIGHTTOP_SYM)||LA26_0==SASS_ELSE||(LA26_0 >= TOPCENTER_SYM && LA26_0 <= TOPRIGHT_SYM)) ) {
						int LA26_45 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(375,120);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:120: ( ws )?
							int alt25=2;
							try { dbg.enterSubRule(25);
							try { dbg.enterDecision(25, decisionCanBacktrack[25]);

							int LA25_0 = input.LA(1);
							if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
								alt25=1;
							}
							} finally {dbg.exitDecision(25);}

							switch (alt25) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:120: ws
									{
									dbg.location(375,120);
									pushFollow(FOLLOW_ws_in_importItem426);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(25);}
							dbg.location(375,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem429);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(377,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(377,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem453); if (state.failed) return;dbg.location(377,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ( ws )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:38: ws
							{
							dbg.location(377,38);
							pushFollow(FOLLOW_ws_in_importItem455);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(377,42);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==LPAREN) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(377,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem459); if (state.failed) return;dbg.location(377,50);
							pushFollow(FOLLOW_less_import_types_in_importItem461);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(377,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem463); if (state.failed) return;dbg.location(377,75);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:75: ( ws )?
							int alt28=2;
							try { dbg.enterSubRule(28);
							try { dbg.enterDecision(28, decisionCanBacktrack[28]);

							int LA28_0 = input.LA(1);
							if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
								alt28=1;
							}
							} finally {dbg.exitDecision(28);}

							switch (alt28) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:75: ws
									{
									dbg.location(377,75);
									pushFollow(FOLLOW_ws_in_importItem465);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(28);}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(377,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem470);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(377,100);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						int LA31_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IDENT) ) {
						int LA31_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==NOT) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==GEN) ) {
						int LA31_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==HASH_SYMBOL) ) {
						int LA31_5 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==LPAREN) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==SASS_MIXIN) ) {
						int LA31_7 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_VAR) ) {
						int LA31_8 = input.LA(2);
						if ( (((synpred3_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_INCLUDE) ) {
						int LA31_12 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EXTEND) ) {
						int LA31_13 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_DEBUG||LA31_0==SASS_WARN) ) {
						int LA31_16 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_IF) ) {
						int LA31_17 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FOR) ) {
						int LA31_18 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EACH) ) {
						int LA31_19 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_WHILE) ) {
						int LA31_20 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_CONTENT) ) {
						int LA31_21 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IMPORT_SYM) ) {
						int LA31_22 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_AT_ROOT) ) {
						int LA31_23 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==PAGE_SYM) ) {
						int LA31_24 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==FONT_FACE_SYM) ) {
						int LA31_36 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MOZ_DOCUMENT_SYM) ) {
						int LA31_37 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA31_38 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==AT_IDENT) ) {
						int LA31_39 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MEDIA_SYM) ) {
						int LA31_40 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==COUNTER_STYLE_SYM) ) {
						int LA31_41 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FUNCTION) ) {
						int LA31_43 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_RETURN) ) {
						int LA31_44 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					else if ( ((LA31_0 >= BOTTOMCENTER_SYM && LA31_0 <= BOTTOMRIGHT_SYM)||LA31_0==CHARSET_SYM||(LA31_0 >= LEFTBOTTOM_SYM && LA31_0 <= LEFTTOP_SYM)||LA31_0==NAMESPACE_SYM||(LA31_0 >= RIGHTBOTTOM_SYM && LA31_0 <= RIGHTTOP_SYM)||LA31_0==SASS_ELSE||(LA31_0 >= TOPCENTER_SYM && LA31_0 <= TOPRIGHT_SYM)) ) {
						int LA31_45 = input.LA(2);
						if ( ((synpred3_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt31=1;
						}
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(377,123);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:123: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:123: ws
									{
									dbg.location(377,123);
									pushFollow(FOLLOW_ws_in_importItem480);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(377,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem483);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(378, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "media"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(379, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(380,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media501); if (state.failed) return;dbg.location(380,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:17: ( ws )?
			int alt33=2;
			try { dbg.enterSubRule(33);
			try { dbg.enterDecision(33, decisionCanBacktrack[33]);

			int LA33_0 = input.LA(1);
			if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
				alt33=1;
			}
			} finally {dbg.exitDecision(33);}

			switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:17: ws
					{
					dbg.location(380,17);
					pushFollow(FOLLOW_ws_in_media503);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(381,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:382:10: mediaQueryList
			{
			dbg.location(382,10);
			pushFollow(FOLLOW_mediaQueryList_in_media521);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(383,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:7: ( ws )?
			int alt34=2;
			try { dbg.enterSubRule(34);
			try { dbg.enterDecision(34, decisionCanBacktrack[34]);

			int LA34_0 = input.LA(1);
			if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
				alt34=1;
			}
			} finally {dbg.exitDecision(34);}

			switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:7: ws
					{
					dbg.location(383,7);
					pushFollow(FOLLOW_ws_in_media529);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(384,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media536); if (state.failed) return;dbg.location(384,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:12: ( ws )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:12: ws
					{
					dbg.location(384,12);
					pushFollow(FOLLOW_ws_in_media538);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(384,16);
			pushFollow(FOLLOW_syncToFollow_in_media541);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(385,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:9: ( mediaBody )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( ((LA36_0 >= AT_IDENT && LA36_0 <= AT_SIGN)||(LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||(LA36_0 >= CHARSET_SYM && LA36_0 <= COMMA)||LA36_0==COUNTER_STYLE_SYM||LA36_0==DCOLON||LA36_0==DOT||LA36_0==FONT_FACE_SYM||(LA36_0 >= GEN && LA36_0 <= GREATER)||(LA36_0 >= HASH && LA36_0 <= HASH_SYMBOL)||LA36_0==IDENT||LA36_0==IMPORT_SYM||(LA36_0 >= LBRACKET && LA36_0 <= LEFTTOP_SYM)||LA36_0==LESS_AND||(LA36_0 >= MEDIA_SYM && LA36_0 <= MOZ_DOCUMENT_SYM)||LA36_0==NAMESPACE_SYM||LA36_0==PAGE_SYM||(LA36_0 >= PIPE && LA36_0 <= PLUS)||LA36_0==RBRACKET||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||(LA36_0 >= SASS_AT_ROOT && LA36_0 <= SASS_DEBUG)||(LA36_0 >= SASS_EACH && LA36_0 <= SASS_FUNCTION)||(LA36_0 >= SASS_IF && LA36_0 <= SASS_MIXIN)||(LA36_0 >= SASS_RETURN && LA36_0 <= SEMI)||LA36_0==STAR||LA36_0==TILDE||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)||LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:9: mediaBody
					{
					dbg.location(385,9);
					pushFollow(FOLLOW_mediaBody_in_media551);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}
			dbg.location(386,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media558); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(387, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(389, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:390:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(391,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt41=0;
			try { dbg.enterSubRule(41);

			loop41:
			while (true) {
				int alt41=3;
				try { dbg.enterDecision(41, decisionCanBacktrack[41]);

				int LA41_0 = input.LA(1);
				if ( ((LA41_0 >= AT_IDENT && LA41_0 <= AT_SIGN)||(LA41_0 >= BOTTOMCENTER_SYM && LA41_0 <= BOTTOMRIGHT_SYM)||(LA41_0 >= CHARSET_SYM && LA41_0 <= COMMA)||LA41_0==COUNTER_STYLE_SYM||LA41_0==DCOLON||LA41_0==DOT||LA41_0==FONT_FACE_SYM||(LA41_0 >= GEN && LA41_0 <= GREATER)||(LA41_0 >= HASH && LA41_0 <= HASH_SYMBOL)||LA41_0==IDENT||LA41_0==IMPORT_SYM||(LA41_0 >= LBRACKET && LA41_0 <= LEFTTOP_SYM)||LA41_0==LESS_AND||(LA41_0 >= MEDIA_SYM && LA41_0 <= MOZ_DOCUMENT_SYM)||LA41_0==NAMESPACE_SYM||LA41_0==PAGE_SYM||(LA41_0 >= PIPE && LA41_0 <= PLUS)||LA41_0==RBRACKET||(LA41_0 >= RIGHTBOTTOM_SYM && LA41_0 <= RIGHTTOP_SYM)||(LA41_0 >= SASS_AT_ROOT && LA41_0 <= SASS_DEBUG)||(LA41_0 >= SASS_EACH && LA41_0 <= SASS_FUNCTION)||(LA41_0 >= SASS_IF && LA41_0 <= SASS_MIXIN)||(LA41_0 >= SASS_RETURN && LA41_0 <= SASS_WHILE)||LA41_0==STAR||LA41_0==TILDE||(LA41_0 >= TOPCENTER_SYM && LA41_0 <= TOPRIGHT_SYM)||LA41_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt41=1;
				}
				else if ( (LA41_0==SEMI) ) {
					alt41=2;
				}

				} finally {dbg.exitDecision(41);}

				switch (alt41) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(392,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(392,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody592);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(392,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt38=2;
					try { dbg.enterSubRule(38);
					try { dbg.enterDecision(38, decisionCanBacktrack[38]);

					try {
						isCyclicDecision = true;
						alt38 = dfa38.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(38);}

					switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(392,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:39: ( ws )?
							int alt37=2;
							try { dbg.enterSubRule(37);
							try { dbg.enterDecision(37, decisionCanBacktrack[37]);

							int LA37_0 = input.LA(1);
							if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
								alt37=1;
							}
							} finally {dbg.exitDecision(37);}

							switch (alt37) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:39: ws
									{
									dbg.location(392,39);
									pushFollow(FOLLOW_ws_in_mediaBody602);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(37);}
							dbg.location(392,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody605); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(392,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:50: ( ws )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:50: ws
							{
							dbg.location(392,50);
							pushFollow(FOLLOW_ws_in_mediaBody609);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(39);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:10: ( SEMI ( ws )? )
					{
					dbg.location(394,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:12: SEMI ( ws )?
					{
					dbg.location(394,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody636); if (state.failed) return;dbg.location(394,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ws
							{
							dbg.location(394,17);
							pushFollow(FOLLOW_ws_in_mediaBody638);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}

					}

					}
					break;

				default :
					if ( cnt41 >= 1 ) break loop41;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(41, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt41++;
			}
			} finally {dbg.exitSubRule(41);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(396, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:1: mediaBodyItem : ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration | ( sass_declaration_interpolation_expression COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_extend |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(398, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:5: ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration | ( sass_declaration_interpolation_expression COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_extend |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media )
			int alt46=15;
			try { dbg.enterDecision(46, decisionCanBacktrack[46]);

			switch ( input.LA(1) ) {
			case DOT:
				{
				int LA46_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt46=2;
				}
				else if ( (((synpred7_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA46_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt46=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA46_3 = input.LA(2);
				if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred6_Css3())) ) {
					alt46=2;
				}
				else if ( ((synpred7_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt46=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STAR:
				{
				int LA46_4 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA46_5 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case IDENT:
				{
				int LA46_6 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case HASH:
				{
				int LA46_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case GEN:
				{
				int LA46_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case SASS_EXTEND:
				{
				int LA46_9 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA46_10 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt46=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA46_11 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA46_12 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA46_13 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA46_14 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA46_15 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_CONTENT:
				{
				int LA46_16 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt46=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA46_17 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt46=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA46_18 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA46_19 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=12;
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case COMMA:
			case DCOLON:
			case GREATER:
			case LBRACKET:
			case LESS_AND:
			case PIPE:
			case PLUS:
			case RBRACKET:
			case SASS_EXTEND_ONLY_SELECTOR:
			case TILDE:
				{
				alt46=11;
				}
				break;
			case MINUS:
				{
				int LA46_27 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt46=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=11;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA46_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=13;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA46_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=14;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA46_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=14;
				}

				}
				break;
			case AT_IDENT:
				{
				int LA46_34 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=14;
				}

				}
				break;
			case MEDIA_SYM:
				{
				int LA46_35 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}
				else if ( (true) ) {
					alt46=15;
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_ELSE:
			case SASS_FUNCTION:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA46_36 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred8_Css3())) ) {
					alt46=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred9_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt46=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 46, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 46, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(46);}

			switch (alt46) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(400,85);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem704);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(402,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(402,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem737);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(402,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:87: ( ( ws )? IMPORTANT_SYM )?
					int alt43=2;
					try { dbg.enterSubRule(43);
					try { dbg.enterDecision(43, decisionCanBacktrack[43]);

					try {
						isCyclicDecision = true;
						alt43 = dfa43.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(43);}

					switch (alt43) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(402,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:88: ( ws )?
							int alt42=2;
							try { dbg.enterSubRule(42);
							try { dbg.enterDecision(42, decisionCanBacktrack[42]);

							int LA42_0 = input.LA(1);
							if ( (LA42_0==COMMENT||LA42_0==NL||LA42_0==WS) ) {
								alt42=1;
							}
							} finally {dbg.exitDecision(42);}

							switch (alt42) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:88: ws
									{
									dbg.location(402,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem740);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(42);}
							dbg.location(402,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem743); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(43);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(403,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(403,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem760);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(403,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:57: ( ( ws )? IMPORTANT_SYM )?
					int alt45=2;
					try { dbg.enterSubRule(45);
					try { dbg.enterDecision(45, decisionCanBacktrack[45]);

					try {
						isCyclicDecision = true;
						alt45 = dfa45.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(45);}

					switch (alt45) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(403,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:58: ( ws )?
							int alt44=2;
							try { dbg.enterSubRule(44);
							try { dbg.enterDecision(44, decisionCanBacktrack[44]);

							int LA44_0 = input.LA(1);
							if ( (LA44_0==COMMENT||LA44_0==NL||LA44_0==WS) ) {
								alt44=1;
							}
							} finally {dbg.exitDecision(44);}

							switch (alt44) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:58: ws
									{
									dbg.location(403,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem763);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(44);}
							dbg.location(403,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem766); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(45);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration
					{
					dbg.location(404,74);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem805);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:6: ( sass_declaration_interpolation_expression COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration
					{
					dbg.location(405,87);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem832);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:7: {...}? sass_extend
					{
					dbg.location(406,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(406,25);
					pushFollow(FOLLOW_sass_extend_in_mediaBodyItem842);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:407:7: {...}? sass_debug
					{
					dbg.location(407,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(407,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem852);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:7: {...}? sass_control
					{
					dbg.location(408,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(408,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem862);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:7: {...}? sass_content
					{
					dbg.location(409,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(409,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem872);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:7: {...}? importItem
					{
					dbg.location(410,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(410,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem882);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:411:7: rule
					{
					dbg.location(411,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem890);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:7: page
					{
					dbg.location(412,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem898);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:7: fontFace
					{
					dbg.location(413,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem906);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:7: vendorAtRule
					{
					dbg.location(414,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem914);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:416:7: media
					{
					dbg.location(416,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem927);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(417, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(419, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(420,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList941);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(420,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(49);

			loop49:
			while (true) {
				int alt49=2;
				try { dbg.enterDecision(49, decisionCanBacktrack[49]);

				int LA49_0 = input.LA(1);
				if ( (LA49_0==COMMENT||LA49_0==NL||LA49_0==WS) ) {
					int LA49_1 = input.LA(2);
					if ( (synpred10_Css3()) ) {
						alt49=1;
					}

				}
				else if ( (LA49_0==COMMA) ) {
					int LA49_32 = input.LA(2);
					if ( (synpred10_Css3()) ) {
						alt49=1;
					}

				}

				} finally {dbg.exitDecision(49);}

				switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(420,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:31: ( ws )?
					int alt47=2;
					try { dbg.enterSubRule(47);
					try { dbg.enterDecision(47, decisionCanBacktrack[47]);

					int LA47_0 = input.LA(1);
					if ( (LA47_0==COMMENT||LA47_0==NL||LA47_0==WS) ) {
						alt47=1;
					}
					} finally {dbg.exitDecision(47);}

					switch (alt47) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:31: ws
							{
							dbg.location(420,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList953);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(47);}
					dbg.location(420,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList956); if (state.failed) return;dbg.location(420,41);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:41: ( ws )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==COMMENT||LA48_0==NL||LA48_0==WS) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:41: ws
							{
							dbg.location(420,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList958);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(420,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList961);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop49;
				}
			}
			} finally {dbg.exitSubRule(49);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(421, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(423, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt58=3;
			try { dbg.enterDecision(58, decisionCanBacktrack[58]);

			switch ( input.LA(1) ) {
			case GEN:
			case HASH_SYMBOL:
			case IDENT:
			case NOT:
				{
				alt58=1;
				}
				break;
			case LPAREN:
				{
				alt58=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt58=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 58, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(58);}

			switch (alt58) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(425,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:5: ( mediaQueryOperator ( ws )? )?
					int alt51=2;
					try { dbg.enterSubRule(51);
					try { dbg.enterDecision(51, decisionCanBacktrack[51]);

					int LA51_0 = input.LA(1);
					if ( (LA51_0==IDENT) ) {
						int LA51_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt51=1;
						}
					}
					else if ( (LA51_0==NOT) ) {
						alt51=1;
					}
					} finally {dbg.exitDecision(51);}

					switch (alt51) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:6: mediaQueryOperator ( ws )?
							{
							dbg.location(425,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery980);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(425,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:25: ( ws )?
							int alt50=2;
							try { dbg.enterSubRule(50);
							try { dbg.enterDecision(50, decisionCanBacktrack[50]);

							int LA50_0 = input.LA(1);
							if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {
								alt50=1;
							}
							} finally {dbg.exitDecision(50);}

							switch (alt50) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:25: ws
									{
									dbg.location(425,25);
									pushFollow(FOLLOW_ws_in_mediaQuery982);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(50);}

							}
							break;

					}
					} finally {dbg.exitSubRule(51);}
					dbg.location(425,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery989);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(425,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:43: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(54);

					loop54:
					while (true) {
						int alt54=2;
						try { dbg.enterDecision(54, decisionCanBacktrack[54]);

						try {
							isCyclicDecision = true;
							alt54 = dfa54.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(54);}

						switch (alt54) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:45: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(425,45);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:45: ( ws )?
							int alt52=2;
							try { dbg.enterSubRule(52);
							try { dbg.enterDecision(52, decisionCanBacktrack[52]);

							int LA52_0 = input.LA(1);
							if ( (LA52_0==COMMENT||LA52_0==NL||LA52_0==WS) ) {
								alt52=1;
							}
							} finally {dbg.exitDecision(52);}

							switch (alt52) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:45: ws
									{
									dbg.location(425,45);
									pushFollow(FOLLOW_ws_in_mediaQuery993);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(52);}
							dbg.location(425,49);
							pushFollow(FOLLOW_key_and_in_mediaQuery996);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(425,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:57: ( ws )?
							int alt53=2;
							try { dbg.enterSubRule(53);
							try { dbg.enterDecision(53, decisionCanBacktrack[53]);

							int LA53_0 = input.LA(1);
							if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
								alt53=1;
							}
							} finally {dbg.exitDecision(53);}

							switch (alt53) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:57: ws
									{
									dbg.location(425,57);
									pushFollow(FOLLOW_ws_in_mediaQuery998);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(53);}
							dbg.location(425,61);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1001);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop54;
						}
					}
					} finally {dbg.exitSubRule(54);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(426,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1012);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(426,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:23: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(57);

					loop57:
					while (true) {
						int alt57=2;
						try { dbg.enterDecision(57, decisionCanBacktrack[57]);

						try {
							isCyclicDecision = true;
							alt57 = dfa57.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(57);}

						switch (alt57) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:25: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(426,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:25: ( ws )?
							int alt55=2;
							try { dbg.enterSubRule(55);
							try { dbg.enterDecision(55, decisionCanBacktrack[55]);

							int LA55_0 = input.LA(1);
							if ( (LA55_0==COMMENT||LA55_0==NL||LA55_0==WS) ) {
								alt55=1;
							}
							} finally {dbg.exitDecision(55);}

							switch (alt55) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:25: ws
									{
									dbg.location(426,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1016);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(55);}
							dbg.location(426,29);
							pushFollow(FOLLOW_key_and_in_mediaQuery1019);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(426,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:37: ( ws )?
							int alt56=2;
							try { dbg.enterSubRule(56);
							try { dbg.enterDecision(56, decisionCanBacktrack[56]);

							int LA56_0 = input.LA(1);
							if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
								alt56=1;
							}
							} finally {dbg.exitDecision(56);}

							switch (alt56) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:37: ws
									{
									dbg.location(426,37);
									pushFollow(FOLLOW_ws_in_mediaQuery1021);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(56);}
							dbg.location(426,41);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1024);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop57;
						}
					}
					} finally {dbg.exitSubRule(57);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: {...}? cp_variable
					{
					dbg.location(427,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(427,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1037);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(428, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(430, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:3: ( key_only | NOT )
			int alt59=2;
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			int LA59_0 = input.LA(1);
			if ( (LA59_0==IDENT) ) {
				alt59=1;
			}
			else if ( (LA59_0==NOT) ) {
				alt59=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:5: key_only
					{
					dbg.location(431,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1049);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:16: NOT
					{
					dbg.location(431,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1053); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(432, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(434, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt60=3;
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt60=1;
				}
				break;
			case GEN:
				{
				alt60=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt60=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:4: IDENT
					{
					dbg.location(435,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1065); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:12: GEN
					{
					dbg.location(435,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1069); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(435,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(435,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1075);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(436, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:1: mediaExpression : LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ;
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(438, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:5: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:5: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
			{
			dbg.location(440,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1093); if (state.failed) return;dbg.location(440,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:12: ( ws )?
			int alt61=2;
			try { dbg.enterSubRule(61);
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			int LA61_0 = input.LA(1);
			if ( (LA61_0==COMMENT||LA61_0==NL||LA61_0==WS) ) {
				alt61=1;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:12: ws
					{
					dbg.location(440,12);
					pushFollow(FOLLOW_ws_in_mediaExpression1095);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(61);}
			dbg.location(440,16);
			pushFollow(FOLLOW_mediaFeature_in_mediaExpression1098);
			mediaFeature();
			state._fsp--;
			if (state.failed) return;dbg.location(440,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:29: ( mediaFeatureValue )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			try {
				isCyclicDecision = true;
				alt62 = dfa62.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:29: mediaFeatureValue
					{
					dbg.location(440,29);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1100);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(440,48);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:48: ( ws )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			int LA63_0 = input.LA(1);
			if ( (LA63_0==COMMENT||LA63_0==NL||LA63_0==WS) ) {
				alt63=1;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:48: ws
					{
					dbg.location(440,48);
					pushFollow(FOLLOW_ws_in_mediaExpression1103);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(440,52);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1106); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(441, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(443, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(445,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:5: ( ws )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:5: ws
					{
					dbg.location(445,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1127);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(445,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1130); if (state.failed) return;dbg.location(445,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:15: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:15: ws
					{
					dbg.location(445,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1132);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(446,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:446:5: ({...}? cp_expression | expression )
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LPAREN:
			case NOT:
				{
				alt66=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA66_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case IDENT:
				{
				int LA66_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA66_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA66_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA66_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case EMS:
				{
				int LA66_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case REM:
				{
				int LA66_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case EXS:
				{
				int LA66_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA66_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case TIME:
				{
				int LA66_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case FREQ:
				{
				int LA66_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA66_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA66_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case STRING:
				{
				int LA66_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case TILDE:
				{
				int LA66_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA66_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case GEN:
				{
				int LA66_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case URI:
				{
				int LA66_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case HASH:
				{
				int LA66_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (true) ) {
					alt66=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA66_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt66=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA66_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt66=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA66_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA66_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 66, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:447:9: {...}? cp_expression
					{
					dbg.location(447,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(447,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1151);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:9: expression
					{
					dbg.location(449,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1171);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(451, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(453, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt68=3;
			try { dbg.enterDecision(68, decisionCanBacktrack[68]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt68=1;
				}
				break;
			case GEN:
				{
				alt68=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt68=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 68, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(68);}

			switch (alt68) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:4: IDENT
					{
					dbg.location(454,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1191); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: GEN
					{
					dbg.location(454,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1195); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(454,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(454,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:47: ( cp_variable | sass_interpolation_expression_var )
					int alt67=2;
					try { dbg.enterSubRule(67);
					try { dbg.enterDecision(67, decisionCanBacktrack[67]);

					int LA67_0 = input.LA(1);
					if ( (LA67_0==AT_IDENT||(LA67_0 >= BOTTOMCENTER_SYM && LA67_0 <= BOTTOMRIGHT_SYM)||LA67_0==CHARSET_SYM||LA67_0==COUNTER_STYLE_SYM||LA67_0==FONT_FACE_SYM||LA67_0==IMPORT_SYM||(LA67_0 >= LEFTBOTTOM_SYM && LA67_0 <= LEFTTOP_SYM)||LA67_0==MEDIA_SYM||LA67_0==MOZ_DOCUMENT_SYM||LA67_0==NAMESPACE_SYM||LA67_0==PAGE_SYM||(LA67_0 >= RIGHTBOTTOM_SYM && LA67_0 <= RIGHTTOP_SYM)||(LA67_0 >= SASS_AT_ROOT && LA67_0 <= SASS_DEBUG)||(LA67_0 >= SASS_EACH && LA67_0 <= SASS_EXTEND)||(LA67_0 >= SASS_FOR && LA67_0 <= SASS_FUNCTION)||(LA67_0 >= SASS_IF && LA67_0 <= SASS_MIXIN)||(LA67_0 >= SASS_RETURN && LA67_0 <= SASS_WHILE)||(LA67_0 >= TOPCENTER_SYM && LA67_0 <= TOPRIGHT_SYM)||LA67_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt67=1;
					}
					else if ( (LA67_0==HASH_SYMBOL) ) {
						alt67=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 67, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(67);}

					switch (alt67) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:49: cp_variable
							{
							dbg.location(454,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1203);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:63: sass_interpolation_expression_var
							{
							dbg.location(454,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1207);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(67);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(455, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(457, 1);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(459,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt73=0;
			try { dbg.enterSubRule(73);

			loop73:
			while (true) {
				int alt73=3;
				try { dbg.enterDecision(73, decisionCanBacktrack[73]);

				int LA73_0 = input.LA(1);
				if ( ((LA73_0 >= AT_IDENT && LA73_0 <= AT_SIGN)||(LA73_0 >= BOTTOMCENTER_SYM && LA73_0 <= BOTTOMRIGHT_SYM)||(LA73_0 >= CHARSET_SYM && LA73_0 <= COMMA)||LA73_0==COUNTER_STYLE_SYM||LA73_0==DCOLON||LA73_0==DOT||LA73_0==FONT_FACE_SYM||(LA73_0 >= GEN && LA73_0 <= GREATER)||(LA73_0 >= HASH && LA73_0 <= HASH_SYMBOL)||LA73_0==IDENT||LA73_0==IMPORT_SYM||(LA73_0 >= LBRACKET && LA73_0 <= LEFTTOP_SYM)||LA73_0==LESS_AND||(LA73_0 >= MEDIA_SYM && LA73_0 <= MOZ_DOCUMENT_SYM)||LA73_0==NAMESPACE_SYM||LA73_0==PAGE_SYM||(LA73_0 >= PIPE && LA73_0 <= PLUS)||LA73_0==RBRACKET||(LA73_0 >= RIGHTBOTTOM_SYM && LA73_0 <= RIGHTTOP_SYM)||(LA73_0 >= SASS_AT_ROOT && LA73_0 <= SASS_DEBUG)||(LA73_0 >= SASS_EACH && LA73_0 <= SASS_FUNCTION)||(LA73_0 >= SASS_IF && LA73_0 <= SASS_MIXIN)||(LA73_0 >= SASS_RETURN && LA73_0 <= SASS_WHILE)||LA73_0==STAR||LA73_0==TILDE||(LA73_0 >= TOPCENTER_SYM && LA73_0 <= TOPRIGHT_SYM)||LA73_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt73=1;
				}
				else if ( (LA73_0==SEMI) ) {
					alt73=2;
				}

				} finally {dbg.exitDecision(73);}

				switch (alt73) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(460,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(460,12);
					pushFollow(FOLLOW_bodyItem_in_body1241);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(460,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt70=2;
					try { dbg.enterSubRule(70);
					try { dbg.enterDecision(70, decisionCanBacktrack[70]);

					try {
						isCyclicDecision = true;
						alt70 = dfa70.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(70);}

					switch (alt70) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(460,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:34: ( ws )?
							int alt69=2;
							try { dbg.enterSubRule(69);
							try { dbg.enterDecision(69, decisionCanBacktrack[69]);

							int LA69_0 = input.LA(1);
							if ( (LA69_0==COMMENT||LA69_0==NL||LA69_0==WS) ) {
								alt69=1;
							}
							} finally {dbg.exitDecision(69);}

							switch (alt69) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:34: ws
									{
									dbg.location(460,34);
									pushFollow(FOLLOW_ws_in_body1251);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(69);}
							dbg.location(460,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1254); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(70);}
					dbg.location(460,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:45: ( ws )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					int LA71_0 = input.LA(1);
					if ( (LA71_0==COMMENT||LA71_0==NL||LA71_0==WS) ) {
						alt71=1;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:45: ws
							{
							dbg.location(460,45);
							pushFollow(FOLLOW_ws_in_body1258);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:10: ( SEMI ( ws )? )
					{
					dbg.location(462,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:12: SEMI ( ws )?
					{
					dbg.location(462,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1285); if (state.failed) return;dbg.location(462,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:17: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:17: ws
							{
							dbg.location(462,17);
							pushFollow(FOLLOW_ws_in_body1287);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;

				default :
					if ( cnt73 >= 1 ) break loop73;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(73, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt73++;
			}
			} finally {dbg.exitSubRule(73);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(464, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:1: bodyItem : ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( sass_map )=> sass_map | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(466, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:5: ( ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( sass_map )=> sass_map | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt74=11;
			try { dbg.enterDecision(74, decisionCanBacktrack[74]);

			switch ( input.LA(1) ) {
			case DOT:
				{
				int LA74_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt74=1;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=2;
				}
				else if ( (((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=3;
				}
				else if ( (true) ) {
					alt74=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA74_2 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred12_Css3())) ) {
					alt74=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA74_3 = input.LA(2);
				if ( (((synpred13_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=2;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt74=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA74_4 = input.LA(2);
				if ( (true) ) {
					alt74=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case COMMA:
			case DCOLON:
			case GEN:
			case GREATER:
			case HASH:
			case HASH_SYMBOL:
			case IDENT:
			case LBRACKET:
			case LESS_AND:
			case MINUS:
			case PIPE:
			case PLUS:
			case RBRACKET:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt74=4;
				}
				break;
			case MEDIA_SYM:
				{
				int LA74_20 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA74_21 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt74=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA74_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA74_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA74_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA74_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA74_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case AT_IDENT:
				{
				int LA74_27 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (true) ) {
					alt74=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA74_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt74=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA74_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA74_30 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA74_31 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA74_32 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA74_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA74_34 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt74=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA74_35 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt74=5;
				}
				else if ( ((synpred16_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt74=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 74, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 74, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(74);}

			switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:9: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(468,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1359);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(470,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(470,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1392);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(471,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(471,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1411);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:8: rule
					{
					dbg.location(472,8);
					pushFollow(FOLLOW_rule_in_bodyItem1420);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:11: ( sass_map )=> sass_map
					{
					dbg.location(473,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem1437);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(474,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem1459);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:11: at_rule
					{
					dbg.location(475,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem1471);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:11: {...}? importItem
					{
					dbg.location(477,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(477,40);
					pushFollow(FOLLOW_importItem_in_bodyItem1494);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:11: {...}? sass_debug
					{
					dbg.location(478,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(478,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem1508);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:11: {...}? sass_control
					{
					dbg.location(479,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(479,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem1522);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:11: {...}? sass_function_declaration
					{
					dbg.location(480,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(480,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem1536);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(481, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:1: at_rule : ( media | page | counterStyle | fontFace | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(486, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:5: ( media | page | counterStyle | fontFace | vendorAtRule )
			int alt75=5;
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt75=1;
				}
				break;
			case PAGE_SYM:
				{
				alt75=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt75=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt75=4;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt75=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:5: media
					{
					dbg.location(488,5);
					pushFollow(FOLLOW_media_in_at_rule1562);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:7: page
					{
					dbg.location(489,7);
					pushFollow(FOLLOW_page_in_at_rule1570);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:7: counterStyle
					{
					dbg.location(490,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule1578);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:7: fontFace
					{
					dbg.location(491,7);
					pushFollow(FOLLOW_fontFace_in_at_rule1586);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:7: vendorAtRule
					{
					dbg.location(492,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule1594);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(493, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(495, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:496:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt76=3;
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt76=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt76=2;
				}
				break;
			case AT_IDENT:
				{
				alt76=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 76, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:496:3: moz_document
					{
					dbg.location(496,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule1607);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:496:18: webkitKeyframes
					{
					dbg.location(496,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule1611);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:496:36: generic_at_rule
					{
					dbg.location(496,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule1615);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(496, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:1: atRuleId : ( IDENT | STRING );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(498, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:2: ( IDENT | STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(499,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(501, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(503, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(504,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule1643); if (state.failed) return;dbg.location(504,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:16: ( ws )?
			int alt77=2;
			try { dbg.enterSubRule(77);
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			int LA77_0 = input.LA(1);
			if ( (LA77_0==COMMENT||LA77_0==NL||LA77_0==WS) ) {
				alt77=1;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:16: ws
					{
					dbg.location(504,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule1645);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(77);}
			dbg.location(504,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:20: ( atRuleId ( ws )? )?
			int alt79=2;
			try { dbg.enterSubRule(79);
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			int LA79_0 = input.LA(1);
			if ( (LA79_0==IDENT||LA79_0==STRING) ) {
				alt79=1;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:22: atRuleId ( ws )?
					{
					dbg.location(504,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule1650);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(504,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:31: ( ws )?
					int alt78=2;
					try { dbg.enterSubRule(78);
					try { dbg.enterDecision(78, decisionCanBacktrack[78]);

					int LA78_0 = input.LA(1);
					if ( (LA78_0==COMMENT||LA78_0==NL||LA78_0==WS) ) {
						alt78=1;
					}
					} finally {dbg.exitDecision(78);}

					switch (alt78) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:31: ws
							{
							dbg.location(504,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule1652);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(78);}

					}
					break;

			}
			} finally {dbg.exitSubRule(79);}
			dbg.location(505,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule1666); if (state.failed) return;dbg.location(506,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule1677);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(507,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule1687); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(508, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(509, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(511,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1698); if (state.failed) return;dbg.location(511,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:19: ( ws )?
			int alt80=2;
			try { dbg.enterSubRule(80);
			try { dbg.enterDecision(80, decisionCanBacktrack[80]);

			int LA80_0 = input.LA(1);
			if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
				alt80=1;
			}
			} finally {dbg.exitDecision(80);}

			switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:19: ws
					{
					dbg.location(511,19);
					pushFollow(FOLLOW_ws_in_moz_document1700);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(80);}
			dbg.location(511,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:25: moz_document_function ( ws )?
			{
			dbg.location(511,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document1705);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(511,47);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:47: ( ws )?
			int alt81=2;
			try { dbg.enterSubRule(81);
			try { dbg.enterDecision(81, decisionCanBacktrack[81]);

			int LA81_0 = input.LA(1);
			if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
				alt81=1;
			}
			} finally {dbg.exitDecision(81);}

			switch (alt81) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:47: ws
					{
					dbg.location(511,47);
					pushFollow(FOLLOW_ws_in_moz_document1707);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(81);}

			}
			dbg.location(511,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(84);

			loop84:
			while (true) {
				int alt84=2;
				try { dbg.enterDecision(84, decisionCanBacktrack[84]);

				int LA84_0 = input.LA(1);
				if ( (LA84_0==COMMA) ) {
					alt84=1;
				}

				} finally {dbg.exitDecision(84);}

				switch (alt84) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(511,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document1713); if (state.failed) return;dbg.location(511,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:60: ( ws )?
					int alt82=2;
					try { dbg.enterSubRule(82);
					try { dbg.enterDecision(82, decisionCanBacktrack[82]);

					int LA82_0 = input.LA(1);
					if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {
						alt82=1;
					}
					} finally {dbg.exitDecision(82);}

					switch (alt82) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:60: ws
							{
							dbg.location(511,60);
							pushFollow(FOLLOW_ws_in_moz_document1715);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(82);}
					dbg.location(511,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document1718);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(511,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:86: ( ws )?
					int alt83=2;
					try { dbg.enterSubRule(83);
					try { dbg.enterDecision(83, decisionCanBacktrack[83]);

					int LA83_0 = input.LA(1);
					if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
						alt83=1;
					}
					} finally {dbg.exitDecision(83);}

					switch (alt83) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:86: ws
							{
							dbg.location(511,86);
							pushFollow(FOLLOW_ws_in_moz_document1720);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(83);}

					}
					break;

				default :
					break loop84;
				}
			}
			} finally {dbg.exitSubRule(84);}
			dbg.location(512,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document1727); if (state.failed) return;dbg.location(512,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:9: ( ws )?
			int alt85=2;
			try { dbg.enterSubRule(85);
			try { dbg.enterDecision(85, decisionCanBacktrack[85]);

			int LA85_0 = input.LA(1);
			if ( (LA85_0==COMMENT||LA85_0==NL||LA85_0==WS) ) {
				alt85=1;
			}
			} finally {dbg.exitDecision(85);}

			switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:9: ws
					{
					dbg.location(512,9);
					pushFollow(FOLLOW_ws_in_moz_document1729);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(85);}
			dbg.location(513,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:3: ( body )?
			int alt86=2;
			try { dbg.enterSubRule(86);
			try { dbg.enterDecision(86, decisionCanBacktrack[86]);

			int LA86_0 = input.LA(1);
			if ( ((LA86_0 >= AT_IDENT && LA86_0 <= AT_SIGN)||(LA86_0 >= BOTTOMCENTER_SYM && LA86_0 <= BOTTOMRIGHT_SYM)||(LA86_0 >= CHARSET_SYM && LA86_0 <= COMMA)||LA86_0==COUNTER_STYLE_SYM||LA86_0==DCOLON||LA86_0==DOT||LA86_0==FONT_FACE_SYM||(LA86_0 >= GEN && LA86_0 <= GREATER)||(LA86_0 >= HASH && LA86_0 <= HASH_SYMBOL)||LA86_0==IDENT||LA86_0==IMPORT_SYM||(LA86_0 >= LBRACKET && LA86_0 <= LEFTTOP_SYM)||LA86_0==LESS_AND||(LA86_0 >= MEDIA_SYM && LA86_0 <= MOZ_DOCUMENT_SYM)||LA86_0==NAMESPACE_SYM||LA86_0==PAGE_SYM||(LA86_0 >= PIPE && LA86_0 <= PLUS)||LA86_0==RBRACKET||(LA86_0 >= RIGHTBOTTOM_SYM && LA86_0 <= RIGHTTOP_SYM)||(LA86_0 >= SASS_AT_ROOT && LA86_0 <= SASS_DEBUG)||(LA86_0 >= SASS_EACH && LA86_0 <= SASS_FUNCTION)||(LA86_0 >= SASS_IF && LA86_0 <= SASS_MIXIN)||(LA86_0 >= SASS_RETURN && LA86_0 <= SEMI)||LA86_0==STAR||LA86_0==TILDE||(LA86_0 >= TOPCENTER_SYM && LA86_0 <= TOPRIGHT_SYM)||LA86_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt86=1;
			}
			} finally {dbg.exitDecision(86);}

			switch (alt86) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:3: body
					{
					dbg.location(513,3);
					pushFollow(FOLLOW_body_in_moz_document1734);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(86);}
			dbg.location(514,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document1739); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(515, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(517, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(518,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(520, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(523, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(525,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1776); if (state.failed) return;dbg.location(525,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:23: ( ws )?
			int alt87=2;
			try { dbg.enterSubRule(87);
			try { dbg.enterDecision(87, decisionCanBacktrack[87]);

			int LA87_0 = input.LA(1);
			if ( (LA87_0==COMMENT||LA87_0==NL||LA87_0==WS) ) {
				alt87=1;
			}
			} finally {dbg.exitDecision(87);}

			switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:23: ws
					{
					dbg.location(525,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1778);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(87);}
			dbg.location(525,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes1781);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(525,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:36: ( ws )?
			int alt88=2;
			try { dbg.enterSubRule(88);
			try { dbg.enterDecision(88, decisionCanBacktrack[88]);

			int LA88_0 = input.LA(1);
			if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
				alt88=1;
			}
			} finally {dbg.exitDecision(88);}

			switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:36: ws
					{
					dbg.location(525,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1783);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(88);}
			dbg.location(526,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes1787); if (state.failed) return;dbg.location(526,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:9: ( ws )?
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( (LA89_0==COMMENT||LA89_0==NL||LA89_0==WS) ) {
				alt89=1;
			}
			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:9: ws
					{
					dbg.location(526,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1789);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}
			dbg.location(527,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(91);

			loop91:
			while (true) {
				int alt91=2;
				try { dbg.enterDecision(91, decisionCanBacktrack[91]);

				int LA91_0 = input.LA(1);
				if ( (LA91_0==IDENT||LA91_0==PERCENTAGE) ) {
					alt91=1;
				}

				} finally {dbg.exitDecision(91);}

				switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(527,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1796);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(527,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:26: ( ws )?
					int alt90=2;
					try { dbg.enterSubRule(90);
					try { dbg.enterDecision(90, decisionCanBacktrack[90]);

					int LA90_0 = input.LA(1);
					if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
						alt90=1;
					}
					} finally {dbg.exitDecision(90);}

					switch (alt90) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:527:26: ws
							{
							dbg.location(527,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes1798);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(90);}

					}
					break;

				default :
					break loop91;
				}
			}
			} finally {dbg.exitSubRule(91);}
			dbg.location(528,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes1805); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(529, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:1: webkitKeyframesBlock : webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(531, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(533,2);
			pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1817);
			webkitKeyframeSelectors();
			state._fsp--;
			if (state.failed) return;dbg.location(533,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:26: ( ws )?
			int alt92=2;
			try { dbg.enterSubRule(92);
			try { dbg.enterDecision(92, decisionCanBacktrack[92]);

			int LA92_0 = input.LA(1);
			if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
				alt92=1;
			}
			} finally {dbg.exitDecision(92);}

			switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:26: ws
					{
					dbg.location(533,26);
					pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1819);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(92);}
			dbg.location(534,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock1823); if (state.failed) return;dbg.location(534,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:10: ( ws )?
			int alt93=2;
			try { dbg.enterSubRule(93);
			try { dbg.enterDecision(93, decisionCanBacktrack[93]);

			int LA93_0 = input.LA(1);
			if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {
				alt93=1;
			}
			} finally {dbg.exitDecision(93);}

			switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:10: ws
					{
					dbg.location(534,10);
					pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1826);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(93);}
			dbg.location(534,14);
			pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock1829);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(535,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:3: ( declarations )?
			int alt94=2;
			try { dbg.enterSubRule(94);
			try { dbg.enterDecision(94, decisionCanBacktrack[94]);

			int LA94_0 = input.LA(1);
			if ( ((LA94_0 >= AT_IDENT && LA94_0 <= AT_SIGN)||(LA94_0 >= BOTTOMCENTER_SYM && LA94_0 <= BOTTOMRIGHT_SYM)||(LA94_0 >= CHARSET_SYM && LA94_0 <= COMMA)||LA94_0==COUNTER_STYLE_SYM||LA94_0==DCOLON||LA94_0==DOT||LA94_0==FONT_FACE_SYM||(LA94_0 >= GEN && LA94_0 <= GREATER)||(LA94_0 >= HASH && LA94_0 <= HASH_SYMBOL)||LA94_0==IDENT||LA94_0==IMPORT_SYM||(LA94_0 >= LBRACKET && LA94_0 <= LEFTTOP_SYM)||LA94_0==LESS_AND||(LA94_0 >= MEDIA_SYM && LA94_0 <= MOZ_DOCUMENT_SYM)||LA94_0==NAMESPACE_SYM||LA94_0==PAGE_SYM||(LA94_0 >= PIPE && LA94_0 <= PLUS)||LA94_0==RBRACKET||(LA94_0 >= RIGHTBOTTOM_SYM && LA94_0 <= RIGHTTOP_SYM)||(LA94_0 >= SASS_AT_ROOT && LA94_0 <= SASS_DEBUG)||(LA94_0 >= SASS_EACH && LA94_0 <= SASS_FUNCTION)||(LA94_0 >= SASS_IF && LA94_0 <= SASS_MIXIN)||(LA94_0 >= SASS_RETURN && LA94_0 <= SEMI)||LA94_0==STAR||LA94_0==TILDE||(LA94_0 >= TOPCENTER_SYM && LA94_0 <= TOPRIGHT_SYM)||LA94_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt94=1;
			}
			} finally {dbg.exitDecision(94);}

			switch (alt94) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:3: declarations
					{
					dbg.location(535,3);
					pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock1833);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(94);}
			dbg.location(536,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock1837); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(537, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:1: webkitKeyframeSelectors : ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(539, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:2: ( ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:2: ( IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*
			{
			dbg.location(541,2);
			if ( input.LA(1)==IDENT||input.LA(1)==PERCENTAGE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(541,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:25: ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(97);

			loop97:
			while (true) {
				int alt97=2;
				try { dbg.enterDecision(97, decisionCanBacktrack[97]);

				try {
					isCyclicDecision = true;
					alt97 = dfa97.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(97);}

				switch (alt97) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:27: ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE )
					{
					dbg.location(541,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:27: ( ws )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==COMMENT||LA95_0==NL||LA95_0==WS) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:27: ws
							{
							dbg.location(541,27);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1861);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(541,31);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors1864); if (state.failed) return;dbg.location(541,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:37: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:37: ws
							{
							dbg.location(541,37);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1866);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(541,41);
					if ( input.LA(1)==IDENT||input.LA(1)==PERCENTAGE ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					break loop97;
				}
			}
			} finally {dbg.exitSubRule(97);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(542, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE ;
	public final void page() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(544, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE
			{
			dbg.location(545,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page1894); if (state.failed) return;dbg.location(545,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:16: ( ws )?
			int alt98=2;
			try { dbg.enterSubRule(98);
			try { dbg.enterDecision(98, decisionCanBacktrack[98]);

			int LA98_0 = input.LA(1);
			if ( (LA98_0==COMMENT||LA98_0==NL||LA98_0==WS) ) {
				alt98=1;
			}
			} finally {dbg.exitDecision(98);}

			switch (alt98) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:16: ws
					{
					dbg.location(545,16);
					pushFollow(FOLLOW_ws_in_page1896);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(98);}
			dbg.location(545,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:20: ( IDENT ( ws )? )?
			int alt100=2;
			try { dbg.enterSubRule(100);
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			int LA100_0 = input.LA(1);
			if ( (LA100_0==IDENT) ) {
				alt100=1;
			}
			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:22: IDENT ( ws )?
					{
					dbg.location(545,22);
					match(input,IDENT,FOLLOW_IDENT_in_page1901); if (state.failed) return;dbg.location(545,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:28: ( ws )?
					int alt99=2;
					try { dbg.enterSubRule(99);
					try { dbg.enterDecision(99, decisionCanBacktrack[99]);

					int LA99_0 = input.LA(1);
					if ( (LA99_0==COMMENT||LA99_0==NL||LA99_0==WS) ) {
						alt99=1;
					}
					} finally {dbg.exitDecision(99);}

					switch (alt99) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:28: ws
							{
							dbg.location(545,28);
							pushFollow(FOLLOW_ws_in_page1903);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(99);}

					}
					break;

			}
			} finally {dbg.exitSubRule(100);}
			dbg.location(545,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:35: ( pseudoPage ( ws )? )?
			int alt102=2;
			try { dbg.enterSubRule(102);
			try { dbg.enterDecision(102, decisionCanBacktrack[102]);

			int LA102_0 = input.LA(1);
			if ( (LA102_0==COLON) ) {
				alt102=1;
			}
			} finally {dbg.exitDecision(102);}

			switch (alt102) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:36: pseudoPage ( ws )?
					{
					dbg.location(545,36);
					pushFollow(FOLLOW_pseudoPage_in_page1910);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(545,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:47: ( ws )?
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
						alt101=1;
					}
					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:47: ws
							{
							dbg.location(545,47);
							pushFollow(FOLLOW_ws_in_page1912);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}

					}
					break;

			}
			} finally {dbg.exitSubRule(102);}
			dbg.location(546,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page1925); if (state.failed) return;dbg.location(546,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:16: ( ws )?
			int alt103=2;
			try { dbg.enterSubRule(103);
			try { dbg.enterDecision(103, decisionCanBacktrack[103]);

			int LA103_0 = input.LA(1);
			if ( (LA103_0==COMMENT||LA103_0==NL||LA103_0==WS) ) {
				alt103=1;
			}
			} finally {dbg.exitDecision(103);}

			switch (alt103) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:16: ws
					{
					dbg.location(546,16);
					pushFollow(FOLLOW_ws_in_page1927);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(103);}
			dbg.location(549,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:13: ( ( propertyDeclaration | margin ) ( ws )? )?
			int alt106=2;
			try { dbg.enterSubRule(106);
			try { dbg.enterDecision(106, decisionCanBacktrack[106]);

			int LA106_0 = input.LA(1);
			if ( (LA106_0==AT_IDENT||(LA106_0 >= BOTTOMCENTER_SYM && LA106_0 <= BOTTOMRIGHT_SYM)||LA106_0==CHARSET_SYM||LA106_0==COUNTER_STYLE_SYM||LA106_0==DOT||LA106_0==FONT_FACE_SYM||LA106_0==GEN||(LA106_0 >= HASH && LA106_0 <= HASH_SYMBOL)||LA106_0==IDENT||LA106_0==IMPORT_SYM||(LA106_0 >= LEFTBOTTOM_SYM && LA106_0 <= LEFTTOP_SYM)||(LA106_0 >= MEDIA_SYM && LA106_0 <= MOZ_DOCUMENT_SYM)||LA106_0==NAMESPACE_SYM||LA106_0==PAGE_SYM||(LA106_0 >= RIGHTBOTTOM_SYM && LA106_0 <= RIGHTTOP_SYM)||(LA106_0 >= SASS_AT_ROOT && LA106_0 <= SASS_DEBUG)||(LA106_0 >= SASS_EACH && LA106_0 <= SASS_EXTEND)||(LA106_0 >= SASS_FOR && LA106_0 <= SASS_FUNCTION)||(LA106_0 >= SASS_IF && LA106_0 <= SASS_MIXIN)||(LA106_0 >= SASS_RETURN && LA106_0 <= SASS_WHILE)||LA106_0==STAR||(LA106_0 >= TOPCENTER_SYM && LA106_0 <= TOPRIGHT_SYM)||LA106_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt106=1;
			}
			} finally {dbg.exitDecision(106);}

			switch (alt106) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:14: ( propertyDeclaration | margin ) ( ws )?
					{
					dbg.location(549,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:14: ( propertyDeclaration | margin )
					int alt104=2;
					try { dbg.enterSubRule(104);
					try { dbg.enterDecision(104, decisionCanBacktrack[104]);

					try {
						isCyclicDecision = true;
						alt104 = dfa104.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(104);}

					switch (alt104) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:15: propertyDeclaration
							{
							dbg.location(549,15);
							pushFollow(FOLLOW_propertyDeclaration_in_page1970);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:35: margin
							{
							dbg.location(549,35);
							pushFollow(FOLLOW_margin_in_page1972);
							margin();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(104);}
					dbg.location(549,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:43: ( ws )?
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					int LA105_0 = input.LA(1);
					if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
						alt105=1;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:43: ws
							{
							dbg.location(549,43);
							pushFollow(FOLLOW_ws_in_page1975);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}

					}
					break;

			}
			} finally {dbg.exitSubRule(106);}
			dbg.location(549,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:49: ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )*
			try { dbg.enterSubRule(111);

			loop111:
			while (true) {
				int alt111=2;
				try { dbg.enterDecision(111, decisionCanBacktrack[111]);

				int LA111_0 = input.LA(1);
				if ( (LA111_0==SEMI) ) {
					alt111=1;
				}

				} finally {dbg.exitDecision(111);}

				switch (alt111) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:50: SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )?
					{
					dbg.location(549,50);
					match(input,SEMI,FOLLOW_SEMI_in_page1981); if (state.failed) return;dbg.location(549,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:55: ( ws )?
					int alt107=2;
					try { dbg.enterSubRule(107);
					try { dbg.enterDecision(107, decisionCanBacktrack[107]);

					int LA107_0 = input.LA(1);
					if ( (LA107_0==COMMENT||LA107_0==NL||LA107_0==WS) ) {
						alt107=1;
					}
					} finally {dbg.exitDecision(107);}

					switch (alt107) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:55: ws
							{
							dbg.location(549,55);
							pushFollow(FOLLOW_ws_in_page1983);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(107);}
					dbg.location(549,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:59: ( ( propertyDeclaration | margin ) ( ws )? )?
					int alt110=2;
					try { dbg.enterSubRule(110);
					try { dbg.enterDecision(110, decisionCanBacktrack[110]);

					int LA110_0 = input.LA(1);
					if ( (LA110_0==AT_IDENT||(LA110_0 >= BOTTOMCENTER_SYM && LA110_0 <= BOTTOMRIGHT_SYM)||LA110_0==CHARSET_SYM||LA110_0==COUNTER_STYLE_SYM||LA110_0==DOT||LA110_0==FONT_FACE_SYM||LA110_0==GEN||(LA110_0 >= HASH && LA110_0 <= HASH_SYMBOL)||LA110_0==IDENT||LA110_0==IMPORT_SYM||(LA110_0 >= LEFTBOTTOM_SYM && LA110_0 <= LEFTTOP_SYM)||(LA110_0 >= MEDIA_SYM && LA110_0 <= MOZ_DOCUMENT_SYM)||LA110_0==NAMESPACE_SYM||LA110_0==PAGE_SYM||(LA110_0 >= RIGHTBOTTOM_SYM && LA110_0 <= RIGHTTOP_SYM)||(LA110_0 >= SASS_AT_ROOT && LA110_0 <= SASS_DEBUG)||(LA110_0 >= SASS_EACH && LA110_0 <= SASS_EXTEND)||(LA110_0 >= SASS_FOR && LA110_0 <= SASS_FUNCTION)||(LA110_0 >= SASS_IF && LA110_0 <= SASS_MIXIN)||(LA110_0 >= SASS_RETURN && LA110_0 <= SASS_WHILE)||LA110_0==STAR||(LA110_0 >= TOPCENTER_SYM && LA110_0 <= TOPRIGHT_SYM)||LA110_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt110=1;
					}
					} finally {dbg.exitDecision(110);}

					switch (alt110) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:60: ( propertyDeclaration | margin ) ( ws )?
							{
							dbg.location(549,60);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:60: ( propertyDeclaration | margin )
							int alt108=2;
							try { dbg.enterSubRule(108);
							try { dbg.enterDecision(108, decisionCanBacktrack[108]);

							try {
								isCyclicDecision = true;
								alt108 = dfa108.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(108);}

							switch (alt108) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:61: propertyDeclaration
									{
									dbg.location(549,61);
									pushFollow(FOLLOW_propertyDeclaration_in_page1988);
									propertyDeclaration();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:81: margin
									{
									dbg.location(549,81);
									pushFollow(FOLLOW_margin_in_page1990);
									margin();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(108);}
							dbg.location(549,89);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:89: ( ws )?
							int alt109=2;
							try { dbg.enterSubRule(109);
							try { dbg.enterDecision(109, decisionCanBacktrack[109]);

							int LA109_0 = input.LA(1);
							if ( (LA109_0==COMMENT||LA109_0==NL||LA109_0==WS) ) {
								alt109=1;
							}
							} finally {dbg.exitDecision(109);}

							switch (alt109) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:89: ws
									{
									dbg.location(549,89);
									pushFollow(FOLLOW_ws_in_page1993);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(109);}

							}
							break;

					}
					} finally {dbg.exitSubRule(110);}

					}
					break;

				default :
					break loop111;
				}
			}
			} finally {dbg.exitSubRule(111);}
			dbg.location(550,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page2008); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(551, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(553, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(554,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2025); if (state.failed) return;dbg.location(554,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:25: ( ws )?
			int alt112=2;
			try { dbg.enterSubRule(112);
			try { dbg.enterDecision(112, decisionCanBacktrack[112]);

			int LA112_0 = input.LA(1);
			if ( (LA112_0==COMMENT||LA112_0==NL||LA112_0==WS) ) {
				alt112=1;
			}
			} finally {dbg.exitDecision(112);}

			switch (alt112) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:25: ws
					{
					dbg.location(554,25);
					pushFollow(FOLLOW_ws_in_counterStyle2027);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(112);}
			dbg.location(554,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2030); if (state.failed) return;dbg.location(554,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:35: ( ws )?
			int alt113=2;
			try { dbg.enterSubRule(113);
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			int LA113_0 = input.LA(1);
			if ( (LA113_0==COMMENT||LA113_0==NL||LA113_0==WS) ) {
				alt113=1;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:35: ws
					{
					dbg.location(554,35);
					pushFollow(FOLLOW_ws_in_counterStyle2032);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(555,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2043); if (state.failed) return;dbg.location(555,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:16: ( ws )?
			int alt114=2;
			try { dbg.enterSubRule(114);
			try { dbg.enterDecision(114, decisionCanBacktrack[114]);

			int LA114_0 = input.LA(1);
			if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
				alt114=1;
			}
			} finally {dbg.exitDecision(114);}

			switch (alt114) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:16: ws
					{
					dbg.location(555,16);
					pushFollow(FOLLOW_ws_in_counterStyle2045);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(114);}
			dbg.location(555,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2048);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(556,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:3: ( declarations )?
			int alt115=2;
			try { dbg.enterSubRule(115);
			try { dbg.enterDecision(115, decisionCanBacktrack[115]);

			int LA115_0 = input.LA(1);
			if ( ((LA115_0 >= AT_IDENT && LA115_0 <= AT_SIGN)||(LA115_0 >= BOTTOMCENTER_SYM && LA115_0 <= BOTTOMRIGHT_SYM)||(LA115_0 >= CHARSET_SYM && LA115_0 <= COMMA)||LA115_0==COUNTER_STYLE_SYM||LA115_0==DCOLON||LA115_0==DOT||LA115_0==FONT_FACE_SYM||(LA115_0 >= GEN && LA115_0 <= GREATER)||(LA115_0 >= HASH && LA115_0 <= HASH_SYMBOL)||LA115_0==IDENT||LA115_0==IMPORT_SYM||(LA115_0 >= LBRACKET && LA115_0 <= LEFTTOP_SYM)||LA115_0==LESS_AND||(LA115_0 >= MEDIA_SYM && LA115_0 <= MOZ_DOCUMENT_SYM)||LA115_0==NAMESPACE_SYM||LA115_0==PAGE_SYM||(LA115_0 >= PIPE && LA115_0 <= PLUS)||LA115_0==RBRACKET||(LA115_0 >= RIGHTBOTTOM_SYM && LA115_0 <= RIGHTTOP_SYM)||(LA115_0 >= SASS_AT_ROOT && LA115_0 <= SASS_DEBUG)||(LA115_0 >= SASS_EACH && LA115_0 <= SASS_FUNCTION)||(LA115_0 >= SASS_IF && LA115_0 <= SASS_MIXIN)||(LA115_0 >= SASS_RETURN && LA115_0 <= SEMI)||LA115_0==STAR||LA115_0==TILDE||(LA115_0 >= TOPCENTER_SYM && LA115_0 <= TOPRIGHT_SYM)||LA115_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt115=1;
			}
			} finally {dbg.exitDecision(115);}

			switch (alt115) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:3: declarations
					{
					dbg.location(556,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2052);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(115);}
			dbg.location(557,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2063); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(558, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(560, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(561,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2080); if (state.failed) return;dbg.location(561,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:21: ( ws )?
			int alt116=2;
			try { dbg.enterSubRule(116);
			try { dbg.enterDecision(116, decisionCanBacktrack[116]);

			int LA116_0 = input.LA(1);
			if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
				alt116=1;
			}
			} finally {dbg.exitDecision(116);}

			switch (alt116) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:561:21: ws
					{
					dbg.location(561,21);
					pushFollow(FOLLOW_ws_in_fontFace2082);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(116);}
			dbg.location(562,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace2093); if (state.failed) return;dbg.location(562,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:562:16: ( ws )?
			int alt117=2;
			try { dbg.enterSubRule(117);
			try { dbg.enterDecision(117, decisionCanBacktrack[117]);

			int LA117_0 = input.LA(1);
			if ( (LA117_0==COMMENT||LA117_0==NL||LA117_0==WS) ) {
				alt117=1;
			}
			} finally {dbg.exitDecision(117);}

			switch (alt117) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:562:16: ws
					{
					dbg.location(562,16);
					pushFollow(FOLLOW_ws_in_fontFace2095);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(117);}
			dbg.location(562,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace2098);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(563,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:3: ( declarations )?
			int alt118=2;
			try { dbg.enterSubRule(118);
			try { dbg.enterDecision(118, decisionCanBacktrack[118]);

			int LA118_0 = input.LA(1);
			if ( ((LA118_0 >= AT_IDENT && LA118_0 <= AT_SIGN)||(LA118_0 >= BOTTOMCENTER_SYM && LA118_0 <= BOTTOMRIGHT_SYM)||(LA118_0 >= CHARSET_SYM && LA118_0 <= COMMA)||LA118_0==COUNTER_STYLE_SYM||LA118_0==DCOLON||LA118_0==DOT||LA118_0==FONT_FACE_SYM||(LA118_0 >= GEN && LA118_0 <= GREATER)||(LA118_0 >= HASH && LA118_0 <= HASH_SYMBOL)||LA118_0==IDENT||LA118_0==IMPORT_SYM||(LA118_0 >= LBRACKET && LA118_0 <= LEFTTOP_SYM)||LA118_0==LESS_AND||(LA118_0 >= MEDIA_SYM && LA118_0 <= MOZ_DOCUMENT_SYM)||LA118_0==NAMESPACE_SYM||LA118_0==PAGE_SYM||(LA118_0 >= PIPE && LA118_0 <= PLUS)||LA118_0==RBRACKET||(LA118_0 >= RIGHTBOTTOM_SYM && LA118_0 <= RIGHTTOP_SYM)||(LA118_0 >= SASS_AT_ROOT && LA118_0 <= SASS_DEBUG)||(LA118_0 >= SASS_EACH && LA118_0 <= SASS_FUNCTION)||(LA118_0 >= SASS_IF && LA118_0 <= SASS_MIXIN)||(LA118_0 >= SASS_RETURN && LA118_0 <= SEMI)||LA118_0==STAR||LA118_0==TILDE||(LA118_0 >= TOPCENTER_SYM && LA118_0 <= TOPRIGHT_SYM)||LA118_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt118=1;
			}
			} finally {dbg.exitDecision(118);}

			switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:3: declarations
					{
					dbg.location(563,3);
					pushFollow(FOLLOW_declarations_in_fontFace2102);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(564,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace2113); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(565, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(567, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(568,4);
			pushFollow(FOLLOW_margin_sym_in_margin2127);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(568,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:15: ( ws )?
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( (LA119_0==COMMENT||LA119_0==NL||LA119_0==WS) ) {
				alt119=1;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:15: ws
					{
					dbg.location(568,15);
					pushFollow(FOLLOW_ws_in_margin2129);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(568,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin2132); if (state.failed) return;dbg.location(568,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:26: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:26: ws
					{
					dbg.location(568,26);
					pushFollow(FOLLOW_ws_in_margin2134);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(568,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin2137);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(568,53);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:53: ( declarations )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( ((LA121_0 >= AT_IDENT && LA121_0 <= AT_SIGN)||(LA121_0 >= BOTTOMCENTER_SYM && LA121_0 <= BOTTOMRIGHT_SYM)||(LA121_0 >= CHARSET_SYM && LA121_0 <= COMMA)||LA121_0==COUNTER_STYLE_SYM||LA121_0==DCOLON||LA121_0==DOT||LA121_0==FONT_FACE_SYM||(LA121_0 >= GEN && LA121_0 <= GREATER)||(LA121_0 >= HASH && LA121_0 <= HASH_SYMBOL)||LA121_0==IDENT||LA121_0==IMPORT_SYM||(LA121_0 >= LBRACKET && LA121_0 <= LEFTTOP_SYM)||LA121_0==LESS_AND||(LA121_0 >= MEDIA_SYM && LA121_0 <= MOZ_DOCUMENT_SYM)||LA121_0==NAMESPACE_SYM||LA121_0==PAGE_SYM||(LA121_0 >= PIPE && LA121_0 <= PLUS)||LA121_0==RBRACKET||(LA121_0 >= RIGHTBOTTOM_SYM && LA121_0 <= RIGHTTOP_SYM)||(LA121_0 >= SASS_AT_ROOT && LA121_0 <= SASS_DEBUG)||(LA121_0 >= SASS_EACH && LA121_0 <= SASS_FUNCTION)||(LA121_0 >= SASS_IF && LA121_0 <= SASS_MIXIN)||(LA121_0 >= SASS_RETURN && LA121_0 <= SEMI)||LA121_0==STAR||LA121_0==TILDE||(LA121_0 >= TOPCENTER_SYM && LA121_0 <= TOPRIGHT_SYM)||LA121_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:53: declarations
					{
					dbg.location(568,53);
					pushFollow(FOLLOW_declarations_in_margin2139);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(568,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin2142); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(569, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:571:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(571, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:572:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(572,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(589, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(591, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:592:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:592:7: COLON IDENT
			{
			dbg.location(592,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage2351); if (state.failed) return;dbg.location(592,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage2353); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(593, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(595, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:596:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(596,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(598, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:600:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(600, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:601:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(601,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(603, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:605:1: property : ( ( (~ ( HASH_SYMBOL | COLON ) )* HASH_SYMBOL LBRACE )=> sass_declaration_interpolation_expression | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(605, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:5: ( ( (~ ( HASH_SYMBOL | COLON ) )* HASH_SYMBOL LBRACE )=> sass_declaration_interpolation_expression | IDENT | GEN |{...}? cp_variable )
			int alt122=4;
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( (LA122_0==HASH_SYMBOL) && (synpred17_Css3())) {
				alt122=1;
			}
			else if ( (LA122_0==IDENT) ) {
				int LA122_2 = input.LA(2);
				if ( (synpred17_Css3()) ) {
					alt122=1;
				}
				else if ( (true) ) {
					alt122=2;
				}

			}
			else if ( (LA122_0==DOT||LA122_0==HASH||LA122_0==MINUS) && (synpred17_Css3())) {
				alt122=1;
			}
			else if ( (LA122_0==GEN) ) {
				alt122=3;
			}
			else if ( (LA122_0==AT_IDENT||(LA122_0 >= BOTTOMCENTER_SYM && LA122_0 <= BOTTOMRIGHT_SYM)||LA122_0==CHARSET_SYM||LA122_0==COUNTER_STYLE_SYM||LA122_0==FONT_FACE_SYM||LA122_0==IMPORT_SYM||(LA122_0 >= LEFTBOTTOM_SYM && LA122_0 <= LEFTTOP_SYM)||LA122_0==MEDIA_SYM||LA122_0==MOZ_DOCUMENT_SYM||LA122_0==NAMESPACE_SYM||LA122_0==PAGE_SYM||(LA122_0 >= RIGHTBOTTOM_SYM && LA122_0 <= RIGHTTOP_SYM)||(LA122_0 >= SASS_AT_ROOT && LA122_0 <= SASS_DEBUG)||(LA122_0 >= SASS_EACH && LA122_0 <= SASS_EXTEND)||(LA122_0 >= SASS_FOR && LA122_0 <= SASS_FUNCTION)||(LA122_0 >= SASS_IF && LA122_0 <= SASS_MIXIN)||(LA122_0 >= SASS_RETURN && LA122_0 <= SASS_WHILE)||(LA122_0 >= TOPCENTER_SYM && LA122_0 <= TOPRIGHT_SYM)||LA122_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt122=4;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 122, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:5: ( (~ ( HASH_SYMBOL | COLON ) )* HASH_SYMBOL LBRACE )=> sass_declaration_interpolation_expression
					{
					dbg.location(610,49);
					pushFollow(FOLLOW_sass_declaration_interpolation_expression_in_property2449);
					sass_declaration_interpolation_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:7: IDENT
					{
					dbg.location(611,7);
					match(input,IDENT,FOLLOW_IDENT_in_property2457); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:7: GEN
					{
					dbg.location(612,7);
					match(input,GEN,FOLLOW_GEN_in_property2465); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:7: {...}? cp_variable
					{
					dbg.location(613,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(613,36);
					pushFollow(FOLLOW_cp_variable_in_property2475);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(615, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(620, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
			{
			dbg.location(622,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map2502);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(622,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map2504); if (state.failed) return;dbg.location(622,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:25: ( ws )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( (LA123_0==COMMENT||LA123_0==NL||LA123_0==WS) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:25: ws
					{
					dbg.location(622,25);
					pushFollow(FOLLOW_ws_in_sass_map2506);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(622,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map2509); if (state.failed) return;dbg.location(622,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:36: ( ws )?
			int alt124=2;
			try { dbg.enterSubRule(124);
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			int LA124_0 = input.LA(1);
			if ( (LA124_0==COMMENT||LA124_0==NL||LA124_0==WS) ) {
				alt124=1;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:36: ws
					{
					dbg.location(622,36);
					pushFollow(FOLLOW_ws_in_sass_map2511);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(124);}
			dbg.location(622,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map2514);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(624,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:9: ( sass_map_pairs )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( (LA125_0==AT_IDENT||(LA125_0 >= BOTTOMCENTER_SYM && LA125_0 <= BOTTOMRIGHT_SYM)||LA125_0==CHARSET_SYM||LA125_0==COMMA||LA125_0==COUNTER_STYLE_SYM||LA125_0==DOT||LA125_0==FONT_FACE_SYM||LA125_0==GEN||(LA125_0 >= HASH && LA125_0 <= HASH_SYMBOL)||LA125_0==IDENT||LA125_0==IMPORT_SYM||(LA125_0 >= LEFTBOTTOM_SYM && LA125_0 <= LEFTTOP_SYM)||(LA125_0 >= MEDIA_SYM && LA125_0 <= MOZ_DOCUMENT_SYM)||LA125_0==NAMESPACE_SYM||LA125_0==PAGE_SYM||(LA125_0 >= RIGHTBOTTOM_SYM && LA125_0 <= RIGHTTOP_SYM)||(LA125_0 >= SASS_AT_ROOT && LA125_0 <= SASS_DEBUG)||(LA125_0 >= SASS_EACH && LA125_0 <= SASS_EXTEND)||(LA125_0 >= SASS_FOR && LA125_0 <= SASS_FUNCTION)||(LA125_0 >= SASS_IF && LA125_0 <= SASS_MIXIN)||(LA125_0 >= SASS_RETURN && LA125_0 <= SASS_WHILE)||(LA125_0 >= TOPCENTER_SYM && LA125_0 <= TOPRIGHT_SYM)||LA125_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:9: sass_map_pairs
					{
					dbg.location(624,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map2533);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(625,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map2540); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(626, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(628, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:630:5: cp_variable
			{
			dbg.location(630,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name2561);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(631, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:633:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(633, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(635,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt130=0;
			try { dbg.enterSubRule(130);

			loop130:
			while (true) {
				int alt130=3;
				try { dbg.enterDecision(130, decisionCanBacktrack[130]);

				int LA130_0 = input.LA(1);
				if ( (LA130_0==AT_IDENT||(LA130_0 >= BOTTOMCENTER_SYM && LA130_0 <= BOTTOMRIGHT_SYM)||LA130_0==CHARSET_SYM||LA130_0==COUNTER_STYLE_SYM||LA130_0==DOT||LA130_0==FONT_FACE_SYM||LA130_0==GEN||(LA130_0 >= HASH && LA130_0 <= HASH_SYMBOL)||LA130_0==IDENT||LA130_0==IMPORT_SYM||(LA130_0 >= LEFTBOTTOM_SYM && LA130_0 <= LEFTTOP_SYM)||(LA130_0 >= MEDIA_SYM && LA130_0 <= MOZ_DOCUMENT_SYM)||LA130_0==NAMESPACE_SYM||LA130_0==PAGE_SYM||(LA130_0 >= RIGHTBOTTOM_SYM && LA130_0 <= RIGHTTOP_SYM)||(LA130_0 >= SASS_AT_ROOT && LA130_0 <= SASS_DEBUG)||(LA130_0 >= SASS_EACH && LA130_0 <= SASS_EXTEND)||(LA130_0 >= SASS_FOR && LA130_0 <= SASS_FUNCTION)||(LA130_0 >= SASS_IF && LA130_0 <= SASS_MIXIN)||(LA130_0 >= SASS_RETURN && LA130_0 <= SASS_WHILE)||(LA130_0 >= TOPCENTER_SYM && LA130_0 <= TOPRIGHT_SYM)||LA130_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt130=1;
				}
				else if ( (LA130_0==COMMA) ) {
					alt130=2;
				}

				} finally {dbg.exitDecision(130);}

				switch (alt130) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(636,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(636,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs2595);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(636,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt127=2;
					try { dbg.enterSubRule(127);
					try { dbg.enterDecision(127, decisionCanBacktrack[127]);

					try {
						isCyclicDecision = true;
						alt127 = dfa127.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(127);}

					switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(636,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:40: ( ws )?
							int alt126=2;
							try { dbg.enterSubRule(126);
							try { dbg.enterDecision(126, decisionCanBacktrack[126]);

							int LA126_0 = input.LA(1);
							if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
								alt126=1;
							}
							} finally {dbg.exitDecision(126);}

							switch (alt126) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:40: ws
									{
									dbg.location(636,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs2605);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(126);}
							dbg.location(636,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2608); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(127);}
					dbg.location(636,52);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:52: ( ws )?
					int alt128=2;
					try { dbg.enterSubRule(128);
					try { dbg.enterDecision(128, decisionCanBacktrack[128]);

					int LA128_0 = input.LA(1);
					if ( (LA128_0==COMMENT||LA128_0==NL||LA128_0==WS) ) {
						alt128=1;
					}
					} finally {dbg.exitDecision(128);}

					switch (alt128) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:52: ws
							{
							dbg.location(636,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2612);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(128);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:10: ( COMMA ( ws )? )
					{
					dbg.location(638,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:12: COMMA ( ws )?
					{
					dbg.location(638,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2639); if (state.failed) return;dbg.location(638,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:18: ( ws )?
					int alt129=2;
					try { dbg.enterSubRule(129);
					try { dbg.enterDecision(129, decisionCanBacktrack[129]);

					int LA129_0 = input.LA(1);
					if ( (LA129_0==COMMENT||LA129_0==NL||LA129_0==WS) ) {
						alt129=1;
					}
					} finally {dbg.exitDecision(129);}

					switch (alt129) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:18: ws
							{
							dbg.location(638,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2641);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(129);}

					}

					}
					break;

				default :
					if ( cnt130 >= 1 ) break loop130;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(130, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt130++;
			}
			} finally {dbg.exitSubRule(130);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(640, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:1: sass_map_pair : property ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(642, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:5: ( property ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:9: property ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(644,9);
			pushFollow(FOLLOW_property_in_sass_map_pair2676);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(644,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:18: ( ws )?
			int alt131=2;
			try { dbg.enterSubRule(131);
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
				alt131=1;
			}
			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:18: ws
					{
					dbg.location(644,18);
					pushFollow(FOLLOW_ws_in_sass_map_pair2678);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(131);}
			dbg.location(644,22);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair2681); if (state.failed) return;dbg.location(644,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:28: ( ws )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( (LA132_0==COMMENT||LA132_0==NL||LA132_0==WS) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:28: ws
					{
					dbg.location(644,28);
					pushFollow(FOLLOW_ws_in_sass_map_pair2683);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(644,32);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair2686);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(644,46);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:46: ( ( ws )? prio )?
			int alt134=2;
			try { dbg.enterSubRule(134);
			try { dbg.enterDecision(134, decisionCanBacktrack[134]);

			try {
				isCyclicDecision = true;
				alt134 = dfa134.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(134);}

			switch (alt134) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:47: ( ws )? prio
					{
					dbg.location(644,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:47: ( ws )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:47: ws
							{
							dbg.location(644,47);
							pushFollow(FOLLOW_ws_in_sass_map_pair2689);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}
					dbg.location(644,51);
					pushFollow(FOLLOW_prio_in_sass_map_pair2692);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(134);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(645, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:647:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(647, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:5: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(649,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:5: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup )
			int alt136=2;
			try { dbg.enterSubRule(136);
			try { dbg.enterDecision(136, decisionCanBacktrack[136]);

			int LA136_0 = input.LA(1);
			if ( (LA136_0==SASS_AT_ROOT) ) {
				alt136=1;
			}
			else if ( (LA136_0==AT_SIGN||(LA136_0 >= COLON && LA136_0 <= COMMA)||LA136_0==DCOLON||LA136_0==DOT||(LA136_0 >= GEN && LA136_0 <= GREATER)||(LA136_0 >= HASH && LA136_0 <= HASH_SYMBOL)||LA136_0==IDENT||LA136_0==LBRACKET||LA136_0==LESS_AND||LA136_0==MINUS||(LA136_0 >= PIPE && LA136_0 <= PLUS)||LA136_0==RBRACKET||LA136_0==SASS_EXTEND_ONLY_SELECTOR||LA136_0==STAR||LA136_0==TILDE) ) {
				alt136=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 136, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(136);}

			switch (alt136) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:6: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(649,6);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:6: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:7: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(649,7);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2717); if (state.failed) return;dbg.location(649,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:20: ( ws selectorsGroup )?
					int alt135=2;
					try { dbg.enterSubRule(135);
					try { dbg.enterDecision(135, decisionCanBacktrack[135]);

					try {
						isCyclicDecision = true;
						alt135 = dfa135.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(135);}

					switch (alt135) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:21: ws selectorsGroup
							{
							dbg.location(649,21);
							pushFollow(FOLLOW_ws_in_rule2720);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(649,24);
							pushFollow(FOLLOW_selectorsGroup_in_rule2722);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(135);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:44: selectorsGroup
					{
					dbg.location(649,44);
					pushFollow(FOLLOW_selectorsGroup_in_rule2729);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(136);}
			dbg.location(649,60);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:60: ( ws )?
			int alt137=2;
			try { dbg.enterSubRule(137);
			try { dbg.enterDecision(137, decisionCanBacktrack[137]);

			int LA137_0 = input.LA(1);
			if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
				alt137=1;
			}
			} finally {dbg.exitDecision(137);}

			switch (alt137) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:60: ws
					{
					dbg.location(649,60);
					pushFollow(FOLLOW_ws_in_rule2732);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(137);}
			dbg.location(650,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule2739); if (state.failed) return;dbg.location(650,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:12: ( ws )?
			int alt138=2;
			try { dbg.enterSubRule(138);
			try { dbg.enterDecision(138, decisionCanBacktrack[138]);

			int LA138_0 = input.LA(1);
			if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
				alt138=1;
			}
			} finally {dbg.exitDecision(138);}

			switch (alt138) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:12: ws
					{
					dbg.location(650,12);
					pushFollow(FOLLOW_ws_in_rule2741);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(138);}
			dbg.location(650,16);
			pushFollow(FOLLOW_syncToFollow_in_rule2744);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(651,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:9: ( declarations )?
			int alt139=2;
			try { dbg.enterSubRule(139);
			try { dbg.enterDecision(139, decisionCanBacktrack[139]);

			int LA139_0 = input.LA(1);
			if ( ((LA139_0 >= AT_IDENT && LA139_0 <= AT_SIGN)||(LA139_0 >= BOTTOMCENTER_SYM && LA139_0 <= BOTTOMRIGHT_SYM)||(LA139_0 >= CHARSET_SYM && LA139_0 <= COMMA)||LA139_0==COUNTER_STYLE_SYM||LA139_0==DCOLON||LA139_0==DOT||LA139_0==FONT_FACE_SYM||(LA139_0 >= GEN && LA139_0 <= GREATER)||(LA139_0 >= HASH && LA139_0 <= HASH_SYMBOL)||LA139_0==IDENT||LA139_0==IMPORT_SYM||(LA139_0 >= LBRACKET && LA139_0 <= LEFTTOP_SYM)||LA139_0==LESS_AND||(LA139_0 >= MEDIA_SYM && LA139_0 <= MOZ_DOCUMENT_SYM)||LA139_0==NAMESPACE_SYM||LA139_0==PAGE_SYM||(LA139_0 >= PIPE && LA139_0 <= PLUS)||LA139_0==RBRACKET||(LA139_0 >= RIGHTBOTTOM_SYM && LA139_0 <= RIGHTTOP_SYM)||(LA139_0 >= SASS_AT_ROOT && LA139_0 <= SASS_DEBUG)||(LA139_0 >= SASS_EACH && LA139_0 <= SASS_FUNCTION)||(LA139_0 >= SASS_IF && LA139_0 <= SASS_MIXIN)||(LA139_0 >= SASS_RETURN && LA139_0 <= SEMI)||LA139_0==STAR||LA139_0==TILDE||(LA139_0 >= TOPCENTER_SYM && LA139_0 <= TOPRIGHT_SYM)||LA139_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt139=1;
			}
			} finally {dbg.exitDecision(139);}

			switch (alt139) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:9: declarations
					{
					dbg.location(651,9);
					pushFollow(FOLLOW_declarations_in_rule2754);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(139);}
			dbg.location(652,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule2761); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(653, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:1: declarations : ( ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(660, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:5: ( ( ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:5: ( ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(662,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:5: ( ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt144=0;
			try { dbg.enterSubRule(144);

			loop144:
			while (true) {
				int alt144=3;
				try { dbg.enterDecision(144, decisionCanBacktrack[144]);

				int LA144_0 = input.LA(1);
				if ( ((LA144_0 >= AT_IDENT && LA144_0 <= AT_SIGN)||(LA144_0 >= BOTTOMCENTER_SYM && LA144_0 <= BOTTOMRIGHT_SYM)||(LA144_0 >= CHARSET_SYM && LA144_0 <= COMMA)||LA144_0==COUNTER_STYLE_SYM||LA144_0==DCOLON||LA144_0==DOT||LA144_0==FONT_FACE_SYM||(LA144_0 >= GEN && LA144_0 <= GREATER)||(LA144_0 >= HASH && LA144_0 <= HASH_SYMBOL)||LA144_0==IDENT||LA144_0==IMPORT_SYM||(LA144_0 >= LBRACKET && LA144_0 <= LEFTTOP_SYM)||LA144_0==LESS_AND||(LA144_0 >= MEDIA_SYM && LA144_0 <= MOZ_DOCUMENT_SYM)||LA144_0==NAMESPACE_SYM||LA144_0==PAGE_SYM||(LA144_0 >= PIPE && LA144_0 <= PLUS)||LA144_0==RBRACKET||(LA144_0 >= RIGHTBOTTOM_SYM && LA144_0 <= RIGHTTOP_SYM)||(LA144_0 >= SASS_AT_ROOT && LA144_0 <= SASS_DEBUG)||(LA144_0 >= SASS_EACH && LA144_0 <= SASS_FUNCTION)||(LA144_0 >= SASS_IF && LA144_0 <= SASS_MIXIN)||(LA144_0 >= SASS_RETURN && LA144_0 <= SASS_WHILE)||LA144_0==STAR||LA144_0==TILDE||(LA144_0 >= TOPCENTER_SYM && LA144_0 <= TOPRIGHT_SYM)||LA144_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt144=1;
				}
				else if ( (LA144_0==SEMI) ) {
					alt144=2;
				}

				} finally {dbg.exitDecision(144);}

				switch (alt144) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:10: ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(663,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:10: ( declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:12: declaration ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(663,12);
					pushFollow(FOLLOW_declaration_in_declarations2804);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(663,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:24: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt141=2;
					try { dbg.enterSubRule(141);
					try { dbg.enterDecision(141, decisionCanBacktrack[141]);

					try {
						isCyclicDecision = true;
						alt141 = dfa141.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(141);}

					switch (alt141) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:25: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(663,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:37: ( ws )?
							int alt140=2;
							try { dbg.enterSubRule(140);
							try { dbg.enterDecision(140, decisionCanBacktrack[140]);

							int LA140_0 = input.LA(1);
							if ( (LA140_0==COMMENT||LA140_0==NL||LA140_0==WS) ) {
								alt140=1;
							}
							} finally {dbg.exitDecision(140);}

							switch (alt140) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:37: ws
									{
									dbg.location(663,37);
									pushFollow(FOLLOW_ws_in_declarations2814);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(140);}
							dbg.location(663,41);
							match(input,SEMI,FOLLOW_SEMI_in_declarations2817); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(141);}
					dbg.location(663,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:48: ( ws )?
					int alt142=2;
					try { dbg.enterSubRule(142);
					try { dbg.enterDecision(142, decisionCanBacktrack[142]);

					int LA142_0 = input.LA(1);
					if ( (LA142_0==COMMENT||LA142_0==NL||LA142_0==WS) ) {
						alt142=1;
					}
					} finally {dbg.exitDecision(142);}

					switch (alt142) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:48: ws
							{
							dbg.location(663,48);
							pushFollow(FOLLOW_ws_in_declarations2821);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(142);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:10: ( SEMI ( ws )? )
					{
					dbg.location(665,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:12: SEMI ( ws )?
					{
					dbg.location(665,12);
					match(input,SEMI,FOLLOW_SEMI_in_declarations2848); if (state.failed) return;dbg.location(665,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:17: ( ws )?
					int alt143=2;
					try { dbg.enterSubRule(143);
					try { dbg.enterDecision(143, decisionCanBacktrack[143]);

					int LA143_0 = input.LA(1);
					if ( (LA143_0==COMMENT||LA143_0==NL||LA143_0==WS) ) {
						alt143=1;
					}
					} finally {dbg.exitDecision(143);}

					switch (alt143) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:17: ws
							{
							dbg.location(665,17);
							pushFollow(FOLLOW_ws_in_declarations2850);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(143);}

					}

					}
					break;

				default :
					if ( cnt144 >= 1 ) break loop144;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(144, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt144++;
			}
			} finally {dbg.exitSubRule(144);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(667, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(669, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? importItem | GEN )
			int alt149=17;
			try { dbg.enterDecision(149, decisionCanBacktrack[149]);

			int LA149_0 = input.LA(1);
			if ( (LA149_0==SASS_MIXIN) ) {
				int LA149_1 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred25_Css3())) ) {
					alt149=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_VAR) ) {
				int LA149_2 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==HASH_SYMBOL) ) {
				int LA149_3 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==IDENT) ) {
				int LA149_4 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==DOT) ) {
				int LA149_5 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( ((synpred25_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=6;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=7;
				}
				else if ( (((synpred27_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=8;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==GEN) ) {
				int LA149_6 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}
				else if ( (true) ) {
					alt149=17;
				}

			}
			else if ( (LA149_0==STAR) ) {
				int LA149_7 = input.LA(2);
				if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==HASH) ) {
				int LA149_8 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_INCLUDE) ) {
				int LA149_9 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (((synpred26_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=7;
				}
				else if ( ((synpred27_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt149=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_AT_ROOT) ) {
				int LA149_10 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==MEDIA_SYM) ) {
				int LA149_11 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==GREATER) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==LESS_AND) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==PLUS||LA149_0==TILDE) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==PIPE) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==LBRACKET) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==AT_SIGN) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==MINUS) ) {
				int LA149_19 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt149=3;
				}
				else if ( (synpred23_Css3()) ) {
					alt149=4;
				}
				else if ( (synpred24_Css3()) ) {
					alt149=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt149=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==COLON) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==COMMA||LA149_0==RBRACKET) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==DCOLON) && (synpred28_Css3())) {
				alt149=9;
			}
			else if ( (LA149_0==PAGE_SYM) ) {
				int LA149_23 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==COUNTER_STYLE_SYM) ) {
				int LA149_24 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==FONT_FACE_SYM) ) {
				int LA149_25 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==MOZ_DOCUMENT_SYM) ) {
				int LA149_26 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA149_27 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==AT_IDENT) ) {
				int LA149_28 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt149=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_IF) ) {
				int LA149_29 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_FOR) ) {
				int LA149_30 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_EACH) ) {
				int LA149_31 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_WHILE) ) {
				int LA149_32 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_EXTEND) ) {
				int LA149_33 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_DEBUG||LA149_0==SASS_WARN) ) {
				int LA149_34 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_CONTENT) ) {
				int LA149_35 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==SASS_RETURN) ) {
				int LA149_36 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA149_0==IMPORT_SYM) ) {
				int LA149_37 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt149=16;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( ((LA149_0 >= BOTTOMCENTER_SYM && LA149_0 <= BOTTOMRIGHT_SYM)||LA149_0==CHARSET_SYM||(LA149_0 >= LEFTBOTTOM_SYM && LA149_0 <= LEFTTOP_SYM)||LA149_0==NAMESPACE_SYM||(LA149_0 >= RIGHTBOTTOM_SYM && LA149_0 <= RIGHTTOP_SYM)||LA149_0==SASS_ELSE||LA149_0==SASS_FUNCTION||(LA149_0 >= TOPCENTER_SYM && LA149_0 <= TOPRIGHT_SYM)) ) {
				int LA149_38 = input.LA(2);
				if ( ((synpred20_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=1;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt149=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred22_Css3())) ) {
					alt149=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred23_Css3())) ) {
					alt149=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred24_Css3())) ) {
					alt149=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 149, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 149, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(149);}

			switch (alt149) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(671,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration2885);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:7: ( sass_map )=> sass_map
					{
					dbg.location(672,20);
					pushFollow(FOLLOW_sass_map_in_declaration2898);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(673,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration2910);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(674,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration2922);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(676,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration2961);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:7: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(677,94);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration3006);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(679,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isLessSource()");
					}dbg.location(679,73);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3039);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(679,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:87: ( ( ws )? IMPORTANT_SYM )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					try {
						isCyclicDecision = true;
						alt146 = dfa146.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(679,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:88: ( ws )?
							int alt145=2;
							try { dbg.enterSubRule(145);
							try { dbg.enterDecision(145, decisionCanBacktrack[145]);

							int LA145_0 = input.LA(1);
							if ( (LA145_0==COMMENT||LA145_0==NL||LA145_0==WS) ) {
								alt145=1;
							}
							} finally {dbg.exitDecision(145);}

							switch (alt145) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:88: ws
									{
									dbg.location(679,88);
									pushFollow(FOLLOW_ws_in_declaration3042);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(145);}
							dbg.location(679,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3045); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}

					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(680,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(680,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3062);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(680,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:57: ( ( ws )? IMPORTANT_SYM )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					try {
						isCyclicDecision = true;
						alt148 = dfa148.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(680,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:58: ( ws )?
							int alt147=2;
							try { dbg.enterSubRule(147);
							try { dbg.enterDecision(147, decisionCanBacktrack[147]);

							int LA147_0 = input.LA(1);
							if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
								alt147=1;
							}
							} finally {dbg.exitDecision(147);}

							switch (alt147) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:58: ws
									{
									dbg.location(680,58);
									pushFollow(FOLLOW_ws_in_declaration3065);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(147);}
							dbg.location(680,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3068); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(681,76);
					pushFollow(FOLLOW_rule_in_declaration3102);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:7: {...}? at_rule
					{
					dbg.location(682,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(682,36);
					pushFollow(FOLLOW_at_rule_in_declaration3112);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:7: {...}? sass_control
					{
					dbg.location(683,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(683,25);
					pushFollow(FOLLOW_sass_control_in_declaration3122);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:684:7: {...}? sass_extend
					{
					dbg.location(684,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(684,25);
					pushFollow(FOLLOW_sass_extend_in_declaration3132);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:7: {...}? sass_debug
					{
					dbg.location(685,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(685,25);
					pushFollow(FOLLOW_sass_debug_in_declaration3142);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:7: {...}? sass_content
					{
					dbg.location(686,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(686,25);
					pushFollow(FOLLOW_sass_content_in_declaration3152);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:7: {...}? sass_function_return
					{
					dbg.location(687,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(687,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration3162);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:7: {...}? importItem
					{
					dbg.location(688,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(688,25);
					pushFollow(FOLLOW_importItem_in_declaration3172);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:7: GEN
					{
					dbg.location(689,7);
					match(input,GEN,FOLLOW_GEN_in_declaration3180); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(690, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:1: selectorsGroup : ( ( (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE )=> sass_selector_interpolation_expression | selector ( ( ws )? COMMA ( ws )? selector )* );
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(696, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:5: ( ( (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE )=> sass_selector_interpolation_expression | selector ( ( ws )? COMMA ( ws )? selector )* )
			int alt153=2;
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			try {
				isCyclicDecision = true;
				alt153 = dfa153.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:9: ( (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE )=> sass_selector_interpolation_expression
					{
					dbg.location(699,60);
					pushFollow(FOLLOW_sass_selector_interpolation_expression_in_selectorsGroup3243);
					sass_selector_interpolation_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:9: selector ( ( ws )? COMMA ( ws )? selector )*
					{
					dbg.location(701,9);
					pushFollow(FOLLOW_selector_in_selectorsGroup3256);
					selector();
					state._fsp--;
					if (state.failed) return;dbg.location(701,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:18: ( ( ws )? COMMA ( ws )? selector )*
					try { dbg.enterSubRule(152);

					loop152:
					while (true) {
						int alt152=2;
						try { dbg.enterDecision(152, decisionCanBacktrack[152]);

						try {
							isCyclicDecision = true;
							alt152 = dfa152.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(152);}

						switch (alt152) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:19: ( ws )? COMMA ( ws )? selector
							{
							dbg.location(701,19);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:19: ( ws )?
							int alt150=2;
							try { dbg.enterSubRule(150);
							try { dbg.enterDecision(150, decisionCanBacktrack[150]);

							int LA150_0 = input.LA(1);
							if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
								alt150=1;
							}
							} finally {dbg.exitDecision(150);}

							switch (alt150) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:19: ws
									{
									dbg.location(701,19);
									pushFollow(FOLLOW_ws_in_selectorsGroup3259);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(150);}
							dbg.location(701,23);
							match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3262); if (state.failed) return;dbg.location(701,29);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:29: ( ws )?
							int alt151=2;
							try { dbg.enterSubRule(151);
							try { dbg.enterDecision(151, decisionCanBacktrack[151]);

							int LA151_0 = input.LA(1);
							if ( (LA151_0==COMMENT||LA151_0==NL||LA151_0==WS) ) {
								alt151=1;
							}
							} finally {dbg.exitDecision(151);}

							switch (alt151) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:29: ws
									{
									dbg.location(701,29);
									pushFollow(FOLLOW_ws_in_selectorsGroup3264);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(151);}
							dbg.location(701,33);
							pushFollow(FOLLOW_selector_in_selectorsGroup3267);
							selector();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop152;
						}
					}
					} finally {dbg.exitSubRule(152);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(702, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:1: selector : ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence )* ;
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(704, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence )*
			{
			dbg.location(705,8);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:8: ( combinator ( ws )? )?
			int alt155=2;
			try { dbg.enterSubRule(155);
			try { dbg.enterDecision(155, decisionCanBacktrack[155]);

			int LA155_0 = input.LA(1);
			if ( (LA155_0==GREATER||LA155_0==PLUS||LA155_0==TILDE) ) {
				alt155=1;
			}
			} finally {dbg.exitDecision(155);}

			switch (alt155) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:9: combinator ( ws )?
					{
					dbg.location(705,9);
					pushFollow(FOLLOW_combinator_in_selector3288);
					combinator();
					state._fsp--;
					if (state.failed) return;dbg.location(705,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:20: ( ws )?
					int alt154=2;
					try { dbg.enterSubRule(154);
					try { dbg.enterDecision(154, decisionCanBacktrack[154]);

					int LA154_0 = input.LA(1);
					if ( (LA154_0==COMMENT||LA154_0==NL||LA154_0==WS) ) {
						alt154=1;
					}
					} finally {dbg.exitDecision(154);}

					switch (alt154) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:20: ws
							{
							dbg.location(705,20);
							pushFollow(FOLLOW_ws_in_selector3290);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(154);}

					}
					break;

			}
			} finally {dbg.exitSubRule(155);}
			dbg.location(705,26);
			pushFollow(FOLLOW_simpleSelectorSequence_in_selector3295);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(705,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:49: ( ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence )*
			try { dbg.enterSubRule(160);

			loop160:
			while (true) {
				int alt160=2;
				try { dbg.enterDecision(160, decisionCanBacktrack[160]);

				try {
					isCyclicDecision = true;
					alt160 = dfa160.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(160);}

				switch (alt160) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:51: ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence
					{
					dbg.location(705,51);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:51: ( ( ( ws )? combinator ( ws )? ) | ( ws )? )
					int alt159=2;
					try { dbg.enterSubRule(159);
					try { dbg.enterDecision(159, decisionCanBacktrack[159]);

					try {
						isCyclicDecision = true;
						alt159 = dfa159.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(159);}

					switch (alt159) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:52: ( ( ws )? combinator ( ws )? )
							{
							dbg.location(705,52);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:52: ( ( ws )? combinator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:53: ( ws )? combinator ( ws )?
							{
							dbg.location(705,53);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:53: ( ws )?
							int alt156=2;
							try { dbg.enterSubRule(156);
							try { dbg.enterDecision(156, decisionCanBacktrack[156]);

							int LA156_0 = input.LA(1);
							if ( (LA156_0==COMMENT||LA156_0==NL||LA156_0==WS) ) {
								alt156=1;
							}
							} finally {dbg.exitDecision(156);}

							switch (alt156) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:53: ws
									{
									dbg.location(705,53);
									pushFollow(FOLLOW_ws_in_selector3301);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(156);}
							dbg.location(705,57);
							pushFollow(FOLLOW_combinator_in_selector3304);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(705,68);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:68: ( ws )?
							int alt157=2;
							try { dbg.enterSubRule(157);
							try { dbg.enterDecision(157, decisionCanBacktrack[157]);

							int LA157_0 = input.LA(1);
							if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
								alt157=1;
							}
							} finally {dbg.exitDecision(157);}

							switch (alt157) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:68: ws
									{
									dbg.location(705,68);
									pushFollow(FOLLOW_ws_in_selector3306);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(157);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:73: ( ws )?
							{
							dbg.location(705,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:73: ( ws )?
							int alt158=2;
							try { dbg.enterSubRule(158);
							try { dbg.enterDecision(158, decisionCanBacktrack[158]);

							int LA158_0 = input.LA(1);
							if ( (LA158_0==COMMENT||LA158_0==NL||LA158_0==WS) ) {
								alt158=1;
							}
							} finally {dbg.exitDecision(158);}

							switch (alt158) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:73: ws
									{
									dbg.location(705,73);
									pushFollow(FOLLOW_ws_in_selector3310);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(158);}

							}
							break;

					}
					} finally {dbg.exitSubRule(159);}
					dbg.location(705,78);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector3314);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop160;
				}
			}
			} finally {dbg.exitSubRule(160);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(706, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(708, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(709,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(711, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:1: simpleSelectorSequence : ( ( typeSelector ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* ) | elementSubsequent ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(713, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:714:2: ( ( typeSelector ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* ) | elementSubsequent ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* )
			int alt165=2;
			try { dbg.enterDecision(165, decisionCanBacktrack[165]);

			int LA165_0 = input.LA(1);
			if ( (LA165_0==GEN||LA165_0==IDENT||LA165_0==LESS_AND||LA165_0==PIPE||LA165_0==STAR) ) {
				alt165=1;
			}
			else if ( (LA165_0==AT_SIGN||LA165_0==COLON||LA165_0==DCOLON||LA165_0==DOT||(LA165_0 >= HASH && LA165_0 <= HASH_SYMBOL)||LA165_0==LBRACKET||LA165_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt165=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 165, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(165);}

			switch (alt165) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:2: ( typeSelector ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* )
					{
					dbg.location(715,2);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:2: ( typeSelector ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:4: typeSelector ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )*
					{
					dbg.location(715,4);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence3362);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(715,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:17: ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )*
					try { dbg.enterSubRule(162);

					loop162:
					while (true) {
						int alt162=2;
						try { dbg.enterDecision(162, decisionCanBacktrack[162]);

						switch ( input.LA(1) ) {
						case COMMENT:
						case NL:
						case WS:
							{
							int LA162_1 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case SASS_EXTEND_ONLY_SELECTOR:
							{
							int LA162_7 = input.LA(2);
							if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred30_Css3())) ) {
								alt162=1;
							}

							}
							break;
						case AT_SIGN:
							{
							int LA162_8 = input.LA(2);
							if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
								alt162=1;
							}

							}
							break;
						case HASH:
							{
							int LA162_9 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case HASH_SYMBOL:
							{
							int LA162_10 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case DOT:
							{
							int LA162_11 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case LBRACKET:
							{
							int LA162_12 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case COLON:
							{
							int LA162_13 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						case DCOLON:
							{
							int LA162_36 = input.LA(2);
							if ( (synpred30_Css3()) ) {
								alt162=1;
							}

							}
							break;
						}
						} finally {dbg.exitDecision(162);}

						switch (alt162) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:18: ( ( ws )? esPred )=> ( ws )? elementSubsequent
							{
							dbg.location(715,32);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:32: ( ws )?
							int alt161=2;
							try { dbg.enterSubRule(161);
							try { dbg.enterDecision(161, decisionCanBacktrack[161]);

							int LA161_0 = input.LA(1);
							if ( (LA161_0==COMMENT||LA161_0==NL||LA161_0==WS) ) {
								alt161=1;
							}
							} finally {dbg.exitDecision(161);}

							switch (alt161) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:32: ws
									{
									dbg.location(715,32);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3372);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(161);}
							dbg.location(715,36);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3375);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop162;
						}
					}
					} finally {dbg.exitSubRule(162);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:2: elementSubsequent ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )*
					{
					dbg.location(717,2);
					pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3385);
					elementSubsequent();
					state._fsp--;
					if (state.failed) return;dbg.location(717,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:20: ( ( ( ws )? esPred )=> ( ws )? elementSubsequent )*
					try { dbg.enterSubRule(164);

					loop164:
					while (true) {
						int alt164=2;
						try { dbg.enterDecision(164, decisionCanBacktrack[164]);

						switch ( input.LA(1) ) {
						case COMMENT:
						case NL:
						case WS:
							{
							int LA164_1 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case SASS_EXTEND_ONLY_SELECTOR:
							{
							int LA164_7 = input.LA(2);
							if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred31_Css3())) ) {
								alt164=1;
							}

							}
							break;
						case AT_SIGN:
							{
							int LA164_8 = input.LA(2);
							if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred31_Css3())) ) {
								alt164=1;
							}

							}
							break;
						case HASH:
							{
							int LA164_9 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case HASH_SYMBOL:
							{
							int LA164_10 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case DOT:
							{
							int LA164_11 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case LBRACKET:
							{
							int LA164_12 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case COLON:
							{
							int LA164_13 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						case DCOLON:
							{
							int LA164_36 = input.LA(2);
							if ( (synpred31_Css3()) ) {
								alt164=1;
							}

							}
							break;
						}
						} finally {dbg.exitDecision(164);}

						switch (alt164) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:21: ( ( ws )? esPred )=> ( ws )? elementSubsequent
							{
							dbg.location(717,35);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:35: ( ws )?
							int alt163=2;
							try { dbg.enterSubRule(163);
							try { dbg.enterDecision(163, decisionCanBacktrack[163]);

							int LA163_0 = input.LA(1);
							if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
								alt163=1;
							}
							} finally {dbg.exitDecision(163);}

							switch (alt163) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:35: ws
									{
									dbg.location(717,35);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3395);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(163);}
							dbg.location(717,39);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3398);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop164;
						}
					}
					} finally {dbg.exitSubRule(164);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(718, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:725:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(725, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:726:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(726,5);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON||input.LA(1)==DOT||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==LBRACKET||input.LA(1)==SASS_EXTEND_ONLY_SELECTOR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(727, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(729, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(731,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt166=2;
			try { dbg.enterSubRule(166);
			try { dbg.enterDecision(166, decisionCanBacktrack[166]);

			int LA166_0 = input.LA(1);
			if ( (LA166_0==IDENT) ) {
				int LA166_1 = input.LA(2);
				if ( (synpred32_Css3()) ) {
					alt166=1;
				}
			}
			else if ( (LA166_0==STAR) ) {
				int LA166_2 = input.LA(2);
				if ( (synpred32_Css3()) ) {
					alt166=1;
				}
			}
			else if ( (LA166_0==PIPE) && (synpred32_Css3())) {
				alt166=1;
			}
			} finally {dbg.exitDecision(166);}

			switch (alt166) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(731,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector3487);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(166);}
			dbg.location(731,49);
			pushFollow(FOLLOW_elementName_in_typeSelector3491);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(732, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(734, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(735,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:5: ( namespacePrefixName | STAR )?
			int alt167=3;
			try { dbg.enterSubRule(167);
			try { dbg.enterDecision(167, decisionCanBacktrack[167]);

			int LA167_0 = input.LA(1);
			if ( (LA167_0==IDENT) ) {
				alt167=1;
			}
			else if ( (LA167_0==STAR) ) {
				alt167=2;
			}
			} finally {dbg.exitDecision(167);}

			switch (alt167) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:7: namespacePrefixName
					{
					dbg.location(735,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix3506);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:29: STAR
					{
					dbg.location(735,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix3510); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(167);}
			dbg.location(735,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix3514); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(736, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(739, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:5: ( ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(741,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation | cssId | cssClass | slAttribute | pseudo )
			int alt168=6;
			try { dbg.enterSubRule(168);
			try { dbg.enterDecision(168, decisionCanBacktrack[168]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt168=1;
				}
				break;
			case AT_SIGN:
				{
				alt168=2;
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt168=3;
				}
				break;
			case DOT:
				{
				alt168=4;
				}
				break;
			case LBRACKET:
				{
				alt168=5;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt168=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 168, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(168);}

			switch (alt168) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:9: {...}? sass_extend_only_selector
					{
					dbg.location(742,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(742,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent3546);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:11: {...}? less_selector_interpolation
					{
					dbg.location(743,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(743,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_elementSubsequent3560);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:8: cssId
					{
					dbg.location(744,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent3570);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:8: cssClass
					{
					dbg.location(745,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent3579);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:11: slAttribute
					{
					dbg.location(746,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent3591);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:11: pseudo
					{
					dbg.location(747,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent3603);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(168);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(749, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:752:1: cssId : ( HASH | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(752, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:753:5: ( HASH | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) ) )
			int alt170=2;
			try { dbg.enterDecision(170, decisionCanBacktrack[170]);

			int LA170_0 = input.LA(1);
			if ( (LA170_0==HASH) ) {
				alt170=1;
			}
			else if ( (LA170_0==HASH_SYMBOL) ) {
				alt170=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 170, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(170);}

			switch (alt170) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:753:7: HASH
					{
					dbg.location(753,7);
					match(input,HASH,FOLLOW_HASH_in_cssId3627); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) )
					{
					dbg.location(755,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation )
					{
					dbg.location(755,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId3647); if (state.failed) return;dbg.location(756,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:13: ( NAME |{...}? less_selector_interpolation )
					int alt169=2;
					try { dbg.enterSubRule(169);
					try { dbg.enterDecision(169, decisionCanBacktrack[169]);

					int LA169_0 = input.LA(1);
					if ( (LA169_0==NAME) ) {
						alt169=1;
					}
					else if ( (LA169_0==AT_SIGN) ) {
						alt169=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 169, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(169);}

					switch (alt169) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:15: NAME
							{
							dbg.location(756,15);
							match(input,NAME,FOLLOW_NAME_in_cssId3663); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:757:17: {...}? less_selector_interpolation
							{
							dbg.location(757,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(757,35);
							pushFollow(FOLLOW_less_selector_interpolation_in_cssId3683);
							less_selector_interpolation();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(169);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(760, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:1: cssClass : DOT ( IDENT | NOT | GEN |{...}? less_selector_interpolation ) ;
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(766, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:5: ( DOT ( IDENT | NOT | GEN |{...}? less_selector_interpolation ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:7: DOT ( IDENT | NOT | GEN |{...}? less_selector_interpolation )
			{
			dbg.location(767,7);
			match(input,DOT,FOLLOW_DOT_in_cssClass3734); if (state.failed) return;dbg.location(768,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:9: ( IDENT | NOT | GEN |{...}? less_selector_interpolation )
			int alt171=4;
			try { dbg.enterSubRule(171);
			try { dbg.enterDecision(171, decisionCanBacktrack[171]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt171=1;
				}
				break;
			case NOT:
				{
				alt171=2;
				}
				break;
			case GEN:
				{
				alt171=3;
				}
				break;
			case AT_SIGN:
				{
				alt171=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 171, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(171);}

			switch (alt171) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:13: IDENT
					{
					dbg.location(769,13);
					match(input,IDENT,FOLLOW_IDENT_in_cssClass3758); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:15: NOT
					{
					dbg.location(770,15);
					match(input,NOT,FOLLOW_NOT_in_cssClass3774); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:15: GEN
					{
					dbg.location(771,15);
					match(input,GEN,FOLLOW_GEN_in_cssClass3790); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:15: {...}? less_selector_interpolation
					{
					dbg.location(772,15);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isLessSource()");
					}dbg.location(772,33);
					pushFollow(FOLLOW_less_selector_interpolation_in_cssClass3808);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(171);}

			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(774, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(781, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:782:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(782,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(783, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:785:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(785, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(786,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute3875); if (state.failed) return;dbg.location(787,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:6: ( namespacePrefix )?
			int alt172=2;
			try { dbg.enterSubRule(172);
			try { dbg.enterDecision(172, decisionCanBacktrack[172]);

			int LA172_0 = input.LA(1);
			if ( (LA172_0==IDENT) ) {
				int LA172_1 = input.LA(2);
				if ( (LA172_1==PIPE) ) {
					alt172=1;
				}
			}
			else if ( (LA172_0==PIPE||LA172_0==STAR) ) {
				alt172=1;
			}
			} finally {dbg.exitDecision(172);}

			switch (alt172) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:6: namespacePrefix
					{
					dbg.location(787,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute3882);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(172);}
			dbg.location(787,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:23: ( ws )?
			int alt173=2;
			try { dbg.enterSubRule(173);
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			int LA173_0 = input.LA(1);
			if ( (LA173_0==COMMENT||LA173_0==NL||LA173_0==WS) ) {
				alt173=1;
			}
			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:23: ws
					{
					dbg.location(787,23);
					pushFollow(FOLLOW_ws_in_slAttribute3885);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(173);}
			dbg.location(788,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute3896);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(788,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:25: ( ws )?
			int alt174=2;
			try { dbg.enterSubRule(174);
			try { dbg.enterDecision(174, decisionCanBacktrack[174]);

			int LA174_0 = input.LA(1);
			if ( (LA174_0==COMMENT||LA174_0==NL||LA174_0==WS) ) {
				alt174=1;
			}
			} finally {dbg.exitDecision(174);}

			switch (alt174) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:788:25: ws
					{
					dbg.location(788,25);
					pushFollow(FOLLOW_ws_in_slAttribute3898);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(174);}
			dbg.location(790,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:790:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			int LA177_0 = input.LA(1);
			if ( (LA177_0==BEGINS||LA177_0==CONTAINS||LA177_0==DASHMATCH||LA177_0==ENDS||LA177_0==INCLUDES||LA177_0==OPEQ) ) {
				alt177=1;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(791,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(799,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:799:17: ( ws )?
					int alt175=2;
					try { dbg.enterSubRule(175);
					try { dbg.enterDecision(175, decisionCanBacktrack[175]);

					int LA175_0 = input.LA(1);
					if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
						alt175=1;
					}
					} finally {dbg.exitDecision(175);}

					switch (alt175) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:799:17: ws
							{
							dbg.location(799,17);
							pushFollow(FOLLOW_ws_in_slAttribute4112);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(175);}
					dbg.location(800,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute4131);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(801,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:17: ( ws )?
					int alt176=2;
					try { dbg.enterSubRule(176);
					try { dbg.enterDecision(176, decisionCanBacktrack[176]);

					int LA176_0 = input.LA(1);
					if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
						alt176=1;
					}
					} finally {dbg.exitDecision(176);}

					switch (alt176) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:17: ws
							{
							dbg.location(801,17);
							pushFollow(FOLLOW_ws_in_slAttribute4149);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(176);}

					}
					break;

			}
			} finally {dbg.exitSubRule(177);}
			dbg.location(804,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute4174); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(805, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:812:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(812, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:4: IDENT
			{
			dbg.location(813,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName4190); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(814, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:816:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(816, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(817,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(822, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:824:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(824, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:825:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:825:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) )
			{
			dbg.location(825,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(826,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:826:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) )
			int alt186=2;
			try { dbg.enterSubRule(186);
			try { dbg.enterDecision(186, decisionCanBacktrack[186]);

			int LA186_0 = input.LA(1);
			if ( (LA186_0==GEN||LA186_0==IDENT) ) {
				alt186=1;
			}
			else if ( (LA186_0==NOT) ) {
				alt186=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 186, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(186);}

			switch (alt186) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(827,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(828,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(829,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt182=2;
					try { dbg.enterSubRule(182);
					try { dbg.enterDecision(182, decisionCanBacktrack[182]);

					try {
						isCyclicDecision = true;
						alt182 = dfa182.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(182);}

					switch (alt182) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(830,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:25: ( ws )?
							int alt178=2;
							try { dbg.enterSubRule(178);
							try { dbg.enterDecision(178, decisionCanBacktrack[178]);

							int LA178_0 = input.LA(1);
							if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
								alt178=1;
							}
							} finally {dbg.exitDecision(178);}

							switch (alt178) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:25: ws
									{
									dbg.location(830,25);
									pushFollow(FOLLOW_ws_in_pseudo4382);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(178);}
							dbg.location(830,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4385); if (state.failed) return;dbg.location(830,36);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:36: ( ws )?
							int alt179=2;
							try { dbg.enterSubRule(179);
							try { dbg.enterDecision(179, decisionCanBacktrack[179]);

							int LA179_0 = input.LA(1);
							if ( (LA179_0==COMMENT||LA179_0==NL||LA179_0==WS) ) {
								alt179=1;
							}
							} finally {dbg.exitDecision(179);}

							switch (alt179) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:36: ws
									{
									dbg.location(830,36);
									pushFollow(FOLLOW_ws_in_pseudo4387);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(179);}
							dbg.location(830,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:40: ( ( expression ( ws )? ) | STAR )?
							int alt181=3;
							try { dbg.enterSubRule(181);
							try { dbg.enterDecision(181, decisionCanBacktrack[181]);

							int LA181_0 = input.LA(1);
							if ( ((LA181_0 >= ANGLE && LA181_0 <= AT_IDENT)||(LA181_0 >= BOTTOMCENTER_SYM && LA181_0 <= BOTTOMRIGHT_SYM)||LA181_0==CHARSET_SYM||LA181_0==COUNTER_STYLE_SYM||LA181_0==DIMENSION||LA181_0==EMS||LA181_0==EXS||(LA181_0 >= FONT_FACE_SYM && LA181_0 <= FREQ)||LA181_0==GEN||(LA181_0 >= HASH && LA181_0 <= HASH_SYMBOL)||LA181_0==IDENT||LA181_0==IMPORT_SYM||(LA181_0 >= LEFTBOTTOM_SYM && LA181_0 <= LENGTH)||LA181_0==LESS_JS_STRING||(LA181_0 >= MEDIA_SYM && LA181_0 <= MOZ_DOCUMENT_SYM)||LA181_0==NAMESPACE_SYM||LA181_0==NUMBER||(LA181_0 >= PAGE_SYM && LA181_0 <= PERCENTAGE_SYMBOL)||LA181_0==PLUS||(LA181_0 >= REM && LA181_0 <= RIGHTTOP_SYM)||(LA181_0 >= SASS_AT_ROOT && LA181_0 <= SASS_DEBUG)||(LA181_0 >= SASS_EACH && LA181_0 <= SASS_EXTEND)||(LA181_0 >= SASS_FOR && LA181_0 <= SASS_FUNCTION)||(LA181_0 >= SASS_IF && LA181_0 <= SASS_MIXIN)||(LA181_0 >= SASS_RETURN && LA181_0 <= SASS_WHILE)||LA181_0==STRING||(LA181_0 >= TILDE && LA181_0 <= TOPRIGHT_SYM)||LA181_0==URI||LA181_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt181=1;
							}
							else if ( (LA181_0==STAR) ) {
								alt181=2;
							}
							} finally {dbg.exitDecision(181);}

							switch (alt181) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:42: ( expression ( ws )? )
									{
									dbg.location(830,42);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:43: expression ( ws )?
									{
									dbg.location(830,43);
									pushFollow(FOLLOW_expression_in_pseudo4393);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(830,54);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:54: ( ws )?
									int alt180=2;
									try { dbg.enterSubRule(180);
									try { dbg.enterDecision(180, decisionCanBacktrack[180]);

									int LA180_0 = input.LA(1);
									if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
										alt180=1;
									}
									} finally {dbg.exitDecision(180);}

									switch (alt180) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:54: ws
											{
											dbg.location(830,54);
											pushFollow(FOLLOW_ws_in_pseudo4395);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(180);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:61: STAR
									{
									dbg.location(830,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo4401); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(181);}
							dbg.location(830,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4406); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(182);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					{
					dbg.location(834,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:19: NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN
					{
					dbg.location(834,19);
					match(input,NOT,FOLLOW_NOT_in_pseudo4485); if (state.failed) return;dbg.location(834,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:23: ( ws )?
					int alt183=2;
					try { dbg.enterSubRule(183);
					try { dbg.enterDecision(183, decisionCanBacktrack[183]);

					int LA183_0 = input.LA(1);
					if ( (LA183_0==COMMENT||LA183_0==NL||LA183_0==WS) ) {
						alt183=1;
					}
					} finally {dbg.exitDecision(183);}

					switch (alt183) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:23: ws
							{
							dbg.location(834,23);
							pushFollow(FOLLOW_ws_in_pseudo4487);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(183);}
					dbg.location(834,27);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4490); if (state.failed) return;dbg.location(834,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:34: ( ws )?
					int alt184=2;
					try { dbg.enterSubRule(184);
					try { dbg.enterDecision(184, decisionCanBacktrack[184]);

					int LA184_0 = input.LA(1);
					if ( (LA184_0==COMMENT||LA184_0==NL||LA184_0==WS) ) {
						alt184=1;
					}
					} finally {dbg.exitDecision(184);}

					switch (alt184) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:34: ws
							{
							dbg.location(834,34);
							pushFollow(FOLLOW_ws_in_pseudo4492);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(184);}
					dbg.location(834,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:38: ( simpleSelectorSequence )?
					int alt185=2;
					try { dbg.enterSubRule(185);
					try { dbg.enterDecision(185, decisionCanBacktrack[185]);

					int LA185_0 = input.LA(1);
					if ( (LA185_0==AT_SIGN||LA185_0==COLON||LA185_0==DCOLON||LA185_0==DOT||LA185_0==GEN||(LA185_0 >= HASH && LA185_0 <= HASH_SYMBOL)||LA185_0==IDENT||LA185_0==LBRACKET||LA185_0==LESS_AND||LA185_0==PIPE||LA185_0==SASS_EXTEND_ONLY_SELECTOR||LA185_0==STAR) ) {
						alt185=1;
					}
					} finally {dbg.exitDecision(185);}

					switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:38: simpleSelectorSequence
							{
							dbg.location(834,38);
							pushFollow(FOLLOW_simpleSelectorSequence_in_pseudo4495);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(185);}
					dbg.location(834,62);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4498); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(186);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(836, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:838:1: propertyDeclaration : ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(838, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:5: ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue )
			int alt195=2;
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA195_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt195=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA195_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt195=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA195_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt195=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DOT:
			case HASH:
			case MINUS:
				{
				int LA195_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt195=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA195_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt195=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA195_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt195=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA195_7 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt195=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 195, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:5: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(840,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:5: ( STAR )?
					int alt187=2;
					try { dbg.enterSubRule(187);
					try { dbg.enterDecision(187, decisionCanBacktrack[187]);

					int LA187_0 = input.LA(1);
					if ( (LA187_0==STAR) ) {
						alt187=1;
					}
					} finally {dbg.exitDecision(187);}

					switch (alt187) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:5: STAR
							{
							dbg.location(840,5);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4536); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(187);}
					dbg.location(840,11);
					pushFollow(FOLLOW_property_in_propertyDeclaration4539);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(840,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:20: ( ws )?
					int alt188=2;
					try { dbg.enterSubRule(188);
					try { dbg.enterDecision(188, decisionCanBacktrack[188]);

					int LA188_0 = input.LA(1);
					if ( (LA188_0==COMMENT||LA188_0==NL||LA188_0==WS) ) {
						alt188=1;
					}
					} finally {dbg.exitDecision(188);}

					switch (alt188) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:20: ws
							{
							dbg.location(840,20);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4541);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(188);}
					dbg.location(840,24);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4544); if (state.failed) return;dbg.location(840,30);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:30: ( ws )?
					int alt189=2;
					try { dbg.enterSubRule(189);
					try { dbg.enterDecision(189, decisionCanBacktrack[189]);

					int LA189_0 = input.LA(1);
					if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
						alt189=1;
					}
					} finally {dbg.exitDecision(189);}

					switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:30: ws
							{
							dbg.location(840,30);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4546);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(189);}
					dbg.location(840,34);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration4549);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(840,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:48: ( ( ws )? prio )?
					int alt191=2;
					try { dbg.enterSubRule(191);
					try { dbg.enterDecision(191, decisionCanBacktrack[191]);

					try {
						isCyclicDecision = true;
						alt191 = dfa191.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(191);}

					switch (alt191) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:49: ( ws )? prio
							{
							dbg.location(840,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:49: ( ws )?
							int alt190=2;
							try { dbg.enterSubRule(190);
							try { dbg.enterDecision(190, decisionCanBacktrack[190]);

							int LA190_0 = input.LA(1);
							if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
								alt190=1;
							}
							} finally {dbg.exitDecision(190);}

							switch (alt190) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:49: ws
									{
									dbg.location(840,49);
									pushFollow(FOLLOW_ws_in_propertyDeclaration4552);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(190);}
							dbg.location(840,53);
							pushFollow(FOLLOW_prio_in_propertyDeclaration4555);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(191);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(841,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(841,36);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:36: ( STAR )?
					int alt192=2;
					try { dbg.enterSubRule(192);
					try { dbg.enterDecision(192, decisionCanBacktrack[192]);

					int LA192_0 = input.LA(1);
					if ( (LA192_0==STAR) ) {
						alt192=1;
					}
					} finally {dbg.exitDecision(192);}

					switch (alt192) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:36: STAR
							{
							dbg.location(841,36);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4567); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(192);}
					dbg.location(841,42);
					pushFollow(FOLLOW_property_in_propertyDeclaration4570);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(841,51);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:51: ( ws )?
					int alt193=2;
					try { dbg.enterSubRule(193);
					try { dbg.enterDecision(193, decisionCanBacktrack[193]);

					int LA193_0 = input.LA(1);
					if ( (LA193_0==COMMENT||LA193_0==NL||LA193_0==WS) ) {
						alt193=1;
					}
					} finally {dbg.exitDecision(193);}

					switch (alt193) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:51: ws
							{
							dbg.location(841,51);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4572);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(193);}
					dbg.location(841,55);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4575); if (state.failed) return;dbg.location(841,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:61: ( ws )?
					int alt194=2;
					try { dbg.enterSubRule(194);
					try { dbg.enterDecision(194, decisionCanBacktrack[194]);

					int LA194_0 = input.LA(1);
					if ( (LA194_0==COMMENT||LA194_0==NL||LA194_0==WS) ) {
						alt194=1;
					}
					} finally {dbg.exitDecision(194);}

					switch (alt194) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:61: ws
							{
							dbg.location(841,61);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4577);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(194);}
					dbg.location(841,65);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration4580);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(842, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(851, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:852:5: ({...}? cp_expression_list | propertyValue )
			int alt196=2;
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LPAREN:
			case NOT:
				{
				alt196=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA196_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case IDENT:
				{
				int LA196_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA196_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA196_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA196_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case EMS:
				{
				int LA196_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case REM:
				{
				int LA196_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case EXS:
				{
				int LA196_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA196_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case TIME:
				{
				int LA196_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case FREQ:
				{
				int LA196_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA196_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA196_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case STRING:
				{
				int LA196_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case TILDE:
				{
				int LA196_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA196_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case GEN:
				{
				int LA196_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case URI:
				{
				int LA196_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case HASH:
				{
				int LA196_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (true) ) {
					alt196=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA196_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt196=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt196=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 196, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA196_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt196=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt196=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 196, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA196_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 196, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA196_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt196=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 196, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 196, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:5: {...}? cp_expression_list
					{
					dbg.location(853,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(853,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue4614);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:854:7: propertyValue
					{
					dbg.location(854,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue4622);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(855, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(857, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:2: ( expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:9: expression
			{
			dbg.location(859,9);
			pushFollow(FOLLOW_expression_in_propertyValue4644);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(860, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:863:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(863, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:865:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(866,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt197=0;
			try { dbg.enterSubRule(197);

			loop197:
			while (true) {
				int alt197=2;
				try { dbg.enterDecision(197, decisionCanBacktrack[197]);

				int LA197_0 = input.LA(1);
				if ( ((LA197_0 >= A && LA197_0 <= ANGLE)||(LA197_0 >= AT_SIGN && LA197_0 <= L)||(LA197_0 >= LBRACKET && LA197_0 <= R)||(LA197_0 >= RBRACKET && LA197_0 <= SASS_RETURN)||(LA197_0 >= SASS_WARN && LA197_0 <= SASS_WHILE)||(LA197_0 >= STRING && LA197_0 <= Z)) ) {
					alt197=1;
				}

				} finally {dbg.exitDecision(197);}

				switch (alt197) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(866,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_RETURN)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt197 >= 1 ) break loop197;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(197, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt197++;
			}
			} finally {dbg.exitSubRule(197);}
			dbg.location(866,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(867, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(871, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:876:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:877:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(877, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:879:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(879, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(884, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(886, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:13: SEMI
			{
			dbg.location(891,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI4814); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(892, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(895, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(900, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:902:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(902, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:7: IMPORTANT_SYM
			{
			dbg.location(903,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio4859); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(904, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(906, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(907,7);
			pushFollow(FOLLOW_term_in_expression4876);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(907,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(201);

			loop201:
			while (true) {
				int alt201=2;
				try { dbg.enterDecision(201, decisionCanBacktrack[201]);

				try {
					isCyclicDecision = true;
					alt201 = dfa201.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(201);}

				switch (alt201) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(907,66);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt200=3;
					try { dbg.enterSubRule(200);
					try { dbg.enterDecision(200, decisionCanBacktrack[200]);

					try {
						isCyclicDecision = true;
						alt200 = dfa200.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(200);}

					switch (alt200) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:68: ws
							{
							dbg.location(907,68);
							pushFollow(FOLLOW_ws_in_expression4908);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(907,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:74: ( ws )? operator ( ws )?
							{
							dbg.location(907,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:74: ( ws )?
							int alt198=2;
							try { dbg.enterSubRule(198);
							try { dbg.enterDecision(198, decisionCanBacktrack[198]);

							int LA198_0 = input.LA(1);
							if ( (LA198_0==COMMENT||LA198_0==NL||LA198_0==WS) ) {
								alt198=1;
							}
							} finally {dbg.exitDecision(198);}

							switch (alt198) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:74: ws
									{
									dbg.location(907,74);
									pushFollow(FOLLOW_ws_in_expression4913);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(198);}
							dbg.location(907,78);
							pushFollow(FOLLOW_operator_in_expression4916);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(907,87);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:87: ( ws )?
							int alt199=2;
							try { dbg.enterSubRule(199);
							try { dbg.enterDecision(199, decisionCanBacktrack[199]);

							int LA199_0 = input.LA(1);
							if ( (LA199_0==COMMENT||LA199_0==NL||LA199_0==WS) ) {
								alt199=1;
							}
							} finally {dbg.exitDecision(199);}

							switch (alt199) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:87: ws
									{
									dbg.location(907,87);
									pushFollow(FOLLOW_ws_in_expression4918);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(199);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(200);}
					dbg.location(907,109);
					pushFollow(FOLLOW_term_in_expression4927);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop201;
				}
			}
			} finally {dbg.exitSubRule(201);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(908, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:910:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(910, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:911:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol )
			{
			dbg.location(912,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:5: ( unaryOperator ( ws )? )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==MINUS||LA203_0==PLUS) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:7: unaryOperator ( ws )?
					{
					dbg.location(912,7);
					pushFollow(FOLLOW_unaryOperator_in_term4952);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(912,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:21: ( ws )?
					int alt202=2;
					try { dbg.enterSubRule(202);
					try { dbg.enterDecision(202, decisionCanBacktrack[202]);

					int LA202_0 = input.LA(1);
					if ( (LA202_0==COMMENT||LA202_0==NL||LA202_0==WS) ) {
						alt202=1;
					}
					} finally {dbg.exitDecision(202);}

					switch (alt202) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:21: ws
							{
							dbg.location(912,21);
							pushFollow(FOLLOW_ws_in_term4954);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(202);}

					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(913,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:913:5: ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? sass_interpolation_expression_var |{...}? cp_term_symbol )
			int alt204=22;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA204_1 = input.LA(2);
				if ( (synpred34_Css3()) ) {
					alt204=1;
				}
				else if ( (true) ) {
					alt204=2;
				}

				}
				break;
			case NUMBER:
				{
				alt204=3;
				}
				break;
			case PERCENTAGE:
				{
				alt204=4;
				}
				break;
			case LENGTH:
				{
				alt204=5;
				}
				break;
			case EMS:
				{
				alt204=6;
				}
				break;
			case REM:
				{
				alt204=7;
				}
				break;
			case EXS:
				{
				alt204=8;
				}
				break;
			case ANGLE:
				{
				alt204=9;
				}
				break;
			case TIME:
				{
				alt204=10;
				}
				break;
			case FREQ:
				{
				alt204=11;
				}
				break;
			case RESOLUTION:
				{
				alt204=12;
				}
				break;
			case DIMENSION:
				{
				alt204=13;
				}
				break;
			case STRING:
				{
				alt204=14;
				}
				break;
			case TILDE:
				{
				alt204=15;
				}
				break;
			case LESS_JS_STRING:
				{
				alt204=16;
				}
				break;
			case GEN:
				{
				alt204=17;
				}
				break;
			case URI:
				{
				alt204=18;
				}
				break;
			case HASH:
				{
				alt204=19;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt204=20;
				}
				break;
			case HASH_SYMBOL:
				{
				alt204=21;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt204=22;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 204, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(914,36);
					pushFollow(FOLLOW_function_in_term4983);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:915:11: IDENT
					{
					dbg.location(915,11);
					match(input,IDENT,FOLLOW_IDENT_in_term4996); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:11: NUMBER
					{
					dbg.location(916,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term5008); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:11: PERCENTAGE
					{
					dbg.location(917,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term5020); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:918:11: LENGTH
					{
					dbg.location(918,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term5032); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:11: EMS
					{
					dbg.location(919,11);
					match(input,EMS,FOLLOW_EMS_in_term5044); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:11: REM
					{
					dbg.location(920,11);
					match(input,REM,FOLLOW_REM_in_term5056); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:921:11: EXS
					{
					dbg.location(921,11);
					match(input,EXS,FOLLOW_EXS_in_term5068); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:922:11: ANGLE
					{
					dbg.location(922,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term5080); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:11: TIME
					{
					dbg.location(923,11);
					match(input,TIME,FOLLOW_TIME_in_term5092); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:11: FREQ
					{
					dbg.location(924,11);
					match(input,FREQ,FOLLOW_FREQ_in_term5104); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:925:11: RESOLUTION
					{
					dbg.location(925,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term5116); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:926:11: DIMENSION
					{
					dbg.location(926,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term5128); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:11: STRING
					{
					dbg.location(927,11);
					match(input,STRING,FOLLOW_STRING_in_term5145); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:928:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(928,11);
					match(input,TILDE,FOLLOW_TILDE_in_term5157); if (state.failed) return;dbg.location(928,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:11: LESS_JS_STRING
					{
					dbg.location(929,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term5180); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:11: GEN
					{
					dbg.location(930,11);
					match(input,GEN,FOLLOW_GEN_in_term5195); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:11: URI
					{
					dbg.location(931,11);
					match(input,URI,FOLLOW_URI_in_term5207); if (state.failed) return;
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:11: hexColor
					{
					dbg.location(932,11);
					pushFollow(FOLLOW_hexColor_in_term5219);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:11: {...}? cp_variable
					{
					dbg.location(933,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(933,40);
					pushFollow(FOLLOW_cp_variable_in_term5233);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(934,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(934,40);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term5247);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:11: {...}? cp_term_symbol
					{
					dbg.location(935,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(935,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term5261);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(937, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(942, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:7: PERCENTAGE_SYMBOL
			{
			dbg.location(943,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5288); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(944, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:946:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(946, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(947,5);
			pushFollow(FOLLOW_functionName_in_function5304);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(947,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:18: ( ws )?
			int alt205=2;
			try { dbg.enterSubRule(205);
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
				alt205=1;
			}
			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:18: ws
					{
					dbg.location(947,18);
					pushFollow(FOLLOW_ws_in_function5306);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(205);}
			dbg.location(948,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function5311); if (state.failed) return;dbg.location(948,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:10: ( ws )?
			int alt206=2;
			try { dbg.enterSubRule(206);
			try { dbg.enterDecision(206, decisionCanBacktrack[206]);

			int LA206_0 = input.LA(1);
			if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
				alt206=1;
			}
			} finally {dbg.exitDecision(206);}

			switch (alt206) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:10: ws
					{
					dbg.location(948,10);
					pushFollow(FOLLOW_ws_in_function5313);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(206);}
			dbg.location(949,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:949:3: ( fnAttributes |)
			int alt207=2;
			try { dbg.enterSubRule(207);
			try { dbg.enterDecision(207, decisionCanBacktrack[207]);

			int LA207_0 = input.LA(1);
			if ( ((LA207_0 >= ANGLE && LA207_0 <= AT_IDENT)||(LA207_0 >= BOTTOMCENTER_SYM && LA207_0 <= BOTTOMRIGHT_SYM)||LA207_0==CHARSET_SYM||LA207_0==COUNTER_STYLE_SYM||LA207_0==DIMENSION||LA207_0==EMS||LA207_0==EXS||(LA207_0 >= FONT_FACE_SYM && LA207_0 <= FREQ)||LA207_0==GEN||(LA207_0 >= HASH && LA207_0 <= HASH_SYMBOL)||(LA207_0 >= IDENT && LA207_0 <= IMPORT_SYM)||(LA207_0 >= LEFTBOTTOM_SYM && LA207_0 <= LENGTH)||LA207_0==LESS_JS_STRING||LA207_0==LPAREN||(LA207_0 >= MEDIA_SYM && LA207_0 <= MOZ_DOCUMENT_SYM)||LA207_0==NAMESPACE_SYM||(LA207_0 >= NOT && LA207_0 <= NUMBER)||(LA207_0 >= PAGE_SYM && LA207_0 <= PERCENTAGE_SYMBOL)||LA207_0==PLUS||(LA207_0 >= REM && LA207_0 <= RIGHTTOP_SYM)||(LA207_0 >= SASS_AT_ROOT && LA207_0 <= SASS_DEBUG)||(LA207_0 >= SASS_EACH && LA207_0 <= SASS_EXTEND)||(LA207_0 >= SASS_FOR && LA207_0 <= SASS_FUNCTION)||(LA207_0 >= SASS_IF && LA207_0 <= SASS_MIXIN)||(LA207_0 >= SASS_RETURN && LA207_0 <= SASS_WHILE)||LA207_0==STRING||(LA207_0 >= TILDE && LA207_0 <= TOPRIGHT_SYM)||LA207_0==URI||LA207_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt207=1;
			}
			else if ( (LA207_0==RPAREN) ) {
				alt207=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 207, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(207);}

			switch (alt207) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:21: fnAttributes
					{
					dbg.location(950,21);
					pushFollow(FOLLOW_fnAttributes_in_function5340);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:952:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(207);}
			dbg.location(953,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function5371); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(954, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:960:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(960, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:964:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(965,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:9: ( IDENT COLON )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==IDENT) ) {
				int LA208_1 = input.LA(2);
				if ( (LA208_1==COLON) ) {
					alt208=1;
				}
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:10: IDENT COLON
					{
					dbg.location(965,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5423); if (state.failed) return;dbg.location(965,16);
					match(input,COLON,FOLLOW_COLON_in_functionName5425); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(965,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName5429); if (state.failed) return;dbg.location(965,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:30: ( DOT IDENT )*
			try { dbg.enterSubRule(209);

			loop209:
			while (true) {
				int alt209=2;
				try { dbg.enterDecision(209, decisionCanBacktrack[209]);

				int LA209_0 = input.LA(1);
				if ( (LA209_0==DOT) ) {
					alt209=1;
				}

				} finally {dbg.exitDecision(209);}

				switch (alt209) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:31: DOT IDENT
					{
					dbg.location(965,31);
					match(input,DOT,FOLLOW_DOT_in_functionName5432); if (state.failed) return;dbg.location(965,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5434); if (state.failed) return;
					}
					break;

				default :
					break loop209;
				}
			}
			} finally {dbg.exitSubRule(209);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(966, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:1: fnAttributes : fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(968, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:5: ( fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:5: fnAttribute ( ( ws )? COMMA ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(970,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes5458);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(970,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:17: ( ( ws )? COMMA ( ws )? fnAttribute )*
			try { dbg.enterSubRule(212);

			loop212:
			while (true) {
				int alt212=2;
				try { dbg.enterDecision(212, decisionCanBacktrack[212]);

				try {
					isCyclicDecision = true;
					alt212 = dfa212.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(212);}

				switch (alt212) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:18: ( ws )? COMMA ( ws )? fnAttribute
					{
					dbg.location(970,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:18: ( ws )?
					int alt210=2;
					try { dbg.enterSubRule(210);
					try { dbg.enterDecision(210, decisionCanBacktrack[210]);

					int LA210_0 = input.LA(1);
					if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
						alt210=1;
					}
					} finally {dbg.exitDecision(210);}

					switch (alt210) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:18: ws
							{
							dbg.location(970,18);
							pushFollow(FOLLOW_ws_in_fnAttributes5461);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(210);}
					dbg.location(970,22);
					match(input,COMMA,FOLLOW_COMMA_in_fnAttributes5464); if (state.failed) return;dbg.location(970,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:28: ( ws )?
					int alt211=2;
					try { dbg.enterSubRule(211);
					try { dbg.enterDecision(211, decisionCanBacktrack[211]);

					int LA211_0 = input.LA(1);
					if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
						alt211=1;
					}
					} finally {dbg.exitDecision(211);}

					switch (alt211) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:28: ws
							{
							dbg.location(970,28);
							pushFollow(FOLLOW_ws_in_fnAttributes5466);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(211);}
					dbg.location(970,32);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes5469);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop212;
				}
			}
			} finally {dbg.exitSubRule(212);}
			dbg.location(970,46);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:46: ( ws )?
			int alt213=2;
			try { dbg.enterSubRule(213);
			try { dbg.enterDecision(213, decisionCanBacktrack[213]);

			int LA213_0 = input.LA(1);
			if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
				alt213=1;
			}
			} finally {dbg.exitDecision(213);}

			switch (alt213) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:46: ws
					{
					dbg.location(970,46);
					pushFollow(FOLLOW_ws_in_fnAttributes5473);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(213);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(971, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(973, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:974:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt216=3;
			try { dbg.enterDecision(216, decisionCanBacktrack[216]);

			int LA216_0 = input.LA(1);
			if ( (LA216_0==IDENT) ) {
				int LA216_1 = input.LA(2);
				if ( (synpred35_Css3()) ) {
					alt216=1;
				}
				else if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==AT_IDENT||(LA216_0 >= BOTTOMCENTER_SYM && LA216_0 <= BOTTOMRIGHT_SYM)||LA216_0==CHARSET_SYM||LA216_0==COUNTER_STYLE_SYM||LA216_0==FONT_FACE_SYM||LA216_0==IMPORT_SYM||(LA216_0 >= LEFTBOTTOM_SYM && LA216_0 <= LEFTTOP_SYM)||LA216_0==MEDIA_SYM||LA216_0==MOZ_DOCUMENT_SYM||LA216_0==NAMESPACE_SYM||LA216_0==PAGE_SYM||(LA216_0 >= RIGHTBOTTOM_SYM && LA216_0 <= RIGHTTOP_SYM)||(LA216_0 >= SASS_AT_ROOT && LA216_0 <= SASS_DEBUG)||(LA216_0 >= SASS_EACH && LA216_0 <= SASS_EXTEND)||(LA216_0 >= SASS_FOR && LA216_0 <= SASS_FUNCTION)||(LA216_0 >= SASS_IF && LA216_0 <= SASS_MIXIN)||LA216_0==SASS_RETURN||(LA216_0 >= SASS_WARN && LA216_0 <= SASS_WHILE)||(LA216_0 >= TOPCENTER_SYM && LA216_0 <= TOPRIGHT_SYM)||LA216_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA216_2 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred35_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt216=1;
				}
				else if ( (((synpred36_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt216=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt216=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 216, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA216_0==SASS_VAR) ) {
				int LA216_3 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred35_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt216=1;
				}
				else if ( (((synpred36_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt216=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt216=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 216, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA216_0==NOT) && (synpred36_Css3())) {
				alt216=2;
			}
			else if ( (LA216_0==MINUS||LA216_0==PLUS) ) {
				int LA216_5 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==NUMBER) ) {
				int LA216_6 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==PERCENTAGE) ) {
				int LA216_7 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==LENGTH) ) {
				int LA216_8 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==EMS) ) {
				int LA216_9 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==REM) ) {
				int LA216_10 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==EXS) ) {
				int LA216_11 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==ANGLE) ) {
				int LA216_12 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==TIME) ) {
				int LA216_13 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==FREQ) ) {
				int LA216_14 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==RESOLUTION) ) {
				int LA216_15 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==DIMENSION) ) {
				int LA216_16 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==STRING) ) {
				int LA216_17 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==TILDE) ) {
				int LA216_18 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==LESS_JS_STRING) ) {
				int LA216_19 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==GEN) ) {
				int LA216_20 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==URI) ) {
				int LA216_21 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==HASH) ) {
				int LA216_22 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt216=2;
				}
				else if ( (true) ) {
					alt216=3;
				}

			}
			else if ( (LA216_0==HASH_SYMBOL) ) {
				int LA216_23 = input.LA(2);
				if ( ((synpred36_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt216=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt216=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 216, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA216_0==PERCENTAGE_SYMBOL) ) {
				int LA216_24 = input.LA(2);
				if ( ((synpred36_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt216=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt216=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 216, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA216_0==IMPORTANT_SYM) && (synpred36_Css3())) {
				alt216=2;
			}
			else if ( (LA216_0==LPAREN) && (synpred36_Css3())) {
				alt216=2;
			}

			} finally {dbg.exitDecision(216);}

			switch (alt216) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(975,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute5510);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(975,62);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:62: ( ws )?
					int alt214=2;
					try { dbg.enterSubRule(214);
					try { dbg.enterDecision(214, decisionCanBacktrack[214]);

					int LA214_0 = input.LA(1);
					if ( (LA214_0==COMMENT||LA214_0==NL||LA214_0==WS) ) {
						alt214=1;
					}
					} finally {dbg.exitDecision(214);}

					switch (alt214) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:62: ws
							{
							dbg.location(975,62);
							pushFollow(FOLLOW_ws_in_fnAttribute5512);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(214);}
					dbg.location(975,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(975,79);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:79: ( ws )?
					int alt215=2;
					try { dbg.enterSubRule(215);
					try { dbg.enterDecision(215, decisionCanBacktrack[215]);

					int LA215_0 = input.LA(1);
					if ( (LA215_0==COMMENT||LA215_0==NL||LA215_0==WS) ) {
						alt215=1;
					}
					} finally {dbg.exitDecision(215);}

					switch (alt215) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:79: ws
							{
							dbg.location(975,79);
							pushFollow(FOLLOW_ws_in_fnAttribute5521);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(215);}
					dbg.location(975,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute5524);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:11: ( cp_expression )=> cp_expression
					{
					dbg.location(976,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute5541);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:977:11: expression
					{
					dbg.location(977,11);
					pushFollow(FOLLOW_expression_in_fnAttribute5553);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(978, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(980, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt218=2;
			try { dbg.enterDecision(218, decisionCanBacktrack[218]);

			int LA218_0 = input.LA(1);
			if ( (LA218_0==IDENT) ) {
				alt218=1;
			}
			else if ( (LA218_0==AT_IDENT||(LA218_0 >= BOTTOMCENTER_SYM && LA218_0 <= BOTTOMRIGHT_SYM)||LA218_0==CHARSET_SYM||LA218_0==COUNTER_STYLE_SYM||LA218_0==FONT_FACE_SYM||LA218_0==IMPORT_SYM||(LA218_0 >= LEFTBOTTOM_SYM && LA218_0 <= LEFTTOP_SYM)||LA218_0==MEDIA_SYM||LA218_0==MOZ_DOCUMENT_SYM||LA218_0==NAMESPACE_SYM||LA218_0==PAGE_SYM||(LA218_0 >= RIGHTBOTTOM_SYM && LA218_0 <= RIGHTTOP_SYM)||(LA218_0 >= SASS_AT_ROOT && LA218_0 <= SASS_DEBUG)||(LA218_0 >= SASS_EACH && LA218_0 <= SASS_EXTEND)||(LA218_0 >= SASS_FOR && LA218_0 <= SASS_FUNCTION)||(LA218_0 >= SASS_IF && LA218_0 <= SASS_MIXIN)||(LA218_0 >= SASS_RETURN && LA218_0 <= SASS_WHILE)||(LA218_0 >= TOPCENTER_SYM && LA218_0 <= TOPRIGHT_SYM)||LA218_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt218=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 218, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(218);}

			switch (alt218) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:13: IDENT ( DOT IDENT )*
					{
					dbg.location(982,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5576); if (state.failed) return;dbg.location(982,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:19: ( DOT IDENT )*
					try { dbg.enterSubRule(217);

					loop217:
					while (true) {
						int alt217=2;
						try { dbg.enterDecision(217, decisionCanBacktrack[217]);

						int LA217_0 = input.LA(1);
						if ( (LA217_0==DOT) ) {
							alt217=1;
						}

						} finally {dbg.exitDecision(217);}

						switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:20: DOT IDENT
							{
							dbg.location(982,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName5579); if (state.failed) return;dbg.location(982,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5581); if (state.failed) return;
							}
							break;

						default :
							break loop217;
						}
					}
					} finally {dbg.exitSubRule(217);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:15: {...}? cp_variable
					{
					dbg.location(983,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(983,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName5601);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(984, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(986, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt223=2;
			try { dbg.enterDecision(223, decisionCanBacktrack[223]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA223_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA223_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA223_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA223_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA223_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA223_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA223_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA223_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA223_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA223_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA223_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA223_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA223_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA223_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA223_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA223_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA223_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA223_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA223_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA223_20 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt223=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA223_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt223=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA223_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA223_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt223=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 223, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt223=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 223, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(223);}

			switch (alt223) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(988,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue5624);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(988,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(222);

					loop222:
					while (true) {
						int alt222=2;
						try { dbg.enterDecision(222, decisionCanBacktrack[222]);

						try {
							isCyclicDecision = true;
							alt222 = dfa222.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(222);}

						switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(988,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt221=3;
							try { dbg.enterSubRule(221);
							try { dbg.enterDecision(221, decisionCanBacktrack[221]);

							try {
								isCyclicDecision = true;
								alt221 = dfa221.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(221);}

							switch (alt221) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:73: ws
									{
									dbg.location(988,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue5656);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(988,78);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(988,79);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:79: ( ws )?
									int alt219=2;
									try { dbg.enterSubRule(219);
									try { dbg.enterDecision(219, decisionCanBacktrack[219]);

									int LA219_0 = input.LA(1);
									if ( (LA219_0==COMMENT||LA219_0==NL||LA219_0==WS) ) {
										alt219=1;
									}
									} finally {dbg.exitDecision(219);}

									switch (alt219) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:79: ws
											{
											dbg.location(988,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue5661);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(219);}
									dbg.location(988,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue5664); if (state.failed) return;dbg.location(988,91);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:91: ( ws )?
									int alt220=2;
									try { dbg.enterSubRule(220);
									try { dbg.enterDecision(220, decisionCanBacktrack[220]);

									int LA220_0 = input.LA(1);
									if ( (LA220_0==COMMENT||LA220_0==NL||LA220_0==WS) ) {
										alt220=1;
									}
									} finally {dbg.exitDecision(220);}

									switch (alt220) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:91: ws
											{
											dbg.location(988,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue5666);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(220);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(221);}
							dbg.location(988,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue5675);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop222;
						}
					}
					} finally {dbg.exitSubRule(222);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:15: {...}? cp_math_expression
					{
					dbg.location(989,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(989,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue5696);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(990, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(992, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:5: ( HASH )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:7: HASH
			{
			dbg.location(993,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor5710); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(994, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:996:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(996, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:7: ( WS | NL | COMMENT )+
			{
			dbg.location(997,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:7: ( WS | NL | COMMENT )+
			int cnt224=0;
			try { dbg.enterSubRule(224);

			loop224:
			while (true) {
				int alt224=2;
				try { dbg.enterDecision(224, decisionCanBacktrack[224]);

				int LA224_0 = input.LA(1);
				if ( (LA224_0==COMMENT||LA224_0==NL||LA224_0==WS) ) {
					alt224=1;
				}

				} finally {dbg.exitDecision(224);}

				switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(997,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt224 >= 1 ) break loop224;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(224, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt224++;
			}
			} finally {dbg.exitSubRule(224);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(998, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1003:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1003, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt232=2;
			try { dbg.enterDecision(232, decisionCanBacktrack[232]);

			int LA232_0 = input.LA(1);
			if ( (LA232_0==AT_IDENT||(LA232_0 >= BOTTOMCENTER_SYM && LA232_0 <= BOTTOMRIGHT_SYM)||LA232_0==CHARSET_SYM||LA232_0==COUNTER_STYLE_SYM||LA232_0==FONT_FACE_SYM||LA232_0==IMPORT_SYM||(LA232_0 >= LEFTBOTTOM_SYM && LA232_0 <= LEFTTOP_SYM)||LA232_0==MEDIA_SYM||LA232_0==MOZ_DOCUMENT_SYM||LA232_0==NAMESPACE_SYM||LA232_0==PAGE_SYM||(LA232_0 >= RIGHTBOTTOM_SYM && LA232_0 <= RIGHTTOP_SYM)||(LA232_0 >= SASS_AT_ROOT && LA232_0 <= SASS_DEBUG)||(LA232_0 >= SASS_EACH && LA232_0 <= SASS_EXTEND)||(LA232_0 >= SASS_FOR && LA232_0 <= SASS_FUNCTION)||(LA232_0 >= SASS_IF && LA232_0 <= SASS_MIXIN)||LA232_0==SASS_RETURN||(LA232_0 >= SASS_WARN && LA232_0 <= SASS_WHILE)||(LA232_0 >= TOPCENTER_SYM && LA232_0 <= TOPRIGHT_SYM)||LA232_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA232_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt232=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt232=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 232, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA232_0==SASS_VAR) ) {
				int LA232_2 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt232=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt232=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 232, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 232, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(232);}

			switch (alt232) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1005,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1005,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration5770);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1005,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:39: ( ws )?
					int alt225=2;
					try { dbg.enterSubRule(225);
					try { dbg.enterDecision(225, decisionCanBacktrack[225]);

					int LA225_0 = input.LA(1);
					if ( (LA225_0==COMMENT||LA225_0==NL||LA225_0==WS) ) {
						alt225=1;
					}
					} finally {dbg.exitDecision(225);}

					switch (alt225) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:39: ws
							{
							dbg.location(1005,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(225);}
					dbg.location(1005,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration5775); if (state.failed) return;dbg.location(1005,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:49: ( ws )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==COMMENT||LA226_0==NL||LA226_0==WS) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:49: ws
							{
							dbg.location(1005,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5777);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(226);}
					dbg.location(1005,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration5780);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1007,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1007,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration5802);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1007,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:39: ( ws )?
					int alt227=2;
					try { dbg.enterSubRule(227);
					try { dbg.enterDecision(227, decisionCanBacktrack[227]);

					int LA227_0 = input.LA(1);
					if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
						alt227=1;
					}
					} finally {dbg.exitDecision(227);}

					switch (alt227) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:39: ws
							{
							dbg.location(1007,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5804);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(227);}
					dbg.location(1007,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration5807); if (state.failed) return;dbg.location(1007,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:49: ( ws )?
					int alt228=2;
					try { dbg.enterSubRule(228);
					try { dbg.enterDecision(228, decisionCanBacktrack[228]);

					int LA228_0 = input.LA(1);
					if ( (LA228_0==COMMENT||LA228_0==NL||LA228_0==WS) ) {
						alt228=1;
					}
					} finally {dbg.exitDecision(228);}

					switch (alt228) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:49: ws
							{
							dbg.location(1007,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration5809);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(228);}
					dbg.location(1007,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration5812);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1007,72);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(231);

					loop231:
					while (true) {
						int alt231=3;
						try { dbg.enterDecision(231, decisionCanBacktrack[231]);

						try {
							isCyclicDecision = true;
							alt231 = dfa231.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(231);}

						switch (alt231) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1007,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1007,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:74: ( ws )?
							int alt229=2;
							try { dbg.enterSubRule(229);
							try { dbg.enterDecision(229, decisionCanBacktrack[229]);

							int LA229_0 = input.LA(1);
							if ( (LA229_0==COMMENT||LA229_0==NL||LA229_0==WS) ) {
								alt229=1;
							}
							} finally {dbg.exitDecision(229);}

							switch (alt229) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:74: ws
									{
									dbg.location(1007,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration5816);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(229);}
							dbg.location(1007,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration5819); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1007,94);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1007,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:95: ( ws )?
							int alt230=2;
							try { dbg.enterSubRule(230);
							try { dbg.enterDecision(230, decisionCanBacktrack[230]);

							int LA230_0 = input.LA(1);
							if ( (LA230_0==COMMENT||LA230_0==NL||LA230_0==WS) ) {
								alt230=1;
							}
							} finally {dbg.exitDecision(230);}

							switch (alt230) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:95: ws
									{
									dbg.location(1007,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration5825);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(230);}
							dbg.location(1007,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration5828); if (state.failed) return;
							}

							}
							break;

						default :
							break loop231;
						}
					}
					} finally {dbg.exitSubRule(231);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1008, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1011, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1012:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) )
			int alt233=2;
			try { dbg.enterDecision(233, decisionCanBacktrack[233]);

			int LA233_0 = input.LA(1);
			if ( (LA233_0==AT_IDENT||(LA233_0 >= BOTTOMCENTER_SYM && LA233_0 <= BOTTOMRIGHT_SYM)||LA233_0==CHARSET_SYM||LA233_0==COUNTER_STYLE_SYM||LA233_0==FONT_FACE_SYM||LA233_0==IMPORT_SYM||(LA233_0 >= LEFTBOTTOM_SYM && LA233_0 <= LEFTTOP_SYM)||LA233_0==MEDIA_SYM||LA233_0==MOZ_DOCUMENT_SYM||LA233_0==NAMESPACE_SYM||LA233_0==PAGE_SYM||(LA233_0 >= RIGHTBOTTOM_SYM && LA233_0 <= RIGHTTOP_SYM)||(LA233_0 >= SASS_AT_ROOT && LA233_0 <= SASS_DEBUG)||(LA233_0 >= SASS_EACH && LA233_0 <= SASS_EXTEND)||(LA233_0 >= SASS_FOR && LA233_0 <= SASS_FUNCTION)||(LA233_0 >= SASS_IF && LA233_0 <= SASS_MIXIN)||LA233_0==SASS_RETURN||(LA233_0 >= SASS_WARN && LA233_0 <= SASS_WHILE)||(LA233_0 >= TOPCENTER_SYM && LA233_0 <= TOPRIGHT_SYM)||LA233_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt233=1;
			}
			else if ( (LA233_0==SASS_VAR) ) {
				alt233=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 233, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(233);}

			switch (alt233) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1014:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1014,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1014,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_EXTEND)||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:9: {...}? ( SASS_VAR )
					{
					dbg.location(1016,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1016,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:27: ( SASS_VAR )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:29: SASS_VAR
					{
					dbg.location(1016,29);
					match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable6052); if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1017, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1020:1: cp_expression_list : cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1020, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1021:5: ( cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1022:5: cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1022,5);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list6076);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1023,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(236);

			loop236:
			while (true) {
				int alt236=2;
				try { dbg.enterDecision(236, decisionCanBacktrack[236]);

				int LA236_0 = input.LA(1);
				if ( (LA236_0==COMMENT||LA236_0==NL||LA236_0==WS) ) {
					int LA236_1 = input.LA(2);
					if ( (synpred38_Css3()) ) {
						alt236=1;
					}

				}
				else if ( (LA236_0==COMMA) ) {
					int LA236_32 = input.LA(2);
					if ( (synpred38_Css3()) ) {
						alt236=1;
					}

				}

				} finally {dbg.exitDecision(236);}

				switch (alt236) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1023,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:37: ( ws )?
					int alt234=2;
					try { dbg.enterSubRule(234);
					try { dbg.enterDecision(234, decisionCanBacktrack[234]);

					int LA234_0 = input.LA(1);
					if ( (LA234_0==COMMENT||LA234_0==NL||LA234_0==WS) ) {
						alt234=1;
					}
					} finally {dbg.exitDecision(234);}

					switch (alt234) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:37: ws
							{
							dbg.location(1023,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list6095);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(234);}
					dbg.location(1023,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list6098); if (state.failed) return;dbg.location(1023,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:47: ( ws )?
					int alt235=2;
					try { dbg.enterSubRule(235);
					try { dbg.enterDecision(235, decisionCanBacktrack[235]);

					int LA235_0 = input.LA(1);
					if ( (LA235_0==COMMENT||LA235_0==NL||LA235_0==WS) ) {
						alt235=1;
					}
					} finally {dbg.exitDecision(235);}

					switch (alt235) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:47: ws
							{
							dbg.location(1023,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list6100);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(235);}
					dbg.location(1023,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list6103);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop236;
				}
			}
			} finally {dbg.exitSubRule(236);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1024, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:1: cp_expression : cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ;
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1036, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1037:5: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:5: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
			{
			dbg.location(1038,5);
			pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6136);
			cp_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1039,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1039:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
			try { dbg.enterSubRule(240);

			loop240:
			while (true) {
				int alt240=3;
				try { dbg.enterDecision(240, decisionCanBacktrack[240]);

				try {
					isCyclicDecision = true;
					alt240 = dfa240.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(240);}

				switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
					{
					dbg.location(1040,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:39: ( ( ws )? cp_expression_operator ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:40: ( ws )? cp_expression_operator ( ws )?
					{
					dbg.location(1040,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:40: ( ws )?
					int alt237=2;
					try { dbg.enterSubRule(237);
					try { dbg.enterDecision(237, decisionCanBacktrack[237]);

					int LA237_0 = input.LA(1);
					if ( (LA237_0==COMMENT||LA237_0==NL||LA237_0==WS) ) {
						alt237=1;
					}
					} finally {dbg.exitDecision(237);}

					switch (alt237) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:40: ws
							{
							dbg.location(1040,40);
							pushFollow(FOLLOW_ws_in_cp_expression6160);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(237);}
					dbg.location(1040,44);
					pushFollow(FOLLOW_cp_expression_operator_in_cp_expression6163);
					cp_expression_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1040,67);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:67: ( ws )?
					int alt238=2;
					try { dbg.enterSubRule(238);
					try { dbg.enterDecision(238, decisionCanBacktrack[238]);

					int LA238_0 = input.LA(1);
					if ( (LA238_0==COMMENT||LA238_0==NL||LA238_0==WS) ) {
						alt238=1;
					}
					} finally {dbg.exitDecision(238);}

					switch (alt238) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:67: ws
							{
							dbg.location(1040,67);
							pushFollow(FOLLOW_ws_in_cp_expression6165);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(238);}

					}
					dbg.location(1040,72);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6169);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
					{
					dbg.location(1041,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:37: ( ws )?
					int alt239=2;
					try { dbg.enterSubRule(239);
					try { dbg.enterDecision(239, decisionCanBacktrack[239]);

					int LA239_0 = input.LA(1);
					if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
						alt239=1;
					}
					} finally {dbg.exitDecision(239);}

					switch (alt239) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:37: ws
							{
							dbg.location(1041,37);
							pushFollow(FOLLOW_ws_in_cp_expression6188);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(239);}
					dbg.location(1041,41);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6191);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop240;
				}
			}
			} finally {dbg.exitSubRule(240);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1043, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1045, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt241=8;
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA241_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt241=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt241=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 241, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt241=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt241=4;
				}
				break;
			case LESS:
				{
				alt241=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt241=6;
				}
				break;
			case GREATER:
				{
				alt241=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt241=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:5: key_or
					{
					dbg.location(1047,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator6219);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:14: key_and
					{
					dbg.location(1047,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator6223);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:25: CP_EQ
					{
					dbg.location(1047,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator6228); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:33: CP_NOT_EQ
					{
					dbg.location(1047,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator6232); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:45: LESS
					{
					dbg.location(1047,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator6236); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:52: LESS_OR_EQ
					{
					dbg.location(1047,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator6240); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:65: GREATER
					{
					dbg.location(1047,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator6244); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:75: GREATER_OR_EQ
					{
					dbg.location(1047,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6248); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1048, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1050:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1050, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1051:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1052,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:9: ( NOT ( ws )? )?
			int alt243=2;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( (LA243_0==NOT) ) {
				alt243=1;
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:10: NOT ( ws )?
					{
					dbg.location(1052,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom6274); if (state.failed) return;dbg.location(1052,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:14: ( ws )?
					int alt242=2;
					try { dbg.enterSubRule(242);
					try { dbg.enterDecision(242, decisionCanBacktrack[242]);

					int LA242_0 = input.LA(1);
					if ( (LA242_0==COMMENT||LA242_0==NL||LA242_0==WS) ) {
						alt242=1;
					}
					} finally {dbg.exitDecision(242);}

					switch (alt242) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:14: ws
							{
							dbg.location(1052,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6276);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(242);}

					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(1053,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt247=2;
			try { dbg.enterSubRule(247);
			try { dbg.enterDecision(247, decisionCanBacktrack[247]);

			int LA247_0 = input.LA(1);
			if ( (LA247_0==MINUS||LA247_0==PLUS) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==IDENT) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==NUMBER) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==PERCENTAGE) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==LENGTH) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==EMS) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==REM) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==EXS) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==ANGLE) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==TIME) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==FREQ) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==RESOLUTION) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==DIMENSION) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==STRING) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==TILDE) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==LESS_JS_STRING) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==GEN) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==URI) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==HASH) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==AT_IDENT||(LA247_0 >= BOTTOMCENTER_SYM && LA247_0 <= BOTTOMRIGHT_SYM)||LA247_0==CHARSET_SYM||LA247_0==COUNTER_STYLE_SYM||LA247_0==FONT_FACE_SYM||LA247_0==IMPORT_SYM||(LA247_0 >= LEFTBOTTOM_SYM && LA247_0 <= LEFTTOP_SYM)||LA247_0==MEDIA_SYM||LA247_0==MOZ_DOCUMENT_SYM||LA247_0==NAMESPACE_SYM||LA247_0==PAGE_SYM||(LA247_0 >= RIGHTBOTTOM_SYM && LA247_0 <= RIGHTTOP_SYM)||(LA247_0 >= SASS_AT_ROOT && LA247_0 <= SASS_DEBUG)||(LA247_0 >= SASS_EACH && LA247_0 <= SASS_EXTEND)||(LA247_0 >= SASS_FOR && LA247_0 <= SASS_FUNCTION)||(LA247_0 >= SASS_IF && LA247_0 <= SASS_MIXIN)||LA247_0==SASS_RETURN||(LA247_0 >= SASS_WARN && LA247_0 <= SASS_WHILE)||(LA247_0 >= TOPCENTER_SYM && LA247_0 <= TOPRIGHT_SYM)||LA247_0==WEBKIT_KEYFRAMES_SYM) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==SASS_VAR) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==HASH_SYMBOL) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==PERCENTAGE_SYMBOL) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==IMPORTANT_SYM) && (synpred41_Css3())) {
				alt247=1;
			}
			else if ( (LA247_0==LPAREN) ) {
				int LA247_25 = input.LA(2);
				if ( (synpred41_Css3()) ) {
					alt247=1;
				}
				else if ( (true) ) {
					alt247=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 247, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(247);}

			switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1054,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom6307);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1055,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom6323); if (state.failed) return;dbg.location(1055,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:22: ( ws )?
					int alt244=2;
					try { dbg.enterSubRule(244);
					try { dbg.enterDecision(244, decisionCanBacktrack[244]);

					int LA244_0 = input.LA(1);
					if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
						alt244=1;
					}
					} finally {dbg.exitDecision(244);}

					switch (alt244) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:22: ws
							{
							dbg.location(1055,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6325);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(244);}
					dbg.location(1055,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:26: ( cp_expression_list ( ws )? )?
					int alt246=2;
					try { dbg.enterSubRule(246);
					try { dbg.enterDecision(246, decisionCanBacktrack[246]);

					int LA246_0 = input.LA(1);
					if ( ((LA246_0 >= ANGLE && LA246_0 <= AT_IDENT)||(LA246_0 >= BOTTOMCENTER_SYM && LA246_0 <= BOTTOMRIGHT_SYM)||LA246_0==CHARSET_SYM||LA246_0==COUNTER_STYLE_SYM||LA246_0==DIMENSION||LA246_0==EMS||LA246_0==EXS||(LA246_0 >= FONT_FACE_SYM && LA246_0 <= FREQ)||LA246_0==GEN||(LA246_0 >= HASH && LA246_0 <= HASH_SYMBOL)||(LA246_0 >= IDENT && LA246_0 <= IMPORT_SYM)||(LA246_0 >= LEFTBOTTOM_SYM && LA246_0 <= LENGTH)||LA246_0==LESS_JS_STRING||LA246_0==LPAREN||(LA246_0 >= MEDIA_SYM && LA246_0 <= MOZ_DOCUMENT_SYM)||LA246_0==NAMESPACE_SYM||(LA246_0 >= NOT && LA246_0 <= NUMBER)||(LA246_0 >= PAGE_SYM && LA246_0 <= PERCENTAGE_SYMBOL)||LA246_0==PLUS||(LA246_0 >= REM && LA246_0 <= RIGHTTOP_SYM)||(LA246_0 >= SASS_AT_ROOT && LA246_0 <= SASS_DEBUG)||(LA246_0 >= SASS_EACH && LA246_0 <= SASS_EXTEND)||(LA246_0 >= SASS_FOR && LA246_0 <= SASS_FUNCTION)||(LA246_0 >= SASS_IF && LA246_0 <= SASS_MIXIN)||(LA246_0 >= SASS_RETURN && LA246_0 <= SASS_WHILE)||LA246_0==STRING||(LA246_0 >= TILDE && LA246_0 <= TOPRIGHT_SYM)||LA246_0==URI||LA246_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt246=1;
					}
					} finally {dbg.exitDecision(246);}

					switch (alt246) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:27: cp_expression_list ( ws )?
							{
							dbg.location(1055,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom6329);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1055,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:46: ( ws )?
							int alt245=2;
							try { dbg.enterSubRule(245);
							try { dbg.enterDecision(245, decisionCanBacktrack[245]);

							int LA245_0 = input.LA(1);
							if ( (LA245_0==COMMENT||LA245_0==NL||LA245_0==WS) ) {
								alt245=1;
							}
							} finally {dbg.exitDecision(245);}

							switch (alt245) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:46: ws
									{
									dbg.location(1055,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom6331);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(245);}

							}
							break;

					}
					} finally {dbg.exitSubRule(246);}
					dbg.location(1055,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom6336); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(247);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1057, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1060, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1062,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6368);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1063,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(248);

			loop248:
			while (true) {
				int alt248=2;
				try { dbg.enterDecision(248, decisionCanBacktrack[248]);

				int LA248_0 = input.LA(1);
				if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
					alt248=1;
				}

				} finally {dbg.exitDecision(248);}

				switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:6: ws cp_math_expression
					{
					dbg.location(1063,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions6375);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1063,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6377);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop248;
				}
			}
			} finally {dbg.exitSubRule(248);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1064, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1078, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1079,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6411);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1080,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1080:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(251);

			loop251:
			while (true) {
				int alt251=2;
				try { dbg.enterDecision(251, decisionCanBacktrack[251]);

				try {
					isCyclicDecision = true;
					alt251 = dfa251.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(251);}

				switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1081,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:48: ( ws )?
					int alt249=2;
					try { dbg.enterSubRule(249);
					try { dbg.enterDecision(249, decisionCanBacktrack[249]);

					int LA249_0 = input.LA(1);
					if ( (LA249_0==COMMENT||LA249_0==NL||LA249_0==WS) ) {
						alt249=1;
					}
					} finally {dbg.exitDecision(249);}

					switch (alt249) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:48: ws
							{
							dbg.location(1081,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression6453);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(249);}
					dbg.location(1081,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1081,78);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:78: ( ws )?
					int alt250=2;
					try { dbg.enterSubRule(250);
					try { dbg.enterDecision(250, decisionCanBacktrack[250]);

					int LA250_0 = input.LA(1);
					if ( (LA250_0==COMMENT||LA250_0==NL||LA250_0==WS) ) {
						alt250=1;
					}
					} finally {dbg.exitDecision(250);}

					switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:78: ws
							{
							dbg.location(1081,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression6466);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(250);}
					dbg.location(1081,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6469);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop251;
				}
			}
			} finally {dbg.exitSubRule(251);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1083, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1085, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt256=3;
			try { dbg.enterDecision(256, decisionCanBacktrack[256]);

			try {
				isCyclicDecision = true;
				alt256 = dfa256.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(256);}

			switch (alt256) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:5: term
					{
					dbg.location(1087,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom6502);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1088:7: IMPORTANT_SYM
					{
					dbg.location(1088,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6510); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1089,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:7: ( unaryOperator ( ws )? )?
					int alt253=2;
					try { dbg.enterSubRule(253);
					try { dbg.enterDecision(253, decisionCanBacktrack[253]);

					int LA253_0 = input.LA(1);
					if ( (LA253_0==MINUS||LA253_0==PLUS) ) {
						alt253=1;
					}
					} finally {dbg.exitDecision(253);}

					switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:9: unaryOperator ( ws )?
							{
							dbg.location(1089,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom6521);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1089,23);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:23: ( ws )?
							int alt252=2;
							try { dbg.enterSubRule(252);
							try { dbg.enterDecision(252, decisionCanBacktrack[252]);

							int LA252_0 = input.LA(1);
							if ( (LA252_0==COMMENT||LA252_0==NL||LA252_0==WS) ) {
								alt252=1;
							}
							} finally {dbg.exitDecision(252);}

							switch (alt252) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:23: ws
									{
									dbg.location(1089,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom6523);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(252);}

							}
							break;

					}
					} finally {dbg.exitSubRule(253);}
					dbg.location(1089,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom6529); if (state.failed) return;dbg.location(1089,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:37: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:37: ws
							{
							dbg.location(1089,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6531);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(1089,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom6534);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1089,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:60: ( ws )?
					int alt255=2;
					try { dbg.enterSubRule(255);
					try { dbg.enterDecision(255, decisionCanBacktrack[255]);

					int LA255_0 = input.LA(1);
					if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
						alt255=1;
					}
					} finally {dbg.exitDecision(255);}

					switch (alt255) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:60: ws
							{
							dbg.location(1089,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6536);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(255);}
					dbg.location(1089,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom6539); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1090, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:1: cp_mixin_declaration : ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1098, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:5: ( ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1100:5: ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1100,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1100:5: ({...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt266=2;
			try { dbg.enterSubRule(266);
			try { dbg.enterDecision(266, decisionCanBacktrack[266]);

			int LA266_0 = input.LA(1);
			if ( (LA266_0==DOT) ) {
				alt266=1;
			}
			else if ( (LA266_0==SASS_MIXIN) ) {
				alt266=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 266, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(266);}

			switch (alt266) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:9: {...}? DOT cp_mixin_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1101,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1101,27);
					match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration6578); if (state.failed) return;dbg.location(1101,31);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration6580);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1101,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:45: ( ws )?
					int alt257=2;
					try { dbg.enterSubRule(257);
					try { dbg.enterDecision(257, decisionCanBacktrack[257]);

					int LA257_0 = input.LA(1);
					if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {
						alt257=1;
					}
					} finally {dbg.exitDecision(257);}

					switch (alt257) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:45: ws
							{
							dbg.location(1101,45);
							pushFollow(FOLLOW_ws_in_cp_mixin_declaration6582);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(257);}
					dbg.location(1101,49);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration6585); if (state.failed) return;dbg.location(1101,56);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:56: ( ws )?
					int alt258=2;
					try { dbg.enterSubRule(258);
					try { dbg.enterDecision(258, decisionCanBacktrack[258]);

					int LA258_0 = input.LA(1);
					if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
						alt258=1;
					}
					} finally {dbg.exitDecision(258);}

					switch (alt258) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:56: ws
							{
							dbg.location(1101,56);
							pushFollow(FOLLOW_ws_in_cp_mixin_declaration6587);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(258);}
					dbg.location(1101,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:60: ( cp_args_list )?
					int alt259=2;
					try { dbg.enterSubRule(259);
					try { dbg.enterDecision(259, decisionCanBacktrack[259]);

					int LA259_0 = input.LA(1);
					if ( (LA259_0==AT_IDENT||(LA259_0 >= BOTTOMCENTER_SYM && LA259_0 <= BOTTOMRIGHT_SYM)||LA259_0==CHARSET_SYM||(LA259_0 >= COUNTER_STYLE_SYM && LA259_0 <= CP_DOTS)||LA259_0==FONT_FACE_SYM||LA259_0==IMPORT_SYM||(LA259_0 >= LEFTBOTTOM_SYM && LA259_0 <= LEFTTOP_SYM)||LA259_0==LESS_REST||LA259_0==MEDIA_SYM||LA259_0==MOZ_DOCUMENT_SYM||LA259_0==NAMESPACE_SYM||LA259_0==PAGE_SYM||(LA259_0 >= RIGHTBOTTOM_SYM && LA259_0 <= RIGHTTOP_SYM)||(LA259_0 >= SASS_AT_ROOT && LA259_0 <= SASS_DEBUG)||(LA259_0 >= SASS_EACH && LA259_0 <= SASS_EXTEND)||(LA259_0 >= SASS_FOR && LA259_0 <= SASS_FUNCTION)||(LA259_0 >= SASS_IF && LA259_0 <= SASS_MIXIN)||(LA259_0 >= SASS_RETURN && LA259_0 <= SASS_WHILE)||(LA259_0 >= TOPCENTER_SYM && LA259_0 <= TOPRIGHT_SYM)||LA259_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt259=1;
					}
					} finally {dbg.exitDecision(259);}

					switch (alt259) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:60: cp_args_list
							{
							dbg.location(1101,60);
							pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration6590);
							cp_args_list();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(259);}
					dbg.location(1101,74);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration6593); if (state.failed) return;dbg.location(1101,81);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:81: ( ( ws )? less_mixin_guarded )?
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					try {
						isCyclicDecision = true;
						alt261 = dfa261.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:82: ( ws )? less_mixin_guarded
							{
							dbg.location(1101,82);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:82: ( ws )?
							int alt260=2;
							try { dbg.enterSubRule(260);
							try { dbg.enterDecision(260, decisionCanBacktrack[260]);

							int LA260_0 = input.LA(1);
							if ( (LA260_0==COMMENT||LA260_0==NL||LA260_0==WS) ) {
								alt260=1;
							}
							} finally {dbg.exitDecision(260);}

							switch (alt260) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:82: ws
									{
									dbg.location(1101,82);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6596);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(260);}
							dbg.location(1101,86);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration6599);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(261);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1103,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1103,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration6623); if (state.failed) return;dbg.location(1103,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration6625);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1103,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration6627);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1103,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt265=2;
					try { dbg.enterSubRule(265);
					try { dbg.enterDecision(265, decisionCanBacktrack[265]);

					try {
						isCyclicDecision = true;
						alt265 = dfa265.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(265);}

					switch (alt265) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1103,56);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:56: ( ws )?
							int alt262=2;
							try { dbg.enterSubRule(262);
							try { dbg.enterDecision(262, decisionCanBacktrack[262]);

							int LA262_0 = input.LA(1);
							if ( (LA262_0==COMMENT||LA262_0==NL||LA262_0==WS) ) {
								alt262=1;
							}
							} finally {dbg.exitDecision(262);}

							switch (alt262) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:56: ws
									{
									dbg.location(1103,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6630);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(262);}
							dbg.location(1103,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration6633); if (state.failed) return;dbg.location(1103,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:67: ( ws )?
							int alt263=2;
							try { dbg.enterSubRule(263);
							try { dbg.enterDecision(263, decisionCanBacktrack[263]);

							int LA263_0 = input.LA(1);
							if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
								alt263=1;
							}
							} finally {dbg.exitDecision(263);}

							switch (alt263) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:67: ws
									{
									dbg.location(1103,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6635);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(263);}
							dbg.location(1103,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:71: ( cp_args_list )?
							int alt264=2;
							try { dbg.enterSubRule(264);
							try { dbg.enterDecision(264, decisionCanBacktrack[264]);

							int LA264_0 = input.LA(1);
							if ( (LA264_0==AT_IDENT||(LA264_0 >= BOTTOMCENTER_SYM && LA264_0 <= BOTTOMRIGHT_SYM)||LA264_0==CHARSET_SYM||(LA264_0 >= COUNTER_STYLE_SYM && LA264_0 <= CP_DOTS)||LA264_0==FONT_FACE_SYM||LA264_0==IMPORT_SYM||(LA264_0 >= LEFTBOTTOM_SYM && LA264_0 <= LEFTTOP_SYM)||LA264_0==LESS_REST||LA264_0==MEDIA_SYM||LA264_0==MOZ_DOCUMENT_SYM||LA264_0==NAMESPACE_SYM||LA264_0==PAGE_SYM||(LA264_0 >= RIGHTBOTTOM_SYM && LA264_0 <= RIGHTTOP_SYM)||(LA264_0 >= SASS_AT_ROOT && LA264_0 <= SASS_DEBUG)||(LA264_0 >= SASS_EACH && LA264_0 <= SASS_EXTEND)||(LA264_0 >= SASS_FOR && LA264_0 <= SASS_FUNCTION)||(LA264_0 >= SASS_IF && LA264_0 <= SASS_MIXIN)||(LA264_0 >= SASS_RETURN && LA264_0 <= SASS_WHILE)||(LA264_0 >= TOPCENTER_SYM && LA264_0 <= TOPRIGHT_SYM)||LA264_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt264=1;
							}
							} finally {dbg.exitDecision(264);}

							switch (alt264) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:71: cp_args_list
									{
									dbg.location(1103,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration6638);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(264);}
							dbg.location(1103,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration6641); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(265);}

					}
					break;

			}
			} finally {dbg.exitSubRule(266);}
			dbg.location(1105,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:5: ( ws )?
			int alt267=2;
			try { dbg.enterSubRule(267);
			try { dbg.enterDecision(267, decisionCanBacktrack[267]);

			int LA267_0 = input.LA(1);
			if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
				alt267=1;
			}
			} finally {dbg.exitDecision(267);}

			switch (alt267) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:5: ws
					{
					dbg.location(1105,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration6655);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(267);}
			dbg.location(1105,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration6658);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1106, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:1: cp_mixin_call : ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1110, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1111:5: ( ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:5: ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1112,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:5: ({...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt278=2;
			try { dbg.enterSubRule(278);
			try { dbg.enterDecision(278, decisionCanBacktrack[278]);

			int LA278_0 = input.LA(1);
			if ( (LA278_0==DOT) ) {
				alt278=1;
			}
			else if ( (LA278_0==SASS_INCLUDE) ) {
				alt278=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 278, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(278);}

			switch (alt278) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:9: {...}? DOT cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					{
					dbg.location(1113,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1113,27);
					match(input,DOT,FOLLOW_DOT_in_cp_mixin_call6693); if (state.failed) return;dbg.location(1113,31);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call6695);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1113,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:45: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt271=2;
					try { dbg.enterSubRule(271);
					try { dbg.enterDecision(271, decisionCanBacktrack[271]);

					try {
						isCyclicDecision = true;
						alt271 = dfa271.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(271);}

					switch (alt271) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:46: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1113,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:46: ( ws )?
							int alt268=2;
							try { dbg.enterSubRule(268);
							try { dbg.enterDecision(268, decisionCanBacktrack[268]);

							int LA268_0 = input.LA(1);
							if ( (LA268_0==COMMENT||LA268_0==NL||LA268_0==WS) ) {
								alt268=1;
							}
							} finally {dbg.exitDecision(268);}

							switch (alt268) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:46: ws
									{
									dbg.location(1113,46);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6698);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(268);}
							dbg.location(1113,50);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call6701); if (state.failed) return;dbg.location(1113,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:57: ( ws )?
							int alt269=2;
							try { dbg.enterSubRule(269);
							try { dbg.enterDecision(269, decisionCanBacktrack[269]);

							int LA269_0 = input.LA(1);
							if ( (LA269_0==COMMENT||LA269_0==NL||LA269_0==WS) ) {
								alt269=1;
							}
							} finally {dbg.exitDecision(269);}

							switch (alt269) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:57: ws
									{
									dbg.location(1113,57);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6703);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(269);}
							dbg.location(1113,61);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:61: ( cp_mixin_call_args )?
							int alt270=2;
							try { dbg.enterSubRule(270);
							try { dbg.enterDecision(270, decisionCanBacktrack[270]);

							int LA270_0 = input.LA(1);
							if ( ((LA270_0 >= ANGLE && LA270_0 <= AT_IDENT)||(LA270_0 >= BOTTOMCENTER_SYM && LA270_0 <= BOTTOMRIGHT_SYM)||LA270_0==CHARSET_SYM||LA270_0==COUNTER_STYLE_SYM||LA270_0==DIMENSION||LA270_0==EMS||LA270_0==EXS||(LA270_0 >= FONT_FACE_SYM && LA270_0 <= FREQ)||LA270_0==GEN||(LA270_0 >= HASH && LA270_0 <= HASH_SYMBOL)||(LA270_0 >= IDENT && LA270_0 <= IMPORT_SYM)||(LA270_0 >= LEFTBOTTOM_SYM && LA270_0 <= LENGTH)||LA270_0==LESS_JS_STRING||LA270_0==LPAREN||(LA270_0 >= MEDIA_SYM && LA270_0 <= MOZ_DOCUMENT_SYM)||LA270_0==NAMESPACE_SYM||(LA270_0 >= NOT && LA270_0 <= NUMBER)||(LA270_0 >= PAGE_SYM && LA270_0 <= PERCENTAGE_SYMBOL)||LA270_0==PLUS||(LA270_0 >= REM && LA270_0 <= RIGHTTOP_SYM)||(LA270_0 >= SASS_AT_ROOT && LA270_0 <= SASS_DEBUG)||(LA270_0 >= SASS_EACH && LA270_0 <= SASS_EXTEND)||(LA270_0 >= SASS_FOR && LA270_0 <= SASS_FUNCTION)||(LA270_0 >= SASS_IF && LA270_0 <= SASS_MIXIN)||(LA270_0 >= SASS_RETURN && LA270_0 <= SASS_WHILE)||LA270_0==STRING||(LA270_0 >= TILDE && LA270_0 <= TOPRIGHT_SYM)||LA270_0==URI||LA270_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt270=1;
							}
							} finally {dbg.exitDecision(270);}

							switch (alt270) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:61: cp_mixin_call_args
									{
									dbg.location(1113,61);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call6706);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(270);}
							dbg.location(1113,81);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call6709); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(271);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1115,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1115,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call6733); if (state.failed) return;dbg.location(1115,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call6735);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1115,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call6737);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1115,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt275=2;
					try { dbg.enterSubRule(275);
					try { dbg.enterDecision(275, decisionCanBacktrack[275]);

					try {
						isCyclicDecision = true;
						alt275 = dfa275.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(275);}

					switch (alt275) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1115,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:58: ( ws )?
							int alt272=2;
							try { dbg.enterSubRule(272);
							try { dbg.enterDecision(272, decisionCanBacktrack[272]);

							int LA272_0 = input.LA(1);
							if ( (LA272_0==COMMENT||LA272_0==NL||LA272_0==WS) ) {
								alt272=1;
							}
							} finally {dbg.exitDecision(272);}

							switch (alt272) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:58: ws
									{
									dbg.location(1115,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6740);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(272);}
							dbg.location(1115,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call6743); if (state.failed) return;dbg.location(1115,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:69: ( ws )?
							int alt273=2;
							try { dbg.enterSubRule(273);
							try { dbg.enterDecision(273, decisionCanBacktrack[273]);

							int LA273_0 = input.LA(1);
							if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
								alt273=1;
							}
							} finally {dbg.exitDecision(273);}

							switch (alt273) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:69: ws
									{
									dbg.location(1115,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6745);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(273);}
							dbg.location(1115,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:73: ( cp_mixin_call_args )?
							int alt274=2;
							try { dbg.enterSubRule(274);
							try { dbg.enterDecision(274, decisionCanBacktrack[274]);

							int LA274_0 = input.LA(1);
							if ( ((LA274_0 >= ANGLE && LA274_0 <= AT_IDENT)||(LA274_0 >= BOTTOMCENTER_SYM && LA274_0 <= BOTTOMRIGHT_SYM)||LA274_0==CHARSET_SYM||LA274_0==COUNTER_STYLE_SYM||LA274_0==DIMENSION||LA274_0==EMS||LA274_0==EXS||(LA274_0 >= FONT_FACE_SYM && LA274_0 <= FREQ)||LA274_0==GEN||(LA274_0 >= HASH && LA274_0 <= HASH_SYMBOL)||(LA274_0 >= IDENT && LA274_0 <= IMPORT_SYM)||(LA274_0 >= LEFTBOTTOM_SYM && LA274_0 <= LENGTH)||LA274_0==LESS_JS_STRING||LA274_0==LPAREN||(LA274_0 >= MEDIA_SYM && LA274_0 <= MOZ_DOCUMENT_SYM)||LA274_0==NAMESPACE_SYM||(LA274_0 >= NOT && LA274_0 <= NUMBER)||(LA274_0 >= PAGE_SYM && LA274_0 <= PERCENTAGE_SYMBOL)||LA274_0==PLUS||(LA274_0 >= REM && LA274_0 <= RIGHTTOP_SYM)||(LA274_0 >= SASS_AT_ROOT && LA274_0 <= SASS_DEBUG)||(LA274_0 >= SASS_EACH && LA274_0 <= SASS_EXTEND)||(LA274_0 >= SASS_FOR && LA274_0 <= SASS_FUNCTION)||(LA274_0 >= SASS_IF && LA274_0 <= SASS_MIXIN)||(LA274_0 >= SASS_RETURN && LA274_0 <= SASS_WHILE)||LA274_0==STRING||(LA274_0 >= TILDE && LA274_0 <= TOPRIGHT_SYM)||LA274_0==URI||LA274_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt274=1;
							}
							} finally {dbg.exitDecision(274);}

							switch (alt274) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:73: cp_mixin_call_args
									{
									dbg.location(1115,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call6748);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(274);}
							dbg.location(1115,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call6751); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(275);}
					dbg.location(1115,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:102: ( ( ws )? cp_mixin_block )?
					int alt277=2;
					try { dbg.enterSubRule(277);
					try { dbg.enterDecision(277, decisionCanBacktrack[277]);

					try {
						isCyclicDecision = true;
						alt277 = dfa277.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(277);}

					switch (alt277) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:103: ( ws )? cp_mixin_block
							{
							dbg.location(1115,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:103: ( ws )?
							int alt276=2;
							try { dbg.enterSubRule(276);
							try { dbg.enterDecision(276, decisionCanBacktrack[276]);

							int LA276_0 = input.LA(1);
							if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
								alt276=1;
							}
							} finally {dbg.exitDecision(276);}

							switch (alt276) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:103: ws
									{
									dbg.location(1115,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call6756);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(276);}
							dbg.location(1115,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call6759);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(277);}

					}
					break;

			}
			} finally {dbg.exitSubRule(278);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1117, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1119, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:5: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:5: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1121,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block6788); if (state.failed) return;dbg.location(1121,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:12: ( ws )?
			int alt279=2;
			try { dbg.enterSubRule(279);
			try { dbg.enterDecision(279, decisionCanBacktrack[279]);

			int LA279_0 = input.LA(1);
			if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
				alt279=1;
			}
			} finally {dbg.exitDecision(279);}

			switch (alt279) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:12: ws
					{
					dbg.location(1121,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block6790);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(279);}
			dbg.location(1121,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block6793);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1122,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:9: ( declarations )?
			int alt280=2;
			try { dbg.enterSubRule(280);
			try { dbg.enterDecision(280, decisionCanBacktrack[280]);

			int LA280_0 = input.LA(1);
			if ( ((LA280_0 >= AT_IDENT && LA280_0 <= AT_SIGN)||(LA280_0 >= BOTTOMCENTER_SYM && LA280_0 <= BOTTOMRIGHT_SYM)||(LA280_0 >= CHARSET_SYM && LA280_0 <= COMMA)||LA280_0==COUNTER_STYLE_SYM||LA280_0==DCOLON||LA280_0==DOT||LA280_0==FONT_FACE_SYM||(LA280_0 >= GEN && LA280_0 <= GREATER)||(LA280_0 >= HASH && LA280_0 <= HASH_SYMBOL)||LA280_0==IDENT||LA280_0==IMPORT_SYM||(LA280_0 >= LBRACKET && LA280_0 <= LEFTTOP_SYM)||LA280_0==LESS_AND||(LA280_0 >= MEDIA_SYM && LA280_0 <= MOZ_DOCUMENT_SYM)||LA280_0==NAMESPACE_SYM||LA280_0==PAGE_SYM||(LA280_0 >= PIPE && LA280_0 <= PLUS)||LA280_0==RBRACKET||(LA280_0 >= RIGHTBOTTOM_SYM && LA280_0 <= RIGHTTOP_SYM)||(LA280_0 >= SASS_AT_ROOT && LA280_0 <= SASS_DEBUG)||(LA280_0 >= SASS_EACH && LA280_0 <= SASS_FUNCTION)||(LA280_0 >= SASS_IF && LA280_0 <= SASS_MIXIN)||(LA280_0 >= SASS_RETURN && LA280_0 <= SEMI)||LA280_0==STAR||LA280_0==TILDE||(LA280_0 >= TOPCENTER_SYM && LA280_0 <= TOPRIGHT_SYM)||LA280_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt280=1;
			}
			} finally {dbg.exitDecision(280);}

			switch (alt280) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:9: declarations
					{
					dbg.location(1122,9);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block6803);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(280);}
			dbg.location(1123,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block6810); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1124, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1126:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1126, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:5: IDENT
			{
			dbg.location(1128,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name6831); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1129, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1131, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )?
			{
			dbg.location(1135,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6862);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1135,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(282);

			loop282:
			while (true) {
				int alt282=2;
				try { dbg.enterDecision(282, decisionCanBacktrack[282]);

				int LA282_0 = input.LA(1);
				if ( (LA282_0==COMMA||LA282_0==SEMI) ) {
					alt282=1;
				}

				} finally {dbg.exitDecision(282);}

				switch (alt282) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1135,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1135,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:40: ( ws )?
					int alt281=2;
					try { dbg.enterSubRule(281);
					try { dbg.enterDecision(281, decisionCanBacktrack[281]);

					int LA281_0 = input.LA(1);
					if ( (LA281_0==COMMENT||LA281_0==NL||LA281_0==WS) ) {
						alt281=1;
					}
					} finally {dbg.exitDecision(281);}

					switch (alt281) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:40: ws
							{
							dbg.location(1135,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args6874);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(281);}
					dbg.location(1135,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6877);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop282;
				}
			}
			} finally {dbg.exitSubRule(282);}
			dbg.location(1135,65);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:65: ( CP_DOTS ( ws )? )?
			int alt284=2;
			try { dbg.enterSubRule(284);
			try { dbg.enterDecision(284, decisionCanBacktrack[284]);

			int LA284_0 = input.LA(1);
			if ( (LA284_0==CP_DOTS) ) {
				alt284=1;
			}
			} finally {dbg.exitDecision(284);}

			switch (alt284) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:66: CP_DOTS ( ws )?
					{
					dbg.location(1135,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args6883); if (state.failed) return;dbg.location(1135,74);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:74: ( ws )?
					int alt283=2;
					try { dbg.enterSubRule(283);
					try { dbg.enterDecision(283, decisionCanBacktrack[283]);

					int LA283_0 = input.LA(1);
					if ( (LA283_0==COMMENT||LA283_0==NL||LA283_0==WS) ) {
						alt283=1;
					}
					} finally {dbg.exitDecision(283);}

					switch (alt283) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:74: ws
							{
							dbg.location(1135,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args6885);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(283);}

					}
					break;

			}
			} finally {dbg.exitSubRule(284);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1136, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1138:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1138, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1140,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt287=2;
			try { dbg.enterSubRule(287);
			try { dbg.enterDecision(287, decisionCanBacktrack[287]);

			try {
				isCyclicDecision = true;
				alt287 = dfa287.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(287);}

			switch (alt287) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1141,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg6919);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1141,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:21: ( ws )?
					int alt285=2;
					try { dbg.enterSubRule(285);
					try { dbg.enterDecision(285, decisionCanBacktrack[285]);

					int LA285_0 = input.LA(1);
					if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
						alt285=1;
					}
					} finally {dbg.exitDecision(285);}

					switch (alt285) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:21: ws
							{
							dbg.location(1141,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6921);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(285);}
					dbg.location(1141,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg6924); if (state.failed) return;dbg.location(1141,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:31: ( ws )?
					int alt286=2;
					try { dbg.enterSubRule(286);
					try { dbg.enterDecision(286, decisionCanBacktrack[286]);

					int LA286_0 = input.LA(1);
					if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
						alt286=1;
					}
					} finally {dbg.exitDecision(286);}

					switch (alt286) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:31: ws
							{
							dbg.location(1141,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6926);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(286);}
					dbg.location(1141,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg6929);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:11: cp_expression
					{
					dbg.location(1142,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg6941);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(287);}
			dbg.location(1143,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:7: ( ws )?
			int alt288=2;
			try { dbg.enterSubRule(288);
			try { dbg.enterDecision(288, decisionCanBacktrack[288]);

			int LA288_0 = input.LA(1);
			if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
				alt288=1;
			}
			} finally {dbg.exitDecision(288);}

			switch (alt288) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:7: ws
					{
					dbg.location(1143,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg6949);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(288);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1144, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1147, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt296=2;
			try { dbg.enterDecision(296, decisionCanBacktrack[296]);

			int LA296_0 = input.LA(1);
			if ( (LA296_0==AT_IDENT||(LA296_0 >= BOTTOMCENTER_SYM && LA296_0 <= BOTTOMRIGHT_SYM)||LA296_0==CHARSET_SYM||LA296_0==COUNTER_STYLE_SYM||LA296_0==FONT_FACE_SYM||LA296_0==IMPORT_SYM||(LA296_0 >= LEFTBOTTOM_SYM && LA296_0 <= LEFTTOP_SYM)||LA296_0==MEDIA_SYM||LA296_0==MOZ_DOCUMENT_SYM||LA296_0==NAMESPACE_SYM||LA296_0==PAGE_SYM||(LA296_0 >= RIGHTBOTTOM_SYM && LA296_0 <= RIGHTTOP_SYM)||(LA296_0 >= SASS_AT_ROOT && LA296_0 <= SASS_DEBUG)||(LA296_0 >= SASS_EACH && LA296_0 <= SASS_EXTEND)||(LA296_0 >= SASS_FOR && LA296_0 <= SASS_FUNCTION)||(LA296_0 >= SASS_IF && LA296_0 <= SASS_MIXIN)||(LA296_0 >= SASS_RETURN && LA296_0 <= SASS_WHILE)||(LA296_0 >= TOPCENTER_SYM && LA296_0 <= TOPRIGHT_SYM)||LA296_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt296=1;
			}
			else if ( (LA296_0==CP_DOTS||LA296_0==LESS_REST) ) {
				alt296=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 296, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(296);}

			switch (alt296) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1155,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1155,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list6996);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1155,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(290);

					loop290:
					while (true) {
						int alt290=2;
						try { dbg.enterDecision(290, decisionCanBacktrack[290]);

						try {
							isCyclicDecision = true;
							alt290 = dfa290.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(290);}

						switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1155,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1155,33);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:33: ( ws )?
							int alt289=2;
							try { dbg.enterSubRule(289);
							try { dbg.enterDecision(289, decisionCanBacktrack[289]);

							int LA289_0 = input.LA(1);
							if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
								alt289=1;
							}
							} finally {dbg.exitDecision(289);}

							switch (alt289) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:33: ws
									{
									dbg.location(1155,33);
									pushFollow(FOLLOW_ws_in_cp_args_list7010);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(289);}
							dbg.location(1155,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list7013);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop290;
						}
					}
					} finally {dbg.exitSubRule(290);}
					dbg.location(1155,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt292=2;
					try { dbg.enterSubRule(292);
					try { dbg.enterDecision(292, decisionCanBacktrack[292]);

					int LA292_0 = input.LA(1);
					if ( (LA292_0==COMMA||LA292_0==SEMI) ) {
						alt292=1;
					}
					} finally {dbg.exitDecision(292);}

					switch (alt292) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1155,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1155,64);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:64: ( ws )?
							int alt291=2;
							try { dbg.enterSubRule(291);
							try { dbg.enterDecision(291, decisionCanBacktrack[291]);

							int LA291_0 = input.LA(1);
							if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {
								alt291=1;
							}
							} finally {dbg.exitDecision(291);}

							switch (alt291) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:64: ws
									{
									dbg.location(1155,64);
									pushFollow(FOLLOW_ws_in_cp_args_list7028);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(291);}

							}
							break;

					}
					} finally {dbg.exitSubRule(292);}
					dbg.location(1155,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					int LA294_0 = input.LA(1);
					if ( (LA294_0==CP_DOTS||LA294_0==LESS_REST) ) {
						alt294=1;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1155,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1155,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:95: ( ws )?
							int alt293=2;
							try { dbg.enterSubRule(293);
							try { dbg.enterDecision(293, decisionCanBacktrack[293]);

							int LA293_0 = input.LA(1);
							if ( (LA293_0==COMMENT||LA293_0==NL||LA293_0==WS) ) {
								alt293=1;
							}
							} finally {dbg.exitDecision(293);}

							switch (alt293) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:95: ws
									{
									dbg.location(1155,95);
									pushFollow(FOLLOW_ws_in_cp_args_list7044);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(293);}

							}
							break;

					}
					} finally {dbg.exitSubRule(294);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1157,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1157,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:27: ( ws )?
					int alt295=2;
					try { dbg.enterSubRule(295);
					try { dbg.enterDecision(295, decisionCanBacktrack[295]);

					int LA295_0 = input.LA(1);
					if ( (LA295_0==COMMENT||LA295_0==NL||LA295_0==WS) ) {
						alt295=1;
					}
					} finally {dbg.exitDecision(295);}

					switch (alt295) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:27: ws
							{
							dbg.location(1157,27);
							pushFollow(FOLLOW_ws_in_cp_args_list7069);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(295);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1158, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:1: cp_arg : cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? ;
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1161, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
			{
			dbg.location(1163,5);
			pushFollow(FOLLOW_cp_variable_in_cp_arg7092);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1163,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:17: ( ws )?
			int alt297=2;
			try { dbg.enterSubRule(297);
			try { dbg.enterDecision(297, decisionCanBacktrack[297]);

			int LA297_0 = input.LA(1);
			if ( (LA297_0==COMMENT||LA297_0==NL||LA297_0==WS) ) {
				alt297=1;
			}
			} finally {dbg.exitDecision(297);}

			switch (alt297) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:17: ws
					{
					dbg.location(1163,17);
					pushFollow(FOLLOW_ws_in_cp_arg7094);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(297);}
			dbg.location(1163,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:21: ( COLON ( ws )? cp_expression ( ws )? )?
			int alt300=2;
			try { dbg.enterSubRule(300);
			try { dbg.enterDecision(300, decisionCanBacktrack[300]);

			int LA300_0 = input.LA(1);
			if ( (LA300_0==COLON) ) {
				alt300=1;
			}
			} finally {dbg.exitDecision(300);}

			switch (alt300) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:23: COLON ( ws )? cp_expression ( ws )?
					{
					dbg.location(1163,23);
					match(input,COLON,FOLLOW_COLON_in_cp_arg7099); if (state.failed) return;dbg.location(1163,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:29: ( ws )?
					int alt298=2;
					try { dbg.enterSubRule(298);
					try { dbg.enterDecision(298, decisionCanBacktrack[298]);

					int LA298_0 = input.LA(1);
					if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
						alt298=1;
					}
					} finally {dbg.exitDecision(298);}

					switch (alt298) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:29: ws
							{
							dbg.location(1163,29);
							pushFollow(FOLLOW_ws_in_cp_arg7101);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(298);}
					dbg.location(1163,33);
					pushFollow(FOLLOW_cp_expression_in_cp_arg7104);
					cp_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1163,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:47: ( ws )?
					int alt299=2;
					try { dbg.enterSubRule(299);
					try { dbg.enterDecision(299, decisionCanBacktrack[299]);

					int LA299_0 = input.LA(1);
					if ( (LA299_0==COMMENT||LA299_0==NL||LA299_0==WS) ) {
						alt299=1;
					}
					} finally {dbg.exitDecision(299);}

					switch (alt299) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:47: ws
							{
							dbg.location(1163,47);
							pushFollow(FOLLOW_ws_in_cp_arg7106);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(299);}

					}
					break;

			}
			} finally {dbg.exitSubRule(300);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1164, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1168, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1169:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1170,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded7132);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1170,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:15: ( ws )?
			int alt301=2;
			try { dbg.enterSubRule(301);
			try { dbg.enterDecision(301, decisionCanBacktrack[301]);

			int LA301_0 = input.LA(1);
			if ( (LA301_0==COMMENT||LA301_0==NL||LA301_0==WS) ) {
				alt301=1;
			}
			} finally {dbg.exitDecision(301);}

			switch (alt301) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:15: ws
					{
					dbg.location(1170,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded7134);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(301);}
			dbg.location(1170,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7137);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1170,34);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(305);

			loop305:
			while (true) {
				int alt305=2;
				try { dbg.enterDecision(305, decisionCanBacktrack[305]);

				try {
					isCyclicDecision = true;
					alt305 = dfa305.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(305);}

				switch (alt305) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1170,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:35: ( ws )?
					int alt302=2;
					try { dbg.enterSubRule(302);
					try { dbg.enterDecision(302, decisionCanBacktrack[302]);

					int LA302_0 = input.LA(1);
					if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
						alt302=1;
					}
					} finally {dbg.exitDecision(302);}

					switch (alt302) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:35: ws
							{
							dbg.location(1170,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7140);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(302);}
					dbg.location(1170,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:39: ( COMMA | key_and )
					int alt303=2;
					try { dbg.enterSubRule(303);
					try { dbg.enterDecision(303, decisionCanBacktrack[303]);

					int LA303_0 = input.LA(1);
					if ( (LA303_0==COMMA) ) {
						alt303=1;
					}
					else if ( (LA303_0==IDENT) ) {
						alt303=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 303, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(303);}

					switch (alt303) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:40: COMMA
							{
							dbg.location(1170,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded7144); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:48: key_and
							{
							dbg.location(1170,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded7148);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(303);}
					dbg.location(1170,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:57: ( ws )?
					int alt304=2;
					try { dbg.enterSubRule(304);
					try { dbg.enterDecision(304, decisionCanBacktrack[304]);

					int LA304_0 = input.LA(1);
					if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
						alt304=1;
					}
					} finally {dbg.exitDecision(304);}

					switch (alt304) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:57: ws
							{
							dbg.location(1170,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7151);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(304);}
					dbg.location(1170,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7154);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop305;
				}
			}
			} finally {dbg.exitSubRule(305);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1171, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1175:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1175, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1177,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:5: ( NOT ( ws )? )?
			int alt307=2;
			try { dbg.enterSubRule(307);
			try { dbg.enterDecision(307, decisionCanBacktrack[307]);

			int LA307_0 = input.LA(1);
			if ( (LA307_0==NOT) ) {
				alt307=1;
			}
			} finally {dbg.exitDecision(307);}

			switch (alt307) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:6: NOT ( ws )?
					{
					dbg.location(1177,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition7180); if (state.failed) return;dbg.location(1177,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:10: ( ws )?
					int alt306=2;
					try { dbg.enterSubRule(306);
					try { dbg.enterDecision(306, decisionCanBacktrack[306]);

					int LA306_0 = input.LA(1);
					if ( (LA306_0==COMMENT||LA306_0==NL||LA306_0==WS) ) {
						alt306=1;
					}
					} finally {dbg.exitDecision(306);}

					switch (alt306) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:10: ws
							{
							dbg.location(1177,10);
							pushFollow(FOLLOW_ws_in_less_condition7182);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(306);}

					}
					break;

			}
			} finally {dbg.exitSubRule(307);}
			dbg.location(1178,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition7191); if (state.failed) return;dbg.location(1178,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:12: ( ws )?
			int alt308=2;
			try { dbg.enterSubRule(308);
			try { dbg.enterDecision(308, decisionCanBacktrack[308]);

			int LA308_0 = input.LA(1);
			if ( (LA308_0==COMMENT||LA308_0==NL||LA308_0==WS) ) {
				alt308=1;
			}
			} finally {dbg.exitDecision(308);}

			switch (alt308) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:12: ws
					{
					dbg.location(1178,12);
					pushFollow(FOLLOW_ws_in_less_condition7193);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(308);}
			dbg.location(1179,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1180,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:14: ( cp_variable | less_function_in_condition )
			int alt309=2;
			try { dbg.enterSubRule(309);
			try { dbg.enterDecision(309, decisionCanBacktrack[309]);

			int LA309_0 = input.LA(1);
			if ( (LA309_0==AT_IDENT||(LA309_0 >= BOTTOMCENTER_SYM && LA309_0 <= BOTTOMRIGHT_SYM)||LA309_0==CHARSET_SYM||LA309_0==COUNTER_STYLE_SYM||LA309_0==FONT_FACE_SYM||LA309_0==IMPORT_SYM||(LA309_0 >= LEFTBOTTOM_SYM && LA309_0 <= LEFTTOP_SYM)||LA309_0==MEDIA_SYM||LA309_0==MOZ_DOCUMENT_SYM||LA309_0==NAMESPACE_SYM||LA309_0==PAGE_SYM||(LA309_0 >= RIGHTBOTTOM_SYM && LA309_0 <= RIGHTTOP_SYM)||(LA309_0 >= SASS_AT_ROOT && LA309_0 <= SASS_DEBUG)||(LA309_0 >= SASS_EACH && LA309_0 <= SASS_EXTEND)||(LA309_0 >= SASS_FOR && LA309_0 <= SASS_FUNCTION)||(LA309_0 >= SASS_IF && LA309_0 <= SASS_MIXIN)||(LA309_0 >= SASS_RETURN && LA309_0 <= SASS_WHILE)||(LA309_0 >= TOPCENTER_SYM && LA309_0 <= TOPRIGHT_SYM)||LA309_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt309=1;
			}
			else if ( (LA309_0==IDENT) ) {
				alt309=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 309, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(309);}

			switch (alt309) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:15: cp_variable
					{
					dbg.location(1180,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition7220);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:29: less_function_in_condition
					{
					dbg.location(1180,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition7224);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(309);}
			dbg.location(1180,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:57: ( ws )?
			int alt310=2;
			try { dbg.enterSubRule(310);
			try { dbg.enterDecision(310, decisionCanBacktrack[310]);

			int LA310_0 = input.LA(1);
			if ( (LA310_0==COMMENT||LA310_0==NL||LA310_0==WS) ) {
				alt310=1;
			}
			} finally {dbg.exitDecision(310);}

			switch (alt310) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:57: ws
					{
					dbg.location(1180,57);
					pushFollow(FOLLOW_ws_in_less_condition7227);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(310);}
			dbg.location(1180,61);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt312=2;
			try { dbg.enterSubRule(312);
			try { dbg.enterDecision(312, decisionCanBacktrack[312]);

			int LA312_0 = input.LA(1);
			if ( ((LA312_0 >= GREATER && LA312_0 <= GREATER_OR_EQ)||LA312_0==LESS||LA312_0==LESS_OR_EQ||LA312_0==OPEQ) ) {
				alt312=1;
			}
			} finally {dbg.exitDecision(312);}

			switch (alt312) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1180,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition7231);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1180,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:86: ( ws )?
					int alt311=2;
					try { dbg.enterSubRule(311);
					try { dbg.enterDecision(311, decisionCanBacktrack[311]);

					int LA311_0 = input.LA(1);
					if ( (LA311_0==COMMENT||LA311_0==NL||LA311_0==WS) ) {
						alt311=1;
					}
					} finally {dbg.exitDecision(311);}

					switch (alt311) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:86: ws
							{
							dbg.location(1180,86);
							pushFollow(FOLLOW_ws_in_less_condition7233);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(311);}
					dbg.location(1180,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition7236);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(312);}

			}
			dbg.location(1182,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition7254); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1183, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1186, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1188,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition7276);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1188,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:18: ( ws )?
			int alt313=2;
			try { dbg.enterSubRule(313);
			try { dbg.enterDecision(313, decisionCanBacktrack[313]);

			int LA313_0 = input.LA(1);
			if ( (LA313_0==COMMENT||LA313_0==NL||LA313_0==WS) ) {
				alt313=1;
			}
			} finally {dbg.exitDecision(313);}

			switch (alt313) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:18: ws
					{
					dbg.location(1188,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(313);}
			dbg.location(1188,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition7281); if (state.failed) return;dbg.location(1188,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:29: ( ws )?
			int alt314=2;
			try { dbg.enterSubRule(314);
			try { dbg.enterDecision(314, decisionCanBacktrack[314]);

			int LA314_0 = input.LA(1);
			if ( (LA314_0==COMMENT||LA314_0==NL||LA314_0==WS) ) {
				alt314=1;
			}
			} finally {dbg.exitDecision(314);}

			switch (alt314) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:29: ws
					{
					dbg.location(1188,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(314);}
			dbg.location(1188,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition7286);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1188,45);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:45: ( ws )?
			int alt315=2;
			try { dbg.enterSubRule(315);
			try { dbg.enterDecision(315, decisionCanBacktrack[315]);

			int LA315_0 = input.LA(1);
			if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
				alt315=1;
			}
			} finally {dbg.exitDecision(315);}

			switch (alt315) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:45: ws
					{
					dbg.location(1188,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7288);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(315);}
			dbg.location(1188,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition7291); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1189, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1192, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:5: IDENT
			{
			dbg.location(1194,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name7313); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1195, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1197, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1198:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1198,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1200, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1202, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1204,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation7371); if (state.failed) return;dbg.location(1204,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation7373); if (state.failed) return;dbg.location(1204,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:20: ( ws )?
			int alt316=2;
			try { dbg.enterSubRule(316);
			try { dbg.enterDecision(316, decisionCanBacktrack[316]);

			int LA316_0 = input.LA(1);
			if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
				alt316=1;
			}
			} finally {dbg.exitDecision(316);}

			switch (alt316) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:20: ws
					{
					dbg.location(1204,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7375);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(316);}
			dbg.location(1204,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation7378); if (state.failed) return;dbg.location(1204,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:30: ( ws )?
			int alt317=2;
			try { dbg.enterSubRule(317);
			try { dbg.enterDecision(317, decisionCanBacktrack[317]);

			int LA317_0 = input.LA(1);
			if ( (LA317_0==COMMENT||LA317_0==NL||LA317_0==WS) ) {
				alt317=1;
			}
			} finally {dbg.exitDecision(317);}

			switch (alt317) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1204:30: ws
					{
					dbg.location(1204,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7380);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(317);}
			dbg.location(1204,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation7383); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1205, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1212:1: sass_selector_interpolation_expression : ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) )* ;
	public final void sass_selector_interpolation_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1212, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:5: ( ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:9: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) )*
			{
			dbg.location(1214,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:9: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) )
			int alt318=2;
			try { dbg.enterSubRule(318);
			try { dbg.enterDecision(318, decisionCanBacktrack[318]);

			int LA318_0 = input.LA(1);
			if ( (LA318_0==HASH_SYMBOL) ) {
				int LA318_1 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt318=1;
				}
				else if ( (true) ) {
					alt318=2;
				}

			}
			else if ( ((LA318_0 >= COLON && LA318_0 <= COMMA)||LA318_0==DOT||LA318_0==GREATER||LA318_0==HASH||LA318_0==IDENT||LA318_0==LBRACKET||LA318_0==LESS_AND||LA318_0==MINUS||LA318_0==RBRACKET||LA318_0==STAR) ) {
				alt318=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 318, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(318);}

			switch (alt318) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:13: ( sass_interpolation_expression_var )=> sass_interpolation_expression_var
					{
					dbg.location(1215,50);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_expression7431);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1217:13: ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET )
					{
					dbg.location(1217,13);
					if ( (input.LA(1) >= COLON && input.LA(1) <= COMMA)||input.LA(1)==DOT||input.LA(1)==GREATER||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==IDENT||input.LA(1)==LBRACKET||input.LA(1)==LESS_AND||input.LA(1)==MINUS||input.LA(1)==RBRACKET||input.LA(1)==STAR ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(318);}
			dbg.location(1219,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1219:9: ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) )*
			try { dbg.enterSubRule(321);

			loop321:
			while (true) {
				int alt321=2;
				try { dbg.enterDecision(321, decisionCanBacktrack[321]);

				try {
					isCyclicDecision = true;
					alt321 = dfa321.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(321);}

				switch (alt321) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:13: ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) )
					{
					dbg.location(1220,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:13: ( ws )?
					int alt319=2;
					try { dbg.enterSubRule(319);
					try { dbg.enterDecision(319, decisionCanBacktrack[319]);

					int LA319_0 = input.LA(1);
					if ( (LA319_0==COMMENT||LA319_0==NL||LA319_0==WS) ) {
						alt319=1;
					}
					} finally {dbg.exitDecision(319);}

					switch (alt319) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:13: ws
							{
							dbg.location(1220,13);
							pushFollow(FOLLOW_ws_in_sass_selector_interpolation_expression7540);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(319);}
					dbg.location(1221,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:13: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) )
					int alt320=2;
					try { dbg.enterSubRule(320);
					try { dbg.enterDecision(320, decisionCanBacktrack[320]);

					int LA320_0 = input.LA(1);
					if ( (LA320_0==HASH_SYMBOL) ) {
						int LA320_1 = input.LA(2);
						if ( (synpred44_Css3()) ) {
							alt320=1;
						}
						else if ( (true) ) {
							alt320=2;
						}

					}
					else if ( ((LA320_0 >= COLON && LA320_0 <= COMMA)||LA320_0==DOT||LA320_0==GREATER||LA320_0==HASH||LA320_0==IDENT||LA320_0==LBRACKET||LA320_0==LESS_AND||LA320_0==MINUS||LA320_0==RBRACKET||LA320_0==STAR) ) {
						alt320=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 320, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(320);}

					switch (alt320) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1222:17: ( sass_interpolation_expression_var )=> sass_interpolation_expression_var
							{
							dbg.location(1222,54);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_expression7577);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1224:17: ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET )
							{
							dbg.location(1224,17);
							if ( (input.LA(1) >= COLON && input.LA(1) <= COMMA)||input.LA(1)==DOT||input.LA(1)==GREATER||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==IDENT||input.LA(1)==LBRACKET||input.LA(1)==LESS_AND||input.LA(1)==MINUS||input.LA(1)==RBRACKET||input.LA(1)==STAR ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

					}
					} finally {dbg.exitSubRule(320);}

					}
					break;

				default :
					break loop321;
				}
			}
			} finally {dbg.exitSubRule(321);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1228, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_expression"



	// $ANTLR start "sass_declaration_interpolation_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:1: sass_declaration_interpolation_expression : ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) )* ;
	public final void sass_declaration_interpolation_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_declaration_interpolation_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1230, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:5: ( ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:9: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) )*
			{
			dbg.location(1232,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:9: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) )
			int alt322=2;
			try { dbg.enterSubRule(322);
			try { dbg.enterDecision(322, decisionCanBacktrack[322]);

			int LA322_0 = input.LA(1);
			if ( (LA322_0==HASH_SYMBOL) ) {
				int LA322_1 = input.LA(2);
				if ( (LA322_1==LBRACE) && (synpred45_Css3())) {
					alt322=1;
				}
				else if ( (LA322_1==COLON||LA322_1==COMMENT||LA322_1==DOT||(LA322_1 >= HASH && LA322_1 <= HASH_SYMBOL)||LA322_1==IDENT||LA322_1==MINUS||LA322_1==NL||LA322_1==WS) ) {
					alt322=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==DOT||LA322_0==HASH||LA322_0==IDENT||LA322_0==MINUS) ) {
				alt322=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 322, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(322);}

			switch (alt322) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:13: ( sass_interpolation_expression_var )=> sass_interpolation_expression_var
					{
					dbg.location(1233,50);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_declaration_interpolation_expression7728);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:13: ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH )
					{
					dbg.location(1235,13);
					if ( input.LA(1)==DOT||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(322);}
			dbg.location(1237,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:9: ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) )*
			try { dbg.enterSubRule(325);

			loop325:
			while (true) {
				int alt325=2;
				try { dbg.enterDecision(325, decisionCanBacktrack[325]);

				try {
					isCyclicDecision = true;
					alt325 = dfa325.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(325);}

				switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:13: ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) )
					{
					dbg.location(1238,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:13: ( ws )?
					int alt323=2;
					try { dbg.enterSubRule(323);
					try { dbg.enterDecision(323, decisionCanBacktrack[323]);

					int LA323_0 = input.LA(1);
					if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
						alt323=1;
					}
					} finally {dbg.exitDecision(323);}

					switch (alt323) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:13: ws
							{
							dbg.location(1238,13);
							pushFollow(FOLLOW_ws_in_sass_declaration_interpolation_expression7808);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(323);}
					dbg.location(1239,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:13: ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) )
					int alt324=2;
					try { dbg.enterSubRule(324);
					try { dbg.enterDecision(324, decisionCanBacktrack[324]);

					int LA324_0 = input.LA(1);
					if ( (LA324_0==HASH_SYMBOL) ) {
						int LA324_1 = input.LA(2);
						if ( (LA324_1==LBRACE) && (synpred46_Css3())) {
							alt324=1;
						}
						else if ( (LA324_1==COLON||LA324_1==COMMENT||LA324_1==DOT||(LA324_1 >= HASH && LA324_1 <= HASH_SYMBOL)||LA324_1==IDENT||LA324_1==MINUS||LA324_1==NL||LA324_1==WS) ) {
							alt324=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 324, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA324_0==DOT||LA324_0==HASH||LA324_0==IDENT||LA324_0==MINUS) ) {
						alt324=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 324, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(324);}

					switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:17: ( sass_interpolation_expression_var )=> sass_interpolation_expression_var
							{
							dbg.location(1240,54);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_declaration_interpolation_expression7845);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:17: ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH )
							{
							dbg.location(1242,17);
							if ( input.LA(1)==DOT||(input.LA(1) >= HASH && input.LA(1) <= HASH_SYMBOL)||input.LA(1)==IDENT||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

					}
					} finally {dbg.exitSubRule(324);}

					}
					break;

				default :
					break loop325;
				}
			}
			} finally {dbg.exitSubRule(325);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1246, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_declaration_interpolation_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_declaration_interpolation_expression"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1248:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE cp_expression RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1248, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1249:5: ( HASH_SYMBOL LBRACE cp_expression RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:9: HASH_SYMBOL LBRACE cp_expression RBRACE
			{
			dbg.location(1250,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7950); if (state.failed) return;dbg.location(1250,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var7952); if (state.failed) return;dbg.location(1250,28);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var7954);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1250,42);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var7956); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1251, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1271:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1271, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1273,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties7996);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1273,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:14: ( ws )?
			int alt326=2;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==COMMENT||LA326_0==NL||LA326_0==WS) ) {
				alt326=1;
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:14: ws
					{
					dbg.location(1273,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties7998);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(326);}
			dbg.location(1273,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties8001); if (state.failed) return;dbg.location(1273,24);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:24: ( ws )?
			int alt327=2;
			try { dbg.enterSubRule(327);
			try { dbg.enterDecision(327, decisionCanBacktrack[327]);

			int LA327_0 = input.LA(1);
			if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
				alt327=1;
			}
			} finally {dbg.exitDecision(327);}

			switch (alt327) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:24: ws
					{
					dbg.location(1273,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8003);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(327);}
			dbg.location(1273,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:28: ( propertyValue ( ws )? )?
			int alt329=2;
			try { dbg.enterSubRule(329);
			try { dbg.enterDecision(329, decisionCanBacktrack[329]);

			int LA329_0 = input.LA(1);
			if ( ((LA329_0 >= ANGLE && LA329_0 <= AT_IDENT)||(LA329_0 >= BOTTOMCENTER_SYM && LA329_0 <= BOTTOMRIGHT_SYM)||LA329_0==CHARSET_SYM||LA329_0==COUNTER_STYLE_SYM||LA329_0==DIMENSION||LA329_0==EMS||LA329_0==EXS||(LA329_0 >= FONT_FACE_SYM && LA329_0 <= FREQ)||LA329_0==GEN||(LA329_0 >= HASH && LA329_0 <= HASH_SYMBOL)||LA329_0==IDENT||LA329_0==IMPORT_SYM||(LA329_0 >= LEFTBOTTOM_SYM && LA329_0 <= LENGTH)||LA329_0==LESS_JS_STRING||(LA329_0 >= MEDIA_SYM && LA329_0 <= MOZ_DOCUMENT_SYM)||LA329_0==NAMESPACE_SYM||LA329_0==NUMBER||(LA329_0 >= PAGE_SYM && LA329_0 <= PERCENTAGE_SYMBOL)||LA329_0==PLUS||(LA329_0 >= REM && LA329_0 <= RIGHTTOP_SYM)||(LA329_0 >= SASS_AT_ROOT && LA329_0 <= SASS_DEBUG)||(LA329_0 >= SASS_EACH && LA329_0 <= SASS_EXTEND)||(LA329_0 >= SASS_FOR && LA329_0 <= SASS_FUNCTION)||(LA329_0 >= SASS_IF && LA329_0 <= SASS_MIXIN)||(LA329_0 >= SASS_RETURN && LA329_0 <= SASS_WHILE)||LA329_0==STRING||(LA329_0 >= TILDE && LA329_0 <= TOPRIGHT_SYM)||LA329_0==URI||LA329_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt329=1;
			}
			} finally {dbg.exitDecision(329);}

			switch (alt329) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:29: propertyValue ( ws )?
					{
					dbg.location(1273,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties8007);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1273,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:43: ( ws )?
					int alt328=2;
					try { dbg.enterSubRule(328);
					try { dbg.enterDecision(328, decisionCanBacktrack[328]);

					int LA328_0 = input.LA(1);
					if ( (LA328_0==COMMENT||LA328_0==NL||LA328_0==WS) ) {
						alt328=1;
					}
					} finally {dbg.exitDecision(328);}

					switch (alt328) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:43: ws
							{
							dbg.location(1273,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties8009);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(328);}

					}
					break;

			}
			} finally {dbg.exitSubRule(329);}
			dbg.location(1273,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties8014); if (state.failed) return;dbg.location(1273,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:56: ( ws )?
			int alt330=2;
			try { dbg.enterSubRule(330);
			try { dbg.enterDecision(330, decisionCanBacktrack[330]);

			int LA330_0 = input.LA(1);
			if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
				alt330=1;
			}
			} finally {dbg.exitDecision(330);}

			switch (alt330) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:56: ws
					{
					dbg.location(1273,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8016);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(330);}
			dbg.location(1273,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties8019);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1273,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:73: ( declarations )?
			int alt331=2;
			try { dbg.enterSubRule(331);
			try { dbg.enterDecision(331, decisionCanBacktrack[331]);

			int LA331_0 = input.LA(1);
			if ( ((LA331_0 >= AT_IDENT && LA331_0 <= AT_SIGN)||(LA331_0 >= BOTTOMCENTER_SYM && LA331_0 <= BOTTOMRIGHT_SYM)||(LA331_0 >= CHARSET_SYM && LA331_0 <= COMMA)||LA331_0==COUNTER_STYLE_SYM||LA331_0==DCOLON||LA331_0==DOT||LA331_0==FONT_FACE_SYM||(LA331_0 >= GEN && LA331_0 <= GREATER)||(LA331_0 >= HASH && LA331_0 <= HASH_SYMBOL)||LA331_0==IDENT||LA331_0==IMPORT_SYM||(LA331_0 >= LBRACKET && LA331_0 <= LEFTTOP_SYM)||LA331_0==LESS_AND||(LA331_0 >= MEDIA_SYM && LA331_0 <= MOZ_DOCUMENT_SYM)||LA331_0==NAMESPACE_SYM||LA331_0==PAGE_SYM||(LA331_0 >= PIPE && LA331_0 <= PLUS)||LA331_0==RBRACKET||(LA331_0 >= RIGHTBOTTOM_SYM && LA331_0 <= RIGHTTOP_SYM)||(LA331_0 >= SASS_AT_ROOT && LA331_0 <= SASS_DEBUG)||(LA331_0 >= SASS_EACH && LA331_0 <= SASS_FUNCTION)||(LA331_0 >= SASS_IF && LA331_0 <= SASS_MIXIN)||(LA331_0 >= SASS_RETURN && LA331_0 <= SEMI)||LA331_0==STAR||LA331_0==TILDE||(LA331_0 >= TOPCENTER_SYM && LA331_0 <= TOPRIGHT_SYM)||LA331_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt331=1;
			}
			} finally {dbg.exitDecision(331);}

			switch (alt331) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:73: declarations
					{
					dbg.location(1273,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties8021);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(331);}
			dbg.location(1273,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties8024); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1274, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1276:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ( ws )? SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1276, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:5: ( SASS_EXTEND ws simpleSelectorSequence ( ( ws )? SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:5: SASS_EXTEND ws simpleSelectorSequence ( ( ws )? SASS_OPTIONAL )?
			{
			dbg.location(1278,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend8045); if (state.failed) return;dbg.location(1278,17);
			pushFollow(FOLLOW_ws_in_sass_extend8047);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1278,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend8049);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1278,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:43: ( ( ws )? SASS_OPTIONAL )?
			int alt333=2;
			try { dbg.enterSubRule(333);
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			try {
				isCyclicDecision = true;
				alt333 = dfa333.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:44: ( ws )? SASS_OPTIONAL
					{
					dbg.location(1278,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:44: ( ws )?
					int alt332=2;
					try { dbg.enterSubRule(332);
					try { dbg.enterDecision(332, decisionCanBacktrack[332]);

					int LA332_0 = input.LA(1);
					if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
						alt332=1;
					}
					} finally {dbg.exitDecision(332);}

					switch (alt332) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:44: ws
							{
							dbg.location(1278,44);
							pushFollow(FOLLOW_ws_in_sass_extend8052);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(332);}
					dbg.location(1278,48);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend8055); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(333);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1279, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1281:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1281, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:5: ( SASS_EXTEND_ONLY_SELECTOR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:5: SASS_EXTEND_ONLY_SELECTOR
			{
			dbg.location(1283,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8078); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1284, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1286, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1288,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1288,32);
			pushFollow(FOLLOW_ws_in_sass_debug8109);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1288,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug8111);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1289, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_control"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1291, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt334=4;
			try { dbg.enterDecision(334, decisionCanBacktrack[334]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt334=1;
				}
				break;
			case SASS_FOR:
				{
				alt334=2;
				}
				break;
			case SASS_EACH:
				{
				alt334=3;
				}
				break;
			case SASS_WHILE:
				{
				alt334=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 334, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(334);}

			switch (alt334) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:5: sass_if
					{
					dbg.location(1293,5);
					pushFollow(FOLLOW_sass_if_in_sass_control8132);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:15: sass_for
					{
					dbg.location(1293,15);
					pushFollow(FOLLOW_sass_for_in_sass_control8136);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:26: sass_each
					{
					dbg.location(1293,26);
					pushFollow(FOLLOW_sass_each_in_sass_control8140);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:38: sass_while
					{
					dbg.location(1293,38);
					pushFollow(FOLLOW_sass_while_in_sass_control8144);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1294, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1296:1: sass_if : SASS_IF ws sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1296, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:5: ( SASS_IF ws sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:5: SASS_IF ws sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1298,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if8165); if (state.failed) return;dbg.location(1298,13);
			pushFollow(FOLLOW_ws_in_sass_if8167);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1298,16);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if8169);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1298,40);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:40: ( ws )?
			int alt335=2;
			try { dbg.enterSubRule(335);
			try { dbg.enterDecision(335, decisionCanBacktrack[335]);

			int LA335_0 = input.LA(1);
			if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
				alt335=1;
			}
			} finally {dbg.exitDecision(335);}

			switch (alt335) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:40: ws
					{
					dbg.location(1298,40);
					pushFollow(FOLLOW_ws_in_sass_if8171);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(335);}
			dbg.location(1298,44);
			pushFollow(FOLLOW_sass_control_block_in_sass_if8174);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1298,63);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:63: ( ( ws )? sass_else )?
			int alt337=2;
			try { dbg.enterSubRule(337);
			try { dbg.enterDecision(337, decisionCanBacktrack[337]);

			try {
				isCyclicDecision = true;
				alt337 = dfa337.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(337);}

			switch (alt337) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:64: ( ws )? sass_else
					{
					dbg.location(1298,64);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:64: ( ws )?
					int alt336=2;
					try { dbg.enterSubRule(336);
					try { dbg.enterDecision(336, decisionCanBacktrack[336]);

					int LA336_0 = input.LA(1);
					if ( (LA336_0==COMMENT||LA336_0==NL||LA336_0==WS) ) {
						alt336=1;
					}
					} finally {dbg.exitDecision(336);}

					switch (alt336) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:64: ws
							{
							dbg.location(1298,64);
							pushFollow(FOLLOW_ws_in_sass_if8177);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(336);}
					dbg.location(1298,68);
					pushFollow(FOLLOW_sass_else_in_sass_if8180);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(337);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1299, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | SASS_ELSE ( ws )? {...}? IDENT ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1301, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:5: ( SASS_ELSE ( ws )? sass_control_block | SASS_ELSE ( ws )? {...}? IDENT ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt344=2;
			try { dbg.enterDecision(344, decisionCanBacktrack[344]);

			try {
				isCyclicDecision = true;
				alt344 = dfa344.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(344);}

			switch (alt344) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1303:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1303,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8203); if (state.failed) return;dbg.location(1303,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1303:15: ( ws )?
					int alt338=2;
					try { dbg.enterSubRule(338);
					try { dbg.enterDecision(338, decisionCanBacktrack[338]);

					int LA338_0 = input.LA(1);
					if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
						alt338=1;
					}
					} finally {dbg.exitDecision(338);}

					switch (alt338) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1303:15: ws
							{
							dbg.location(1303,15);
							pushFollow(FOLLOW_ws_in_sass_else8205);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(338);}
					dbg.location(1303,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8208);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:5: SASS_ELSE ( ws )? {...}? IDENT ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1305,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8220); if (state.failed) return;dbg.location(1305,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:15: ( ws )?
					int alt339=2;
					try { dbg.enterSubRule(339);
					try { dbg.enterDecision(339, decisionCanBacktrack[339]);

					int LA339_0 = input.LA(1);
					if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
						alt339=1;
					}
					} finally {dbg.exitDecision(339);}

					switch (alt339) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:15: ws
							{
							dbg.location(1305,15);
							pushFollow(FOLLOW_ws_in_sass_else8222);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(339);}
					dbg.location(1305,19);
					if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
					}dbg.location(1305,44);
					match(input,IDENT,FOLLOW_IDENT_in_sass_else8227); if (state.failed) return;dbg.location(1305,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:59: ( ws )?
					int alt340=2;
					try { dbg.enterSubRule(340);
					try { dbg.enterDecision(340, decisionCanBacktrack[340]);

					int LA340_0 = input.LA(1);
					if ( (LA340_0==COMMENT||LA340_0==NL||LA340_0==WS) ) {
						alt340=1;
					}
					} finally {dbg.exitDecision(340);}

					switch (alt340) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:59: ws
							{
							dbg.location(1305,59);
							pushFollow(FOLLOW_ws_in_sass_else8231);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(340);}
					dbg.location(1305,63);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else8234);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1305,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:87: ( ws )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:87: ws
							{
							dbg.location(1305,87);
							pushFollow(FOLLOW_ws_in_sass_else8236);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(341);}
					dbg.location(1305,91);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8239);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1305,110);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:110: ( ( ws )? sass_else )?
					int alt343=2;
					try { dbg.enterSubRule(343);
					try { dbg.enterDecision(343, decisionCanBacktrack[343]);

					try {
						isCyclicDecision = true;
						alt343 = dfa343.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(343);}

					switch (alt343) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:111: ( ws )? sass_else
							{
							dbg.location(1305,111);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:111: ( ws )?
							int alt342=2;
							try { dbg.enterSubRule(342);
							try { dbg.enterDecision(342, decisionCanBacktrack[342]);

							int LA342_0 = input.LA(1);
							if ( (LA342_0==COMMENT||LA342_0==NL||LA342_0==WS) ) {
								alt342=1;
							}
							} finally {dbg.exitDecision(342);}

							switch (alt342) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:111: ws
									{
									dbg.location(1305,111);
									pushFollow(FOLLOW_ws_in_sass_else8242);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(342);}
							dbg.location(1305,115);
							pushFollow(FOLLOW_sass_else_in_sass_else8245);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(343);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1306, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1308:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1308, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1310:5: cp_expression
			{
			dbg.location(1310,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression8268);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1311, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1313:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1313, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1315,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for8289); if (state.failed) return;dbg.location(1315,14);
			pushFollow(FOLLOW_ws_in_sass_for8291);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for8293);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,29);
			pushFollow(FOLLOW_ws_in_sass_for8295);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1315,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8299); if (state.failed) return;dbg.location(1315,74);
			pushFollow(FOLLOW_ws_in_sass_for8303);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8305);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,96);
			pushFollow(FOLLOW_ws_in_sass_for8307);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1315,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8311); if (state.failed) return;dbg.location(1315,173);
			pushFollow(FOLLOW_ws_in_sass_for8315);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8317);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,195);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:195: ( ws )?
			int alt345=2;
			try { dbg.enterSubRule(345);
			try { dbg.enterDecision(345, decisionCanBacktrack[345]);

			int LA345_0 = input.LA(1);
			if ( (LA345_0==COMMENT||LA345_0==NL||LA345_0==WS) ) {
				alt345=1;
			}
			} finally {dbg.exitDecision(345);}

			switch (alt345) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:195: ws
					{
					dbg.location(1315,195);
					pushFollow(FOLLOW_ws_in_sass_for8319);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(345);}
			dbg.location(1315,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for8322);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1316, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1318:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1318, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block
			{
			dbg.location(1320,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each8343); if (state.failed) return;dbg.location(1320,15);
			pushFollow(FOLLOW_ws_in_sass_each8345);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1320,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each8347);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1320,38);
			pushFollow(FOLLOW_ws_in_sass_each8349);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1320,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1320,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each8353); if (state.failed) return;dbg.location(1320,79);
			pushFollow(FOLLOW_ws_in_sass_each8357);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1320,82);
			pushFollow(FOLLOW_cp_expression_list_in_sass_each8359);
			cp_expression_list();
			state._fsp--;
			if (state.failed) return;dbg.location(1320,101);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:101: ( ws )?
			int alt346=2;
			try { dbg.enterSubRule(346);
			try { dbg.enterDecision(346, decisionCanBacktrack[346]);

			int LA346_0 = input.LA(1);
			if ( (LA346_0==COMMENT||LA346_0==NL||LA346_0==WS) ) {
				alt346=1;
			}
			} finally {dbg.exitDecision(346);}

			switch (alt346) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:101: ws
					{
					dbg.location(1320,101);
					pushFollow(FOLLOW_ws_in_sass_each8361);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(346);}
			dbg.location(1320,105);
			pushFollow(FOLLOW_sass_control_block_in_sass_each8364);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1321, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1323:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1323, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1325,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables8385);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1325,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(349);

			loop349:
			while (true) {
				int alt349=2;
				try { dbg.enterDecision(349, decisionCanBacktrack[349]);

				try {
					isCyclicDecision = true;
					alt349 = dfa349.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(349);}

				switch (alt349) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1325,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:33: ( ws )?
					int alt347=2;
					try { dbg.enterSubRule(347);
					try { dbg.enterDecision(347, decisionCanBacktrack[347]);

					int LA347_0 = input.LA(1);
					if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
						alt347=1;
					}
					} finally {dbg.exitDecision(347);}

					switch (alt347) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:33: ws
							{
							dbg.location(1325,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables8397);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(347);}
					dbg.location(1325,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables8400); if (state.failed) return;dbg.location(1325,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:43: ( ws )?
					int alt348=2;
					try { dbg.enterSubRule(348);
					try { dbg.enterDecision(348, decisionCanBacktrack[348]);

					int LA348_0 = input.LA(1);
					if ( (LA348_0==COMMENT||LA348_0==NL||LA348_0==WS) ) {
						alt348=1;
					}
					} finally {dbg.exitDecision(348);}

					switch (alt348) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:43: ws
							{
							dbg.location(1325,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables8402);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(348);}
					dbg.location(1325,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables8405);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop349;
				}
			}
			} finally {dbg.exitSubRule(349);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1326, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1328, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1330,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while8430); if (state.failed) return;dbg.location(1330,16);
			pushFollow(FOLLOW_ws_in_sass_while8432);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1330,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while8434);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1330,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:43: ( ws )?
			int alt350=2;
			try { dbg.enterSubRule(350);
			try { dbg.enterDecision(350, decisionCanBacktrack[350]);

			int LA350_0 = input.LA(1);
			if ( (LA350_0==COMMENT||LA350_0==NL||LA350_0==WS) ) {
				alt350=1;
			}
			} finally {dbg.exitDecision(350);}

			switch (alt350) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:43: ws
					{
					dbg.location(1330,43);
					pushFollow(FOLLOW_ws_in_sass_while8436);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(350);}
			dbg.location(1330,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while8439);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1331, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1333, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1335,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block8460); if (state.failed) return;dbg.location(1335,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:12: ( ws )?
			int alt351=2;
			try { dbg.enterSubRule(351);
			try { dbg.enterDecision(351, decisionCanBacktrack[351]);

			int LA351_0 = input.LA(1);
			if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
				alt351=1;
			}
			} finally {dbg.exitDecision(351);}

			switch (alt351) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:12: ws
					{
					dbg.location(1335,12);
					pushFollow(FOLLOW_ws_in_sass_control_block8462);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(351);}
			dbg.location(1335,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:16: ( declarations )?
			int alt352=2;
			try { dbg.enterSubRule(352);
			try { dbg.enterDecision(352, decisionCanBacktrack[352]);

			int LA352_0 = input.LA(1);
			if ( ((LA352_0 >= AT_IDENT && LA352_0 <= AT_SIGN)||(LA352_0 >= BOTTOMCENTER_SYM && LA352_0 <= BOTTOMRIGHT_SYM)||(LA352_0 >= CHARSET_SYM && LA352_0 <= COMMA)||LA352_0==COUNTER_STYLE_SYM||LA352_0==DCOLON||LA352_0==DOT||LA352_0==FONT_FACE_SYM||(LA352_0 >= GEN && LA352_0 <= GREATER)||(LA352_0 >= HASH && LA352_0 <= HASH_SYMBOL)||LA352_0==IDENT||LA352_0==IMPORT_SYM||(LA352_0 >= LBRACKET && LA352_0 <= LEFTTOP_SYM)||LA352_0==LESS_AND||(LA352_0 >= MEDIA_SYM && LA352_0 <= MOZ_DOCUMENT_SYM)||LA352_0==NAMESPACE_SYM||LA352_0==PAGE_SYM||(LA352_0 >= PIPE && LA352_0 <= PLUS)||LA352_0==RBRACKET||(LA352_0 >= RIGHTBOTTOM_SYM && LA352_0 <= RIGHTTOP_SYM)||(LA352_0 >= SASS_AT_ROOT && LA352_0 <= SASS_DEBUG)||(LA352_0 >= SASS_EACH && LA352_0 <= SASS_FUNCTION)||(LA352_0 >= SASS_IF && LA352_0 <= SASS_MIXIN)||(LA352_0 >= SASS_RETURN && LA352_0 <= SEMI)||LA352_0==STAR||LA352_0==TILDE||(LA352_0 >= TOPCENTER_SYM && LA352_0 <= TOPRIGHT_SYM)||LA352_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt352=1;
			}
			} finally {dbg.exitDecision(352);}

			switch (alt352) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:16: declarations
					{
					dbg.location(1335,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block8465);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(352);}
			dbg.location(1335,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block8468); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1336, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1338:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1338, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1339:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1344,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration8510); if (state.failed) return;dbg.location(1344,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration8512);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1344,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration8514);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1344,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:41: ( ws )?
			int alt353=2;
			try { dbg.enterSubRule(353);
			try { dbg.enterDecision(353, decisionCanBacktrack[353]);

			int LA353_0 = input.LA(1);
			if ( (LA353_0==COMMENT||LA353_0==NL||LA353_0==WS) ) {
				alt353=1;
			}
			} finally {dbg.exitDecision(353);}

			switch (alt353) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:41: ws
					{
					dbg.location(1344,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8516);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(353);}
			dbg.location(1344,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration8519); if (state.failed) return;dbg.location(1344,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:52: ( cp_args_list )?
			int alt354=2;
			try { dbg.enterSubRule(354);
			try { dbg.enterDecision(354, decisionCanBacktrack[354]);

			int LA354_0 = input.LA(1);
			if ( (LA354_0==AT_IDENT||(LA354_0 >= BOTTOMCENTER_SYM && LA354_0 <= BOTTOMRIGHT_SYM)||LA354_0==CHARSET_SYM||(LA354_0 >= COUNTER_STYLE_SYM && LA354_0 <= CP_DOTS)||LA354_0==FONT_FACE_SYM||LA354_0==IMPORT_SYM||(LA354_0 >= LEFTBOTTOM_SYM && LA354_0 <= LEFTTOP_SYM)||LA354_0==LESS_REST||LA354_0==MEDIA_SYM||LA354_0==MOZ_DOCUMENT_SYM||LA354_0==NAMESPACE_SYM||LA354_0==PAGE_SYM||(LA354_0 >= RIGHTBOTTOM_SYM && LA354_0 <= RIGHTTOP_SYM)||(LA354_0 >= SASS_AT_ROOT && LA354_0 <= SASS_DEBUG)||(LA354_0 >= SASS_EACH && LA354_0 <= SASS_EXTEND)||(LA354_0 >= SASS_FOR && LA354_0 <= SASS_FUNCTION)||(LA354_0 >= SASS_IF && LA354_0 <= SASS_MIXIN)||(LA354_0 >= SASS_RETURN && LA354_0 <= SASS_WHILE)||(LA354_0 >= TOPCENTER_SYM && LA354_0 <= TOPRIGHT_SYM)||LA354_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt354=1;
			}
			} finally {dbg.exitDecision(354);}

			switch (alt354) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:52: cp_args_list
					{
					dbg.location(1344,52);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration8521);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(354);}
			dbg.location(1344,66);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration8524); if (state.failed) return;dbg.location(1344,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:73: ( ws )?
			int alt355=2;
			try { dbg.enterSubRule(355);
			try { dbg.enterDecision(355, decisionCanBacktrack[355]);

			int LA355_0 = input.LA(1);
			if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
				alt355=1;
			}
			} finally {dbg.exitDecision(355);}

			switch (alt355) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:73: ws
					{
					dbg.location(1344,73);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8526);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(355);}
			dbg.location(1344,77);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration8529); if (state.failed) return;dbg.location(1344,84);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:84: ( ws )?
			int alt356=2;
			try { dbg.enterSubRule(356);
			try { dbg.enterDecision(356, decisionCanBacktrack[356]);

			int LA356_0 = input.LA(1);
			if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
				alt356=1;
			}
			} finally {dbg.exitDecision(356);}

			switch (alt356) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:84: ws
					{
					dbg.location(1344,84);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8531);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(356);}
			dbg.location(1344,88);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:88: ( declarations )?
			int alt357=2;
			try { dbg.enterSubRule(357);
			try { dbg.enterDecision(357, decisionCanBacktrack[357]);

			int LA357_0 = input.LA(1);
			if ( ((LA357_0 >= AT_IDENT && LA357_0 <= AT_SIGN)||(LA357_0 >= BOTTOMCENTER_SYM && LA357_0 <= BOTTOMRIGHT_SYM)||(LA357_0 >= CHARSET_SYM && LA357_0 <= COMMA)||LA357_0==COUNTER_STYLE_SYM||LA357_0==DCOLON||LA357_0==DOT||LA357_0==FONT_FACE_SYM||(LA357_0 >= GEN && LA357_0 <= GREATER)||(LA357_0 >= HASH && LA357_0 <= HASH_SYMBOL)||LA357_0==IDENT||LA357_0==IMPORT_SYM||(LA357_0 >= LBRACKET && LA357_0 <= LEFTTOP_SYM)||LA357_0==LESS_AND||(LA357_0 >= MEDIA_SYM && LA357_0 <= MOZ_DOCUMENT_SYM)||LA357_0==NAMESPACE_SYM||LA357_0==PAGE_SYM||(LA357_0 >= PIPE && LA357_0 <= PLUS)||LA357_0==RBRACKET||(LA357_0 >= RIGHTBOTTOM_SYM && LA357_0 <= RIGHTTOP_SYM)||(LA357_0 >= SASS_AT_ROOT && LA357_0 <= SASS_DEBUG)||(LA357_0 >= SASS_EACH && LA357_0 <= SASS_FUNCTION)||(LA357_0 >= SASS_IF && LA357_0 <= SASS_MIXIN)||(LA357_0 >= SASS_RETURN && LA357_0 <= SEMI)||LA357_0==STAR||LA357_0==TILDE||(LA357_0 >= TOPCENTER_SYM && LA357_0 <= TOPRIGHT_SYM)||LA357_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt357=1;
			}
			} finally {dbg.exitDecision(357);}

			switch (alt357) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:88: declarations
					{
					dbg.location(1344,88);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration8534);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(357);}
			dbg.location(1344,102);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration8537); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1345, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1347:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1347, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1349:5: IDENT
			{
			dbg.location(1349,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name8558); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1350, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1352, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1354:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1354,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return8579); if (state.failed) return;dbg.location(1354,17);
			pushFollow(FOLLOW_ws_in_sass_function_return8581);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1354,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return8583);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1355, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1357, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1359:5: SASS_CONTENT
			{
			dbg.location(1359,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content8604); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1360, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1362, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:5: {...}? IDENT
			{
			dbg.location(1363,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1363,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types8623); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1369, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:5: {...}? IDENT
			{
			dbg.location(1370,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1370,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when8646); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1371, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1373, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:5: {...}? IDENT
			{
			dbg.location(1374,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1374,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and8665); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1375, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1377, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1378:5: {...}? IDENT
			{
			dbg.location(1378,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1378,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or8683); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1379, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1381:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1381, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1381:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1382:5: {...}? IDENT
			{
			dbg.location(1382,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1382,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only8701); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1383, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ( ws )? mediaQueryList
		{
		dbg.location(372,45);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ( ws )?
		int alt358=2;
		try { dbg.enterSubRule(358);
		try { dbg.enterDecision(358, decisionCanBacktrack[358]);

		int LA358_0 = input.LA(1);
		if ( (LA358_0==COMMENT||LA358_0==NL||LA358_0==WS) ) {
			alt358=1;
		}
		} finally {dbg.exitDecision(358);}

		switch (alt358) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:45: ws
				{
				dbg.location(372,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3356);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(358);}
		dbg.location(372,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3359);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ( ws )? mediaQueryList
		{
		dbg.location(375,99);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ( ws )?
		int alt359=2;
		try { dbg.enterSubRule(359);
		try { dbg.enterDecision(359, decisionCanBacktrack[359]);

		int LA359_0 = input.LA(1);
		if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
			alt359=1;
		}
		} finally {dbg.exitDecision(359);}

		switch (alt359) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:99: ws
				{
				dbg.location(375,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3420);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(359);}
		dbg.location(375,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3423);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ( ws )? mediaQueryList
		{
		dbg.location(377,102);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ( ws )?
		int alt360=2;
		try { dbg.enterSubRule(360);
		try { dbg.enterDecision(360, decisionCanBacktrack[360]);

		int LA360_0 = input.LA(1);
		if ( (LA360_0==COMMENT||LA360_0==NL||LA360_0==WS) ) {
			alt360=1;
		}
		} finally {dbg.exitDecision(360);}

		switch (alt360) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:102: ws
				{
				dbg.location(377,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3474);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(360);}
		dbg.location(377,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3477);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ( ws )? SEMI
		{
		dbg.location(392,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ( ws )?
		int alt361=2;
		try { dbg.enterSubRule(361);
		try { dbg.enterDecision(361, decisionCanBacktrack[361]);

		int LA361_0 = input.LA(1);
		if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
			alt361=1;
		}
		} finally {dbg.exitDecision(361);}

		switch (alt361) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:28: ws
				{
				dbg.location(392,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css3596);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(361);}
		dbg.location(392,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css3599); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt365=2;
		try { dbg.enterDecision(365, decisionCanBacktrack[365]);

		int LA365_0 = input.LA(1);
		if ( (LA365_0==SASS_MIXIN) ) {
			alt365=1;
		}
		else if ( (LA365_0==DOT) ) {
			alt365=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 365, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(365);}

		switch (alt365) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:6: SASS_MIXIN
				{
				dbg.location(400,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css3670); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:19: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(400,19);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:19: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:20: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(400,20);
				match(input,DOT,FOLLOW_DOT_in_synpred5_Css3675); if (state.failed) return;dbg.location(400,24);
				match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css3677); if (state.failed) return;dbg.location(400,30);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:30: ( ws )?
				int alt362=2;
				try { dbg.enterSubRule(362);
				try { dbg.enterDecision(362, decisionCanBacktrack[362]);

				int LA362_0 = input.LA(1);
				if ( (LA362_0==COMMENT||LA362_0==NL||LA362_0==WS) ) {
					alt362=1;
				}
				} finally {dbg.exitDecision(362);}

				switch (alt362) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:30: ws
						{
						dbg.location(400,30);
						pushFollow(FOLLOW_ws_in_synpred5_Css3679);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(362);}
				dbg.location(400,34);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css3682); if (state.failed) return;dbg.location(400,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:41: (~ RPAREN )*
				try { dbg.enterSubRule(363);

				loop363:
				while (true) {
					int alt363=2;
					try { dbg.enterDecision(363, decisionCanBacktrack[363]);

					int LA363_0 = input.LA(1);
					if ( ((LA363_0 >= A && LA363_0 <= RIGHTTOP_SYM)||(LA363_0 >= S && LA363_0 <= Z)) ) {
						alt363=1;
					}

					} finally {dbg.exitDecision(363);}

					switch (alt363) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(400,41);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop363;
					}
				}
				} finally {dbg.exitSubRule(363);}
				dbg.location(400,52);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css3690); if (state.failed) return;dbg.location(400,59);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:59: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(364);

				loop364:
				while (true) {
					int alt364=2;
					try { dbg.enterDecision(364, decisionCanBacktrack[364]);

					int LA364_0 = input.LA(1);
					if ( ((LA364_0 >= A && LA364_0 <= L)||(LA364_0 >= LBRACKET && LA364_0 <= SASS_WHILE)||(LA364_0 >= SOLIDUS && LA364_0 <= Z)) ) {
						alt364=1;
					}

					} finally {dbg.exitDecision(364);}

					switch (alt364) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(400,59);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop364;
					}
				}
				} finally {dbg.exitSubRule(364);}
				dbg.location(400,75);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css3700); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(402,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css3718);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(402,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:22: ( ( ws )? IMPORTANT_SYM )?
		int alt367=2;
		try { dbg.enterSubRule(367);
		try { dbg.enterDecision(367, decisionCanBacktrack[367]);

		try {
			isCyclicDecision = true;
			alt367 = dfa367.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(367);}

		switch (alt367) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(402,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:23: ( ws )?
				int alt366=2;
				try { dbg.enterSubRule(366);
				try { dbg.enterDecision(366, decisionCanBacktrack[366]);

				int LA366_0 = input.LA(1);
				if ( (LA366_0==COMMENT||LA366_0==NL||LA366_0==WS) ) {
					alt366=1;
				}
				} finally {dbg.exitDecision(366);}

				switch (alt366) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:23: ws
						{
						dbg.location(402,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css3721);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(366);}
				dbg.location(402,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css3724); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(367);}
		dbg.location(402,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:43: ( ws )?
		int alt368=2;
		try { dbg.enterSubRule(368);
		try { dbg.enterDecision(368, decisionCanBacktrack[368]);

		int LA368_0 = input.LA(1);
		if ( (LA368_0==COMMENT||LA368_0==NL||LA368_0==WS) ) {
			alt368=1;
		}
		} finally {dbg.exitDecision(368);}

		switch (alt368) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:43: ws
				{
				dbg.location(402,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css3728);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(368);}
		dbg.location(402,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css3731); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:8: cp_mixin_call
		{
		dbg.location(403,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css3754);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI
		{
		dbg.location(404,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+
		int cnt369=0;
		try { dbg.enterSubRule(369);

		loop369:
		while (true) {
			int alt369=2;
			try { dbg.enterDecision(369, decisionCanBacktrack[369]);

			int LA369_0 = input.LA(1);
			if ( ((LA369_0 >= A && LA369_0 <= CHARSET_SYM)||(LA369_0 >= COMMA && LA369_0 <= L)||(LA369_0 >= LBRACKET && LA369_0 <= R)||(LA369_0 >= RBRACKET && LA369_0 <= SASS_WHILE)||(LA369_0 >= SOLIDUS && LA369_0 <= Z)) ) {
				alt369=1;
			}

			} finally {dbg.exitDecision(369);}

			switch (alt369) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(404,8);
				if ( (input.LA(1) >= A && input.LA(1) <= CHARSET_SYM)||(input.LA(1) >= COMMA && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt369 >= 1 ) break loop369;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(369, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt369++;
		}
		} finally {dbg.exitSubRule(369);}
		dbg.location(404,37);
		match(input,COLON,FOLLOW_COLON_in_synpred8_Css3789); if (state.failed) return;dbg.location(404,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:43: (~ ( SEMI | LBRACE | RBRACE ) )+
		int cnt370=0;
		try { dbg.enterSubRule(370);

		loop370:
		while (true) {
			int alt370=2;
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			int LA370_0 = input.LA(1);
			if ( ((LA370_0 >= A && LA370_0 <= L)||(LA370_0 >= LBRACKET && LA370_0 <= R)||(LA370_0 >= RBRACKET && LA370_0 <= SASS_WHILE)||(LA370_0 >= SOLIDUS && LA370_0 <= Z)) ) {
				alt370=1;
			}

			} finally {dbg.exitDecision(370);}

			switch (alt370) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(404,43);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt370 >= 1 ) break loop370;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(370, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt370++;
		}
		} finally {dbg.exitSubRule(370);}
		dbg.location(404,66);
		match(input,SEMI,FOLLOW_SEMI_in_synpred8_Css3801); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:6: ( sass_declaration_interpolation_expression COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:8: sass_declaration_interpolation_expression COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI
		{
		dbg.location(405,8);
		pushFollow(FOLLOW_sass_declaration_interpolation_expression_in_synpred9_Css3814);
		sass_declaration_interpolation_expression();
		state._fsp--;
		if (state.failed) return;dbg.location(405,50);
		match(input,COLON,FOLLOW_COLON_in_synpred9_Css3816); if (state.failed) return;dbg.location(405,56);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:56: (~ ( SEMI | LBRACE | RBRACE ) )+
		int cnt371=0;
		try { dbg.enterSubRule(371);

		loop371:
		while (true) {
			int alt371=2;
			try { dbg.enterDecision(371, decisionCanBacktrack[371]);

			int LA371_0 = input.LA(1);
			if ( ((LA371_0 >= A && LA371_0 <= L)||(LA371_0 >= LBRACKET && LA371_0 <= R)||(LA371_0 >= RBRACKET && LA371_0 <= SASS_WHILE)||(LA371_0 >= SOLIDUS && LA371_0 <= Z)) ) {
				alt371=1;
			}

			} finally {dbg.exitDecision(371);}

			switch (alt371) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(405,56);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt371 >= 1 ) break loop371;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(371, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt371++;
		}
		} finally {dbg.exitSubRule(371);}
		dbg.location(405,79);
		match(input,SEMI,FOLLOW_SEMI_in_synpred9_Css3828); if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:18: ( ws )? COMMA
		{
		dbg.location(420,18);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:18: ( ws )?
		int alt372=2;
		try { dbg.enterSubRule(372);
		try { dbg.enterDecision(372, decisionCanBacktrack[372]);

		int LA372_0 = input.LA(1);
		if ( (LA372_0==COMMENT||LA372_0==NL||LA372_0==WS) ) {
			alt372=1;
		}
		} finally {dbg.exitDecision(372);}

		switch (alt372) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:18: ws
				{
				dbg.location(420,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css3946);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(372);}
		dbg.location(420,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css3949); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:23: ( ws )? SEMI
		{
		dbg.location(460,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:23: ( ws )?
		int alt373=2;
		try { dbg.enterSubRule(373);
		try { dbg.enterDecision(373, decisionCanBacktrack[373]);

		int LA373_0 = input.LA(1);
		if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
			alt373=1;
		}
		} finally {dbg.exitDecision(373);}

		switch (alt373) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:23: ws
				{
				dbg.location(460,23);
				pushFollow(FOLLOW_ws_in_synpred11_Css31245);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(373);}
		dbg.location(460,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred11_Css31248); if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:9: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt377=2;
		try { dbg.enterDecision(377, decisionCanBacktrack[377]);

		int LA377_0 = input.LA(1);
		if ( (LA377_0==SASS_MIXIN) ) {
			alt377=1;
		}
		else if ( (LA377_0==DOT) ) {
			alt377=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 377, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(377);}

		switch (alt377) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:10: SASS_MIXIN
				{
				dbg.location(468,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred12_Css31323); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:23: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(468,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:23: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:24: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(468,24);
				match(input,DOT,FOLLOW_DOT_in_synpred12_Css31328); if (state.failed) return;dbg.location(468,28);
				match(input,IDENT,FOLLOW_IDENT_in_synpred12_Css31330); if (state.failed) return;dbg.location(468,34);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:34: ( ws )?
				int alt374=2;
				try { dbg.enterSubRule(374);
				try { dbg.enterDecision(374, decisionCanBacktrack[374]);

				int LA374_0 = input.LA(1);
				if ( (LA374_0==COMMENT||LA374_0==NL||LA374_0==WS) ) {
					alt374=1;
				}
				} finally {dbg.exitDecision(374);}

				switch (alt374) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:34: ws
						{
						dbg.location(468,34);
						pushFollow(FOLLOW_ws_in_synpred12_Css31332);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(374);}
				dbg.location(468,38);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred12_Css31335); if (state.failed) return;dbg.location(468,45);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:45: (~ RPAREN )*
				try { dbg.enterSubRule(375);

				loop375:
				while (true) {
					int alt375=2;
					try { dbg.enterDecision(375, decisionCanBacktrack[375]);

					int LA375_0 = input.LA(1);
					if ( ((LA375_0 >= A && LA375_0 <= RIGHTTOP_SYM)||(LA375_0 >= S && LA375_0 <= Z)) ) {
						alt375=1;
					}

					} finally {dbg.exitDecision(375);}

					switch (alt375) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(468,45);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop375;
					}
				}
				} finally {dbg.exitSubRule(375);}
				dbg.location(468,56);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred12_Css31343); if (state.failed) return;dbg.location(468,63);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:63: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(376);

				loop376:
				while (true) {
					int alt376=2;
					try { dbg.enterDecision(376, decisionCanBacktrack[376]);

					int LA376_0 = input.LA(1);
					if ( ((LA376_0 >= A && LA376_0 <= L)||(LA376_0 >= LBRACKET && LA376_0 <= R)||(LA376_0 >= RBRACKET && LA376_0 <= SASS_WHILE)||(LA376_0 >= SOLIDUS && LA376_0 <= Z)) ) {
						alt376=1;
					}

					} finally {dbg.exitDecision(376);}

					switch (alt376) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(468,63);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop376;
					}
				}
				} finally {dbg.exitSubRule(376);}
				dbg.location(468,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred12_Css31355); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(470,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred13_Css31381);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(470,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:26: ( ws )?
		int alt378=2;
		try { dbg.enterSubRule(378);
		try { dbg.enterDecision(378, decisionCanBacktrack[378]);

		int LA378_0 = input.LA(1);
		if ( (LA378_0==COMMENT||LA378_0==NL||LA378_0==WS) ) {
			alt378=1;
		}
		} finally {dbg.exitDecision(378);}

		switch (alt378) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:26: ws
				{
				dbg.location(470,26);
				pushFollow(FOLLOW_ws_in_synpred13_Css31383);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(378);}
		dbg.location(470,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred13_Css31386); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:12: cp_mixin_call
		{
		dbg.location(471,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred14_Css31405);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:12: sass_map
		{
		dbg.location(473,12);
		pushFollow(FOLLOW_sass_map_in_synpred15_Css31433);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:12: cp_variable ( ws )? COLON
		{
		dbg.location(474,12);
		pushFollow(FOLLOW_cp_variable_in_synpred16_Css31450);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(474,24);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:24: ( ws )?
		int alt379=2;
		try { dbg.enterSubRule(379);
		try { dbg.enterDecision(379, decisionCanBacktrack[379]);

		int LA379_0 = input.LA(1);
		if ( (LA379_0==COMMENT||LA379_0==NL||LA379_0==WS) ) {
			alt379=1;
		}
		} finally {dbg.exitDecision(379);}

		switch (alt379) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:24: ws
				{
				dbg.location(474,24);
				pushFollow(FOLLOW_ws_in_synpred16_Css31452);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(379);}
		dbg.location(474,28);
		match(input,COLON,FOLLOW_COLON_in_synpred16_Css31455); if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:5: ( (~ ( HASH_SYMBOL | COLON ) )* HASH_SYMBOL LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:6: (~ ( HASH_SYMBOL | COLON ) )* HASH_SYMBOL LBRACE
		{
		dbg.location(610,6);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:6: (~ ( HASH_SYMBOL | COLON ) )*
		try { dbg.enterSubRule(380);

		loop380:
		while (true) {
			int alt380=2;
			try { dbg.enterDecision(380, decisionCanBacktrack[380]);

			int LA380_0 = input.LA(1);
			if ( ((LA380_0 >= A && LA380_0 <= CHARSET_SYM)||(LA380_0 >= COMMA && LA380_0 <= HASH)||(LA380_0 >= HEXCHAR && LA380_0 <= Z)) ) {
				alt380=1;
			}

			} finally {dbg.exitDecision(380);}

			switch (alt380) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(610,6);
				if ( (input.LA(1) >= A && input.LA(1) <= CHARSET_SYM)||(input.LA(1) >= COMMA && input.LA(1) <= HASH)||(input.LA(1) >= HEXCHAR && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop380;
			}
		}
		} finally {dbg.exitSubRule(380);}
		dbg.location(610,28);
		match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_synpred17_Css32444); if (state.failed) return;dbg.location(610,40);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred17_Css32446); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:28: ( ws )? COMMA
		{
		dbg.location(636,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:28: ( ws )?
		int alt381=2;
		try { dbg.enterSubRule(381);
		try { dbg.enterDecision(381, decisionCanBacktrack[381]);

		int LA381_0 = input.LA(1);
		if ( (LA381_0==COMMENT||LA381_0==NL||LA381_0==WS) ) {
			alt381=1;
		}
		} finally {dbg.exitDecision(381);}

		switch (alt381) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:28: ws
				{
				dbg.location(636,28);
				pushFollow(FOLLOW_ws_in_synpred18_Css32599);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(381);}
		dbg.location(636,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred18_Css32602); if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:25: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:26: ( ws )? SEMI
		{
		dbg.location(663,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:26: ( ws )?
		int alt382=2;
		try { dbg.enterSubRule(382);
		try { dbg.enterDecision(382, decisionCanBacktrack[382]);

		int LA382_0 = input.LA(1);
		if ( (LA382_0==COMMENT||LA382_0==NL||LA382_0==WS) ) {
			alt382=1;
		}
		} finally {dbg.exitDecision(382);}

		switch (alt382) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:26: ws
				{
				dbg.location(663,26);
				pushFollow(FOLLOW_ws_in_synpred19_Css32808);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(382);}
		dbg.location(663,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred19_Css32811); if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:6: cp_variable_declaration
		{
		dbg.location(671,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred20_Css32882);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:8: sass_map
		{
		dbg.location(672,8);
		pushFollow(FOLLOW_sass_map_in_synpred21_Css32894);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:8: sass_nested_properties
		{
		dbg.location(673,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred22_Css32907);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:8: propertyDeclaration
		{
		dbg.location(674,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred23_Css32919);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(676,8);
		pushFollow(FOLLOW_property_in_synpred24_Css32936);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(676,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:17: ( ws )?
		int alt383=2;
		try { dbg.enterSubRule(383);
		try { dbg.enterDecision(383, decisionCanBacktrack[383]);

		int LA383_0 = input.LA(1);
		if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
			alt383=1;
		}
		} finally {dbg.exitDecision(383);}

		switch (alt383) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:17: ws
				{
				dbg.location(676,17);
				pushFollow(FOLLOW_ws_in_synpred24_Css32938);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(383);}
		dbg.location(676,21);
		match(input,COLON,FOLLOW_COLON_in_synpred24_Css32941); if (state.failed) return;dbg.location(676,27);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(384);

		loop384:
		while (true) {
			int alt384=2;
			try { dbg.enterDecision(384, decisionCanBacktrack[384]);

			int LA384_0 = input.LA(1);
			if ( ((LA384_0 >= A && LA384_0 <= L)||(LA384_0 >= LBRACKET && LA384_0 <= R)||(LA384_0 >= RBRACKET && LA384_0 <= SASS_WHILE)||(LA384_0 >= SOLIDUS && LA384_0 <= Z)) ) {
				alt384=1;
			}

			} finally {dbg.exitDecision(384);}

			switch (alt384) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(676,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop384;
			}
		}
		} finally {dbg.exitSubRule(384);}
		dbg.location(676,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:7: ( SASS_MIXIN | ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE ) )
		int alt388=2;
		try { dbg.enterDecision(388, decisionCanBacktrack[388]);

		int LA388_0 = input.LA(1);
		if ( (LA388_0==SASS_MIXIN) ) {
			alt388=1;
		}
		else if ( (LA388_0==DOT) ) {
			alt388=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 388, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(388);}

		switch (alt388) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:8: SASS_MIXIN
				{
				dbg.location(677,8);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred25_Css32970); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:21: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE )
				{
				dbg.location(677,21);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:21: ( DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:22: DOT IDENT ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI | RBRACE ) )* LBRACE
				{
				dbg.location(677,22);
				match(input,DOT,FOLLOW_DOT_in_synpred25_Css32975); if (state.failed) return;dbg.location(677,26);
				match(input,IDENT,FOLLOW_IDENT_in_synpred25_Css32977); if (state.failed) return;dbg.location(677,32);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:32: ( ws )?
				int alt385=2;
				try { dbg.enterSubRule(385);
				try { dbg.enterDecision(385, decisionCanBacktrack[385]);

				int LA385_0 = input.LA(1);
				if ( (LA385_0==COMMENT||LA385_0==NL||LA385_0==WS) ) {
					alt385=1;
				}
				} finally {dbg.exitDecision(385);}

				switch (alt385) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:32: ws
						{
						dbg.location(677,32);
						pushFollow(FOLLOW_ws_in_synpred25_Css32979);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(385);}
				dbg.location(677,36);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred25_Css32982); if (state.failed) return;dbg.location(677,43);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:43: (~ RPAREN )*
				try { dbg.enterSubRule(386);

				loop386:
				while (true) {
					int alt386=2;
					try { dbg.enterDecision(386, decisionCanBacktrack[386]);

					int LA386_0 = input.LA(1);
					if ( ((LA386_0 >= A && LA386_0 <= RIGHTTOP_SYM)||(LA386_0 >= S && LA386_0 <= Z)) ) {
						alt386=1;
					}

					} finally {dbg.exitDecision(386);}

					switch (alt386) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(677,43);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop386;
					}
				}
				} finally {dbg.exitSubRule(386);}
				dbg.location(677,54);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred25_Css32990); if (state.failed) return;dbg.location(677,61);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:61: (~ ( LBRACE | SEMI | RBRACE ) )*
				try { dbg.enterSubRule(387);

				loop387:
				while (true) {
					int alt387=2;
					try { dbg.enterDecision(387, decisionCanBacktrack[387]);

					int LA387_0 = input.LA(1);
					if ( ((LA387_0 >= A && LA387_0 <= L)||(LA387_0 >= LBRACKET && LA387_0 <= R)||(LA387_0 >= RBRACKET && LA387_0 <= SASS_WHILE)||(LA387_0 >= SOLIDUS && LA387_0 <= Z)) ) {
						alt387=1;
					}

					} finally {dbg.exitDecision(387);}

					switch (alt387) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(677,61);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop387;
					}
				}
				} finally {dbg.exitSubRule(387);}
				dbg.location(677,84);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred25_Css33002); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(679,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred26_Css33020);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(679,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:22: ( ( ws )? IMPORTANT_SYM )?
		int alt390=2;
		try { dbg.enterSubRule(390);
		try { dbg.enterDecision(390, decisionCanBacktrack[390]);

		try {
			isCyclicDecision = true;
			alt390 = dfa390.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(390);}

		switch (alt390) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(679,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:23: ( ws )?
				int alt389=2;
				try { dbg.enterSubRule(389);
				try { dbg.enterDecision(389, decisionCanBacktrack[389]);

				int LA389_0 = input.LA(1);
				if ( (LA389_0==COMMENT||LA389_0==NL||LA389_0==WS) ) {
					alt389=1;
				}
				} finally {dbg.exitDecision(389);}

				switch (alt389) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:23: ws
						{
						dbg.location(679,23);
						pushFollow(FOLLOW_ws_in_synpred26_Css33023);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(389);}
				dbg.location(679,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred26_Css33026); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(390);}
		dbg.location(679,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:43: ( ws )?
		int alt391=2;
		try { dbg.enterSubRule(391);
		try { dbg.enterDecision(391, decisionCanBacktrack[391]);

		int LA391_0 = input.LA(1);
		if ( (LA391_0==COMMENT||LA391_0==NL||LA391_0==WS) ) {
			alt391=1;
		}
		} finally {dbg.exitDecision(391);}

		switch (alt391) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:43: ws
				{
				dbg.location(679,43);
				pushFollow(FOLLOW_ws_in_synpred26_Css33030);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(391);}
		dbg.location(679,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred26_Css33033); if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:8: cp_mixin_call
		{
		dbg.location(680,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred27_Css33056);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(681,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | selectorsGroup )
		int alt393=2;
		try { dbg.enterSubRule(393);
		try { dbg.enterDecision(393, decisionCanBacktrack[393]);

		int LA393_0 = input.LA(1);
		if ( (LA393_0==SASS_AT_ROOT) ) {
			alt393=1;
		}
		else if ( (LA393_0==AT_SIGN||(LA393_0 >= COLON && LA393_0 <= COMMA)||LA393_0==DCOLON||LA393_0==DOT||(LA393_0 >= GEN && LA393_0 <= GREATER)||(LA393_0 >= HASH && LA393_0 <= HASH_SYMBOL)||LA393_0==IDENT||LA393_0==LBRACKET||LA393_0==LESS_AND||LA393_0==MINUS||(LA393_0 >= PIPE && LA393_0 <= PLUS)||LA393_0==RBRACKET||LA393_0==SASS_EXTEND_ONLY_SELECTOR||LA393_0==STAR||LA393_0==TILDE) ) {
			alt393=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 393, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(393);}

		switch (alt393) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(681,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(681,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred28_Css33081); if (state.failed) return;dbg.location(681,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:23: ( ws selectorsGroup )?
				int alt392=2;
				try { dbg.enterSubRule(392);
				try { dbg.enterDecision(392, decisionCanBacktrack[392]);

				try {
					isCyclicDecision = true;
					alt392 = dfa392.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(392);}

				switch (alt392) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:24: ws selectorsGroup
						{
						dbg.location(681,24);
						pushFollow(FOLLOW_ws_in_synpred28_Css33084);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(681,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred28_Css33086);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(392);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:47: selectorsGroup
				{
				dbg.location(681,47);
				pushFollow(FOLLOW_selectorsGroup_in_synpred28_Css33093);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(393);}
		dbg.location(681,63);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:63: ( ws )?
		int alt394=2;
		try { dbg.enterSubRule(394);
		try { dbg.enterDecision(394, decisionCanBacktrack[394]);

		int LA394_0 = input.LA(1);
		if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
			alt394=1;
		}
		} finally {dbg.exitDecision(394);}

		switch (alt394) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:63: ws
				{
				dbg.location(681,63);
				pushFollow(FOLLOW_ws_in_synpred28_Css33096);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(394);}
		dbg.location(681,67);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred28_Css33099); if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:9: ( (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:11: (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE
		{
		dbg.location(699,11);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:11: (~ ( HASH_SYMBOL | LBRACE ) )*
		try { dbg.enterSubRule(395);

		loop395:
		while (true) {
			int alt395=2;
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			int LA395_0 = input.LA(1);
			if ( ((LA395_0 >= A && LA395_0 <= HASH)||(LA395_0 >= HEXCHAR && LA395_0 <= L)||(LA395_0 >= LBRACKET && LA395_0 <= Z)) ) {
				alt395=1;
			}

			} finally {dbg.exitDecision(395);}

			switch (alt395) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(699,11);
				if ( (input.LA(1) >= A && input.LA(1) <= HASH)||(input.LA(1) >= HEXCHAR && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop395;
			}
		}
		} finally {dbg.exitSubRule(395);}
		dbg.location(699,38);
		match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_synpred29_Css33237); if (state.failed) return;dbg.location(699,50);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred29_Css33239); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:18: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ( ws )? esPred
		{
		dbg.location(715,19);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ( ws )?
		int alt396=2;
		try { dbg.enterSubRule(396);
		try { dbg.enterDecision(396, decisionCanBacktrack[396]);

		int LA396_0 = input.LA(1);
		if ( (LA396_0==COMMENT||LA396_0==NL||LA396_0==WS) ) {
			alt396=1;
		}
		} finally {dbg.exitDecision(396);}

		switch (alt396) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:19: ws
				{
				dbg.location(715,19);
				pushFollow(FOLLOW_ws_in_synpred30_Css33366);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(396);}
		dbg.location(715,23);
		pushFollow(FOLLOW_esPred_in_synpred30_Css33369);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:21: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:22: ( ws )? esPred
		{
		dbg.location(717,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:22: ( ws )?
		int alt397=2;
		try { dbg.enterSubRule(397);
		try { dbg.enterDecision(397, decisionCanBacktrack[397]);

		int LA397_0 = input.LA(1);
		if ( (LA397_0==COMMENT||LA397_0==NL||LA397_0==WS) ) {
			alt397=1;
		}
		} finally {dbg.exitDecision(397);}

		switch (alt397) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:22: ws
				{
				dbg.location(717,22);
				pushFollow(FOLLOW_ws_in_synpred31_Css33389);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(397);}
		dbg.location(717,26);
		pushFollow(FOLLOW_esPred_in_synpred31_Css33392);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(731,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:8: ( IDENT | STAR )?
		int alt398=2;
		try { dbg.enterSubRule(398);
		try { dbg.enterDecision(398, decisionCanBacktrack[398]);

		int LA398_0 = input.LA(1);
		if ( (LA398_0==IDENT||LA398_0==STAR) ) {
			alt398=1;
		}
		} finally {dbg.exitDecision(398);}

		switch (alt398) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(731,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(398);}
		dbg.location(731,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred32_Css33484); if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(907,15);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt401=3;
		try { dbg.enterSubRule(401);
		try { dbg.enterDecision(401, decisionCanBacktrack[401]);

		try {
			isCyclicDecision = true;
			alt401 = dfa401.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(401);}

		switch (alt401) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:17: ws
				{
				dbg.location(907,17);
				pushFollow(FOLLOW_ws_in_synpred33_Css34883);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(907,22);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:23: ( ws )? operator ( ws )?
				{
				dbg.location(907,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:23: ( ws )?
				int alt399=2;
				try { dbg.enterSubRule(399);
				try { dbg.enterDecision(399, decisionCanBacktrack[399]);

				int LA399_0 = input.LA(1);
				if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {
					alt399=1;
				}
				} finally {dbg.exitDecision(399);}

				switch (alt399) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:23: ws
						{
						dbg.location(907,23);
						pushFollow(FOLLOW_ws_in_synpred33_Css34888);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(399);}
				dbg.location(907,27);
				pushFollow(FOLLOW_operator_in_synpred33_Css34891);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(907,36);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:36: ( ws )?
				int alt400=2;
				try { dbg.enterSubRule(400);
				try { dbg.enterDecision(400, decisionCanBacktrack[400]);

				int LA400_0 = input.LA(1);
				if ( (LA400_0==COMMENT||LA400_0==NL||LA400_0==WS) ) {
					alt400=1;
				}
				} finally {dbg.exitDecision(400);}

				switch (alt400) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:36: ws
						{
						dbg.location(907,36);
						pushFollow(FOLLOW_ws_in_synpred33_Css34893);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(400);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(401);}
		dbg.location(907,58);
		pushFollow(FOLLOW_term_in_synpred33_Css34902);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:10: functionName ( ws )? LPAREN
		{
		dbg.location(914,10);
		pushFollow(FOLLOW_functionName_in_synpred34_Css34975);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(914,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:23: ( ws )?
		int alt402=2;
		try { dbg.enterSubRule(402);
		try { dbg.enterDecision(402, decisionCanBacktrack[402]);

		int LA402_0 = input.LA(1);
		if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
			alt402=1;
		}
		} finally {dbg.exitDecision(402);}

		switch (alt402) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:23: ws
				{
				dbg.location(914,23);
				pushFollow(FOLLOW_ws_in_synpred34_Css34977);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(402);}
		dbg.location(914,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred34_Css34980); if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(975,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred35_Css35497);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(975,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:26: ( ws )?
		int alt403=2;
		try { dbg.enterSubRule(403);
		try { dbg.enterDecision(403, decisionCanBacktrack[403]);

		int LA403_0 = input.LA(1);
		if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
			alt403=1;
		}
		} finally {dbg.exitDecision(403);}

		switch (alt403) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:26: ws
				{
				dbg.location(975,26);
				pushFollow(FOLLOW_ws_in_synpred35_Css35499);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(403);}
		dbg.location(975,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:12: cp_expression
		{
		dbg.location(976,12);
		pushFollow(FOLLOW_cp_expression_in_synpred36_Css35537);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(988,21);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt406=3;
		try { dbg.enterSubRule(406);
		try { dbg.enterDecision(406, decisionCanBacktrack[406]);

		try {
			isCyclicDecision = true;
			alt406 = dfa406.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(406);}

		switch (alt406) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:23: ws
				{
				dbg.location(988,23);
				pushFollow(FOLLOW_ws_in_synpred37_Css35631);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(988,28);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(988,29);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:29: ( ws )?
				int alt404=2;
				try { dbg.enterSubRule(404);
				try { dbg.enterDecision(404, decisionCanBacktrack[404]);

				int LA404_0 = input.LA(1);
				if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
					alt404=1;
				}
				} finally {dbg.exitDecision(404);}

				switch (alt404) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:29: ws
						{
						dbg.location(988,29);
						pushFollow(FOLLOW_ws_in_synpred37_Css35636);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(404);}
				dbg.location(988,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred37_Css35639); if (state.failed) return;dbg.location(988,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:41: ( ws )?
				int alt405=2;
				try { dbg.enterSubRule(405);
				try { dbg.enterDecision(405, decisionCanBacktrack[405]);

				int LA405_0 = input.LA(1);
				if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {
					alt405=1;
				}
				} finally {dbg.exitDecision(405);}

				switch (alt405) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:41: ws
						{
						dbg.location(988,41);
						pushFollow(FOLLOW_ws_in_synpred37_Css35641);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(405);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(406);}
		dbg.location(988,63);
		pushFollow(FOLLOW_term_in_synpred37_Css35650);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1023,7);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:7: ( ws )?
		int alt407=2;
		try { dbg.enterSubRule(407);
		try { dbg.enterDecision(407, decisionCanBacktrack[407]);

		int LA407_0 = input.LA(1);
		if ( (LA407_0==COMMENT||LA407_0==NL||LA407_0==WS) ) {
			alt407=1;
		}
		} finally {dbg.exitDecision(407);}

		switch (alt407) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:7: ws
				{
				dbg.location(1023,7);
				pushFollow(FOLLOW_ws_in_synpred38_Css36084);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(407);}
		dbg.location(1023,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred38_Css36087); if (state.failed) return;dbg.location(1023,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:17: ( ws )?
		int alt408=2;
		try { dbg.enterSubRule(408);
		try { dbg.enterDecision(408, decisionCanBacktrack[408]);

		int LA408_0 = input.LA(1);
		if ( (LA408_0==COMMENT||LA408_0==NL||LA408_0==WS) ) {
			alt408=1;
		}
		} finally {dbg.exitDecision(408);}

		switch (alt408) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:17: ws
				{
				dbg.location(1023,17);
				pushFollow(FOLLOW_ws_in_synpred38_Css36089);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(408);}
		dbg.location(1023,21);
		pushFollow(FOLLOW_cp_expression_in_synpred38_Css36092);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:10: ( ws )? cp_expression_operator
		{
		dbg.location(1040,10);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:10: ( ws )?
		int alt409=2;
		try { dbg.enterSubRule(409);
		try { dbg.enterDecision(409, decisionCanBacktrack[409]);

		int LA409_0 = input.LA(1);
		if ( (LA409_0==COMMENT||LA409_0==NL||LA409_0==WS) ) {
			alt409=1;
		}
		} finally {dbg.exitDecision(409);}

		switch (alt409) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:10: ws
				{
				dbg.location(1040,10);
				pushFollow(FOLLOW_ws_in_synpred39_Css36153);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(409);}
		dbg.location(1040,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred39_Css36156);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:12: ( ws )? cp_expression_atom
		{
		dbg.location(1041,12);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:12: ( ws )?
		int alt410=2;
		try { dbg.enterSubRule(410);
		try { dbg.enterDecision(410, decisionCanBacktrack[410]);

		int LA410_0 = input.LA(1);
		if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
			alt410=1;
		}
		} finally {dbg.exitDecision(410);}

		switch (alt410) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:12: ws
				{
				dbg.location(1041,12);
				pushFollow(FOLLOW_ws_in_synpred40_Css36182);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(410);}
		dbg.location(1041,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred40_Css36185);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:14: cp_math_expression
		{
		dbg.location(1054,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred41_Css36304);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1081,14);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:14: ( ws )?
		int alt411=2;
		try { dbg.enterSubRule(411);
		try { dbg.enterDecision(411, decisionCanBacktrack[411]);

		int LA411_0 = input.LA(1);
		if ( (LA411_0==COMMENT||LA411_0==NL||LA411_0==WS) ) {
			alt411=1;
		}
		} finally {dbg.exitDecision(411);}

		switch (alt411) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:14: ws
				{
				dbg.location(1081,14);
				pushFollow(FOLLOW_ws_in_synpred42_Css36437);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(411);}
		dbg.location(1081,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:13: ( sass_interpolation_expression_var )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:14: sass_interpolation_expression_var
		{
		dbg.location(1215,14);
		pushFollow(FOLLOW_sass_interpolation_expression_var_in_synpred43_Css37428);
		sass_interpolation_expression_var();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1222:17: ( sass_interpolation_expression_var )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1222:18: sass_interpolation_expression_var
		{
		dbg.location(1222,18);
		pushFollow(FOLLOW_sass_interpolation_expression_var_in_synpred44_Css37574);
		sass_interpolation_expression_var();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:13: ( sass_interpolation_expression_var )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:14: sass_interpolation_expression_var
		{
		dbg.location(1233,14);
		pushFollow(FOLLOW_sass_interpolation_expression_var_in_synpred45_Css37725);
		sass_interpolation_expression_var();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:17: ( sass_interpolation_expression_var )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:18: sass_interpolation_expression_var
		{
		dbg.location(1240,18);
		pushFollow(FOLLOW_sass_interpolation_expression_var_in_synpred46_Css37842);
		sass_interpolation_expression_var();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:20: ( ws )? COMMA
		{
		dbg.location(1325,20);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:20: ( ws )?
		int alt412=2;
		try { dbg.enterSubRule(412);
		try { dbg.enterDecision(412, decisionCanBacktrack[412]);

		int LA412_0 = input.LA(1);
		if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
			alt412=1;
		}
		} finally {dbg.exitDecision(412);}

		switch (alt412) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:20: ws
				{
				dbg.location(1325,20);
				pushFollow(FOLLOW_ws_in_synpred47_Css38390);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(412);}
		dbg.location(1325,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred47_Css38393); if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// Delegated rules

	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA24 dfa24 = new DFA24(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA43 dfa43 = new DFA43(this);
	protected DFA45 dfa45 = new DFA45(this);
	protected DFA54 dfa54 = new DFA54(this);
	protected DFA57 dfa57 = new DFA57(this);
	protected DFA62 dfa62 = new DFA62(this);
	protected DFA70 dfa70 = new DFA70(this);
	protected DFA97 dfa97 = new DFA97(this);
	protected DFA104 dfa104 = new DFA104(this);
	protected DFA108 dfa108 = new DFA108(this);
	protected DFA127 dfa127 = new DFA127(this);
	protected DFA134 dfa134 = new DFA134(this);
	protected DFA135 dfa135 = new DFA135(this);
	protected DFA141 dfa141 = new DFA141(this);
	protected DFA146 dfa146 = new DFA146(this);
	protected DFA148 dfa148 = new DFA148(this);
	protected DFA153 dfa153 = new DFA153(this);
	protected DFA152 dfa152 = new DFA152(this);
	protected DFA160 dfa160 = new DFA160(this);
	protected DFA159 dfa159 = new DFA159(this);
	protected DFA182 dfa182 = new DFA182(this);
	protected DFA191 dfa191 = new DFA191(this);
	protected DFA201 dfa201 = new DFA201(this);
	protected DFA200 dfa200 = new DFA200(this);
	protected DFA212 dfa212 = new DFA212(this);
	protected DFA222 dfa222 = new DFA222(this);
	protected DFA221 dfa221 = new DFA221(this);
	protected DFA231 dfa231 = new DFA231(this);
	protected DFA240 dfa240 = new DFA240(this);
	protected DFA251 dfa251 = new DFA251(this);
	protected DFA256 dfa256 = new DFA256(this);
	protected DFA261 dfa261 = new DFA261(this);
	protected DFA265 dfa265 = new DFA265(this);
	protected DFA271 dfa271 = new DFA271(this);
	protected DFA275 dfa275 = new DFA275(this);
	protected DFA277 dfa277 = new DFA277(this);
	protected DFA287 dfa287 = new DFA287(this);
	protected DFA290 dfa290 = new DFA290(this);
	protected DFA305 dfa305 = new DFA305(this);
	protected DFA321 dfa321 = new DFA321(this);
	protected DFA325 dfa325 = new DFA325(this);
	protected DFA333 dfa333 = new DFA333(this);
	protected DFA337 dfa337 = new DFA337(this);
	protected DFA344 dfa344 = new DFA344(this);
	protected DFA343 dfa343 = new DFA343(this);
	protected DFA349 dfa349 = new DFA349(this);
	protected DFA367 dfa367 = new DFA367(this);
	protected DFA390 dfa390 = new DFA390(this);
	protected DFA392 dfa392 = new DFA392(this);
	protected DFA401 dfa401 = new DFA401(this);
	protected DFA406 dfa406 = new DFA406(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u008f\1\u0090\1\uffff\1\u0090\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\2\2\2\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\3\uffff"+
			"\1\2\2\uffff\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\73\uffff\1\3\56\uffff\1\4\17\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\73\uffff\1\3\56\uffff\1\4\17\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "333:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u008f\1\u0090\1\uffff\1\u0090\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\2\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\3\uffff\1\2\2\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\56\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\56\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "335:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u008f\1\uffff\2\u0090\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\3\1\2\uffff\1\1\5\uffff\1\1\1\uffff\1\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff"+
			"\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff"+
			"\3\1\2\uffff\3\1\1\uffff\6\1\1\uffff\3\1\1\uffff\5\1\1\uffff\1\1\2\uffff"+
			"\1\1\1\uffff\5\1\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\56\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\56\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 342:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA32_eotS =
		"\10\uffff";
	static final String DFA32_eofS =
		"\10\uffff";
	static final String DFA32_minS =
		"\1\64\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_maxS =
		"\1\64\2\u0090\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA32_specialS =
		"\3\uffff\1\1\1\uffff\1\0\2\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\1",
			"\1\2\60\uffff\1\4\12\uffff\1\2\56\uffff\1\3\12\uffff\1\3\4\uffff\1\2",
			"\1\2\60\uffff\1\4\12\uffff\1\2\56\uffff\1\5\12\uffff\1\5\4\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "370:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA32_5 = input.LA(1);
						 
						int index32_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_5);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA32_3 = input.LA(1);
						 
						int index32_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 32, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA24_eotS =
		"\6\uffff";
	static final String DFA24_eofS =
		"\2\2\4\uffff";
	static final String DFA24_minS =
		"\2\6\1\uffff\2\23\1\uffff";
	static final String DFA24_maxS =
		"\2\u0090\1\uffff\2\u0090\1\uffff";
	static final String DFA24_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA24_specialS =
		"\6\uffff}>";
	static final String[] DFA24_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\1",
			"",
			"\2\2\1\4\11\uffff\1\2\13\uffff\1\2\2\uffff\2\2\2\uffff\1\2\7\uffff\2"+
			"\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\4\20\uffff\1\2\34\uffff\1\2\1\5"+
			"\12\uffff\1\5\4\uffff\1\4",
			"\2\2\1\4\11\uffff\1\2\13\uffff\1\2\2\uffff\2\2\2\uffff\1\2\7\uffff\2"+
			"\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\4\20\uffff\1\2\34\uffff\1\2\1\5"+
			"\12\uffff\1\5\4\uffff\1\4",
			""
	};

	static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
	static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
	static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
	static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
	static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
	static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
	static final short[][] DFA24_transition;

	static {
		int numStates = DFA24_transitionS.length;
		DFA24_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
		}
	}

	protected class DFA24 extends DFA {

		public DFA24(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 24;
			this.eot = DFA24_eot;
			this.eof = DFA24_eof;
			this.min = DFA24_min;
			this.max = DFA24_max;
			this.accept = DFA24_accept;
			this.special = DFA24_special;
			this.transition = DFA24_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 375:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\6\uffff";
	static final String DFA38_eofS =
		"\6\uffff";
	static final String DFA38_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_maxS =
		"\2\u0090\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA38_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA38_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "392:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA38_4 = input.LA(1);
						 
						int index38_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA38_2 = input.LA(1);
						 
						int index38_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 38, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA43_eotS =
		"\4\uffff";
	static final String DFA43_eofS =
		"\4\uffff";
	static final String DFA43_minS =
		"\2\6\2\uffff";
	static final String DFA43_maxS =
		"\2\u0090\2\uffff";
	static final String DFA43_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA43_specialS =
		"\4\uffff}>";
	static final String[] DFA43_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
	static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
	static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
	static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
	static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
	static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
	static final short[][] DFA43_transition;

	static {
		int numStates = DFA43_transitionS.length;
		DFA43_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
		}
	}

	protected class DFA43 extends DFA {

		public DFA43(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 43;
			this.eot = DFA43_eot;
			this.eof = DFA43_eof;
			this.min = DFA43_min;
			this.max = DFA43_max;
			this.accept = DFA43_accept;
			this.special = DFA43_special;
			this.transition = DFA43_transition;
		}
		@Override
		public String getDescription() {
			return "402:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA45_eotS =
		"\4\uffff";
	static final String DFA45_eofS =
		"\4\uffff";
	static final String DFA45_minS =
		"\2\6\2\uffff";
	static final String DFA45_maxS =
		"\2\u0090\2\uffff";
	static final String DFA45_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA45_specialS =
		"\4\uffff}>";
	static final String[] DFA45_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA45_eot = DFA.unpackEncodedString(DFA45_eotS);
	static final short[] DFA45_eof = DFA.unpackEncodedString(DFA45_eofS);
	static final char[] DFA45_min = DFA.unpackEncodedStringToUnsignedChars(DFA45_minS);
	static final char[] DFA45_max = DFA.unpackEncodedStringToUnsignedChars(DFA45_maxS);
	static final short[] DFA45_accept = DFA.unpackEncodedString(DFA45_acceptS);
	static final short[] DFA45_special = DFA.unpackEncodedString(DFA45_specialS);
	static final short[][] DFA45_transition;

	static {
		int numStates = DFA45_transitionS.length;
		DFA45_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA45_transition[i] = DFA.unpackEncodedString(DFA45_transitionS[i]);
		}
	}

	protected class DFA45 extends DFA {

		public DFA45(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 45;
			this.eot = DFA45_eot;
			this.eof = DFA45_eof;
			this.min = DFA45_min;
			this.max = DFA45_max;
			this.accept = DFA45_accept;
			this.special = DFA45_special;
			this.transition = DFA45_transition;
		}
		@Override
		public String getDescription() {
			return "403:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA54_eotS =
		"\10\uffff";
	static final String DFA54_eofS =
		"\2\2\6\uffff";
	static final String DFA54_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA54_maxS =
		"\2\u0090\1\uffff\3\u0090\1\uffff\1\u0090";
	static final String DFA54_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA54_specialS =
		"\10\uffff}>";
	static final String[] DFA54_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\7"
	};

	static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
	static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
	static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
	static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
	static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
	static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
	static final short[][] DFA54_transition;

	static {
		int numStates = DFA54_transitionS.length;
		DFA54_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
		}
	}

	protected class DFA54 extends DFA {

		public DFA54(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 54;
			this.eot = DFA54_eot;
			this.eof = DFA54_eof;
			this.min = DFA54_min;
			this.max = DFA54_max;
			this.accept = DFA54_accept;
			this.special = DFA54_special;
			this.transition = DFA54_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 425:43: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA57_eotS =
		"\10\uffff";
	static final String DFA57_eofS =
		"\2\2\6\uffff";
	static final String DFA57_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA57_maxS =
		"\2\u0090\1\uffff\3\u0090\1\uffff\1\u0090";
	static final String DFA57_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA57_specialS =
		"\10\uffff}>";
	static final String[] DFA57_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\3\uffff\1\2\16\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15"+
			"\uffff\1\7"
	};

	static final short[] DFA57_eot = DFA.unpackEncodedString(DFA57_eotS);
	static final short[] DFA57_eof = DFA.unpackEncodedString(DFA57_eofS);
	static final char[] DFA57_min = DFA.unpackEncodedStringToUnsignedChars(DFA57_minS);
	static final char[] DFA57_max = DFA.unpackEncodedStringToUnsignedChars(DFA57_maxS);
	static final short[] DFA57_accept = DFA.unpackEncodedString(DFA57_acceptS);
	static final short[] DFA57_special = DFA.unpackEncodedString(DFA57_specialS);
	static final short[][] DFA57_transition;

	static {
		int numStates = DFA57_transitionS.length;
		DFA57_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA57_transition[i] = DFA.unpackEncodedString(DFA57_transitionS[i]);
		}
	}

	protected class DFA57 extends DFA {

		public DFA57(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 57;
			this.eot = DFA57_eot;
			this.eof = DFA57_eof;
			this.min = DFA57_min;
			this.max = DFA57_max;
			this.accept = DFA57_accept;
			this.special = DFA57_special;
			this.transition = DFA57_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 426:23: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA62_eotS =
		"\4\uffff";
	static final String DFA62_eofS =
		"\4\uffff";
	static final String DFA62_minS =
		"\2\23\2\uffff";
	static final String DFA62_maxS =
		"\2\u0090\2\uffff";
	static final String DFA62_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA62_specialS =
		"\4\uffff}>";
	static final String[] DFA62_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\47\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\47\uffff\1\1",
			"",
			""
	};

	static final short[] DFA62_eot = DFA.unpackEncodedString(DFA62_eotS);
	static final short[] DFA62_eof = DFA.unpackEncodedString(DFA62_eofS);
	static final char[] DFA62_min = DFA.unpackEncodedStringToUnsignedChars(DFA62_minS);
	static final char[] DFA62_max = DFA.unpackEncodedStringToUnsignedChars(DFA62_maxS);
	static final short[] DFA62_accept = DFA.unpackEncodedString(DFA62_acceptS);
	static final short[] DFA62_special = DFA.unpackEncodedString(DFA62_specialS);
	static final short[][] DFA62_transition;

	static {
		int numStates = DFA62_transitionS.length;
		DFA62_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA62_transition[i] = DFA.unpackEncodedString(DFA62_transitionS[i]);
		}
	}

	protected class DFA62 extends DFA {

		public DFA62(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 62;
			this.eot = DFA62_eot;
			this.eof = DFA62_eof;
			this.min = DFA62_min;
			this.max = DFA62_max;
			this.accept = DFA62_accept;
			this.special = DFA62_special;
			this.transition = DFA62_transition;
		}
		@Override
		public String getDescription() {
			return "440:29: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA70_eotS =
		"\6\uffff";
	static final String DFA70_eofS =
		"\2\3\4\uffff";
	static final String DFA70_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA70_maxS =
		"\2\u0090\1\0\1\uffff\1\0\1\uffff";
	static final String DFA70_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA70_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA70_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
	static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
	static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
	static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
	static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
	static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
	static final short[][] DFA70_transition;

	static {
		int numStates = DFA70_transitionS.length;
		DFA70_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
		}
	}

	protected class DFA70 extends DFA {

		public DFA70(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 70;
			this.eot = DFA70_eot;
			this.eof = DFA70_eof;
			this.min = DFA70_min;
			this.max = DFA70_max;
			this.accept = DFA70_accept;
			this.special = DFA70_special;
			this.transition = DFA70_transition;
		}
		@Override
		public String getDescription() {
			return "460:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA70_4 = input.LA(1);
						 
						int index70_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index70_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA70_2 = input.LA(1);
						 
						int index70_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred11_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index70_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 70, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA97_eotS =
		"\4\uffff";
	static final String DFA97_eofS =
		"\4\uffff";
	static final String DFA97_minS =
		"\2\24\2\uffff";
	static final String DFA97_maxS =
		"\2\u0090\2\uffff";
	static final String DFA97_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA97_specialS =
		"\4\uffff}>";
	static final String[] DFA97_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA97_eot = DFA.unpackEncodedString(DFA97_eotS);
	static final short[] DFA97_eof = DFA.unpackEncodedString(DFA97_eofS);
	static final char[] DFA97_min = DFA.unpackEncodedStringToUnsignedChars(DFA97_minS);
	static final char[] DFA97_max = DFA.unpackEncodedStringToUnsignedChars(DFA97_maxS);
	static final short[] DFA97_accept = DFA.unpackEncodedString(DFA97_acceptS);
	static final short[] DFA97_special = DFA.unpackEncodedString(DFA97_specialS);
	static final short[][] DFA97_transition;

	static {
		int numStates = DFA97_transitionS.length;
		DFA97_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA97_transition[i] = DFA.unpackEncodedString(DFA97_transitionS[i]);
		}
	}

	protected class DFA97 extends DFA {

		public DFA97(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 97;
			this.eot = DFA97_eot;
			this.eof = DFA97_eof;
			this.min = DFA97_min;
			this.max = DFA97_max;
			this.accept = DFA97_accept;
			this.special = DFA97_special;
			this.transition = DFA97_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 541:25: ( ( ws )? COMMA ( ws )? ( IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA104_eotS =
		"\5\uffff";
	static final String DFA104_eofS =
		"\5\uffff";
	static final String DFA104_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA104_maxS =
		"\1\u008f\1\uffff\2\u0090\1\uffff";
	static final String DFA104_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA104_specialS =
		"\5\uffff}>";
	static final String[] DFA104_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\7\uffff\1\1\7\uffff\1\1\2\uffff"+
			"\1\1\3\uffff\2\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff"+
			"\1\1\11\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\3\1\1\uffff\2\1\1"+
			"\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\76\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\76\uffff\1\3",
			""
	};

	static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
	static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
	static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
	static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
	static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
	static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
	static final short[][] DFA104_transition;

	static {
		int numStates = DFA104_transitionS.length;
		DFA104_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
		}
	}

	protected class DFA104 extends DFA {

		public DFA104(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 104;
			this.eot = DFA104_eot;
			this.eof = DFA104_eof;
			this.min = DFA104_min;
			this.max = DFA104_max;
			this.accept = DFA104_accept;
			this.special = DFA104_special;
			this.transition = DFA104_transition;
		}
		@Override
		public String getDescription() {
			return "549:14: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA108_eotS =
		"\5\uffff";
	static final String DFA108_eofS =
		"\5\uffff";
	static final String DFA108_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA108_maxS =
		"\1\u008f\1\uffff\2\u0090\1\uffff";
	static final String DFA108_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA108_specialS =
		"\5\uffff}>";
	static final String[] DFA108_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\7\uffff\1\1\7\uffff\1\1\2\uffff"+
			"\1\1\3\uffff\2\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff"+
			"\1\1\11\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\3\1\1\uffff\2\1\1"+
			"\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\76\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\76\uffff\1\3",
			""
	};

	static final short[] DFA108_eot = DFA.unpackEncodedString(DFA108_eotS);
	static final short[] DFA108_eof = DFA.unpackEncodedString(DFA108_eofS);
	static final char[] DFA108_min = DFA.unpackEncodedStringToUnsignedChars(DFA108_minS);
	static final char[] DFA108_max = DFA.unpackEncodedStringToUnsignedChars(DFA108_maxS);
	static final short[] DFA108_accept = DFA.unpackEncodedString(DFA108_acceptS);
	static final short[] DFA108_special = DFA.unpackEncodedString(DFA108_specialS);
	static final short[][] DFA108_transition;

	static {
		int numStates = DFA108_transitionS.length;
		DFA108_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA108_transition[i] = DFA.unpackEncodedString(DFA108_transitionS[i]);
		}
	}

	protected class DFA108 extends DFA {

		public DFA108(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 108;
			this.eot = DFA108_eot;
			this.eof = DFA108_eof;
			this.min = DFA108_min;
			this.max = DFA108_max;
			this.accept = DFA108_accept;
			this.special = DFA108_special;
			this.transition = DFA108_transition;
		}
		@Override
		public String getDescription() {
			return "549:60: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA127_eotS =
		"\6\uffff";
	static final String DFA127_eofS =
		"\6\uffff";
	static final String DFA127_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA127_maxS =
		"\2\u0090\1\0\1\uffff\1\0\1\uffff";
	static final String DFA127_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA127_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA127_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\7\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff\1\3\7\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3"+
			"\3\1\uffff\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\7\uffff\5\3\6\uffff"+
			"\1\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\7\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff\1\3\7\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3"+
			"\3\1\uffff\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\7\uffff\5\3\6\uffff"+
			"\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
	static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
	static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
	static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
	static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
	static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
	static final short[][] DFA127_transition;

	static {
		int numStates = DFA127_transitionS.length;
		DFA127_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
		}
	}

	protected class DFA127 extends DFA {

		public DFA127(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 127;
			this.eot = DFA127_eot;
			this.eof = DFA127_eof;
			this.min = DFA127_min;
			this.max = DFA127_max;
			this.accept = DFA127_accept;
			this.special = DFA127_special;
			this.transition = DFA127_transition;
		}
		@Override
		public String getDescription() {
			return "636:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA127_4 = input.LA(1);
						 
						int index127_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred18_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index127_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA127_2 = input.LA(1);
						 
						int index127_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred18_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index127_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 127, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA134_eotS =
		"\4\uffff";
	static final String DFA134_eofS =
		"\4\uffff";
	static final String DFA134_minS =
		"\2\6\2\uffff";
	static final String DFA134_maxS =
		"\2\u0090\2\uffff";
	static final String DFA134_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA134_specialS =
		"\4\uffff}>";
	static final String[] DFA134_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\7\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3"+
			"\11\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\7\uffff\5\3\6\uffff\1"+
			"\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\7\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3"+
			"\11\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\7\uffff\5\3\6\uffff\1"+
			"\3\1\1",
			"",
			""
	};

	static final short[] DFA134_eot = DFA.unpackEncodedString(DFA134_eotS);
	static final short[] DFA134_eof = DFA.unpackEncodedString(DFA134_eofS);
	static final char[] DFA134_min = DFA.unpackEncodedStringToUnsignedChars(DFA134_minS);
	static final char[] DFA134_max = DFA.unpackEncodedStringToUnsignedChars(DFA134_maxS);
	static final short[] DFA134_accept = DFA.unpackEncodedString(DFA134_acceptS);
	static final short[] DFA134_special = DFA.unpackEncodedString(DFA134_specialS);
	static final short[][] DFA134_transition;

	static {
		int numStates = DFA134_transitionS.length;
		DFA134_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA134_transition[i] = DFA.unpackEncodedString(DFA134_transitionS[i]);
		}
	}

	protected class DFA134 extends DFA {

		public DFA134(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 134;
			this.eot = DFA134_eot;
			this.eof = DFA134_eof;
			this.min = DFA134_min;
			this.max = DFA134_max;
			this.accept = DFA134_accept;
			this.special = DFA134_special;
			this.transition = DFA134_transition;
		}
		@Override
		public String getDescription() {
			return "644:46: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA135_eotS =
		"\4\uffff";
	static final String DFA135_eofS =
		"\4\uffff";
	static final String DFA135_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA135_maxS =
		"\2\u0090\2\uffff";
	static final String DFA135_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA135_specialS =
		"\4\uffff}>";
	static final String[] DFA135_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"\1\3\13\uffff\2\3\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff\2"+
			"\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\3\uffff\1\3\16\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff"+
			"\1\1",
			"",
			""
	};

	static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
	static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
	static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
	static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
	static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
	static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
	static final short[][] DFA135_transition;

	static {
		int numStates = DFA135_transitionS.length;
		DFA135_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
		}
	}

	protected class DFA135 extends DFA {

		public DFA135(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 135;
			this.eot = DFA135_eot;
			this.eof = DFA135_eof;
			this.min = DFA135_min;
			this.max = DFA135_max;
			this.accept = DFA135_accept;
			this.special = DFA135_special;
			this.transition = DFA135_transition;
		}
		@Override
		public String getDescription() {
			return "649:20: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA141_eotS =
		"\6\uffff";
	static final String DFA141_eofS =
		"\6\uffff";
	static final String DFA141_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA141_maxS =
		"\2\u0090\1\0\1\uffff\1\0\1\uffff";
	static final String DFA141_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA141_specialS =
		"\2\uffff\1\1\1\uffff\1\0\1\uffff}>";
	static final String[] DFA141_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA141_eot = DFA.unpackEncodedString(DFA141_eotS);
	static final short[] DFA141_eof = DFA.unpackEncodedString(DFA141_eofS);
	static final char[] DFA141_min = DFA.unpackEncodedStringToUnsignedChars(DFA141_minS);
	static final char[] DFA141_max = DFA.unpackEncodedStringToUnsignedChars(DFA141_maxS);
	static final short[] DFA141_accept = DFA.unpackEncodedString(DFA141_acceptS);
	static final short[] DFA141_special = DFA.unpackEncodedString(DFA141_specialS);
	static final short[][] DFA141_transition;

	static {
		int numStates = DFA141_transitionS.length;
		DFA141_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA141_transition[i] = DFA.unpackEncodedString(DFA141_transitionS[i]);
		}
	}

	protected class DFA141 extends DFA {

		public DFA141(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 141;
			this.eot = DFA141_eot;
			this.eof = DFA141_eof;
			this.min = DFA141_min;
			this.max = DFA141_max;
			this.accept = DFA141_accept;
			this.special = DFA141_special;
			this.transition = DFA141_transition;
		}
		@Override
		public String getDescription() {
			return "663:24: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA141_4 = input.LA(1);
						 
						int index141_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred19_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index141_4);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA141_2 = input.LA(1);
						 
						int index141_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred19_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index141_2);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 141, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA146_eotS =
		"\4\uffff";
	static final String DFA146_eofS =
		"\4\uffff";
	static final String DFA146_minS =
		"\2\6\2\uffff";
	static final String DFA146_maxS =
		"\2\u0090\2\uffff";
	static final String DFA146_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA146_specialS =
		"\4\uffff}>";
	static final String[] DFA146_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA146_eot = DFA.unpackEncodedString(DFA146_eotS);
	static final short[] DFA146_eof = DFA.unpackEncodedString(DFA146_eofS);
	static final char[] DFA146_min = DFA.unpackEncodedStringToUnsignedChars(DFA146_minS);
	static final char[] DFA146_max = DFA.unpackEncodedStringToUnsignedChars(DFA146_maxS);
	static final short[] DFA146_accept = DFA.unpackEncodedString(DFA146_acceptS);
	static final short[] DFA146_special = DFA.unpackEncodedString(DFA146_specialS);
	static final short[][] DFA146_transition;

	static {
		int numStates = DFA146_transitionS.length;
		DFA146_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA146_transition[i] = DFA.unpackEncodedString(DFA146_transitionS[i]);
		}
	}

	protected class DFA146 extends DFA {

		public DFA146(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 146;
			this.eot = DFA146_eot;
			this.eof = DFA146_eof;
			this.min = DFA146_min;
			this.max = DFA146_max;
			this.accept = DFA146_accept;
			this.special = DFA146_special;
			this.transition = DFA146_transition;
		}
		@Override
		public String getDescription() {
			return "679:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA148_eotS =
		"\4\uffff";
	static final String DFA148_eofS =
		"\4\uffff";
	static final String DFA148_minS =
		"\2\6\2\uffff";
	static final String DFA148_maxS =
		"\2\u0090\2\uffff";
	static final String DFA148_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA148_specialS =
		"\4\uffff}>";
	static final String[] DFA148_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA148_eot = DFA.unpackEncodedString(DFA148_eotS);
	static final short[] DFA148_eof = DFA.unpackEncodedString(DFA148_eofS);
	static final char[] DFA148_min = DFA.unpackEncodedStringToUnsignedChars(DFA148_minS);
	static final char[] DFA148_max = DFA.unpackEncodedStringToUnsignedChars(DFA148_maxS);
	static final short[] DFA148_accept = DFA.unpackEncodedString(DFA148_acceptS);
	static final short[] DFA148_special = DFA.unpackEncodedString(DFA148_specialS);
	static final short[][] DFA148_transition;

	static {
		int numStates = DFA148_transitionS.length;
		DFA148_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA148_transition[i] = DFA.unpackEncodedString(DFA148_transitionS[i]);
		}
	}

	protected class DFA148 extends DFA {

		public DFA148(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 148;
			this.eot = DFA148_eot;
			this.eof = DFA148_eof;
			this.min = DFA148_min;
			this.max = DFA148_max;
			this.accept = DFA148_accept;
			this.special = DFA148_special;
			this.transition = DFA148_transition;
		}
		@Override
		public String getDescription() {
			return "680:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA153_eotS =
		"\53\uffff";
	static final String DFA153_eofS =
		"\53\uffff";
	static final String DFA153_minS =
		"\3\7\1\0\1\uffff\3\0\1\7\2\23\5\uffff\2\7\1\0\1\uffff\3\0\1\7\2\23\1\0"+
		"\1\23\1\11\1\23\5\0\1\uffff\2\0\2\11\3\0";
	static final String DFA153_maxS =
		"\1\u0082\2\u0090\1\0\1\uffff\3\0\3\u0090\5\uffff\2\u0090\1\0\1\uffff\3"+
		"\0\3\u0090\1\0\3\u0090\5\0\1\uffff\2\0\2\u0090\3\0";
	static final String DFA153_acceptS =
		"\4\uffff\1\2\6\uffff\5\1\3\uffff\1\1\17\uffff\1\1\7\uffff";
	static final String DFA153_specialS =
		"\1\7\1\0\1\27\1\30\1\uffff\1\17\1\42\1\41\1\16\1\40\1\3\5\uffff\1\5\1"+
		"\36\1\25\1\uffff\1\32\1\11\1\26\1\12\1\6\1\4\1\2\1\15\1\14\1\35\1\34\1"+
		"\24\1\31\1\10\1\23\1\uffff\1\1\1\33\1\13\1\37\1\22\1\21\1\20}>";
	static final String[] DFA153_transitionS = {
			"\1\4\13\uffff\1\12\1\13\10\uffff\1\4\1\uffff\1\10\12\uffff\1\4\1\2\2"+
			"\uffff\1\7\1\1\2\uffff\1\3\10\uffff\1\11\5\uffff\1\6\7\uffff\1\13\23"+
			"\uffff\2\4\3\uffff\1\13\16\uffff\1\4\15\uffff\1\5\2\uffff\1\4",
			"\1\4\13\uffff\2\17\1\15\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16"+
			"\2\uffff\1\17\7\uffff\1\14\1\17\5\uffff\1\17\7\uffff\1\17\5\uffff\1\4"+
			"\1\uffff\1\15\20\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\1\4\13\uffff\1\31\1\17\1\20\7\uffff\1\4\1\uffff\1\27\12\uffff\1\4\1"+
			"\17\2\uffff\1\26\1\21\2\uffff\1\22\7\uffff\1\23\1\30\5\uffff\1\25\7\uffff"+
			"\1\17\7\uffff\1\20\13\uffff\1\4\4\uffff\1\17\16\uffff\1\4\15\uffff\1"+
			"\24\20\uffff\1\20",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\4\13\uffff\2\17\1\15\11\uffff\1\17\12\uffff\1\4\1\17\2\uffff\1\17"+
			"\1\16\2\uffff\1\32\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff"+
			"\1\15\3\uffff\1\4\14\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\2\17\1\33\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\34"+
			"\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\33\13\uffff\1"+
			"\4\4\uffff\1\17\34\uffff\1\35\20\uffff\1\33",
			"\2\17\1\15\11\uffff\1\17\12\uffff\1\4\1\17\2\uffff\1\17\1\16\2\uffff"+
			"\1\36\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\15\3\uffff"+
			"\1\4\14\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"",
			"",
			"",
			"",
			"",
			"\1\4\13\uffff\1\31\1\17\1\20\7\uffff\1\4\1\uffff\1\27\12\uffff\1\4\1"+
			"\17\2\uffff\1\42\1\21\2\uffff\1\37\7\uffff\1\23\1\30\5\uffff\1\41\7\uffff"+
			"\1\17\7\uffff\1\20\13\uffff\1\4\4\uffff\1\17\16\uffff\1\4\15\uffff\1"+
			"\40\20\uffff\1\20",
			"\1\4\13\uffff\2\17\1\15\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16"+
			"\2\uffff\1\17\7\uffff\1\43\1\17\5\uffff\1\17\7\uffff\1\17\5\uffff\1\4"+
			"\1\uffff\1\15\20\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\4\13\uffff\2\17\1\15\11\uffff\1\17\12\uffff\1\4\1\17\2\uffff\1\17"+
			"\1\16\2\uffff\1\44\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff"+
			"\1\15\3\uffff\1\4\14\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\2\17\1\33\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\34"+
			"\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\33\13\uffff\1"+
			"\4\4\uffff\1\17\34\uffff\1\35\20\uffff\1\33",
			"\2\17\1\15\11\uffff\1\17\12\uffff\1\4\1\17\2\uffff\1\17\1\16\2\uffff"+
			"\1\45\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\15\3\uffff"+
			"\1\4\14\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\1\uffff",
			"\2\17\1\33\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\46"+
			"\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\33\20\uffff\1"+
			"\17\34\uffff\1\17\20\uffff\1\33",
			"\1\4\11\uffff\2\17\1\47\1\4\5\uffff\1\4\2\uffff\1\17\2\uffff\1\4\10"+
			"\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\17\2\uffff\1\4\4\uffff\1\23\1"+
			"\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\47\6\uffff\1\4\4\uffff\1\4\4"+
			"\uffff\1\50\34\uffff\1\17\20\uffff\1\47",
			"\2\17\1\15\11\uffff\1\17\13\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\17"+
			"\7\uffff\1\23\1\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\15\13\uffff\1"+
			"\4\4\uffff\1\17\34\uffff\1\17\20\uffff\1\15",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\4\11\uffff\2\17\1\47\1\4\5\uffff\1\4\2\uffff\1\17\2\uffff\1\4\10"+
			"\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\17\2\uffff\1\4\4\uffff\1\23\1"+
			"\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\47\6\uffff\1\4\11\uffff\1\51"+
			"\34\uffff\1\17\20\uffff\1\47",
			"\1\4\11\uffff\2\17\1\47\1\4\5\uffff\1\4\2\uffff\1\17\2\uffff\1\4\10"+
			"\uffff\1\17\2\uffff\1\17\1\16\2\uffff\1\17\2\uffff\1\4\4\uffff\1\23\1"+
			"\17\5\uffff\1\17\7\uffff\1\17\7\uffff\1\47\6\uffff\1\4\11\uffff\1\52"+
			"\34\uffff\1\17\20\uffff\1\47",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff"
	};

	static final short[] DFA153_eot = DFA.unpackEncodedString(DFA153_eotS);
	static final short[] DFA153_eof = DFA.unpackEncodedString(DFA153_eofS);
	static final char[] DFA153_min = DFA.unpackEncodedStringToUnsignedChars(DFA153_minS);
	static final char[] DFA153_max = DFA.unpackEncodedStringToUnsignedChars(DFA153_maxS);
	static final short[] DFA153_accept = DFA.unpackEncodedString(DFA153_acceptS);
	static final short[] DFA153_special = DFA.unpackEncodedString(DFA153_specialS);
	static final short[][] DFA153_transition;

	static {
		int numStates = DFA153_transitionS.length;
		DFA153_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA153_transition[i] = DFA.unpackEncodedString(DFA153_transitionS[i]);
		}
	}

	protected class DFA153 extends DFA {

		public DFA153(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 153;
			this.eot = DFA153_eot;
			this.eof = DFA153_eof;
			this.min = DFA153_min;
			this.max = DFA153_max;
			this.accept = DFA153_accept;
			this.special = DFA153_special;
			this.transition = DFA153_transition;
		}
		@Override
		public String getDescription() {
			return "696:1: selectorsGroup : ( ( (~ ( HASH_SYMBOL | LBRACE ) )* HASH_SYMBOL LBRACE )=> sass_selector_interpolation_expression | selector ( ( ws )? COMMA ( ws )? selector )* );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA153_1 = input.LA(1);
						 
						int index153_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_1==LBRACE) && (synpred29_Css3())) {s = 12;}
						else if ( (LA153_1==COMMENT||LA153_1==NL||LA153_1==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_1==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( ((LA153_1 >= COLON && LA153_1 <= COMMA)||LA153_1==DOT||LA153_1==GREATER||LA153_1==HASH||LA153_1==IDENT||LA153_1==LBRACKET||LA153_1==LESS_AND||LA153_1==MINUS||LA153_1==RBRACKET||LA153_1==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_1==AT_SIGN||LA153_1==NAME) ) {s = 4;}
						 
						input.seek(index153_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA153_36 = input.LA(1);
						 
						int index153_36 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_36);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA153_26 = input.LA(1);
						 
						int index153_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_26);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA153_10 = input.LA(1);
						 
						int index153_10 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_10==COMMENT||LA153_10==NL||LA153_10==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_10==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_10==IDENT) ) {s = 30;}
						else if ( (LA153_10==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( ((LA153_10 >= COLON && LA153_10 <= COMMA)||LA153_10==DOT||LA153_10==GREATER||LA153_10==HASH||LA153_10==LBRACKET||LA153_10==LESS_AND||LA153_10==MINUS||LA153_10==RBRACKET||LA153_10==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_10==GEN||LA153_10==NOT) ) {s = 4;}
						 
						input.seek(index153_10);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA153_25 = input.LA(1);
						 
						int index153_25 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_25==COMMENT||LA153_25==NL||LA153_25==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_25==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_25==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_25==IDENT) ) {s = 37;}
						else if ( ((LA153_25 >= COLON && LA153_25 <= COMMA)||LA153_25==DOT||LA153_25==GREATER||LA153_25==HASH||LA153_25==LBRACKET||LA153_25==LESS_AND||LA153_25==MINUS||LA153_25==RBRACKET||LA153_25==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_25==GEN||LA153_25==NOT) ) {s = 4;}
						 
						input.seek(index153_25);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA153_16 = input.LA(1);
						 
						int index153_16 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_16==HASH_SYMBOL) ) {s = 17;}
						else if ( (LA153_16==IDENT) ) {s = 31;}
						else if ( (LA153_16==COMMENT||LA153_16==NL||LA153_16==WS) ) {s = 16;}
						else if ( (LA153_16==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_16==STAR) ) {s = 32;}
						else if ( (LA153_16==LESS_AND) ) {s = 33;}
						else if ( (LA153_16==AT_SIGN||LA153_16==DCOLON||LA153_16==GEN||LA153_16==PIPE||LA153_16==SASS_EXTEND_ONLY_SELECTOR) ) {s = 4;}
						else if ( (LA153_16==HASH) ) {s = 34;}
						else if ( (LA153_16==DOT) ) {s = 23;}
						else if ( (LA153_16==LBRACKET) ) {s = 24;}
						else if ( (LA153_16==COLON) ) {s = 25;}
						else if ( (LA153_16==COMMA||LA153_16==GREATER||LA153_16==MINUS||LA153_16==RBRACKET) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_16);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA153_24 = input.LA(1);
						 
						int index153_24 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_24==COMMENT||LA153_24==NL||LA153_24==WS) ) {s = 27;}
						else if ( (LA153_24==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_24==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_24==IDENT) ) {s = 28;}
						else if ( (LA153_24==STAR) ) {s = 29;}
						else if ( ((LA153_24 >= COLON && LA153_24 <= COMMA)||LA153_24==DOT||LA153_24==GREATER||LA153_24==HASH||LA153_24==LBRACKET||LA153_24==LESS_AND||LA153_24==MINUS||LA153_24==RBRACKET) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_24==PIPE) ) {s = 4;}
						 
						input.seek(index153_24);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA153_0 = input.LA(1);
						 
						int index153_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_0==HASH_SYMBOL) ) {s = 1;}
						else if ( (LA153_0==GREATER) ) {s = 2;}
						else if ( (LA153_0==IDENT) ) {s = 3;}
						else if ( (LA153_0==AT_SIGN||LA153_0==DCOLON||LA153_0==GEN||(LA153_0 >= PIPE && LA153_0 <= PLUS)||LA153_0==SASS_EXTEND_ONLY_SELECTOR||LA153_0==TILDE) ) {s = 4;}
						else if ( (LA153_0==STAR) ) {s = 5;}
						else if ( (LA153_0==LESS_AND) ) {s = 6;}
						else if ( (LA153_0==HASH) ) {s = 7;}
						else if ( (LA153_0==DOT) ) {s = 8;}
						else if ( (LA153_0==LBRACKET) ) {s = 9;}
						else if ( (LA153_0==COLON) ) {s = 10;}
						else if ( (LA153_0==COMMA||LA153_0==MINUS||LA153_0==RBRACKET) && (synpred29_Css3())) {s = 11;}
						 
						input.seek(index153_0);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA153_33 = input.LA(1);
						 
						int index153_33 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_33);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA153_21 = input.LA(1);
						 
						int index153_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_21);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA153_23 = input.LA(1);
						 
						int index153_23 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_23==COMMENT||LA153_23==NL||LA153_23==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_23==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_23==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_23==IDENT) ) {s = 36;}
						else if ( ((LA153_23 >= COLON && LA153_23 <= COMMA)||LA153_23==DOT||LA153_23==GREATER||LA153_23==HASH||LA153_23==LBRACKET||LA153_23==LESS_AND||LA153_23==MINUS||LA153_23==RBRACKET||LA153_23==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_23==AT_SIGN||LA153_23==GEN||LA153_23==NOT) ) {s = 4;}
						 
						input.seek(index153_23);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA153_38 = input.LA(1);
						 
						int index153_38 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_38==COMMENT||LA153_38==NL||LA153_38==WS) ) {s = 39;}
						else if ( (LA153_38==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_38==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_38==RBRACKET) ) {s = 41;}
						else if ( (LA153_38==BEGINS||LA153_38==CONTAINS||LA153_38==DASHMATCH||LA153_38==ENDS||LA153_38==INCLUDES||LA153_38==OPEQ) ) {s = 4;}
						else if ( ((LA153_38 >= COLON && LA153_38 <= COMMA)||LA153_38==DOT||LA153_38==GREATER||LA153_38==HASH||LA153_38==IDENT||LA153_38==LBRACKET||LA153_38==LESS_AND||LA153_38==MINUS||LA153_38==STAR) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_38);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA153_28 = input.LA(1);
						 
						int index153_28 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_28==COMMENT||LA153_28==NL||LA153_28==WS) ) {s = 39;}
						else if ( (LA153_28==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_28==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_28==RBRACKET) ) {s = 40;}
						else if ( (LA153_28==BEGINS||LA153_28==CONTAINS||LA153_28==DASHMATCH||LA153_28==ENDS||LA153_28==INCLUDES||LA153_28==OPEQ||LA153_28==PIPE) ) {s = 4;}
						else if ( ((LA153_28 >= COLON && LA153_28 <= COMMA)||LA153_28==DOT||LA153_28==GREATER||LA153_28==HASH||LA153_28==IDENT||LA153_28==LBRACKET||LA153_28==LESS_AND||LA153_28==MINUS||LA153_28==STAR) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_28);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA153_27 = input.LA(1);
						 
						int index153_27 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_27==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_27==IDENT) ) {s = 38;}
						else if ( (LA153_27==COMMENT||LA153_27==NL||LA153_27==WS) ) {s = 27;}
						else if ( (LA153_27==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( ((LA153_27 >= COLON && LA153_27 <= COMMA)||LA153_27==DOT||LA153_27==GREATER||LA153_27==HASH||LA153_27==LBRACKET||LA153_27==LESS_AND||LA153_27==MINUS||LA153_27==RBRACKET||LA153_27==STAR) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_27);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA153_8 = input.LA(1);
						 
						int index153_8 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_8==COMMENT||LA153_8==NL||LA153_8==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_8==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_8==IDENT) ) {s = 26;}
						else if ( (LA153_8==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( ((LA153_8 >= COLON && LA153_8 <= COMMA)||LA153_8==DOT||LA153_8==GREATER||LA153_8==HASH||LA153_8==LBRACKET||LA153_8==LESS_AND||LA153_8==MINUS||LA153_8==RBRACKET||LA153_8==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_8==AT_SIGN||LA153_8==GEN||LA153_8==NOT) ) {s = 4;}
						 
						input.seek(index153_8);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA153_5 = input.LA(1);
						 
						int index153_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 19;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_5);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA153_42 = input.LA(1);
						 
						int index153_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_42);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA153_41 = input.LA(1);
						 
						int index153_41 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_41);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA153_40 = input.LA(1);
						 
						int index153_40 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_40);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA153_34 = input.LA(1);
						 
						int index153_34 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_34);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA153_31 = input.LA(1);
						 
						int index153_31 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_31);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA153_18 = input.LA(1);
						 
						int index153_18 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_18);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA153_22 = input.LA(1);
						 
						int index153_22 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_22);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA153_2 = input.LA(1);
						 
						int index153_2 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_2==COMMENT||LA153_2==NL||LA153_2==WS) ) {s = 16;}
						else if ( (LA153_2==HASH_SYMBOL) ) {s = 17;}
						else if ( (LA153_2==IDENT) ) {s = 18;}
						else if ( (LA153_2==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_2==STAR) ) {s = 20;}
						else if ( (LA153_2==LESS_AND) ) {s = 21;}
						else if ( (LA153_2==AT_SIGN||LA153_2==DCOLON||LA153_2==GEN||LA153_2==PIPE||LA153_2==SASS_EXTEND_ONLY_SELECTOR) ) {s = 4;}
						else if ( (LA153_2==HASH) ) {s = 22;}
						else if ( (LA153_2==DOT) ) {s = 23;}
						else if ( (LA153_2==LBRACKET) ) {s = 24;}
						else if ( (LA153_2==COLON) ) {s = 25;}
						else if ( (LA153_2==COMMA||LA153_2==GREATER||LA153_2==MINUS||LA153_2==RBRACKET) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_2);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA153_3 = input.LA(1);
						 
						int index153_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 19;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_3);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA153_32 = input.LA(1);
						 
						int index153_32 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_32);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA153_20 = input.LA(1);
						 
						int index153_20 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_20);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA153_37 = input.LA(1);
						 
						int index153_37 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA153_30 = input.LA(1);
						 
						int index153_30 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 35;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_30);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA153_29 = input.LA(1);
						 
						int index153_29 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_29==COMMENT||LA153_29==NL||LA153_29==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_29==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_29==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( ((LA153_29 >= COLON && LA153_29 <= COMMA)||LA153_29==DOT||LA153_29==GREATER||LA153_29==HASH||LA153_29==IDENT||LA153_29==LBRACKET||LA153_29==LESS_AND||LA153_29==MINUS||LA153_29==RBRACKET||LA153_29==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_29==PIPE) ) {s = 4;}
						 
						input.seek(index153_29);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA153_17 = input.LA(1);
						 
						int index153_17 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_17==LBRACE) && (synpred29_Css3())) {s = 35;}
						else if ( (LA153_17==COMMENT||LA153_17==NL||LA153_17==WS) && (synpred29_Css3())) {s = 13;}
						else if ( (LA153_17==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( ((LA153_17 >= COLON && LA153_17 <= COMMA)||LA153_17==DOT||LA153_17==GREATER||LA153_17==HASH||LA153_17==IDENT||LA153_17==LBRACKET||LA153_17==LESS_AND||LA153_17==MINUS||LA153_17==RBRACKET||LA153_17==STAR) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_17==AT_SIGN||LA153_17==NAME) ) {s = 4;}
						 
						input.seek(index153_17);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA153_39 = input.LA(1);
						 
						int index153_39 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_39==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_39==COMMENT||LA153_39==NL||LA153_39==WS) ) {s = 39;}
						else if ( (LA153_39==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_39==RBRACKET) ) {s = 42;}
						else if ( (LA153_39==BEGINS||LA153_39==CONTAINS||LA153_39==DASHMATCH||LA153_39==ENDS||LA153_39==INCLUDES||LA153_39==OPEQ) ) {s = 4;}
						else if ( ((LA153_39 >= COLON && LA153_39 <= COMMA)||LA153_39==DOT||LA153_39==GREATER||LA153_39==HASH||LA153_39==IDENT||LA153_39==LBRACKET||LA153_39==LESS_AND||LA153_39==MINUS||LA153_39==STAR) && (synpred29_Css3())) {s = 15;}
						 
						input.seek(index153_39);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA153_9 = input.LA(1);
						 
						int index153_9 = input.index();
						input.rewind();
						s = -1;
						if ( (LA153_9==COMMENT||LA153_9==NL||LA153_9==WS) ) {s = 27;}
						else if ( (LA153_9==HASH_SYMBOL) && (synpred29_Css3())) {s = 14;}
						else if ( (LA153_9==IDENT) ) {s = 28;}
						else if ( (LA153_9==LBRACE) && (synpred29_Css3())) {s = 19;}
						else if ( (LA153_9==STAR) ) {s = 29;}
						else if ( ((LA153_9 >= COLON && LA153_9 <= COMMA)||LA153_9==DOT||LA153_9==GREATER||LA153_9==HASH||LA153_9==LBRACKET||LA153_9==LESS_AND||LA153_9==MINUS||LA153_9==RBRACKET) && (synpred29_Css3())) {s = 15;}
						else if ( (LA153_9==PIPE) ) {s = 4;}
						 
						input.seek(index153_9);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA153_7 = input.LA(1);
						 
						int index153_7 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 19;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_7);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA153_6 = input.LA(1);
						 
						int index153_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred29_Css3()) ) {s = 19;}
						else if ( (true) ) {s = 4;}
						 
						input.seek(index153_6);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 153, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA152_eotS =
		"\4\uffff";
	static final String DFA152_eofS =
		"\4\uffff";
	static final String DFA152_minS =
		"\2\24\2\uffff";
	static final String DFA152_maxS =
		"\2\u0090\2\uffff";
	static final String DFA152_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA152_specialS =
		"\4\uffff}>";
	static final String[] DFA152_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA152_eot = DFA.unpackEncodedString(DFA152_eotS);
	static final short[] DFA152_eof = DFA.unpackEncodedString(DFA152_eofS);
	static final char[] DFA152_min = DFA.unpackEncodedStringToUnsignedChars(DFA152_minS);
	static final char[] DFA152_max = DFA.unpackEncodedStringToUnsignedChars(DFA152_maxS);
	static final short[] DFA152_accept = DFA.unpackEncodedString(DFA152_acceptS);
	static final short[] DFA152_special = DFA.unpackEncodedString(DFA152_specialS);
	static final short[][] DFA152_transition;

	static {
		int numStates = DFA152_transitionS.length;
		DFA152_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA152_transition[i] = DFA.unpackEncodedString(DFA152_transitionS[i]);
		}
	}

	protected class DFA152 extends DFA {

		public DFA152(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 152;
			this.eot = DFA152_eot;
			this.eof = DFA152_eof;
			this.min = DFA152_min;
			this.max = DFA152_max;
			this.accept = DFA152_accept;
			this.special = DFA152_special;
			this.transition = DFA152_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 701:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA160_eotS =
		"\4\uffff";
	static final String DFA160_eofS =
		"\4\uffff";
	static final String DFA160_minS =
		"\2\7\2\uffff";
	static final String DFA160_maxS =
		"\2\u0090\2\uffff";
	static final String DFA160_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA160_specialS =
		"\4\uffff}>";
	static final String[] DFA160_transitionS = {
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\17\uffff\1\1\13\uffff\2"+
			"\3\22\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\17\uffff\1\1\13\uffff\2"+
			"\3\22\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
	static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
	static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
	static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
	static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
	static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
	static final short[][] DFA160_transition;

	static {
		int numStates = DFA160_transitionS.length;
		DFA160_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
		}
	}

	protected class DFA160 extends DFA {

		public DFA160(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 160;
			this.eot = DFA160_eot;
			this.eof = DFA160_eof;
			this.min = DFA160_min;
			this.max = DFA160_max;
			this.accept = DFA160_accept;
			this.special = DFA160_special;
			this.transition = DFA160_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 705:49: ( ( ( ( ws )? combinator ( ws )? ) | ( ws )? ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA159_eotS =
		"\4\uffff";
	static final String DFA159_eofS =
		"\4\uffff";
	static final String DFA159_minS =
		"\2\7\2\uffff";
	static final String DFA159_maxS =
		"\2\u0090\2\uffff";
	static final String DFA159_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA159_specialS =
		"\4\uffff}>";
	static final String[] DFA159_transitionS = {
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\1\3\1"+
			"\2\2\uffff\2\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\17\uffff\1\1\13\uffff"+
			"\1\3\1\2\22\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\1\3\1"+
			"\2\2\uffff\2\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\17\uffff\1\1\13\uffff"+
			"\1\3\1\2\22\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA159_eot = DFA.unpackEncodedString(DFA159_eotS);
	static final short[] DFA159_eof = DFA.unpackEncodedString(DFA159_eofS);
	static final char[] DFA159_min = DFA.unpackEncodedStringToUnsignedChars(DFA159_minS);
	static final char[] DFA159_max = DFA.unpackEncodedStringToUnsignedChars(DFA159_maxS);
	static final short[] DFA159_accept = DFA.unpackEncodedString(DFA159_acceptS);
	static final short[] DFA159_special = DFA.unpackEncodedString(DFA159_specialS);
	static final short[][] DFA159_transition;

	static {
		int numStates = DFA159_transitionS.length;
		DFA159_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA159_transition[i] = DFA.unpackEncodedString(DFA159_transitionS[i]);
		}
	}

	protected class DFA159 extends DFA {

		public DFA159(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 159;
			this.eot = DFA159_eot;
			this.eof = DFA159_eof;
			this.min = DFA159_min;
			this.max = DFA159_max;
			this.accept = DFA159_accept;
			this.special = DFA159_special;
			this.transition = DFA159_transition;
		}
		@Override
		public String getDescription() {
			return "705:51: ( ( ( ws )? combinator ( ws )? ) | ( ws )? )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA182_eotS =
		"\4\uffff";
	static final String DFA182_eofS =
		"\4\uffff";
	static final String DFA182_minS =
		"\2\6\2\uffff";
	static final String DFA182_maxS =
		"\2\u0090\2\uffff";
	static final String DFA182_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA182_specialS =
		"\4\uffff}>";
	static final String[] DFA182_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\5\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff\6\3\1\uffff"+
			"\11\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\5\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff"+
			"\11\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
	static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
	static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
	static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
	static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
	static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
	static final short[][] DFA182_transition;

	static {
		int numStates = DFA182_transitionS.length;
		DFA182_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
		}
	}

	protected class DFA182 extends DFA {

		public DFA182(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 182;
			this.eot = DFA182_eot;
			this.eof = DFA182_eof;
			this.min = DFA182_min;
			this.max = DFA182_max;
			this.accept = DFA182_accept;
			this.special = DFA182_special;
			this.transition = DFA182_transition;
		}
		@Override
		public String getDescription() {
			return "829:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA191_eotS =
		"\4\uffff";
	static final String DFA191_eofS =
		"\1\3\3\uffff";
	static final String DFA191_minS =
		"\2\6\2\uffff";
	static final String DFA191_maxS =
		"\2\u0090\2\uffff";
	static final String DFA191_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA191_specialS =
		"\4\uffff}>";
	static final String[] DFA191_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA191_eot = DFA.unpackEncodedString(DFA191_eotS);
	static final short[] DFA191_eof = DFA.unpackEncodedString(DFA191_eofS);
	static final char[] DFA191_min = DFA.unpackEncodedStringToUnsignedChars(DFA191_minS);
	static final char[] DFA191_max = DFA.unpackEncodedStringToUnsignedChars(DFA191_maxS);
	static final short[] DFA191_accept = DFA.unpackEncodedString(DFA191_acceptS);
	static final short[] DFA191_special = DFA.unpackEncodedString(DFA191_specialS);
	static final short[][] DFA191_transition;

	static {
		int numStates = DFA191_transitionS.length;
		DFA191_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA191_transition[i] = DFA.unpackEncodedString(DFA191_transitionS[i]);
		}
	}

	protected class DFA191 extends DFA {

		public DFA191(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 191;
			this.eot = DFA191_eot;
			this.eof = DFA191_eof;
			this.min = DFA191_min;
			this.max = DFA191_max;
			this.accept = DFA191_accept;
			this.special = DFA191_special;
			this.transition = DFA191_transition;
		}
		@Override
		public String getDescription() {
			return "840:48: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA201_eotS =
		"\100\uffff";
	static final String DFA201_eofS =
		"\1\2\77\uffff";
	static final String DFA201_minS =
		"\1\5\1\0\5\uffff\2\0\1\uffff\17\0\2\uffff\1\0\4\uffff\1\0\1\uffff\1\0"+
		"\1\uffff\10\0\4\uffff\1\0\17\uffff";
	static final String DFA201_maxS =
		"\1\u0090\1\0\5\uffff\2\0\1\uffff\17\0\2\uffff\1\0\4\uffff\1\0\1\uffff"+
		"\1\0\1\uffff\10\0\4\uffff\1\0\17\uffff";
	static final String DFA201_acceptS =
		"\2\uffff\1\2\54\uffff\1\1\1\uffff\17\1";
	static final String DFA201_specialS =
		"\1\0\1\1\5\uffff\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
		"\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff\1\23\4\uffff\1\24\1\uffff\1"+
		"\25\1\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\4\uffff\1\36\17\uffff}>";
	static final String[] DFA201_transitionS = {
			"\1\67\1\47\1\2\2\uffff\5\53\3\uffff\1\53\1\2\1\42\1\1\1\uffff\1\51\5"+
			"\uffff\1\2\1\73\1\2\1\uffff\1\64\3\uffff\1\66\1\uffff\1\44\1\71\1\uffff"+
			"\1\15\1\2\2\uffff\1\14\1\12\2\uffff\1\13\1\2\1\26\5\uffff\2\2\3\53\1"+
			"\63\1\uffff\1\2\1\75\5\uffff\1\50\1\40\1\45\5\uffff\1\53\1\1\4\uffff"+
			"\1\61\3\uffff\1\30\1\62\1\77\1\2\1\33\2\uffff\2\2\1\65\1\72\3\53\1\2"+
			"\1\uffff\1\27\1\25\1\20\1\uffff\1\23\1\53\1\16\1\2\1\22\1\53\1\uffff"+
			"\1\21\1\10\1\7\1\uffff\1\52\1\17\1\20\1\24\1\2\1\57\1\2\1\74\1\uffff"+
			"\1\60\1\70\5\53\2\uffff\1\76\3\uffff\1\46\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA201_eot = DFA.unpackEncodedString(DFA201_eotS);
	static final short[] DFA201_eof = DFA.unpackEncodedString(DFA201_eofS);
	static final char[] DFA201_min = DFA.unpackEncodedStringToUnsignedChars(DFA201_minS);
	static final char[] DFA201_max = DFA.unpackEncodedStringToUnsignedChars(DFA201_maxS);
	static final short[] DFA201_accept = DFA.unpackEncodedString(DFA201_acceptS);
	static final short[] DFA201_special = DFA.unpackEncodedString(DFA201_specialS);
	static final short[][] DFA201_transition;

	static {
		int numStates = DFA201_transitionS.length;
		DFA201_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA201_transition[i] = DFA.unpackEncodedString(DFA201_transitionS[i]);
		}
	}

	protected class DFA201 extends DFA {

		public DFA201(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 201;
			this.eot = DFA201_eot;
			this.eof = DFA201_eof;
			this.min = DFA201_min;
			this.max = DFA201_max;
			this.accept = DFA201_accept;
			this.special = DFA201_special;
			this.transition = DFA201_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 907:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA201_0 = input.LA(1);
						 
						int index201_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA201_0==COMMENT||LA201_0==NL||LA201_0==WS) ) {s = 1;}
						else if ( (LA201_0==EOF||LA201_0==AT_SIGN||LA201_0==COLON||LA201_0==DCOLON||LA201_0==DOT||LA201_0==GREATER||LA201_0==IMPORTANT_SYM||(LA201_0 >= LBRACE && LA201_0 <= LBRACKET)||LA201_0==LESS_AND||LA201_0==PIPE||(LA201_0 >= RBRACE && LA201_0 <= RBRACKET)||LA201_0==RPAREN||LA201_0==SASS_EXTEND_ONLY_SELECTOR||LA201_0==SEMI||LA201_0==STAR) ) {s = 2;}
						else if ( (LA201_0==SASS_MIXIN) ) {s = 7;}
						else if ( (LA201_0==SASS_INCLUDE) ) {s = 8;}
						else if ( (LA201_0==HASH_SYMBOL) ) {s = 10;}
						else if ( (LA201_0==IDENT) ) {s = 11;}
						else if ( (LA201_0==HASH) ) {s = 12;}
						else if ( (LA201_0==GEN) ) {s = 13;}
						else if ( (LA201_0==SASS_EXTEND) ) {s = 14;}
						else if ( (LA201_0==SASS_VAR) ) {s = 15;}
						else if ( (LA201_0==SASS_DEBUG||LA201_0==SASS_WARN) ) {s = 16;}
						else if ( (LA201_0==SASS_IF) ) {s = 17;}
						else if ( (LA201_0==SASS_FOR) ) {s = 18;}
						else if ( (LA201_0==SASS_EACH) ) {s = 19;}
						else if ( (LA201_0==SASS_WHILE) ) {s = 20;}
						else if ( (LA201_0==SASS_CONTENT) ) {s = 21;}
						else if ( (LA201_0==IMPORT_SYM) ) {s = 22;}
						else if ( (LA201_0==SASS_AT_ROOT) ) {s = 23;}
						else if ( (LA201_0==PAGE_SYM) ) {s = 24;}
						else if ( (LA201_0==PLUS) ) {s = 27;}
						else if ( (LA201_0==MINUS) ) {s = 32;}
						else if ( (LA201_0==COMMA) ) {s = 34;}
						else if ( (LA201_0==FONT_FACE_SYM) ) {s = 36;}
						else if ( (LA201_0==MOZ_DOCUMENT_SYM) ) {s = 37;}
						else if ( (LA201_0==WEBKIT_KEYFRAMES_SYM) ) {s = 38;}
						else if ( (LA201_0==AT_IDENT) ) {s = 39;}
						else if ( (LA201_0==MEDIA_SYM) ) {s = 40;}
						else if ( (LA201_0==COUNTER_STYLE_SYM) ) {s = 41;}
						else if ( (LA201_0==SASS_RETURN) ) {s = 42;}
						else if ( ((LA201_0 >= BOTTOMCENTER_SYM && LA201_0 <= BOTTOMRIGHT_SYM)||LA201_0==CHARSET_SYM||(LA201_0 >= LEFTBOTTOM_SYM && LA201_0 <= LEFTTOP_SYM)||LA201_0==NAMESPACE_SYM||(LA201_0 >= RIGHTBOTTOM_SYM && LA201_0 <= RIGHTTOP_SYM)||LA201_0==SASS_ELSE||LA201_0==SASS_FUNCTION||(LA201_0 >= TOPCENTER_SYM && LA201_0 <= TOPRIGHT_SYM)) ) {s = 43;}
						else if ( (LA201_0==SOLIDUS) && (synpred33_Css3())) {s = 47;}
						else if ( (LA201_0==TILDE) ) {s = 48;}
						else if ( (LA201_0==NUMBER) && (synpred33_Css3())) {s = 49;}
						else if ( (LA201_0==PERCENTAGE) && (synpred33_Css3())) {s = 50;}
						else if ( (LA201_0==LENGTH) && (synpred33_Css3())) {s = 51;}
						else if ( (LA201_0==EMS) && (synpred33_Css3())) {s = 52;}
						else if ( (LA201_0==REM) && (synpred33_Css3())) {s = 53;}
						else if ( (LA201_0==EXS) && (synpred33_Css3())) {s = 54;}
						else if ( (LA201_0==ANGLE) && (synpred33_Css3())) {s = 55;}
						else if ( (LA201_0==TIME) && (synpred33_Css3())) {s = 56;}
						else if ( (LA201_0==FREQ) && (synpred33_Css3())) {s = 57;}
						else if ( (LA201_0==RESOLUTION) && (synpred33_Css3())) {s = 58;}
						else if ( (LA201_0==DIMENSION) && (synpred33_Css3())) {s = 59;}
						else if ( (LA201_0==STRING) && (synpred33_Css3())) {s = 60;}
						else if ( (LA201_0==LESS_JS_STRING) && (synpred33_Css3())) {s = 61;}
						else if ( (LA201_0==URI) && (synpred33_Css3())) {s = 62;}
						else if ( (LA201_0==PERCENTAGE_SYMBOL) && (synpred33_Css3())) {s = 63;}
						 
						input.seek(index201_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA201_1 = input.LA(1);
						 
						int index201_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA201_7 = input.LA(1);
						 
						int index201_7 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_7);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA201_8 = input.LA(1);
						 
						int index201_8 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA201_10 = input.LA(1);
						 
						int index201_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_10);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA201_11 = input.LA(1);
						 
						int index201_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_11);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA201_12 = input.LA(1);
						 
						int index201_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_12);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA201_13 = input.LA(1);
						 
						int index201_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_13);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA201_14 = input.LA(1);
						 
						int index201_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_14);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA201_15 = input.LA(1);
						 
						int index201_15 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index201_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA201_16 = input.LA(1);
						 
						int index201_16 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA201_17 = input.LA(1);
						 
						int index201_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA201_18 = input.LA(1);
						 
						int index201_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_18);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA201_19 = input.LA(1);
						 
						int index201_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_19);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA201_20 = input.LA(1);
						 
						int index201_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_20);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA201_21 = input.LA(1);
						 
						int index201_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA201_22 = input.LA(1);
						 
						int index201_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA201_23 = input.LA(1);
						 
						int index201_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA201_24 = input.LA(1);
						 
						int index201_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA201_27 = input.LA(1);
						 
						int index201_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_27);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA201_32 = input.LA(1);
						 
						int index201_32 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_32);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA201_34 = input.LA(1);
						 
						int index201_34 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_34);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA201_36 = input.LA(1);
						 
						int index201_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_36);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA201_37 = input.LA(1);
						 
						int index201_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_37);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA201_38 = input.LA(1);
						 
						int index201_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_38);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA201_39 = input.LA(1);
						 
						int index201_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_39);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA201_40 = input.LA(1);
						 
						int index201_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_40);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA201_41 = input.LA(1);
						 
						int index201_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_41);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA201_42 = input.LA(1);
						 
						int index201_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index201_42);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA201_43 = input.LA(1);
						 
						int index201_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {s = 63;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index201_43);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA201_48 = input.LA(1);
						 
						int index201_48 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred33_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index201_48);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 201, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA200_eotS =
		"\5\uffff";
	static final String DFA200_eofS =
		"\5\uffff";
	static final String DFA200_minS =
		"\2\5\3\uffff";
	static final String DFA200_maxS =
		"\2\u0090\3\uffff";
	static final String DFA200_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA200_specialS =
		"\5\uffff}>";
	static final String[] DFA200_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\3\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA200_eot = DFA.unpackEncodedString(DFA200_eotS);
	static final short[] DFA200_eof = DFA.unpackEncodedString(DFA200_eofS);
	static final char[] DFA200_min = DFA.unpackEncodedStringToUnsignedChars(DFA200_minS);
	static final char[] DFA200_max = DFA.unpackEncodedStringToUnsignedChars(DFA200_maxS);
	static final short[] DFA200_accept = DFA.unpackEncodedString(DFA200_acceptS);
	static final short[] DFA200_special = DFA.unpackEncodedString(DFA200_specialS);
	static final short[][] DFA200_transition;

	static {
		int numStates = DFA200_transitionS.length;
		DFA200_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA200_transition[i] = DFA.unpackEncodedString(DFA200_transitionS[i]);
		}
	}

	protected class DFA200 extends DFA {

		public DFA200(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 200;
			this.eot = DFA200_eot;
			this.eof = DFA200_eof;
			this.min = DFA200_min;
			this.max = DFA200_max;
			this.accept = DFA200_accept;
			this.special = DFA200_special;
			this.transition = DFA200_transition;
		}
		@Override
		public String getDescription() {
			return "907:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA212_eotS =
		"\4\uffff";
	static final String DFA212_eofS =
		"\4\uffff";
	static final String DFA212_minS =
		"\2\24\2\uffff";
	static final String DFA212_maxS =
		"\2\u0090\2\uffff";
	static final String DFA212_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA212_specialS =
		"\4\uffff}>";
	static final String[] DFA212_transitionS = {
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\47\uffff\1\1",
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\47\uffff\1\1",
			"",
			""
	};

	static final short[] DFA212_eot = DFA.unpackEncodedString(DFA212_eotS);
	static final short[] DFA212_eof = DFA.unpackEncodedString(DFA212_eofS);
	static final char[] DFA212_min = DFA.unpackEncodedStringToUnsignedChars(DFA212_minS);
	static final char[] DFA212_max = DFA.unpackEncodedStringToUnsignedChars(DFA212_maxS);
	static final short[] DFA212_accept = DFA.unpackEncodedString(DFA212_acceptS);
	static final short[] DFA212_special = DFA.unpackEncodedString(DFA212_specialS);
	static final short[][] DFA212_transition;

	static {
		int numStates = DFA212_transitionS.length;
		DFA212_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA212_transition[i] = DFA.unpackEncodedString(DFA212_transitionS[i]);
		}
	}

	protected class DFA212 extends DFA {

		public DFA212(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 212;
			this.eot = DFA212_eot;
			this.eof = DFA212_eof;
			this.min = DFA212_min;
			this.max = DFA212_max;
			this.accept = DFA212_accept;
			this.special = DFA212_special;
			this.transition = DFA212_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 970:17: ( ( ws )? COMMA ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA222_eotS =
		"\37\uffff";
	static final String DFA222_eofS =
		"\37\uffff";
	static final String DFA222_minS =
		"\2\5\35\uffff";
	static final String DFA222_maxS =
		"\2\u0090\35\uffff";
	static final String DFA222_acceptS =
		"\2\uffff\1\2\34\1";
	static final String DFA222_specialS =
		"\1\1\1\0\35\uffff}>";
	static final String[] DFA222_transitionS = {
			"\1\14\1\27\3\uffff\5\27\3\uffff\1\27\1\uffff\1\2\1\1\1\uffff\1\27\6\uffff"+
			"\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\27\1\16\1\uffff\1\24\3\uffff"+
			"\1\26\1\31\2\uffff\1\5\1\uffff\1\27\7\uffff\3\27\1\10\2\uffff\1\23\5"+
			"\uffff\1\27\1\4\1\27\5\uffff\1\27\1\1\4\uffff\1\6\3\uffff\1\27\1\7\1"+
			"\32\1\uffff\1\4\4\uffff\1\12\1\17\3\27\1\2\1\uffff\3\27\1\uffff\3\27"+
			"\1\uffff\2\27\1\uffff\3\27\1\uffff\1\27\1\30\2\27\1\uffff\1\3\1\uffff"+
			"\1\21\1\uffff\1\22\1\15\5\27\2\uffff\1\25\3\uffff\1\27\1\1",
			"\1\14\1\33\3\uffff\5\33\3\uffff\1\33\1\uffff\1\2\1\1\1\uffff\1\33\6"+
			"\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\33\1\16\1\uffff\1\24"+
			"\3\uffff\1\26\1\35\2\uffff\1\5\1\uffff\1\33\7\uffff\3\33\1\10\2\uffff"+
			"\1\23\5\uffff\1\33\1\4\1\33\5\uffff\1\33\1\1\4\uffff\1\6\3\uffff\1\33"+
			"\1\7\1\36\1\uffff\1\4\4\uffff\1\12\1\17\3\33\1\2\1\uffff\3\33\1\uffff"+
			"\3\33\1\uffff\2\33\1\uffff\3\33\1\uffff\1\33\1\34\2\33\1\uffff\1\3\1"+
			"\uffff\1\21\1\uffff\1\22\1\15\5\33\2\uffff\1\25\3\uffff\1\33\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA222_eot = DFA.unpackEncodedString(DFA222_eotS);
	static final short[] DFA222_eof = DFA.unpackEncodedString(DFA222_eofS);
	static final char[] DFA222_min = DFA.unpackEncodedStringToUnsignedChars(DFA222_minS);
	static final char[] DFA222_max = DFA.unpackEncodedStringToUnsignedChars(DFA222_maxS);
	static final short[] DFA222_accept = DFA.unpackEncodedString(DFA222_acceptS);
	static final short[] DFA222_special = DFA.unpackEncodedString(DFA222_specialS);
	static final short[][] DFA222_transition;

	static {
		int numStates = DFA222_transitionS.length;
		DFA222_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA222_transition[i] = DFA.unpackEncodedString(DFA222_transitionS[i]);
		}
	}

	protected class DFA222 extends DFA {

		public DFA222(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 222;
			this.eot = DFA222_eot;
			this.eof = DFA222_eof;
			this.min = DFA222_min;
			this.max = DFA222_max;
			this.accept = DFA222_accept;
			this.special = DFA222_special;
			this.transition = DFA222_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 988:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA222_1 = input.LA(1);
						 
						int index222_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA222_1==COMMA||LA222_1==RPAREN) ) {s = 2;}
						else if ( (LA222_1==COMMENT||LA222_1==NL||LA222_1==WS) ) {s = 1;}
						else if ( (LA222_1==MINUS||LA222_1==PLUS) && (synpred37_Css3())) {s = 4;}
						else if ( (LA222_1==IDENT) && (synpred37_Css3())) {s = 5;}
						else if ( (LA222_1==NUMBER) && (synpred37_Css3())) {s = 6;}
						else if ( (LA222_1==PERCENTAGE) && (synpred37_Css3())) {s = 7;}
						else if ( (LA222_1==LENGTH) && (synpred37_Css3())) {s = 8;}
						else if ( (LA222_1==EMS) && (synpred37_Css3())) {s = 9;}
						else if ( (LA222_1==REM) && (synpred37_Css3())) {s = 10;}
						else if ( (LA222_1==EXS) && (synpred37_Css3())) {s = 11;}
						else if ( (LA222_1==ANGLE) && (synpred37_Css3())) {s = 12;}
						else if ( (LA222_1==TIME) && (synpred37_Css3())) {s = 13;}
						else if ( (LA222_1==FREQ) && (synpred37_Css3())) {s = 14;}
						else if ( (LA222_1==RESOLUTION) && (synpred37_Css3())) {s = 15;}
						else if ( (LA222_1==DIMENSION) && (synpred37_Css3())) {s = 16;}
						else if ( (LA222_1==STRING) && (synpred37_Css3())) {s = 17;}
						else if ( (LA222_1==TILDE) && (synpred37_Css3())) {s = 18;}
						else if ( (LA222_1==LESS_JS_STRING) && (synpred37_Css3())) {s = 19;}
						else if ( (LA222_1==GEN) && (synpred37_Css3())) {s = 20;}
						else if ( (LA222_1==URI) && (synpred37_Css3())) {s = 21;}
						else if ( (LA222_1==HASH) && (synpred37_Css3())) {s = 22;}
						else if ( (LA222_1==AT_IDENT||(LA222_1 >= BOTTOMCENTER_SYM && LA222_1 <= BOTTOMRIGHT_SYM)||LA222_1==CHARSET_SYM||LA222_1==COUNTER_STYLE_SYM||LA222_1==FONT_FACE_SYM||LA222_1==IMPORT_SYM||(LA222_1 >= LEFTBOTTOM_SYM && LA222_1 <= LEFTTOP_SYM)||LA222_1==MEDIA_SYM||LA222_1==MOZ_DOCUMENT_SYM||LA222_1==NAMESPACE_SYM||LA222_1==PAGE_SYM||(LA222_1 >= RIGHTBOTTOM_SYM && LA222_1 <= RIGHTTOP_SYM)||(LA222_1 >= SASS_AT_ROOT && LA222_1 <= SASS_DEBUG)||(LA222_1 >= SASS_EACH && LA222_1 <= SASS_EXTEND)||(LA222_1 >= SASS_FOR && LA222_1 <= SASS_FUNCTION)||(LA222_1 >= SASS_IF && LA222_1 <= SASS_MIXIN)||LA222_1==SASS_RETURN||(LA222_1 >= SASS_WARN && LA222_1 <= SASS_WHILE)||(LA222_1 >= TOPCENTER_SYM && LA222_1 <= TOPRIGHT_SYM)||LA222_1==WEBKIT_KEYFRAMES_SYM) && (synpred37_Css3())) {s = 27;}
						else if ( (LA222_1==SASS_VAR) && (synpred37_Css3())) {s = 28;}
						else if ( (LA222_1==HASH_SYMBOL) && (synpred37_Css3())) {s = 29;}
						else if ( (LA222_1==PERCENTAGE_SYMBOL) && (synpred37_Css3())) {s = 30;}
						else if ( (LA222_1==SOLIDUS) && (synpred37_Css3())) {s = 3;}
						 
						input.seek(index222_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA222_0 = input.LA(1);
						 
						int index222_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {s = 1;}
						else if ( (LA222_0==COMMA||LA222_0==RPAREN) ) {s = 2;}
						else if ( (LA222_0==SOLIDUS) && (synpred37_Css3())) {s = 3;}
						else if ( (LA222_0==MINUS||LA222_0==PLUS) && (synpred37_Css3())) {s = 4;}
						else if ( (LA222_0==IDENT) && (synpred37_Css3())) {s = 5;}
						else if ( (LA222_0==NUMBER) && (synpred37_Css3())) {s = 6;}
						else if ( (LA222_0==PERCENTAGE) && (synpred37_Css3())) {s = 7;}
						else if ( (LA222_0==LENGTH) && (synpred37_Css3())) {s = 8;}
						else if ( (LA222_0==EMS) && (synpred37_Css3())) {s = 9;}
						else if ( (LA222_0==REM) && (synpred37_Css3())) {s = 10;}
						else if ( (LA222_0==EXS) && (synpred37_Css3())) {s = 11;}
						else if ( (LA222_0==ANGLE) && (synpred37_Css3())) {s = 12;}
						else if ( (LA222_0==TIME) && (synpred37_Css3())) {s = 13;}
						else if ( (LA222_0==FREQ) && (synpred37_Css3())) {s = 14;}
						else if ( (LA222_0==RESOLUTION) && (synpred37_Css3())) {s = 15;}
						else if ( (LA222_0==DIMENSION) && (synpred37_Css3())) {s = 16;}
						else if ( (LA222_0==STRING) && (synpred37_Css3())) {s = 17;}
						else if ( (LA222_0==TILDE) && (synpred37_Css3())) {s = 18;}
						else if ( (LA222_0==LESS_JS_STRING) && (synpred37_Css3())) {s = 19;}
						else if ( (LA222_0==GEN) && (synpred37_Css3())) {s = 20;}
						else if ( (LA222_0==URI) && (synpred37_Css3())) {s = 21;}
						else if ( (LA222_0==HASH) && (synpred37_Css3())) {s = 22;}
						else if ( (LA222_0==AT_IDENT||(LA222_0 >= BOTTOMCENTER_SYM && LA222_0 <= BOTTOMRIGHT_SYM)||LA222_0==CHARSET_SYM||LA222_0==COUNTER_STYLE_SYM||LA222_0==FONT_FACE_SYM||LA222_0==IMPORT_SYM||(LA222_0 >= LEFTBOTTOM_SYM && LA222_0 <= LEFTTOP_SYM)||LA222_0==MEDIA_SYM||LA222_0==MOZ_DOCUMENT_SYM||LA222_0==NAMESPACE_SYM||LA222_0==PAGE_SYM||(LA222_0 >= RIGHTBOTTOM_SYM && LA222_0 <= RIGHTTOP_SYM)||(LA222_0 >= SASS_AT_ROOT && LA222_0 <= SASS_DEBUG)||(LA222_0 >= SASS_EACH && LA222_0 <= SASS_EXTEND)||(LA222_0 >= SASS_FOR && LA222_0 <= SASS_FUNCTION)||(LA222_0 >= SASS_IF && LA222_0 <= SASS_MIXIN)||LA222_0==SASS_RETURN||(LA222_0 >= SASS_WARN && LA222_0 <= SASS_WHILE)||(LA222_0 >= TOPCENTER_SYM && LA222_0 <= TOPRIGHT_SYM)||LA222_0==WEBKIT_KEYFRAMES_SYM) && (synpred37_Css3())) {s = 23;}
						else if ( (LA222_0==SASS_VAR) && (synpred37_Css3())) {s = 24;}
						else if ( (LA222_0==HASH_SYMBOL) && (synpred37_Css3())) {s = 25;}
						else if ( (LA222_0==PERCENTAGE_SYMBOL) && (synpred37_Css3())) {s = 26;}
						 
						input.seek(index222_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 222, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA221_eotS =
		"\5\uffff";
	static final String DFA221_eofS =
		"\5\uffff";
	static final String DFA221_minS =
		"\2\5\3\uffff";
	static final String DFA221_maxS =
		"\2\u0090\3\uffff";
	static final String DFA221_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA221_specialS =
		"\5\uffff}>";
	static final String[] DFA221_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff\7\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff\7\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA221_eot = DFA.unpackEncodedString(DFA221_eotS);
	static final short[] DFA221_eof = DFA.unpackEncodedString(DFA221_eofS);
	static final char[] DFA221_min = DFA.unpackEncodedStringToUnsignedChars(DFA221_minS);
	static final char[] DFA221_max = DFA.unpackEncodedStringToUnsignedChars(DFA221_maxS);
	static final short[] DFA221_accept = DFA.unpackEncodedString(DFA221_acceptS);
	static final short[] DFA221_special = DFA.unpackEncodedString(DFA221_specialS);
	static final short[][] DFA221_transition;

	static {
		int numStates = DFA221_transitionS.length;
		DFA221_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA221_transition[i] = DFA.unpackEncodedString(DFA221_transitionS[i]);
		}
	}

	protected class DFA221 extends DFA {

		public DFA221(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 221;
			this.eot = DFA221_eot;
			this.eof = DFA221_eof;
			this.min = DFA221_min;
			this.max = DFA221_max;
			this.accept = DFA221_accept;
			this.special = DFA221_special;
			this.transition = DFA221_transition;
		}
		@Override
		public String getDescription() {
			return "988:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA231_eotS =
		"\5\uffff";
	static final String DFA231_eofS =
		"\2\2\3\uffff";
	static final String DFA231_minS =
		"\2\6\3\uffff";
	static final String DFA231_maxS =
		"\2\u0090\3\uffff";
	static final String DFA231_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA231_specialS =
		"\5\uffff}>";
	static final String[] DFA231_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\3\6\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\2\2\2\uffff\3\2\2\uffff\3\2\1\3\6\2\1\4\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA231_eot = DFA.unpackEncodedString(DFA231_eotS);
	static final short[] DFA231_eof = DFA.unpackEncodedString(DFA231_eofS);
	static final char[] DFA231_min = DFA.unpackEncodedStringToUnsignedChars(DFA231_minS);
	static final char[] DFA231_max = DFA.unpackEncodedStringToUnsignedChars(DFA231_maxS);
	static final short[] DFA231_accept = DFA.unpackEncodedString(DFA231_acceptS);
	static final short[] DFA231_special = DFA.unpackEncodedString(DFA231_specialS);
	static final short[][] DFA231_transition;

	static {
		int numStates = DFA231_transitionS.length;
		DFA231_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA231_transition[i] = DFA.unpackEncodedString(DFA231_transitionS[i]);
		}
	}

	protected class DFA231 extends DFA {

		public DFA231(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 231;
			this.eot = DFA231_eot;
			this.eof = DFA231_eof;
			this.min = DFA231_min;
			this.max = DFA231_max;
			this.accept = DFA231_accept;
			this.special = DFA231_special;
			this.transition = DFA231_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1007:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA240_eotS =
		"\113\uffff";
	static final String DFA240_eofS =
		"\1\2\112\uffff";
	static final String DFA240_minS =
		"\1\5\1\0\1\uffff\1\0\1\uffff\2\0\1\uffff\3\0\2\uffff\3\0\1\uffff\12\0"+
		"\1\uffff\1\0\4\uffff\1\0\3\uffff\10\0\1\uffff\1\0\13\uffff\1\0\20\uffff";
	static final String DFA240_maxS =
		"\1\u0090\1\0\1\uffff\1\0\1\uffff\2\0\1\uffff\3\0\2\uffff\3\0\1\uffff\12"+
		"\0\1\uffff\1\0\4\uffff\1\0\3\uffff\10\0\1\uffff\1\0\13\uffff\1\0\20\uffff";
	static final String DFA240_acceptS =
		"\2\uffff\1\3\61\uffff\5\1\1\2\1\uffff\20\2";
	static final String DFA240_specialS =
		"\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\uffff\1\5\1\6\1\7\2\uffff\1\10"+
		"\1\11\1\12\1\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1"+
		"\uffff\1\25\4\uffff\1\26\3\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1"+
		"\36\1\uffff\1\37\13\uffff\1\40\20\uffff}>";
	static final String[] DFA240_transitionS = {
			"\1\101\1\50\1\2\2\uffff\5\56\3\uffff\1\56\2\2\1\1\1\uffff\1\52\1\2\1"+
			"\64\1\65\2\uffff\1\2\1\105\1\2\1\uffff\1\76\3\uffff\1\100\1\uffff\1\45"+
			"\1\103\1\uffff\1\10\1\32\1\70\1\uffff\1\15\1\5\2\uffff\1\6\1\3\1\27\5"+
			"\uffff\2\2\3\56\1\75\1\66\1\2\1\107\1\67\1\2\1\uffff\1\112\1\uffff\1"+
			"\51\1\41\1\46\5\uffff\1\56\1\1\3\uffff\1\71\1\73\3\uffff\1\31\1\74\1"+
			"\111\1\2\1\34\2\uffff\2\2\1\77\1\104\3\56\1\2\1\uffff\1\30\1\26\1\21"+
			"\1\2\1\24\1\56\1\17\1\2\1\23\1\54\1\2\1\22\1\16\1\11\1\uffff\1\53\1\12"+
			"\1\21\1\25\1\2\1\uffff\1\2\1\106\1\uffff\1\72\1\102\5\56\2\uffff\1\110"+
			"\3\uffff\1\47\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA240_eot = DFA.unpackEncodedString(DFA240_eotS);
	static final short[] DFA240_eof = DFA.unpackEncodedString(DFA240_eofS);
	static final char[] DFA240_min = DFA.unpackEncodedStringToUnsignedChars(DFA240_minS);
	static final char[] DFA240_max = DFA.unpackEncodedStringToUnsignedChars(DFA240_maxS);
	static final short[] DFA240_accept = DFA.unpackEncodedString(DFA240_acceptS);
	static final short[] DFA240_special = DFA.unpackEncodedString(DFA240_specialS);
	static final short[][] DFA240_transition;

	static {
		int numStates = DFA240_transitionS.length;
		DFA240_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA240_transition[i] = DFA.unpackEncodedString(DFA240_transitionS[i]);
		}
	}

	protected class DFA240 extends DFA {

		public DFA240(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 240;
			this.eot = DFA240_eot;
			this.eof = DFA240_eof;
			this.min = DFA240_min;
			this.max = DFA240_max;
			this.accept = DFA240_accept;
			this.special = DFA240_special;
			this.transition = DFA240_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1039:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA240_0 = input.LA(1);
						 
						int index240_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {s = 1;}
						else if ( (LA240_0==EOF||LA240_0==AT_SIGN||(LA240_0 >= COLON && LA240_0 <= COMMA)||LA240_0==CP_DOTS||LA240_0==DCOLON||LA240_0==DOT||(LA240_0 >= LBRACE && LA240_0 <= LBRACKET)||LA240_0==LESS_AND||LA240_0==LESS_REST||LA240_0==PIPE||(LA240_0 >= RBRACE && LA240_0 <= RBRACKET)||LA240_0==RPAREN||LA240_0==SASS_DEFAULT||LA240_0==SASS_EXTEND_ONLY_SELECTOR||LA240_0==SASS_GLOBAL||LA240_0==SEMI||LA240_0==STAR) ) {s = 2;}
						else if ( (LA240_0==IMPORTANT_SYM) ) {s = 3;}
						else if ( (LA240_0==HASH_SYMBOL) ) {s = 5;}
						else if ( (LA240_0==IDENT) ) {s = 6;}
						else if ( (LA240_0==GEN) ) {s = 8;}
						else if ( (LA240_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA240_0==SASS_VAR) ) {s = 10;}
						else if ( (LA240_0==HASH) ) {s = 13;}
						else if ( (LA240_0==SASS_INCLUDE) ) {s = 14;}
						else if ( (LA240_0==SASS_EXTEND) ) {s = 15;}
						else if ( (LA240_0==SASS_DEBUG||LA240_0==SASS_WARN) ) {s = 17;}
						else if ( (LA240_0==SASS_IF) ) {s = 18;}
						else if ( (LA240_0==SASS_FOR) ) {s = 19;}
						else if ( (LA240_0==SASS_EACH) ) {s = 20;}
						else if ( (LA240_0==SASS_WHILE) ) {s = 21;}
						else if ( (LA240_0==SASS_CONTENT) ) {s = 22;}
						else if ( (LA240_0==IMPORT_SYM) ) {s = 23;}
						else if ( (LA240_0==SASS_AT_ROOT) ) {s = 24;}
						else if ( (LA240_0==PAGE_SYM) ) {s = 25;}
						else if ( (LA240_0==GREATER) ) {s = 26;}
						else if ( (LA240_0==PLUS) ) {s = 28;}
						else if ( (LA240_0==MINUS) ) {s = 33;}
						else if ( (LA240_0==FONT_FACE_SYM) ) {s = 37;}
						else if ( (LA240_0==MOZ_DOCUMENT_SYM) ) {s = 38;}
						else if ( (LA240_0==WEBKIT_KEYFRAMES_SYM) ) {s = 39;}
						else if ( (LA240_0==AT_IDENT) ) {s = 40;}
						else if ( (LA240_0==MEDIA_SYM) ) {s = 41;}
						else if ( (LA240_0==COUNTER_STYLE_SYM) ) {s = 42;}
						else if ( (LA240_0==SASS_RETURN) ) {s = 43;}
						else if ( (LA240_0==SASS_FUNCTION) ) {s = 44;}
						else if ( ((LA240_0 >= BOTTOMCENTER_SYM && LA240_0 <= BOTTOMRIGHT_SYM)||LA240_0==CHARSET_SYM||(LA240_0 >= LEFTBOTTOM_SYM && LA240_0 <= LEFTTOP_SYM)||LA240_0==NAMESPACE_SYM||(LA240_0 >= RIGHTBOTTOM_SYM && LA240_0 <= RIGHTTOP_SYM)||LA240_0==SASS_ELSE||(LA240_0 >= TOPCENTER_SYM && LA240_0 <= TOPRIGHT_SYM)) ) {s = 46;}
						else if ( (LA240_0==CP_EQ) && (synpred39_Css3())) {s = 52;}
						else if ( (LA240_0==CP_NOT_EQ) && (synpred39_Css3())) {s = 53;}
						else if ( (LA240_0==LESS) && (synpred39_Css3())) {s = 54;}
						else if ( (LA240_0==LESS_OR_EQ) && (synpred39_Css3())) {s = 55;}
						else if ( (LA240_0==GREATER_OR_EQ) && (synpred39_Css3())) {s = 56;}
						else if ( (LA240_0==NOT) && (synpred40_Css3())) {s = 57;}
						else if ( (LA240_0==TILDE) ) {s = 58;}
						else if ( (LA240_0==NUMBER) && (synpred40_Css3())) {s = 59;}
						else if ( (LA240_0==PERCENTAGE) && (synpred40_Css3())) {s = 60;}
						else if ( (LA240_0==LENGTH) && (synpred40_Css3())) {s = 61;}
						else if ( (LA240_0==EMS) && (synpred40_Css3())) {s = 62;}
						else if ( (LA240_0==REM) && (synpred40_Css3())) {s = 63;}
						else if ( (LA240_0==EXS) && (synpred40_Css3())) {s = 64;}
						else if ( (LA240_0==ANGLE) && (synpred40_Css3())) {s = 65;}
						else if ( (LA240_0==TIME) && (synpred40_Css3())) {s = 66;}
						else if ( (LA240_0==FREQ) && (synpred40_Css3())) {s = 67;}
						else if ( (LA240_0==RESOLUTION) && (synpred40_Css3())) {s = 68;}
						else if ( (LA240_0==DIMENSION) && (synpred40_Css3())) {s = 69;}
						else if ( (LA240_0==STRING) && (synpred40_Css3())) {s = 70;}
						else if ( (LA240_0==LESS_JS_STRING) && (synpred40_Css3())) {s = 71;}
						else if ( (LA240_0==URI) && (synpred40_Css3())) {s = 72;}
						else if ( (LA240_0==PERCENTAGE_SYMBOL) && (synpred40_Css3())) {s = 73;}
						else if ( (LA240_0==LPAREN) && (synpred40_Css3())) {s = 74;}
						 
						input.seek(index240_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA240_1 = input.LA(1);
						 
						int index240_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 56;}
						else if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA240_3 = input.LA(1);
						 
						int index240_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_3);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA240_5 = input.LA(1);
						 
						int index240_5 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA240_6 = input.LA(1);
						 
						int index240_6 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")||evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")"))&&synpred39_Css3())) ) {s = 56;}
						else if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA240_8 = input.LA(1);
						 
						int index240_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_8);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA240_9 = input.LA(1);
						 
						int index240_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_9);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA240_10 = input.LA(1);
						 
						int index240_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 74;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index240_10);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA240_13 = input.LA(1);
						 
						int index240_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_13);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA240_14 = input.LA(1);
						 
						int index240_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( ((((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isScssSource(),"isScssSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_14);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA240_15 = input.LA(1);
						 
						int index240_15 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_15);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA240_17 = input.LA(1);
						 
						int index240_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA240_18 = input.LA(1);
						 
						int index240_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_18);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA240_19 = input.LA(1);
						 
						int index240_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_19);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA240_20 = input.LA(1);
						 
						int index240_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_20);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA240_21 = input.LA(1);
						 
						int index240_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA240_22 = input.LA(1);
						 
						int index240_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (((evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA240_23 = input.LA(1);
						 
						int index240_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isScssSource(),"isScssSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA240_24 = input.LA(1);
						 
						int index240_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA240_25 = input.LA(1);
						 
						int index240_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_25);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA240_26 = input.LA(1);
						 
						int index240_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 56;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA240_28 = input.LA(1);
						 
						int index240_28 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_28);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA240_33 = input.LA(1);
						 
						int index240_33 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_33);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA240_37 = input.LA(1);
						 
						int index240_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_37);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA240_38 = input.LA(1);
						 
						int index240_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_38);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA240_39 = input.LA(1);
						 
						int index240_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_39);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA240_40 = input.LA(1);
						 
						int index240_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_40);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA240_41 = input.LA(1);
						 
						int index240_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_41);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA240_42 = input.LA(1);
						 
						int index240_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_42);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA240_43 = input.LA(1);
						 
						int index240_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_43);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA240_44 = input.LA(1);
						 
						int index240_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( ((evalPredicate(isScssSource(),"isScssSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index240_44);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA240_46 = input.LA(1);
						 
						int index240_46 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred40_Css3())&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 74;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index240_46);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA240_58 = input.LA(1);
						 
						int index240_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred40_Css3()) ) {s = 74;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index240_58);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 240, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA251_eotS =
		"\114\uffff";
	static final String DFA251_eofS =
		"\1\2\113\uffff";
	static final String DFA251_minS =
		"\1\5\1\0\12\uffff\1\0\27\uffff\1\0\5\uffff\1\0\41\uffff";
	static final String DFA251_maxS =
		"\1\u0090\1\0\12\uffff\1\0\27\uffff\1\0\5\uffff\1\0\41\uffff";
	static final String DFA251_acceptS =
		"\2\uffff\1\2\110\uffff\1\1";
	static final String DFA251_specialS =
		"\1\0\1\1\12\uffff\1\2\27\uffff\1\3\5\uffff\1\4\41\uffff}>";
	static final String[] DFA251_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\4\2\2\uffff\3\2\1\uffff\1\2"+
			"\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\14\1\2\5\uffff\1\2\1\1\3\uffff\2\2\3"+
			"\uffff\4\2\1\44\2\uffff\10\2\1\uffff\16\2\1\uffff\5\2\1\113\1\52\1\2"+
			"\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA251_eot = DFA.unpackEncodedString(DFA251_eotS);
	static final short[] DFA251_eof = DFA.unpackEncodedString(DFA251_eofS);
	static final char[] DFA251_min = DFA.unpackEncodedStringToUnsignedChars(DFA251_minS);
	static final char[] DFA251_max = DFA.unpackEncodedStringToUnsignedChars(DFA251_maxS);
	static final short[] DFA251_accept = DFA.unpackEncodedString(DFA251_acceptS);
	static final short[] DFA251_special = DFA.unpackEncodedString(DFA251_specialS);
	static final short[][] DFA251_transition;

	static {
		int numStates = DFA251_transitionS.length;
		DFA251_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA251_transition[i] = DFA.unpackEncodedString(DFA251_transitionS[i]);
		}
	}

	protected class DFA251 extends DFA {

		public DFA251(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 251;
			this.eot = DFA251_eot;
			this.eof = DFA251_eof;
			this.min = DFA251_min;
			this.max = DFA251_max;
			this.accept = DFA251_accept;
			this.special = DFA251_special;
			this.transition = DFA251_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1080:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA251_0 = input.LA(1);
						 
						int index251_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA251_0==COMMENT||LA251_0==NL||LA251_0==WS) ) {s = 1;}
						else if ( (LA251_0==EOF||(LA251_0 >= ANGLE && LA251_0 <= AT_SIGN)||(LA251_0 >= BOTTOMCENTER_SYM && LA251_0 <= BOTTOMRIGHT_SYM)||(LA251_0 >= CHARSET_SYM && LA251_0 <= COMMA)||(LA251_0 >= COUNTER_STYLE_SYM && LA251_0 <= CP_NOT_EQ)||(LA251_0 >= DCOLON && LA251_0 <= DOT)||LA251_0==EMS||LA251_0==EXS||(LA251_0 >= FONT_FACE_SYM && LA251_0 <= FREQ)||(LA251_0 >= GEN && LA251_0 <= GREATER_OR_EQ)||(LA251_0 >= HASH && LA251_0 <= HASH_SYMBOL)||(LA251_0 >= IDENT && LA251_0 <= IMPORT_SYM)||(LA251_0 >= LBRACE && LA251_0 <= LESS_REST)||LA251_0==LPAREN||LA251_0==MEDIA_SYM||LA251_0==MOZ_DOCUMENT_SYM||LA251_0==NAMESPACE_SYM||(LA251_0 >= NOT && LA251_0 <= NUMBER)||(LA251_0 >= PAGE_SYM && LA251_0 <= PIPE)||(LA251_0 >= RBRACE && LA251_0 <= RPAREN)||(LA251_0 >= SASS_AT_ROOT && LA251_0 <= SASS_MIXIN)||(LA251_0 >= SASS_RETURN && LA251_0 <= SEMI)||LA251_0==STRING||(LA251_0 >= TILDE && LA251_0 <= TOPRIGHT_SYM)||LA251_0==URI||LA251_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA251_0==MINUS) ) {s = 12;}
						else if ( (LA251_0==PLUS) ) {s = 36;}
						else if ( (LA251_0==STAR) ) {s = 42;}
						else if ( (LA251_0==SOLIDUS) && (synpred42_Css3())) {s = 75;}
						 
						input.seek(index251_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA251_1 = input.LA(1);
						 
						int index251_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 75;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index251_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA251_12 = input.LA(1);
						 
						int index251_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 75;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index251_12);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA251_36 = input.LA(1);
						 
						int index251_36 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 75;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index251_36);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA251_42 = input.LA(1);
						 
						int index251_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 75;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index251_42);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 251, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA256_eotS =
		"\6\uffff";
	static final String DFA256_eofS =
		"\6\uffff";
	static final String DFA256_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA256_maxS =
		"\1\u008f\1\u0090\3\uffff\1\u0090";
	static final String DFA256_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA256_specialS =
		"\6\uffff}>";
	static final String[] DFA256_transitionS = {
			"\2\2\3\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\3\1\2\7\uffff"+
			"\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff\1\2\3\uffff"+
			"\1\2",
			"\2\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\3\2"+
			"\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\5",
			"",
			"",
			"",
			"\2\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\2\uffff\1\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\3\2"+
			"\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\5"
	};

	static final short[] DFA256_eot = DFA.unpackEncodedString(DFA256_eotS);
	static final short[] DFA256_eof = DFA.unpackEncodedString(DFA256_eofS);
	static final char[] DFA256_min = DFA.unpackEncodedStringToUnsignedChars(DFA256_minS);
	static final char[] DFA256_max = DFA.unpackEncodedStringToUnsignedChars(DFA256_maxS);
	static final short[] DFA256_accept = DFA.unpackEncodedString(DFA256_acceptS);
	static final short[] DFA256_special = DFA.unpackEncodedString(DFA256_specialS);
	static final short[][] DFA256_transition;

	static {
		int numStates = DFA256_transitionS.length;
		DFA256_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA256_transition[i] = DFA.unpackEncodedString(DFA256_transitionS[i]);
		}
	}

	protected class DFA256 extends DFA {

		public DFA256(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 256;
			this.eot = DFA256_eot;
			this.eof = DFA256_eof;
			this.min = DFA256_min;
			this.max = DFA256_max;
			this.accept = DFA256_accept;
			this.special = DFA256_special;
			this.transition = DFA256_transition;
		}
		@Override
		public String getDescription() {
			return "1085:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA261_eotS =
		"\4\uffff";
	static final String DFA261_eofS =
		"\4\uffff";
	static final String DFA261_minS =
		"\2\25\2\uffff";
	static final String DFA261_maxS =
		"\2\u0090\2\uffff";
	static final String DFA261_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA261_specialS =
		"\4\uffff}>";
	static final String[] DFA261_transitionS = {
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\76\uffff\1\1",
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA261_eot = DFA.unpackEncodedString(DFA261_eotS);
	static final short[] DFA261_eof = DFA.unpackEncodedString(DFA261_eofS);
	static final char[] DFA261_min = DFA.unpackEncodedStringToUnsignedChars(DFA261_minS);
	static final char[] DFA261_max = DFA.unpackEncodedStringToUnsignedChars(DFA261_maxS);
	static final short[] DFA261_accept = DFA.unpackEncodedString(DFA261_acceptS);
	static final short[] DFA261_special = DFA.unpackEncodedString(DFA261_specialS);
	static final short[][] DFA261_transition;

	static {
		int numStates = DFA261_transitionS.length;
		DFA261_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA261_transition[i] = DFA.unpackEncodedString(DFA261_transitionS[i]);
		}
	}

	protected class DFA261 extends DFA {

		public DFA261(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 261;
			this.eot = DFA261_eot;
			this.eof = DFA261_eof;
			this.min = DFA261_min;
			this.max = DFA261_max;
			this.accept = DFA261_accept;
			this.special = DFA261_special;
			this.transition = DFA261_transition;
		}
		@Override
		public String getDescription() {
			return "1101:81: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA265_eotS =
		"\4\uffff";
	static final String DFA265_eofS =
		"\4\uffff";
	static final String DFA265_minS =
		"\2\25\2\uffff";
	static final String DFA265_maxS =
		"\2\u0090\2\uffff";
	static final String DFA265_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA265_specialS =
		"\4\uffff}>";
	static final String[] DFA265_transitionS = {
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\76\uffff\1\1",
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA265_eot = DFA.unpackEncodedString(DFA265_eotS);
	static final short[] DFA265_eof = DFA.unpackEncodedString(DFA265_eofS);
	static final char[] DFA265_min = DFA.unpackEncodedStringToUnsignedChars(DFA265_minS);
	static final char[] DFA265_max = DFA.unpackEncodedStringToUnsignedChars(DFA265_maxS);
	static final short[] DFA265_accept = DFA.unpackEncodedString(DFA265_acceptS);
	static final short[] DFA265_special = DFA.unpackEncodedString(DFA265_specialS);
	static final short[][] DFA265_transition;

	static {
		int numStates = DFA265_transitionS.length;
		DFA265_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA265_transition[i] = DFA.unpackEncodedString(DFA265_transitionS[i]);
		}
	}

	protected class DFA265 extends DFA {

		public DFA265(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 265;
			this.eot = DFA265_eot;
			this.eof = DFA265_eof;
			this.min = DFA265_min;
			this.max = DFA265_max;
			this.accept = DFA265_accept;
			this.special = DFA265_special;
			this.transition = DFA265_transition;
		}
		@Override
		public String getDescription() {
			return "1103:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA271_eotS =
		"\4\uffff";
	static final String DFA271_eofS =
		"\2\3\2\uffff";
	static final String DFA271_minS =
		"\2\6\2\uffff";
	static final String DFA271_maxS =
		"\2\u0090\2\uffff";
	static final String DFA271_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA271_specialS =
		"\4\uffff}>";
	static final String[] DFA271_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\6\uffff\4\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\6\uffff\4\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA271_eot = DFA.unpackEncodedString(DFA271_eotS);
	static final short[] DFA271_eof = DFA.unpackEncodedString(DFA271_eofS);
	static final char[] DFA271_min = DFA.unpackEncodedStringToUnsignedChars(DFA271_minS);
	static final char[] DFA271_max = DFA.unpackEncodedStringToUnsignedChars(DFA271_maxS);
	static final short[] DFA271_accept = DFA.unpackEncodedString(DFA271_acceptS);
	static final short[] DFA271_special = DFA.unpackEncodedString(DFA271_specialS);
	static final short[][] DFA271_transition;

	static {
		int numStates = DFA271_transitionS.length;
		DFA271_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA271_transition[i] = DFA.unpackEncodedString(DFA271_transitionS[i]);
		}
	}

	protected class DFA271 extends DFA {

		public DFA271(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 271;
			this.eot = DFA271_eot;
			this.eof = DFA271_eof;
			this.min = DFA271_min;
			this.max = DFA271_max;
			this.accept = DFA271_accept;
			this.special = DFA271_special;
			this.transition = DFA271_transition;
		}
		@Override
		public String getDescription() {
			return "1113:45: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA275_eotS =
		"\4\uffff";
	static final String DFA275_eofS =
		"\2\3\2\uffff";
	static final String DFA275_minS =
		"\2\6\2\uffff";
	static final String DFA275_maxS =
		"\2\u0090\2\uffff";
	static final String DFA275_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA275_specialS =
		"\4\uffff}>";
	static final String[] DFA275_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA275_eot = DFA.unpackEncodedString(DFA275_eotS);
	static final short[] DFA275_eof = DFA.unpackEncodedString(DFA275_eofS);
	static final char[] DFA275_min = DFA.unpackEncodedStringToUnsignedChars(DFA275_minS);
	static final char[] DFA275_max = DFA.unpackEncodedStringToUnsignedChars(DFA275_maxS);
	static final short[] DFA275_accept = DFA.unpackEncodedString(DFA275_acceptS);
	static final short[] DFA275_special = DFA.unpackEncodedString(DFA275_specialS);
	static final short[][] DFA275_transition;

	static {
		int numStates = DFA275_transitionS.length;
		DFA275_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA275_transition[i] = DFA.unpackEncodedString(DFA275_transitionS[i]);
		}
	}

	protected class DFA275 extends DFA {

		public DFA275(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 275;
			this.eot = DFA275_eot;
			this.eof = DFA275_eof;
			this.min = DFA275_min;
			this.max = DFA275_max;
			this.accept = DFA275_accept;
			this.special = DFA275_special;
			this.transition = DFA275_transition;
		}
		@Override
		public String getDescription() {
			return "1115:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA277_eotS =
		"\4\uffff";
	static final String DFA277_eofS =
		"\2\3\2\uffff";
	static final String DFA277_minS =
		"\2\6\2\uffff";
	static final String DFA277_maxS =
		"\2\u0090\2\uffff";
	static final String DFA277_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA277_specialS =
		"\4\uffff}>";
	static final String[] DFA277_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\2\3"+
			"\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\2\3"+
			"\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA277_eot = DFA.unpackEncodedString(DFA277_eotS);
	static final short[] DFA277_eof = DFA.unpackEncodedString(DFA277_eofS);
	static final char[] DFA277_min = DFA.unpackEncodedStringToUnsignedChars(DFA277_minS);
	static final char[] DFA277_max = DFA.unpackEncodedStringToUnsignedChars(DFA277_maxS);
	static final short[] DFA277_accept = DFA.unpackEncodedString(DFA277_acceptS);
	static final short[] DFA277_special = DFA.unpackEncodedString(DFA277_specialS);
	static final short[][] DFA277_transition;

	static {
		int numStates = DFA277_transitionS.length;
		DFA277_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA277_transition[i] = DFA.unpackEncodedString(DFA277_transitionS[i]);
		}
	}

	protected class DFA277 extends DFA {

		public DFA277(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 277;
			this.eot = DFA277_eot;
			this.eof = DFA277_eof;
			this.min = DFA277_min;
			this.max = DFA277_max;
			this.accept = DFA277_accept;
			this.special = DFA277_special;
			this.transition = DFA277_transition;
		}
		@Override
		public String getDescription() {
			return "1115:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA287_eotS =
		"\7\uffff";
	static final String DFA287_eofS =
		"\7\uffff";
	static final String DFA287_minS =
		"\3\5\1\uffff\1\5\1\uffff\1\5";
	static final String DFA287_maxS =
		"\1\u008f\2\u0090\1\uffff\1\u0090\1\uffff\1\u0090";
	static final String DFA287_acceptS =
		"\3\uffff\1\2\1\uffff\1\1\1\uffff";
	static final String DFA287_specialS =
		"\7\uffff}>";
	static final String[] DFA287_transitionS = {
			"\1\3\1\1\3\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\3\2\uffff\1\3"+
			"\3\uffff\1\3\1\uffff\1\1\1\3\1\uffff\1\3\3\uffff\2\3\2\uffff\2\3\1\1"+
			"\7\uffff\3\1\1\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\1\1\3\1\1\5\uffff"+
			"\1\1\4\uffff\2\3\3\uffff\1\1\2\3\1\uffff\1\3\4\uffff\2\3\3\1\2\uffff"+
			"\3\1\1\uffff\3\1\1\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\2\2\1\3\uffff"+
			"\1\3\1\uffff\2\3\5\1\2\uffff\1\3\3\uffff\1\1",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6",
			"",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"",
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\5\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6"
	};

	static final short[] DFA287_eot = DFA.unpackEncodedString(DFA287_eotS);
	static final short[] DFA287_eof = DFA.unpackEncodedString(DFA287_eofS);
	static final char[] DFA287_min = DFA.unpackEncodedStringToUnsignedChars(DFA287_minS);
	static final char[] DFA287_max = DFA.unpackEncodedStringToUnsignedChars(DFA287_maxS);
	static final short[] DFA287_accept = DFA.unpackEncodedString(DFA287_acceptS);
	static final short[] DFA287_special = DFA.unpackEncodedString(DFA287_specialS);
	static final short[][] DFA287_transition;

	static {
		int numStates = DFA287_transitionS.length;
		DFA287_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA287_transition[i] = DFA.unpackEncodedString(DFA287_transitionS[i]);
		}
	}

	protected class DFA287 extends DFA {

		public DFA287(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 287;
			this.eot = DFA287_eot;
			this.eof = DFA287_eof;
			this.min = DFA287_min;
			this.max = DFA287_max;
			this.accept = DFA287_accept;
			this.special = DFA287_special;
			this.transition = DFA287_transition;
		}
		@Override
		public String getDescription() {
			return "1140:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA290_eotS =
		"\5\uffff";
	static final String DFA290_eofS =
		"\5\uffff";
	static final String DFA290_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA290_maxS =
		"\1\175\1\u0090\1\uffff\1\u0090\1\uffff";
	static final String DFA290_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA290_specialS =
		"\5\uffff}>";
	static final String[] DFA290_transitionS = {
			"\1\1\3\uffff\1\2\53\uffff\1\2\43\uffff\1\2\24\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\14\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\14\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff\1\4\1\3",
			""
	};

	static final short[] DFA290_eot = DFA.unpackEncodedString(DFA290_eotS);
	static final short[] DFA290_eof = DFA.unpackEncodedString(DFA290_eofS);
	static final char[] DFA290_min = DFA.unpackEncodedStringToUnsignedChars(DFA290_minS);
	static final char[] DFA290_max = DFA.unpackEncodedStringToUnsignedChars(DFA290_maxS);
	static final short[] DFA290_accept = DFA.unpackEncodedString(DFA290_acceptS);
	static final short[] DFA290_special = DFA.unpackEncodedString(DFA290_specialS);
	static final short[][] DFA290_transition;

	static {
		int numStates = DFA290_transitionS.length;
		DFA290_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA290_transition[i] = DFA.unpackEncodedString(DFA290_transitionS[i]);
		}
	}

	protected class DFA290 extends DFA {

		public DFA290(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 290;
			this.eot = DFA290_eot;
			this.eof = DFA290_eof;
			this.min = DFA290_min;
			this.max = DFA290_max;
			this.accept = DFA290_accept;
			this.special = DFA290_special;
			this.transition = DFA290_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1155:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA305_eotS =
		"\4\uffff";
	static final String DFA305_eofS =
		"\4\uffff";
	static final String DFA305_minS =
		"\2\24\2\uffff";
	static final String DFA305_maxS =
		"\2\u0090\2\uffff";
	static final String DFA305_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA305_specialS =
		"\4\uffff}>";
	static final String[] DFA305_transitionS = {
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA305_eot = DFA.unpackEncodedString(DFA305_eotS);
	static final short[] DFA305_eof = DFA.unpackEncodedString(DFA305_eofS);
	static final char[] DFA305_min = DFA.unpackEncodedStringToUnsignedChars(DFA305_minS);
	static final char[] DFA305_max = DFA.unpackEncodedStringToUnsignedChars(DFA305_maxS);
	static final short[] DFA305_accept = DFA.unpackEncodedString(DFA305_acceptS);
	static final short[] DFA305_special = DFA.unpackEncodedString(DFA305_specialS);
	static final short[][] DFA305_transition;

	static {
		int numStates = DFA305_transitionS.length;
		DFA305_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA305_transition[i] = DFA.unpackEncodedString(DFA305_transitionS[i]);
		}
	}

	protected class DFA305 extends DFA {

		public DFA305(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 305;
			this.eot = DFA305_eot;
			this.eof = DFA305_eof;
			this.min = DFA305_min;
			this.max = DFA305_max;
			this.accept = DFA305_accept;
			this.special = DFA305_special;
			this.transition = DFA305_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1170:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA321_eotS =
		"\4\uffff";
	static final String DFA321_eofS =
		"\4\uffff";
	static final String DFA321_minS =
		"\2\23\2\uffff";
	static final String DFA321_maxS =
		"\2\u0090\2\uffff";
	static final String DFA321_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA321_specialS =
		"\4\uffff}>";
	static final String[] DFA321_transitionS = {
			"\2\3\1\1\11\uffff\1\3\13\uffff\1\3\2\uffff\2\3\2\uffff\1\3\7\uffff\1"+
			"\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\20\uffff\1\3\34\uffff\1\3"+
			"\20\uffff\1\1",
			"\2\3\1\1\11\uffff\1\3\13\uffff\1\3\2\uffff\2\3\2\uffff\1\3\7\uffff\1"+
			"\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\20\uffff\1\3\34\uffff\1\3"+
			"\20\uffff\1\1",
			"",
			""
	};

	static final short[] DFA321_eot = DFA.unpackEncodedString(DFA321_eotS);
	static final short[] DFA321_eof = DFA.unpackEncodedString(DFA321_eofS);
	static final char[] DFA321_min = DFA.unpackEncodedStringToUnsignedChars(DFA321_minS);
	static final char[] DFA321_max = DFA.unpackEncodedStringToUnsignedChars(DFA321_maxS);
	static final short[] DFA321_accept = DFA.unpackEncodedString(DFA321_acceptS);
	static final short[] DFA321_special = DFA.unpackEncodedString(DFA321_specialS);
	static final short[][] DFA321_transition;

	static {
		int numStates = DFA321_transitionS.length;
		DFA321_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA321_transition[i] = DFA.unpackEncodedString(DFA321_transitionS[i]);
		}
	}

	protected class DFA321 extends DFA {

		public DFA321(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 321;
			this.eot = DFA321_eot;
			this.eof = DFA321_eof;
			this.min = DFA321_min;
			this.max = DFA321_max;
			this.accept = DFA321_accept;
			this.special = DFA321_special;
			this.transition = DFA321_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1219:9: ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH | COLON | LESS_AND | COMMA | STAR | GREATER | LBRACKET | RBRACKET ) ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA325_eotS =
		"\4\uffff";
	static final String DFA325_eofS =
		"\4\uffff";
	static final String DFA325_minS =
		"\2\23\2\uffff";
	static final String DFA325_maxS =
		"\2\u0090\2\uffff";
	static final String DFA325_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA325_specialS =
		"\4\uffff}>";
	static final String[] DFA325_transitionS = {
			"\1\2\1\uffff\1\1\11\uffff\1\3\16\uffff\2\3\2\uffff\1\3\26\uffff\1\3\7"+
			"\uffff\1\1\76\uffff\1\1",
			"\1\2\1\uffff\1\1\11\uffff\1\3\16\uffff\2\3\2\uffff\1\3\26\uffff\1\3"+
			"\7\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA325_eot = DFA.unpackEncodedString(DFA325_eotS);
	static final short[] DFA325_eof = DFA.unpackEncodedString(DFA325_eofS);
	static final char[] DFA325_min = DFA.unpackEncodedStringToUnsignedChars(DFA325_minS);
	static final char[] DFA325_max = DFA.unpackEncodedStringToUnsignedChars(DFA325_maxS);
	static final short[] DFA325_accept = DFA.unpackEncodedString(DFA325_acceptS);
	static final short[] DFA325_special = DFA.unpackEncodedString(DFA325_specialS);
	static final short[][] DFA325_transition;

	static {
		int numStates = DFA325_transitionS.length;
		DFA325_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA325_transition[i] = DFA.unpackEncodedString(DFA325_transitionS[i]);
		}
	}

	protected class DFA325 extends DFA {

		public DFA325(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 325;
			this.eot = DFA325_eot;
			this.eof = DFA325_eof;
			this.min = DFA325_min;
			this.max = DFA325_max;
			this.accept = DFA325_accept;
			this.special = DFA325_special;
			this.transition = DFA325_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1237:9: ( ( ws )? ( ( sass_interpolation_expression_var )=> sass_interpolation_expression_var | ( IDENT | MINUS | DOT | HASH_SYMBOL | HASH ) ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA333_eotS =
		"\4\uffff";
	static final String DFA333_eofS =
		"\4\uffff";
	static final String DFA333_minS =
		"\2\6\2\uffff";
	static final String DFA333_maxS =
		"\2\u0090\2\uffff";
	static final String DFA333_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA333_specialS =
		"\4\uffff}>";
	static final String[] DFA333_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\2\5\3"+
			"\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\6\3\1\uffff\3\3\1\2\5\3"+
			"\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA333_eot = DFA.unpackEncodedString(DFA333_eotS);
	static final short[] DFA333_eof = DFA.unpackEncodedString(DFA333_eofS);
	static final char[] DFA333_min = DFA.unpackEncodedStringToUnsignedChars(DFA333_minS);
	static final char[] DFA333_max = DFA.unpackEncodedStringToUnsignedChars(DFA333_maxS);
	static final short[] DFA333_accept = DFA.unpackEncodedString(DFA333_acceptS);
	static final short[] DFA333_special = DFA.unpackEncodedString(DFA333_specialS);
	static final short[][] DFA333_transition;

	static {
		int numStates = DFA333_transitionS.length;
		DFA333_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA333_transition[i] = DFA.unpackEncodedString(DFA333_transitionS[i]);
		}
	}

	protected class DFA333 extends DFA {

		public DFA333(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 333;
			this.eot = DFA333_eot;
			this.eof = DFA333_eof;
			this.min = DFA333_min;
			this.max = DFA333_max;
			this.accept = DFA333_accept;
			this.special = DFA333_special;
			this.transition = DFA333_transition;
		}
		@Override
		public String getDescription() {
			return "1278:43: ( ( ws )? SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA337_eotS =
		"\10\uffff";
	static final String DFA337_eofS =
		"\2\3\6\uffff";
	static final String DFA337_minS =
		"\2\6\1\23\1\uffff\2\23\1\uffff\1\23";
	static final String DFA337_maxS =
		"\3\u0090\1\uffff\2\u0090\1\uffff\1\u0090";
	static final String DFA337_acceptS =
		"\3\uffff\1\2\2\uffff\1\1\1\uffff";
	static final String DFA337_specialS =
		"\10\uffff}>";
	static final String[] DFA337_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\1\3\1\2\4\3\1\uffff\3\3"+
			"\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\1\3\1\4\4\3\1\uffff\3\3"+
			"\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\3\1\uffff\1\5\34\uffff\1\6\7\uffff\1\6\26\uffff\1\5\76\uffff\1\5",
			"",
			"\1\3\1\uffff\1\7\34\uffff\1\6\7\uffff\1\6\26\uffff\1\7\76\uffff\1\7",
			"\1\3\1\uffff\1\5\34\uffff\1\6\7\uffff\1\6\26\uffff\1\5\76\uffff\1\5",
			"",
			"\1\3\1\uffff\1\7\34\uffff\1\6\7\uffff\1\6\26\uffff\1\7\76\uffff\1\7"
	};

	static final short[] DFA337_eot = DFA.unpackEncodedString(DFA337_eotS);
	static final short[] DFA337_eof = DFA.unpackEncodedString(DFA337_eofS);
	static final char[] DFA337_min = DFA.unpackEncodedStringToUnsignedChars(DFA337_minS);
	static final char[] DFA337_max = DFA.unpackEncodedStringToUnsignedChars(DFA337_maxS);
	static final short[] DFA337_accept = DFA.unpackEncodedString(DFA337_acceptS);
	static final short[] DFA337_special = DFA.unpackEncodedString(DFA337_specialS);
	static final short[][] DFA337_transition;

	static {
		int numStates = DFA337_transitionS.length;
		DFA337_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA337_transition[i] = DFA.unpackEncodedString(DFA337_transitionS[i]);
		}
	}

	protected class DFA337 extends DFA {

		public DFA337(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 337;
			this.eot = DFA337_eot;
			this.eof = DFA337_eof;
			this.min = DFA337_min;
			this.max = DFA337_max;
			this.accept = DFA337_accept;
			this.special = DFA337_special;
			this.transition = DFA337_transition;
		}
		@Override
		public String getDescription() {
			return "1298:63: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA344_eotS =
		"\5\uffff";
	static final String DFA344_eofS =
		"\5\uffff";
	static final String DFA344_minS =
		"\1\157\2\25\2\uffff";
	static final String DFA344_maxS =
		"\1\157\2\u0090\2\uffff";
	static final String DFA344_acceptS =
		"\3\uffff\1\1\1\2";
	static final String DFA344_specialS =
		"\5\uffff}>";
	static final String[] DFA344_transitionS = {
			"\1\1",
			"\1\2\34\uffff\1\4\7\uffff\1\3\26\uffff\1\2\76\uffff\1\2",
			"\1\2\34\uffff\1\4\7\uffff\1\3\26\uffff\1\2\76\uffff\1\2",
			"",
			""
	};

	static final short[] DFA344_eot = DFA.unpackEncodedString(DFA344_eotS);
	static final short[] DFA344_eof = DFA.unpackEncodedString(DFA344_eofS);
	static final char[] DFA344_min = DFA.unpackEncodedStringToUnsignedChars(DFA344_minS);
	static final char[] DFA344_max = DFA.unpackEncodedStringToUnsignedChars(DFA344_maxS);
	static final short[] DFA344_accept = DFA.unpackEncodedString(DFA344_acceptS);
	static final short[] DFA344_special = DFA.unpackEncodedString(DFA344_specialS);
	static final short[][] DFA344_transition;

	static {
		int numStates = DFA344_transitionS.length;
		DFA344_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA344_transition[i] = DFA.unpackEncodedString(DFA344_transitionS[i]);
		}
	}

	protected class DFA344 extends DFA {

		public DFA344(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 344;
			this.eot = DFA344_eot;
			this.eof = DFA344_eof;
			this.min = DFA344_min;
			this.max = DFA344_max;
			this.accept = DFA344_accept;
			this.special = DFA344_special;
			this.transition = DFA344_transition;
		}
		@Override
		public String getDescription() {
			return "1301:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | SASS_ELSE ( ws )? {...}? IDENT ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA343_eotS =
		"\10\uffff";
	static final String DFA343_eofS =
		"\2\3\6\uffff";
	static final String DFA343_minS =
		"\2\6\1\23\1\uffff\2\23\1\uffff\1\23";
	static final String DFA343_maxS =
		"\3\u0090\1\uffff\2\u0090\1\uffff\1\u0090";
	static final String DFA343_acceptS =
		"\3\uffff\1\2\2\uffff\1\1\1\uffff";
	static final String DFA343_specialS =
		"\10\uffff}>";
	static final String[] DFA343_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\1\3\1\2\4\3\1\uffff\3\3"+
			"\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\2\3\2\uffff\3\3\2\uffff\3\3\1\uffff\1\3\1\4\4\3\1\uffff\3\3"+
			"\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\1\3\1\uffff\1\5\34\uffff\1\6\7\uffff\1\6\26\uffff\1\5\76\uffff\1\5",
			"",
			"\1\3\1\uffff\1\7\34\uffff\1\6\7\uffff\1\6\26\uffff\1\7\76\uffff\1\7",
			"\1\3\1\uffff\1\5\34\uffff\1\6\7\uffff\1\6\26\uffff\1\5\76\uffff\1\5",
			"",
			"\1\3\1\uffff\1\7\34\uffff\1\6\7\uffff\1\6\26\uffff\1\7\76\uffff\1\7"
	};

	static final short[] DFA343_eot = DFA.unpackEncodedString(DFA343_eotS);
	static final short[] DFA343_eof = DFA.unpackEncodedString(DFA343_eofS);
	static final char[] DFA343_min = DFA.unpackEncodedStringToUnsignedChars(DFA343_minS);
	static final char[] DFA343_max = DFA.unpackEncodedStringToUnsignedChars(DFA343_maxS);
	static final short[] DFA343_accept = DFA.unpackEncodedString(DFA343_acceptS);
	static final short[] DFA343_special = DFA.unpackEncodedString(DFA343_specialS);
	static final short[][] DFA343_transition;

	static {
		int numStates = DFA343_transitionS.length;
		DFA343_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA343_transition[i] = DFA.unpackEncodedString(DFA343_transitionS[i]);
		}
	}

	protected class DFA343 extends DFA {

		public DFA343(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 343;
			this.eot = DFA343_eot;
			this.eof = DFA343_eof;
			this.min = DFA343_min;
			this.max = DFA343_max;
			this.accept = DFA343_accept;
			this.special = DFA343_special;
			this.transition = DFA343_transition;
		}
		@Override
		public String getDescription() {
			return "1305:110: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA349_eotS =
		"\4\uffff";
	static final String DFA349_eofS =
		"\4\uffff";
	static final String DFA349_minS =
		"\2\24\2\uffff";
	static final String DFA349_maxS =
		"\2\u0090\2\uffff";
	static final String DFA349_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA349_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA349_transitionS = {
			"\1\2\1\1\73\uffff\1\1\76\uffff\1\1",
			"\1\2\1\1\34\uffff\1\3\36\uffff\1\1\76\uffff\1\1",
			"",
			""
	};

	static final short[] DFA349_eot = DFA.unpackEncodedString(DFA349_eotS);
	static final short[] DFA349_eof = DFA.unpackEncodedString(DFA349_eofS);
	static final char[] DFA349_min = DFA.unpackEncodedStringToUnsignedChars(DFA349_minS);
	static final char[] DFA349_max = DFA.unpackEncodedStringToUnsignedChars(DFA349_maxS);
	static final short[] DFA349_accept = DFA.unpackEncodedString(DFA349_acceptS);
	static final short[] DFA349_special = DFA.unpackEncodedString(DFA349_specialS);
	static final short[][] DFA349_transition;

	static {
		int numStates = DFA349_transitionS.length;
		DFA349_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA349_transition[i] = DFA.unpackEncodedString(DFA349_transitionS[i]);
		}
	}

	protected class DFA349 extends DFA {

		public DFA349(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 349;
			this.eot = DFA349_eot;
			this.eof = DFA349_eof;
			this.min = DFA349_min;
			this.max = DFA349_max;
			this.accept = DFA349_accept;
			this.special = DFA349_special;
			this.transition = DFA349_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1325:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA349_0 = input.LA(1);
						 
						int index349_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA349_0==COMMENT||LA349_0==NL||LA349_0==WS) ) {s = 1;}
						else if ( (LA349_0==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index349_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA349_1 = input.LA(1);
						 
						int index349_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA349_1==IDENT) ) {s = 3;}
						else if ( (LA349_1==COMMENT||LA349_1==NL||LA349_1==WS) ) {s = 1;}
						else if ( (LA349_1==COMMA) && (synpred47_Css3())) {s = 2;}
						 
						input.seek(index349_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 349, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA367_eotS =
		"\4\uffff";
	static final String DFA367_eofS =
		"\4\uffff";
	static final String DFA367_minS =
		"\2\25\2\uffff";
	static final String DFA367_maxS =
		"\2\u0090\2\uffff";
	static final String DFA367_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA367_specialS =
		"\4\uffff}>";
	static final String[] DFA367_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\53\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\53\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA367_eot = DFA.unpackEncodedString(DFA367_eotS);
	static final short[] DFA367_eof = DFA.unpackEncodedString(DFA367_eofS);
	static final char[] DFA367_min = DFA.unpackEncodedStringToUnsignedChars(DFA367_minS);
	static final char[] DFA367_max = DFA.unpackEncodedStringToUnsignedChars(DFA367_maxS);
	static final short[] DFA367_accept = DFA.unpackEncodedString(DFA367_acceptS);
	static final short[] DFA367_special = DFA.unpackEncodedString(DFA367_specialS);
	static final short[][] DFA367_transition;

	static {
		int numStates = DFA367_transitionS.length;
		DFA367_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA367_transition[i] = DFA.unpackEncodedString(DFA367_transitionS[i]);
		}
	}

	protected class DFA367 extends DFA {

		public DFA367(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 367;
			this.eot = DFA367_eot;
			this.eof = DFA367_eof;
			this.min = DFA367_min;
			this.max = DFA367_max;
			this.accept = DFA367_accept;
			this.special = DFA367_special;
			this.transition = DFA367_transition;
		}
		@Override
		public String getDescription() {
			return "402:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA390_eotS =
		"\4\uffff";
	static final String DFA390_eofS =
		"\4\uffff";
	static final String DFA390_minS =
		"\2\25\2\uffff";
	static final String DFA390_maxS =
		"\2\u0090\2\uffff";
	static final String DFA390_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA390_specialS =
		"\4\uffff}>";
	static final String[] DFA390_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\53\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\53\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA390_eot = DFA.unpackEncodedString(DFA390_eotS);
	static final short[] DFA390_eof = DFA.unpackEncodedString(DFA390_eofS);
	static final char[] DFA390_min = DFA.unpackEncodedStringToUnsignedChars(DFA390_minS);
	static final char[] DFA390_max = DFA.unpackEncodedStringToUnsignedChars(DFA390_maxS);
	static final short[] DFA390_accept = DFA.unpackEncodedString(DFA390_acceptS);
	static final short[] DFA390_special = DFA.unpackEncodedString(DFA390_specialS);
	static final short[][] DFA390_transition;

	static {
		int numStates = DFA390_transitionS.length;
		DFA390_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA390_transition[i] = DFA.unpackEncodedString(DFA390_transitionS[i]);
		}
	}

	protected class DFA390 extends DFA {

		public DFA390(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 390;
			this.eot = DFA390_eot;
			this.eof = DFA390_eof;
			this.min = DFA390_min;
			this.max = DFA390_max;
			this.accept = DFA390_accept;
			this.special = DFA390_special;
			this.transition = DFA390_transition;
		}
		@Override
		public String getDescription() {
			return "679:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA392_eotS =
		"\4\uffff";
	static final String DFA392_eofS =
		"\4\uffff";
	static final String DFA392_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA392_maxS =
		"\2\u0090\2\uffff";
	static final String DFA392_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA392_specialS =
		"\4\uffff}>";
	static final String[] DFA392_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\76\uffff\1\1",
			"\1\3\13\uffff\2\3\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff\2"+
			"\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\3\uffff\1\3\16\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff"+
			"\1\1",
			"",
			""
	};

	static final short[] DFA392_eot = DFA.unpackEncodedString(DFA392_eotS);
	static final short[] DFA392_eof = DFA.unpackEncodedString(DFA392_eofS);
	static final char[] DFA392_min = DFA.unpackEncodedStringToUnsignedChars(DFA392_minS);
	static final char[] DFA392_max = DFA.unpackEncodedStringToUnsignedChars(DFA392_maxS);
	static final short[] DFA392_accept = DFA.unpackEncodedString(DFA392_acceptS);
	static final short[] DFA392_special = DFA.unpackEncodedString(DFA392_specialS);
	static final short[][] DFA392_transition;

	static {
		int numStates = DFA392_transitionS.length;
		DFA392_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA392_transition[i] = DFA.unpackEncodedString(DFA392_transitionS[i]);
		}
	}

	protected class DFA392 extends DFA {

		public DFA392(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 392;
			this.eot = DFA392_eot;
			this.eof = DFA392_eof;
			this.min = DFA392_min;
			this.max = DFA392_max;
			this.accept = DFA392_accept;
			this.special = DFA392_special;
			this.transition = DFA392_transition;
		}
		@Override
		public String getDescription() {
			return "681:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA401_eotS =
		"\5\uffff";
	static final String DFA401_eofS =
		"\5\uffff";
	static final String DFA401_minS =
		"\2\5\3\uffff";
	static final String DFA401_maxS =
		"\2\u0090\3\uffff";
	static final String DFA401_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA401_specialS =
		"\5\uffff}>";
	static final String[] DFA401_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\3\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\3\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA401_eot = DFA.unpackEncodedString(DFA401_eotS);
	static final short[] DFA401_eof = DFA.unpackEncodedString(DFA401_eofS);
	static final char[] DFA401_min = DFA.unpackEncodedStringToUnsignedChars(DFA401_minS);
	static final char[] DFA401_max = DFA.unpackEncodedStringToUnsignedChars(DFA401_maxS);
	static final short[] DFA401_accept = DFA.unpackEncodedString(DFA401_acceptS);
	static final short[] DFA401_special = DFA.unpackEncodedString(DFA401_specialS);
	static final short[][] DFA401_transition;

	static {
		int numStates = DFA401_transitionS.length;
		DFA401_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA401_transition[i] = DFA.unpackEncodedString(DFA401_transitionS[i]);
		}
	}

	protected class DFA401 extends DFA {

		public DFA401(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 401;
			this.eot = DFA401_eot;
			this.eof = DFA401_eof;
			this.min = DFA401_min;
			this.max = DFA401_max;
			this.accept = DFA401_accept;
			this.special = DFA401_special;
			this.transition = DFA401_transition;
		}
		@Override
		public String getDescription() {
			return "907:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA406_eotS =
		"\5\uffff";
	static final String DFA406_eofS =
		"\5\uffff";
	static final String DFA406_minS =
		"\2\5\3\uffff";
	static final String DFA406_maxS =
		"\2\u0090\3\uffff";
	static final String DFA406_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA406_specialS =
		"\5\uffff}>";
	static final String[] DFA406_transitionS = {
			"\2\3\3\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\2\uffff\1\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff\7\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\1",
			"\2\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\2\uffff\1\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff\7\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA406_eot = DFA.unpackEncodedString(DFA406_eotS);
	static final short[] DFA406_eof = DFA.unpackEncodedString(DFA406_eofS);
	static final char[] DFA406_min = DFA.unpackEncodedStringToUnsignedChars(DFA406_minS);
	static final char[] DFA406_max = DFA.unpackEncodedStringToUnsignedChars(DFA406_maxS);
	static final short[] DFA406_accept = DFA.unpackEncodedString(DFA406_acceptS);
	static final short[] DFA406_special = DFA.unpackEncodedString(DFA406_specialS);
	static final short[][] DFA406_transition;

	static {
		int numStates = DFA406_transitionS.length;
		DFA406_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA406_transition[i] = DFA.unpackEncodedString(DFA406_transitionS[i]);
		}
	}

	protected class DFA406 extends DFA {

		public DFA406(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 406;
			this.eot = DFA406_eot;
			this.eof = DFA406_eof;
			this.min = DFA406_min;
			this.max = DFA406_max;
			this.accept = DFA406_accept;
			this.special = DFA406_special;
			this.transition = DFA406_transition;
		}
		@Override
		public String getDescription() {
			return "988:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet120 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_charSet_in_styleSheet130 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_styleSheet132 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_imports_in_styleSheet146 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet157 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_body_in_styleSheet168 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces193 = new BitSet(new long[]{0x0000000000200002L,0x0000000000030000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_namespaces195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace211 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_namespace213 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_namespace219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace224 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_namespace226 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_namespace229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010001L});
	public static final BitSet FOLLOW_ws_in_charSet278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_charSetValue_in_charSet281 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_charSet283 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_charSet286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports314 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_imports316 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_imports319 = new BitSet(new long[]{0x0010000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_imports321 = new BitSet(new long[]{0x0010000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_importItem349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem352 = new BitSet(new long[]{0x7014848000A47C42L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_importItem362 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem398 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_importItem400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem403 = new BitSet(new long[]{0x7014848000B47C42L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_importItem406 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem409 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_importItem411 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem414 = new BitSet(new long[]{0x7014848000B47C42L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_importItem426 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem453 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_importItem455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000801L});
	public static final BitSet FOLLOW_LPAREN_in_importItem459 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem461 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem463 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010801L});
	public static final BitSet FOLLOW_ws_in_importItem465 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000801L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem470 = new BitSet(new long[]{0x7014848000A47C42L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_importItem480 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media501 = new BitSet(new long[]{0x7014848000A47C40L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_media503 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_media521 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_media529 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media536 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_media538 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToFollow_in_media541 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_mediaBody_in_media551 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_media558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody592 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_mediaBody602 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody605 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_mediaBody609 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody636 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_mediaBody638 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem704 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem737 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem740 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem743 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem760 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem763 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem805 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem832 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBodyItem842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem852 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem898 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem906 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem914 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem927 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList941 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList953 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList956 = new BitSet(new long[]{0x7014848000A47C40L,0x1EEDDCE004230540L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList958 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList961 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery980 = new BitSet(new long[]{0x0004840000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery982 = new BitSet(new long[]{0x0004840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery989 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery993 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery996 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1001 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1012 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1016 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1019 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1024 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1037 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1049 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1065 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1093 = new BitSet(new long[]{0x7014848000A47C40L,0x1EEDDCE004030500L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1095 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1098 = new BitSet(new long[]{0x0000000000280000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1100 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1103 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1106 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1127 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1130 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1132 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1151 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1171 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1203 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1241 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_body1251 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_body1254 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_body1258 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_SEMI_in_body1285 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_body1287 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1392 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem1420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem1437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem1459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem1471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem1494 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem1508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem1522 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem1536 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule1562 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule1570 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule1578 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule1586 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule1594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule1607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule1611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule1615 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule1643 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000010001L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1645 = new BitSet(new long[]{0x0404000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule1650 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1652 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule1666 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule1677 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule1687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1698 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000010800L});
	public static final BitSet FOLLOW_ws_in_moz_document1700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000000800L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1705 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_moz_document1707 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document1713 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000010800L});
	public static final BitSet FOLLOW_ws_in_moz_document1715 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000000800L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1718 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_moz_document1720 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document1727 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_moz_document1729 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_body_in_moz_document1734 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document1739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1776 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010001L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1778 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes1781 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1783 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes1787 = new BitSet(new long[]{0x0004000000200000L,0x0000000208020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1789 = new BitSet(new long[]{0x0004000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1796 = new BitSet(new long[]{0x0004000000200000L,0x0000000208020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1798 = new BitSet(new long[]{0x0004000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes1805 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1817 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1819 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock1823 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1826 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock1829 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock1833 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock1837 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_webkitKeyframeSelectors1849 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1861 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors1864 = new BitSet(new long[]{0x0004000000200000L,0x0000000008020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1866 = new BitSet(new long[]{0x0004000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_webkitKeyframeSelectors1869 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page1894 = new BitSet(new long[]{0x0404000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_page1896 = new BitSet(new long[]{0x0404000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page1901 = new BitSet(new long[]{0x0400000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_page1903 = new BitSet(new long[]{0x0400000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page1910 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_page1912 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page1925 = new BitSet(new long[]{0x7014C48080A47C40L,0xBEEDDCE204030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_page1927 = new BitSet(new long[]{0x7014C48080847C40L,0xBEEDDCE204010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page1970 = new BitSet(new long[]{0x0000000000200000L,0x2000000200020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_margin_in_page1972 = new BitSet(new long[]{0x0000000000200000L,0x2000000200020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_page1975 = new BitSet(new long[]{0x0000000000000000L,0x2000000200000000L});
	public static final BitSet FOLLOW_SEMI_in_page1981 = new BitSet(new long[]{0x7014C48080A47C40L,0xBEEDDCE204030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_page1983 = new BitSet(new long[]{0x7014C48080847C40L,0xBEEDDCE204010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page1988 = new BitSet(new long[]{0x0000000000200000L,0x2000000200020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_margin_in_page1990 = new BitSet(new long[]{0x0000000000200000L,0x2000000200020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_page1993 = new BitSet(new long[]{0x0000000000000000L,0x2000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_page2008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2025 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2027 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2030 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2032 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2043 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_counterStyle2045 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2048 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2052 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2080 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_fontFace2082 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace2093 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_fontFace2095 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace2098 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_fontFace2102 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace2113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin2127 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_margin2129 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin2132 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_margin2134 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin2137 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_margin2139 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin2142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage2351 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage2353 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_declaration_interpolation_expression_in_property2449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property2457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property2465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property2475 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map2502 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map2504 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_map2506 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map2509 = new BitSet(new long[]{0x7014C48080B47C40L,0x1EEDDDE004030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_sass_map2511 = new BitSet(new long[]{0x7014C48080947C40L,0x1EEDDDE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map2514 = new BitSet(new long[]{0x7014C48080947C40L,0x1EEDDDE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map2533 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map2540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name2561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs2595 = new BitSet(new long[]{0x7014C48080B47C42L,0x1EEDDCE004030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2605 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2608 = new BitSet(new long[]{0x7014C48080B47C42L,0x1EEDDCE004030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2612 = new BitSet(new long[]{0x7014C48080947C42L,0x1EEDDCE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2639 = new BitSet(new long[]{0x7014C48080B47C42L,0x1EEDDCE004030700L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2641 = new BitSet(new long[]{0x7014C48080947C42L,0x1EEDDCE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_property_in_sass_map_pair2676 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2678 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair2681 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2683 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair2686 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2689 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair2692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2717 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_rule2720 = new BitSet(new long[]{0x0804CC00A0180080L,0x8002000460000202L,0x0000000000000004L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2722 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2729 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_rule2732 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule2739 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_rule2741 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToFollow_in_rule2744 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_rule2754 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule2761 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_in_declarations2804 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_declarations2814 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations2817 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_declarations2821 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_SEMI_in_declarations2848 = new BitSet(new long[]{0x7814CC80A0BC7CC2L,0xBEEFDCE464030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_declarations2850 = new BitSet(new long[]{0x7814CC80A09C7CC2L,0xBEEFDCE464010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration2885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration2898 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration2910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration2922 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration2961 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration3006 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3039 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_declaration3042 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3062 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_declaration3065 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration3102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration3112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration3122 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration3132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration3142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration3152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration3162 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration3172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration3180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_expression_in_selectorsGroup3243 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3256 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3259 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3262 = new BitSet(new long[]{0x0804CC00A0280080L,0x8002000060020002L,0x0000000000010004L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3264 = new BitSet(new long[]{0x0804CC00A0080080L,0x8002000060000002L,0x0000000000000004L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3267 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_combinator_in_selector3288 = new BitSet(new long[]{0x0804C400A0280080L,0x8002000020020002L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_selector3290 = new BitSet(new long[]{0x0804C400A0080080L,0x8002000020000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3295 = new BitSet(new long[]{0x0804CC00A0280082L,0x8002000060020002L,0x0000000000010004L});
	public static final BitSet FOLLOW_ws_in_selector3301 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_combinator_in_selector3304 = new BitSet(new long[]{0x0804C400A0280080L,0x8002000020020002L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_selector3306 = new BitSet(new long[]{0x0804C400A0080080L,0x8002000020000002L});
	public static final BitSet FOLLOW_ws_in_selector3310 = new BitSet(new long[]{0x0804C400A0080080L,0x8002000020000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3314 = new BitSet(new long[]{0x0804CC00A0280082L,0x8002000060020002L,0x0000000000010004L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence3362 = new BitSet(new long[]{0x0800C000A0280082L,0x0002000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3372 = new BitSet(new long[]{0x0800C000A0080080L,0x0002000000000000L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3375 = new BitSet(new long[]{0x0800C000A0280082L,0x0002000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3385 = new BitSet(new long[]{0x0800C000A0280082L,0x0002000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3395 = new BitSet(new long[]{0x0800C000A0080080L,0x0002000000000000L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3398 = new BitSet(new long[]{0x0800C000A0280082L,0x0002000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector3487 = new BitSet(new long[]{0x0004040000000000L,0x8000000000000002L});
	public static final BitSet FOLLOW_elementName_in_typeSelector3491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix3506 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix3510 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix3514 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent3546 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_elementSubsequent3560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent3570 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent3579 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent3591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent3603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId3627 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId3647 = new BitSet(new long[]{0x0000000000000080L,0x0000000000008000L});
	public static final BitSet FOLLOW_NAME_in_cssId3663 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_cssId3683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass3734 = new BitSet(new long[]{0x0004040000000080L,0x0000000000200000L});
	public static final BitSet FOLLOW_IDENT_in_cssClass3758 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass3774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass3790 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_cssClass3808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute3875 = new BitSet(new long[]{0x0004000000200000L,0x8000000020020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute3882 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_slAttribute3885 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute3896 = new BitSet(new long[]{0x0020000410600200L,0x0000000401020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_slAttribute3898 = new BitSet(new long[]{0x0020000410400200L,0x0000000401000000L});
	public static final BitSet FOLLOW_set_in_slAttribute3932 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010001L});
	public static final BitSet FOLLOW_ws_in_slAttribute4112 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute4131 = new BitSet(new long[]{0x0000000000200000L,0x0000000400020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4149 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute4174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName4190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo4262 = new BitSet(new long[]{0x0004040000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_set_in_pseudo4325 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_pseudo4382 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4385 = new BitSet(new long[]{0xF014C5A240A47C60L,0x9EEDDDF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_pseudo4387 = new BitSet(new long[]{0xF014C5A240847C60L,0x9EEDDDF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_expression_in_pseudo4393 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_pseudo4395 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo4401 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4406 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo4485 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_pseudo4487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4490 = new BitSet(new long[]{0x0804C400A0280080L,0x8002010020020002L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_pseudo4492 = new BitSet(new long[]{0x0804C400A0080080L,0x8002010020000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_pseudo4495 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4498 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4536 = new BitSet(new long[]{0x7014C48080847C40L,0x1EEDDCE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4539 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4541 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4544 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4546 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration4549 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4552 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration4555 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4567 = new BitSet(new long[]{0x7014C48080847C40L,0x1EEDDCE004010700L,0x00000000000081F0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4570 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4572 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4575 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4577 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration4580 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue4614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue4622 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue4644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate4713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI4814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio4859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression4876 = new BitSet(new long[]{0xF014C5A240B47C62L,0x5EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_expression4908 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_ws_in_expression4913 = new BitSet(new long[]{0x0000000000100000L,0x4000000000000000L});
	public static final BitSet FOLLOW_operator_in_expression4916 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_expression4918 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_term_in_expression4927 = new BitSet(new long[]{0xF014C5A240B47C62L,0x5EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_unaryOperator_in_term4952 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF81C430504L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_term4954 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF81C410504L,0x00000000000089FDL});
	public static final BitSet FOLLOW_function_in_term4983 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term4996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term5008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term5020 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term5032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term5044 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term5056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term5068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term5080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term5092 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term5104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term5116 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term5128 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term5145 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term5157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_set_in_term5159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term5180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term5195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term5207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term5219 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term5233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term5247 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term5261 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5288 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function5304 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_function5306 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_function5311 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDDF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_function5313 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDDF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_fnAttributes_in_function5340 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function5371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName5423 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName5425 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5429 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName5432 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5434 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5458 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5461 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes5464 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_fnAttributes5466 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5469 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute5510 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5512 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute5515 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C430744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_fnAttribute5521 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute5524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute5541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute5553 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5576 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName5579 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5581 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName5601 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue5624 = new BitSet(new long[]{0xF014C5A240A47C62L,0x5EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5656 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5661 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue5664 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue5666 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_term_in_fnAttributeValue5675 = new BitSet(new long[]{0xF014C5A240A47C62L,0x5EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue5696 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor5710 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration5770 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5772 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration5775 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5777 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration5780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration5802 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5804 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration5807 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5809 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration5812 = new BitSet(new long[]{0x0000000000200002L,0x0010200000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5816 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration5819 = new BitSet(new long[]{0x0000000000200002L,0x0010200000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration5825 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration5828 = new BitSet(new long[]{0x0000000000200002L,0x0010200000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_set_in_cp_variable5868 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable6052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6076 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6095 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list6098 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6100 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6103 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6136 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x1EEDDCF85C63074DL,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression6160 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression6163 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression6165 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6169 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x1EEDDCF85C63074DL,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression6188 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6191 = new BitSet(new long[]{0xF01CDDA246A47C62L,0x1EEDDCF85C63074DL,0x00000000000189FDL});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator6219 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator6223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator6228 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator6232 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator6236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator6240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator6244 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom6274 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C430744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6276 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom6307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom6323 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDDF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6325 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDDF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom6329 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6331 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom6336 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6368 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions6375 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6377 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6411 = new BitSet(new long[]{0x0000000000200002L,0xC000000040020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6453 = new BitSet(new long[]{0x0000000000000000L,0xC000000040000200L});
	public static final BitSet FOLLOW_set_in_cp_math_expression6456 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C430744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6466 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6469 = new BitSet(new long[]{0x0000000000200002L,0xC000000040020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom6502 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6510 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom6521 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6523 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom6529 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C430744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6531 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom6534 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6536 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom6539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration6578 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration6580 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration6585 = new BitSet(new long[]{0x7010008001A47C40L,0x1EEDDDE004030510L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6587 = new BitSet(new long[]{0x7010008001847C40L,0x1EEDDDE004010510L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration6590 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration6593 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6596 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration6599 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration6623 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6625 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration6627 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration6633 = new BitSet(new long[]{0x7010008001A47C40L,0x1EEDDDE004030510L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6635 = new BitSet(new long[]{0x7010008001847C40L,0x1EEDDDE004010510L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration6638 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration6641 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6655 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration6658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call6693 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call6695 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6698 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call6701 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDDF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6703 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDDF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call6706 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call6709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call6733 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6735 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call6737 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call6743 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDDF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6745 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDDF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call6748 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call6751 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call6756 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call6759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block6788 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block6790 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block6793 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block6803 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block6810 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name6831 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6862 = new BitSet(new long[]{0x0000000001100002L,0x2000000000000000L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args6866 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args6874 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args6877 = new BitSet(new long[]{0x0000000001100002L,0x2000000000000000L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args6883 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args6885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg6919 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6921 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg6924 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6926 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg6929 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg6941 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg6949 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list6996 = new BitSet(new long[]{0x0000000001100002L,0x2000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7000 = new BitSet(new long[]{0x7010008000A47C40L,0x1EEDDCE004030500L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7010 = new BitSet(new long[]{0x7010008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7013 = new BitSet(new long[]{0x0000000001100002L,0x2000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7020 = new BitSet(new long[]{0x0000000001200002L,0x0000000000020010L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7028 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7036 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7044 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list7061 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg7092 = new BitSet(new long[]{0x0000000000280002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7094 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg7099 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_cp_arg7101 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg7104 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7106 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded7132 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7137 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7140 = new BitSet(new long[]{0x0004000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded7144 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000010000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded7148 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7154 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_NOT_in_less_condition7180 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_condition7182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition7191 = new BitSet(new long[]{0x7014008000A47C40L,0x1EEDDCE004030500L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_less_condition7193 = new BitSet(new long[]{0x7014008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition7220 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000010000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition7224 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_condition7227 = new BitSet(new long[]{0x0000180000000000L,0x0000010001000009L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition7231 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C430744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_less_condition7233 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition7236 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition7254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition7276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition7281 = new BitSet(new long[]{0x7010008000A47C40L,0x1EEDDCE004030500L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7283 = new BitSet(new long[]{0x7010008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition7286 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7288 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition7291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name7313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation7371 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation7373 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7375 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation7378 = new BitSet(new long[]{0x0000000000200000L,0x0000000200020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7380 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation7383 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_expression7431 = new BitSet(new long[]{0x0804C80080380002L,0x8000000400020202L,0x0000000000010000L});
	public static final BitSet FOLLOW_set_in_sass_selector_interpolation_expression7459 = new BitSet(new long[]{0x0804C80080380002L,0x8000000400020202L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_selector_interpolation_expression7540 = new BitSet(new long[]{0x0804C80080180000L,0x8000000400000202L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_expression7577 = new BitSet(new long[]{0x0804C80080380002L,0x8000000400020202L,0x0000000000010000L});
	public static final BitSet FOLLOW_set_in_sass_selector_interpolation_expression7613 = new BitSet(new long[]{0x0804C80080380002L,0x8000000400020202L,0x0000000000010000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_declaration_interpolation_expression7728 = new BitSet(new long[]{0x0004C00080200002L,0x0000000000020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_set_in_sass_declaration_interpolation_expression7756 = new BitSet(new long[]{0x0004C00080200002L,0x0000000000020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_declaration_interpolation_expression7808 = new BitSet(new long[]{0x0004C00080000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_declaration_interpolation_expression7845 = new BitSet(new long[]{0x0004C00080200002L,0x0000000000020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_set_in_sass_declaration_interpolation_expression7881 = new BitSet(new long[]{0x0004C00080200002L,0x0000000000020200L,0x0000000000010000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7950 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var7952 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var7954 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var7956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties7996 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties7998 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties8001 = new BitSet(new long[]{0xF414C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8003 = new BitSet(new long[]{0xF414C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties8007 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8009 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties8014 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8016 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties8019 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties8021 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties8024 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend8045 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8047 = new BitSet(new long[]{0x0804C400A0080080L,0x8002000020000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend8049 = new BitSet(new long[]{0x0000000000200002L,0x0100000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8052 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend8055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8078 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug8099 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_debug8109 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug8111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control8132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control8136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control8140 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control8144 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if8165 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_if8167 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if8169 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_if8171 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if8174 = new BitSet(new long[]{0x0000000000200002L,0x0000800000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_if8177 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if8180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8203 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_else8205 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8220 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_else8222 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else8227 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_sass_else8231 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else8234 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_else8236 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8239 = new BitSet(new long[]{0x0000000000200002L,0x0000800000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_else8242 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else8245 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression8268 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for8289 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8291 = new BitSet(new long[]{0x7010008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for8293 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8295 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8299 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8303 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8305 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8307 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8311 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8315 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C410744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8317 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_for8319 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for8322 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each8343 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_each8345 = new BitSet(new long[]{0x7010008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each8347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_each8349 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each8353 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_each8357 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each8359 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_each8361 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each8364 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8385 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8397 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables8400 = new BitSet(new long[]{0x7010008000A47C40L,0x1EEDDCE004030500L,0x00000000000181F0L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8402 = new BitSet(new long[]{0x7010008000847C40L,0x1EEDDCE004010500L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8405 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while8430 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_while8432 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while8434 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_while8436 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while8439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block8460 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_sass_control_block8462 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block8465 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block8468 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration8510 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8512 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration8514 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8516 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration8519 = new BitSet(new long[]{0x7010008001847C40L,0x1EEDDDE004010510L,0x00000000000081F0L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration8521 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration8524 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8526 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration8529 = new BitSet(new long[]{0x7814CC80A0BC7CC0L,0xBEEFDCE664030702L,0x00000000000181F4L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8531 = new BitSet(new long[]{0x7814CC80A09C7CC0L,0xBEEFDCE664010702L,0x00000000000081F4L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration8534 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration8537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name8558 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return8579 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return8581 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return8583 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content8604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types8623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when8646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and8665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or8683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only8701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3356 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3420 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3474 = new BitSet(new long[]{0x7014848000847C40L,0x1EEDDCE004210540L,0x00000000000081F0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css3596 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css3599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css3670 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css3675 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css3677 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css3679 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css3682 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css3690 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xDFFFFFFFFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css3700 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css3718 = new BitSet(new long[]{0x0008000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3721 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css3724 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3728 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css3731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css3754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css3789 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xDFFFFFFDFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_SEMI_in_synpred8_Css3801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_declaration_interpolation_expression_in_synpred9_Css3814 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred9_Css3816 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xDFFFFFFDFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_SEMI_in_synpred9_Css3828 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css3946 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css3949 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31245 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred11_Css31248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred12_Css31323 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred12_Css31328 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred12_Css31330 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31332 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred12_Css31335 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred12_Css31343 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xDFFFFFFDFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred12_Css31355 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred13_Css31381 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred13_Css31383 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred13_Css31386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred14_Css31405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred15_Css31433 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred16_Css31450 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css31452 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred16_Css31455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_synpred17_Css32444 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred17_Css32446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred18_Css32599 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred18_Css32602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred19_Css32808 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred19_Css32811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred20_Css32882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred21_Css32894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred22_Css32907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred23_Css32919 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred24_Css32936 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32938 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred24_Css32941 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_set_in_synpred24_Css32953 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred25_Css32970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred25_Css32975 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred25_Css32977 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred25_Css32979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred25_Css32982 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred25_Css32990 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xDFFFFFFDFFFFFFFFL,0x00000000000FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred25_Css33002 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred26_Css33020 = new BitSet(new long[]{0x0008000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33023 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred26_Css33026 = new BitSet(new long[]{0x0000000000200000L,0x2000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33030 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred26_Css33033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred27_Css33056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred28_Css33081 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33084 = new BitSet(new long[]{0x0804CC00A0180080L,0x8002000460000202L,0x0000000000000004L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred28_Css33086 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred28_Css33093 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33096 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred28_Css33099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_synpred29_Css33237 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred29_Css33239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33366 = new BitSet(new long[]{0x0800C000A0080000L,0x0002000000000000L});
	public static final BitSet FOLLOW_esPred_in_synpred30_Css33369 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33389 = new BitSet(new long[]{0x0800C000A0080000L,0x0002000000000000L});
	public static final BitSet FOLLOW_esPred_in_synpred31_Css33392 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred32_Css33484 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred33_Css34883 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_ws_in_synpred33_Css34888 = new BitSet(new long[]{0x0000000000100000L,0x4000000000000000L});
	public static final BitSet FOLLOW_operator_in_synpred33_Css34891 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_synpred33_Css34893 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_term_in_synpred33_Css34902 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred34_Css34975 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css34977 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred34_Css34980 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred35_Css35497 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ws_in_synpred35_Css35499 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_synpred35_Css35502 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred36_Css35537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35631 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35636 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred37_Css35639 = new BitSet(new long[]{0xF014C5A240A47C60L,0x1EEDDCF85C430704L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35641 = new BitSet(new long[]{0xF014C5A240847C60L,0x1EEDDCF85C410704L,0x00000000000089FDL});
	public static final BitSet FOLLOW_term_in_synpred37_Css35650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36084 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred38_Css36087 = new BitSet(new long[]{0xF01CC5A240A47C60L,0x1EEDDCF85C630744L,0x00000000000189FDL});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36089 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_in_synpred38_Css36092 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred39_Css36153 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred39_Css36156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36182 = new BitSet(new long[]{0xF01CC5A240847C60L,0x1EEDDCF85C610744L,0x00000000000089FDL});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred40_Css36185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred41_Css36304 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred42_Css36437 = new BitSet(new long[]{0x0000000000000000L,0xC000000040000200L});
	public static final BitSet FOLLOW_set_in_synpred42_Css36440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_synpred43_Css37428 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_synpred44_Css37574 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_synpred45_Css37725 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_synpred46_Css37842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred47_Css38390 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred47_Css38393 = new BitSet(new long[]{0x0000000000000002L});
}
