/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2012 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2012 Sun Microsystems, Inc.
 */
package org.netbeans.modules.web.livehtml.ui;

import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import org.netbeans.modules.web.livehtml.Revision;
import org.openide.util.Lookup;

/**
 *
 * @author petr-podzimek
 */
public class RevisionToolTipPanel extends javax.swing.JPanel {
    
    private Revision revision = null;

    /**
     * Creates new form RevisionToolTipPanel
     */
    public RevisionToolTipPanel() {
        initComponents();
    }

    public void setRevision(Revision revision) {
        this.revision = revision;
        
        titleLabel.setText("Change of revision " + revision.getIndex());
        
        final Component[] components = toolTipTabbedPane.getComponents();
        if (components == null || components.length == 0) {
            int i = 0;
            for (RevisionToolTipService revisionToolTipService : Lookup.getDefault().lookupAll(RevisionToolTipService.class)) {
                Component component = revisionToolTipService.createToolTip(revision);
                if (component == null) {
                    component = new JLabel();
                    component.setEnabled(revisionToolTipService.canProcess(revision));
                }
                
                JScrollPane scrollPane = new JScrollPane(component);
                
                toolTipTabbedPane.addTab(revisionToolTipService.getName(), scrollPane);
                toolTipTabbedPane.setEnabledAt(i, revisionToolTipService.canProcess(revision));
                
                i += 1;
            }
        } else {
            for (RevisionToolTipService revisionToolTipService : Lookup.getDefault().lookupAll(RevisionToolTipService.class)) {
                for (int i = 0; i < components.length; i++) {
                    Component component = components[i];
                    if (component instanceof JScrollPane) {
                        JScrollPane scrollPane = (JScrollPane) component;
                        final Component view = scrollPane.getViewport().getView();
                        if (revisionToolTipService.getName().equals(toolTipTabbedPane.getTitleAt(i))) {
                            revisionToolTipService.update(view, revision);
                            toolTipTabbedPane.setEnabledAt(i, revisionToolTipService.canProcess(revision));
                        }
                    }
                }
            }
        }
        
        toolTipTabbedPane.revalidate();
        toolTipTabbedPane.repaint();
        
        revalidate();
        repaint();
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolTipTabbedPane = new javax.swing.JTabbedPane();
        titleLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(200, 200));
        setPreferredSize(new java.awt.Dimension(300, 200));

        org.openide.awt.Mnemonics.setLocalizedText(titleLabel, org.openide.util.NbBundle.getMessage(RevisionToolTipPanel.class, "RevisionToolTipPanel.titleLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(toolTipTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolTipTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTabbedPane toolTipTabbedPane;
    // End of variables declaration//GEN-END:variables
}
