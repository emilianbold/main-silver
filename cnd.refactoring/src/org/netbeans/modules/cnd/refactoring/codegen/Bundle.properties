# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

complete-line-newline=Complete Line and Create New Line
complete-line=Complete Line

LBL_constructor=Constructor...
LBL_generate_constructor=Generate Constructor
LBL_super_constructor_select=Select super &constructors:
LBL_constructor_select=&Select fields to be initialized by constructor:
LBL_copy_constructor=Copy Constructor
LBL_getter=Getter...
LBL_getter_field_select=&Select fields to generate getters for:
LBL_setter=Setter...
LBL_setter_field_select=&Select fields to generate setters for:
LBL_getter_and_setter=Getter and Setter...
LBL_getter_and_setter_field_select=&Select fields to generate getters and setters for:
LBL_equals_and_hashcode=equals() and hashCode()...
LBL_equals=equals()...
LBL_hashcode=hashCode()...
LBL_generate_equals_and_hashcode=Generate equals() and hashCode()
LBL_generate_equals=Generate equals()
LBL_generate_hashcode=Generate hashCode()
LBL_equals_select=Select fields to be included in equals():
LBL_hashcode_select=Select fields to be included in hashCode():
LBL_implement_method=Implement Method...
LBL_generate_implement=Generate Implement Methods
LBL_implement_method_select=Select methods to implement:
LBL_override_method=Override Method...
LBL_generate_override=Generate Override Methods
LBL_override_method_select=Select methods to override:
LBL_delegate_method=Delegate Method...
LBL_generate_delegate=Generate Delegate Methods
LBL_delegate_field_select=Select target field to generate delegates for:
LBL_delegate_method_select=Select methods to generate delegates for:

#A11Y Descriptions
A11Y_Generate_Constructor=Generate Constructor Dialog
A11Y_Generate_Operators=Generate Operators Dialog
A11Y_Generate_Delegate=Delegate Method Dialog
A11Y_Generate_EqualsHashCode=Generate equals and hashCode Methods
A11Y_Generate_GetterSetter=Generate Getter and Setter Methods
A11Y_Generate_ImplementOverride=Implement/Override Method Dialog

#Operators
LBL_operatorBinaryArithmetic=Binary Arithmetic Operators...
LBL_operatorRelational=Relational Operators..
LBL_operatorAssignment=Assignment Operator...
LBL_operatorPointer=Pointer Operators...
LBL_operatorFriendStream=Friend Stream Operators...

LBL_generate_operator=Generate Operator
LBL_operator_select=&Select operators:

PLUS_EQ=// Do addition of right to *this here\n\
return *this;
PLUS={0} result(*this); // Make a copy of myself.\n\
result += right; // Reuse compound assignment\n\
return result;
MINUS_EQ=// Do subtraction of right from *this here\n\
return *this;
MINUS={0} result(*this); // Make a copy of myself.\n\
result -= right; // Reuse compound assignment\n\
return result;
EQ_EQ=bool result = false; // Compare right and *this here\n\
return result;
NOT_EQ=bool result = !(*this == right); // Reuse equals operator\n\
return result;
ASSIGNMENT=// Check for self-assignment!\n\
if (this == &right) // Same object?\n\
return *this; // Yes, so skip assignment, and just return *this.\n\
// Deallocate, allocate new space, copy values...\n\
return *this;
LEFT_SHIFT=// write obj to stream\n\
return os;
RIGHT_SHIFT=// read obj from stream\n\
if(false /* no valid object of T found in stream */)\n\
is.setstate(std::ios::failbit);\n\
return is;

ARRAY=// actual access to element
ARRAY_CONST=// ether actual access to element\n\
// or reuse non-const operator, for example:\n\
return const_cast<{0}&>(*this)[index];
POINTER=
POINTER_CONST=
ARROW=
ARROW_CONST=
ADDRESS=
ADDRESS_CONST=