/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2012 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2012 Sun Microsystems, Inc.
 */
package org.netbeans.modules.search.ui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JToolBar;
import org.netbeans.api.search.SearchControl;
import org.netbeans.spi.search.provider.SearchComposition;
import org.netbeans.spi.search.provider.SearchProvider;
import org.netbeans.spi.search.provider.SearchProvider.Presenter;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.OutlineView;
import org.openide.util.ImageUtilities;

/**
 *
 * @author jhavlin
 */
public abstract class AbstractSearchResultsPanel extends javax.swing.JPanel
        implements ExplorerManager.Provider {

    private static final String CUSTOMIZER_ICON =
            "org/netbeans/modules/search/res/refresh.png";              //NOI18N
    private static final String STOP_ICON =
            "org/netbeans/modules/search/res/stop.png";                 //NOI18N

    private ExplorerManager explorerManager;
    private SearchComposition searchComposition;
    private JButton btnModifySearch = new JButton();
    private JButton btnStop = new JButton();
    private final Presenter searchProviderPresenter;

    /**
     * Creates new form AbstractSearchResultsPanel
     */
    public AbstractSearchResultsPanel(SearchComposition searchComposition,
            SearchProvider.Presenter searchProviderPresenter) {
        this.searchComposition = searchComposition;
        this.searchProviderPresenter = searchProviderPresenter;
        initComponents();
        explorerManager = new ExplorerManager();
        initToolbar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        outline = new OutlineView("Files");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new java.awt.BorderLayout());

        toolBar.setFloatable(false);
        toolBar.setOrientation(JToolBar.VERTICAL);
        toolBar.setRollover(true);
        toolBar.setPreferredSize(null);
        toolBar.setRequestFocusEnabled(false);
        add(toolBar, java.awt.BorderLayout.WEST);

        outline.setBorder(null);
        add(outline, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane outline;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }

    private void initToolbar() {

        toolBar.setRollover(true);
        toolBar.setFloatable(false);

        sizeButton(btnModifySearch);
        btnModifySearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                modifyCriteria();
            }
        });
        sizeButton(btnStop);
        btnStop.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                getSearchComposition().terminate();
            }
        });

        btnStop.setToolTipText(UiUtils.getText("TEXT_BUTTON_STOP"));    //NOI18N
        btnModifySearch.setToolTipText(UiUtils.getText(
                "TEXT_BUTTON_CUSTOMIZE"));                              //NOI18N

        btnModifySearch.setIcon(
                ImageUtilities.loadImageIcon(CUSTOMIZER_ICON, true));
        btnStop.setIcon(ImageUtilities.loadImageIcon(STOP_ICON, true));

        toolBar.add(btnModifySearch);
        toolBar.add(btnStop);
    }

    protected void sizeButton(JButton button) {
        Dimension dim = new Dimension(24, 24);
        button.setMinimumSize(dim);
        button.setMaximumSize(dim);
        button.setPreferredSize(dim);
    }

    protected OutlineView getOutlineView() {
        return (OutlineView) outline;
    }

    protected SearchComposition getSearchComposition() {
        return searchComposition;
    }

    public void searchStarted() {
        btnModifySearch.setEnabled(false);
        btnStop.setEnabled(true);
    }

    public void searchFinished() {
        btnModifySearch.setEnabled(true);
        btnStop.setEnabled(false);
    }

    protected void modifyCriteria() {
        if (searchProviderPresenter != null) {
            if (searchProviderPresenter.isReplacing()) {
                SearchControl.openReplaceDialog(searchProviderPresenter);
            } else {
                SearchControl.openFindDialog(searchProviderPresenter);
            }
        }
    }
}
