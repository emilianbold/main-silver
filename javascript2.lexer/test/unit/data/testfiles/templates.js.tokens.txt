<Unnamed test>
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "string text", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "string text line 1\n string text line 2", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "string text ", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "expression", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        " string text", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "string text line 1\nstring text line 2", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "string text line 1", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// string text line 2"", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_VAR     "var", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "5", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_VAR     "var", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "10", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "Fifteen is ", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_PLUS   "+", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        " and\\nnot ", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
NUMBER          "2", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_MULTIPLICATION  "*", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_PLUS   "+", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        ".", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "Fifteen is 15 and", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// not 20."", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_VAR     "var", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "5", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_VAR     "var", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "10", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_FUNCTION  "function", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "tag", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "strings", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_COMMA  ",", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_REST   "...", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "values", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_CURLY  "{", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "strings", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_BRACKET  "[", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "0", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_BRACKET  "]", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "Hello "", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "strings", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_BRACKET  "[", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "1", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_BRACKET  "]", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// " world "", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "values", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_BRACKET  "[", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "0", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_BRACKET  "]", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// 15", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "values", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_BRACKET  "[", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "1", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_BRACKET  "]", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// 50", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_RETURN  "return", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING_BEGIN    """, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING          "Bazinga!", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING_END      """, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_CURLY  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "tag", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "Hello ", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_PLUS   "+", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        " world ", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_MULTIPLICATION  "*", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "b", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "Bazinga!"", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_FUNCTION  "function", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "tag", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "strings", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_COMMA  ",", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_REST   "...", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "values", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_CURLY  "{", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "log", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "strings", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "raw", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_BRACKET  "[", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "0", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_BRACKET  "]", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      "  ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "string text line 1 \\\\n string text line 2"", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_CURLY  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "tag", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "string text line 1 \\n string text line 2", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "String", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "raw", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "Hi\\n", la=2, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
NUMBER          "2", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_PLUS   "+", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
NUMBER          "3", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE        "!", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "Hi\\\\n5!"", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "warn", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
STRING_BEGIN    """, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
STRING          "this is", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
STRING_END      """, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_COMMA  ",", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
KEYWORD_THIS    "this", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "this is" Window", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
RESERVED_LET    "let", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
NUMBER          "10", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "warn", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_BEGIN  "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_EXP_BEGIN  "${", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
OPERATOR_PLUS_ASSIGNMENT  "+=", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
NUMBER          "20", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[0], jsxBalances=[]}
TEMPLATE_EXP_END  "}", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
TEMPLATE_END    "`", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// "30"", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "console", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "warn", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "a", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
LINE_COMMENT    "// 30", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
----- EOF -----

