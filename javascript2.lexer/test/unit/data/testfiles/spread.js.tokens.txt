<Unnamed test>
KEYWORD_CONST   "const", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "versionsMap", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ASSIGNMENT  "=", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
KEYWORD_NEW     "new", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "Map", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
EOL             "\n", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "lines", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "forEach", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "line", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_ARROW  "=>", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "versionsMap", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "set", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_REST   "...", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "line", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_DOT    ".", la=1, st=LexerState{canFollowLiteral=true, canFollowKeyword=false, templateBalances=[], jsxBalances=[]}
IDENTIFIER      "split", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_LEFT_PAREN  "(", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING_BEGIN    "'", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING          "@", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
STRING_END      "'", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
WHITESPACE      " ", la=1, st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
BRACKET_RIGHT_PAREN  ")", st=LexerState{canFollowLiteral=false, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
OPERATOR_SEMICOLON  ";", st=LexerState{canFollowLiteral=true, canFollowKeyword=true, templateBalances=[], jsxBalances=[]}
----- EOF -----

