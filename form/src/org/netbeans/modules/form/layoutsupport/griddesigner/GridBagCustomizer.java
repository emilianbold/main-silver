/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2010 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2010 Sun Microsystems, Inc.
 */

package org.netbeans.modules.form.layoutsupport.griddesigner;

import java.awt.Component;
import java.awt.GridBagConstraints;
import java.util.ResourceBundle;
import java.util.Set;
import org.netbeans.modules.form.layoutsupport.griddesigner.actions.AbstractGridAction;
import org.netbeans.modules.form.layoutsupport.griddesigner.actions.GridActionPerformer;
import org.netbeans.modules.form.layoutsupport.griddesigner.actions.GridBoundsChange;
import org.openide.util.NbBundle;

/**
 *
 * @author Jan Stola
 */
public class GridBagCustomizer implements GridCustomizer {
    private GridActionPerformer performer;
    private GridBagManager manager;

    public GridBagCustomizer(GridBagManager manager, GridActionPerformer performer) {
        this.manager = manager;
        this.performer = performer;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customizer = new javax.swing.JPanel();
        anchorLabel = new javax.swing.JLabel();
        anchorSeparator = new javax.swing.JSeparator();
        fillLabel = new javax.swing.JLabel();
        fillSeparator = new javax.swing.JSeparator();
        anchorPanel = new javax.swing.JPanel();
        nwAnchorButton = new javax.swing.JToggleButton();
        nAnchorButton = new javax.swing.JToggleButton();
        neAnchorButton = new javax.swing.JToggleButton();
        eAnchorButton = new javax.swing.JToggleButton();
        cAnchorButton = new javax.swing.JToggleButton();
        wAnchorButton = new javax.swing.JToggleButton();
        swAnchorButton = new javax.swing.JToggleButton();
        sAnchorButton = new javax.swing.JToggleButton();
        seAnchorButton = new javax.swing.JToggleButton();
        baselineAnchorButton = new javax.swing.JToggleButton();
        bidiAnchorButton = new javax.swing.JToggleButton();
        fillPanel = new javax.swing.JPanel();
        hFillButton = new javax.swing.JToggleButton();
        vFillButton = new javax.swing.JToggleButton();
        anchorGroup = new javax.swing.ButtonGroup();

        FormListener formListener = new FormListener();

        anchorLabel.setText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.anchorLabel.text")); // NOI18N

        fillLabel.setText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.fillLabel.text")); // NOI18N

        anchorGroup.add(nwAnchorButton);
        nwAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_nw.png"))); // NOI18N
        nwAnchorButton.setEnabled(false);
        nwAnchorButton.setFocusPainted(false);
        nwAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nwAnchorButton.addActionListener(formListener);

        anchorGroup.add(nAnchorButton);
        nAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_n.png"))); // NOI18N
        nAnchorButton.setEnabled(false);
        nAnchorButton.setFocusPainted(false);
        nAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nAnchorButton.addActionListener(formListener);

        anchorGroup.add(neAnchorButton);
        neAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_ne.png"))); // NOI18N
        neAnchorButton.setEnabled(false);
        neAnchorButton.setFocusPainted(false);
        neAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        neAnchorButton.addActionListener(formListener);

        anchorGroup.add(eAnchorButton);
        eAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_e.png"))); // NOI18N
        eAnchorButton.setEnabled(false);
        eAnchorButton.setFocusPainted(false);
        eAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        eAnchorButton.addActionListener(formListener);

        anchorGroup.add(cAnchorButton);
        cAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_c.png"))); // NOI18N
        cAnchorButton.setEnabled(false);
        cAnchorButton.setFocusPainted(false);
        cAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cAnchorButton.addActionListener(formListener);

        anchorGroup.add(wAnchorButton);
        wAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_w.png"))); // NOI18N
        wAnchorButton.setEnabled(false);
        wAnchorButton.setFocusPainted(false);
        wAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        wAnchorButton.addActionListener(formListener);

        anchorGroup.add(swAnchorButton);
        swAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_sw.png"))); // NOI18N
        swAnchorButton.setEnabled(false);
        swAnchorButton.setFocusPainted(false);
        swAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        swAnchorButton.addActionListener(formListener);

        anchorGroup.add(sAnchorButton);
        sAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_s.png"))); // NOI18N
        sAnchorButton.setEnabled(false);
        sAnchorButton.setFocusPainted(false);
        sAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        sAnchorButton.addActionListener(formListener);

        anchorGroup.add(seAnchorButton);
        seAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/anchor_se.png"))); // NOI18N
        seAnchorButton.setEnabled(false);
        seAnchorButton.setFocusPainted(false);
        seAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        seAnchorButton.addActionListener(formListener);

        baselineAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/baseline.png"))); // NOI18N
        baselineAnchorButton.setToolTipText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.anchor.baselineRelated")); // NOI18N
        baselineAnchorButton.setEnabled(false);
        baselineAnchorButton.setFocusPainted(false);
        baselineAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        baselineAnchorButton.addActionListener(formListener);

        bidiAnchorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/bidi.png"))); // NOI18N
        bidiAnchorButton.setToolTipText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.anchor.bidiAware")); // NOI18N
        bidiAnchorButton.setEnabled(false);
        bidiAnchorButton.setFocusPainted(false);
        bidiAnchorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bidiAnchorButton.addActionListener(formListener);

        javax.swing.GroupLayout anchorPanelLayout = new javax.swing.GroupLayout(anchorPanel);
        anchorPanel.setLayout(anchorPanelLayout);
        anchorPanelLayout.setHorizontalGroup(
            anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anchorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bidiAnchorButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(anchorPanelLayout.createSequentialGroup()
                        .addComponent(nwAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(nAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(neAnchorButton))
                    .addGroup(anchorPanelLayout.createSequentialGroup()
                        .addComponent(wAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(cAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(eAnchorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(baselineAnchorButton))
                    .addGroup(anchorPanelLayout.createSequentialGroup()
                        .addComponent(swAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(sAnchorButton)
                        .addGap(0, 0, 0)
                        .addComponent(seAnchorButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        anchorPanelLayout.setVerticalGroup(
            anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anchorPanelLayout.createSequentialGroup()
                .addGroup(anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nwAnchorButton)
                    .addComponent(nAnchorButton)
                    .addComponent(neAnchorButton))
                .addGap(0, 0, 0)
                .addGroup(anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bidiAnchorButton)
                    .addComponent(baselineAnchorButton)
                    .addGroup(anchorPanelLayout.createSequentialGroup()
                        .addGroup(anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wAnchorButton)
                            .addComponent(cAnchorButton)
                            .addComponent(eAnchorButton))
                        .addGap(0, 0, 0)
                        .addGroup(anchorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(swAnchorButton)
                            .addComponent(sAnchorButton)
                            .addComponent(seAnchorButton)))))
        );

        hFillButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/resize_h.png"))); // NOI18N
        hFillButton.setToolTipText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.fill.horizontal")); // NOI18N
        hFillButton.setEnabled(false);
        hFillButton.setFocusPainted(false);
        hFillButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        hFillButton.addActionListener(formListener);

        vFillButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/form/layoutsupport/griddesigner/resources/resize_v.png"))); // NOI18N
        vFillButton.setToolTipText(org.openide.util.NbBundle.getMessage(GridBagCustomizer.class, "GridBagCustomizer.fill.vertical")); // NOI18N
        vFillButton.setEnabled(false);
        vFillButton.setFocusPainted(false);
        vFillButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        vFillButton.addActionListener(formListener);

        javax.swing.GroupLayout fillPanelLayout = new javax.swing.GroupLayout(fillPanel);
        fillPanel.setLayout(fillPanelLayout);
        fillPanelLayout.setHorizontalGroup(
            fillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fillPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hFillButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vFillButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fillPanelLayout.setVerticalGroup(
            fillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hFillButton)
            .addComponent(vFillButton)
        );

        javax.swing.GroupLayout customizerLayout = new javax.swing.GroupLayout(customizer);
        customizer.setLayout(customizerLayout);
        customizerLayout.setHorizontalGroup(
            customizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customizerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fillPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(anchorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(customizerLayout.createSequentialGroup()
                        .addComponent(anchorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anchorSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                    .addGroup(customizerLayout.createSequentialGroup()
                        .addComponent(fillLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fillSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        customizerLayout.setVerticalGroup(
            customizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customizerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(anchorSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anchorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anchorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fillSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fillLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fillPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == nwAnchorButton) {
                GridBagCustomizer.this.nwAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == nAnchorButton) {
                GridBagCustomizer.this.nAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == neAnchorButton) {
                GridBagCustomizer.this.neAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == eAnchorButton) {
                GridBagCustomizer.this.eAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == cAnchorButton) {
                GridBagCustomizer.this.cAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == wAnchorButton) {
                GridBagCustomizer.this.wAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == swAnchorButton) {
                GridBagCustomizer.this.swAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == sAnchorButton) {
                GridBagCustomizer.this.sAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == seAnchorButton) {
                GridBagCustomizer.this.seAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == baselineAnchorButton) {
                GridBagCustomizer.this.baselineAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == bidiAnchorButton) {
                GridBagCustomizer.this.bidiAnchorButtonActionPerformed(evt);
            }
            else if (evt.getSource() == hFillButton) {
                GridBagCustomizer.this.hFillButtonActionPerformed(evt);
            }
            else if (evt.getSource() == vFillButton) {
                GridBagCustomizer.this.vFillButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void nwAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nwAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_nwAnchorButtonActionPerformed

    private void nAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_nAnchorButtonActionPerformed

    private void neAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_neAnchorButtonActionPerformed

    private void wAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_wAnchorButtonActionPerformed

    private void cAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_cAnchorButtonActionPerformed

    private void eAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_eAnchorButtonActionPerformed

    private void swAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_swAnchorButtonActionPerformed

    private void sAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_sAnchorButtonActionPerformed

    private void seAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seAnchorButtonActionPerformed
        update(currentAnchor(), -1);
    }//GEN-LAST:event_seAnchorButtonActionPerformed

    private void hFillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFillButtonActionPerformed
        update(-1, currentFill());
    }//GEN-LAST:event_hFillButtonActionPerformed

    private void vFillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vFillButtonActionPerformed
        update(-1, currentFill());
    }//GEN-LAST:event_vFillButtonActionPerformed

    private void baselineAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baselineAnchorButtonActionPerformed
        if (baselineAnchorButton.isSelected()) {
            // Baseline anchors are bidi-aware
            bidiAnchorButton.setSelected(true);
        }
        update(currentAnchor(), -1);
        updateTooltips();
    }//GEN-LAST:event_baselineAnchorButtonActionPerformed

    private void bidiAnchorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidiAnchorButtonActionPerformed
        if (!bidiAnchorButton.isSelected()) {
            // Baseline anchors are bidi-aware
            baselineAnchorButton.setSelected(false);
        }
        update(currentAnchor(), -1);
        updateTooltips();
    }//GEN-LAST:event_bidiAnchorButtonActionPerformed

    private int currentFill() {
        boolean hFill = hFillButton.isSelected();
        boolean vFill = vFillButton.isSelected();
        int fill = hFill ? (vFill ? GridBagConstraints.BOTH : GridBagConstraints.HORIZONTAL) : (vFill ? GridBagConstraints.VERTICAL : GridBagConstraints.NONE);
        return fill;
    }

    private int currentAnchor() {
        boolean baseline = baselineAnchorButton.isSelected();
        boolean bidi = bidiAnchorButton.isSelected();
        int anchor = -1;
        if (nwAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.ABOVE_BASELINE_LEADING
                    : (bidi ? GridBagConstraints.FIRST_LINE_START : GridBagConstraints.NORTHWEST);
        } else if (nAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.ABOVE_BASELINE
                    : (bidi ? GridBagConstraints.PAGE_START : GridBagConstraints.NORTH);
        } else if (neAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.ABOVE_BASELINE_TRAILING
                    : (bidi ? GridBagConstraints.FIRST_LINE_END : GridBagConstraints.NORTHEAST);
        } else if (wAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BASELINE_LEADING
                    : (bidi ? GridBagConstraints.LINE_START : GridBagConstraints.WEST);
        } else if (cAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BASELINE : GridBagConstraints.CENTER;
        } else if (eAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BASELINE_TRAILING
                    : (bidi ? GridBagConstraints.LINE_END : GridBagConstraints.EAST);
        } else if (swAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BELOW_BASELINE_LEADING
                    : (bidi ? GridBagConstraints.LAST_LINE_START : GridBagConstraints.SOUTHWEST);
        } else if (sAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BELOW_BASELINE
                    : (bidi ? GridBagConstraints.PAGE_END : GridBagConstraints.SOUTH);
        } else if (seAnchorButton.isSelected()) {
            anchor = baseline ? GridBagConstraints.BELOW_BASELINE_TRAILING
                    : (bidi ? GridBagConstraints.LAST_LINE_END : GridBagConstraints.SOUTHEAST);
        }
        return anchor;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup anchorGroup;
    private javax.swing.JLabel anchorLabel;
    private javax.swing.JPanel anchorPanel;
    private javax.swing.JSeparator anchorSeparator;
    private javax.swing.JToggleButton baselineAnchorButton;
    private javax.swing.JToggleButton bidiAnchorButton;
    private javax.swing.JToggleButton cAnchorButton;
    private javax.swing.JPanel customizer;
    private javax.swing.JToggleButton eAnchorButton;
    private javax.swing.JLabel fillLabel;
    private javax.swing.JPanel fillPanel;
    private javax.swing.JSeparator fillSeparator;
    private javax.swing.JToggleButton hFillButton;
    private javax.swing.JToggleButton nAnchorButton;
    private javax.swing.JToggleButton neAnchorButton;
    private javax.swing.JToggleButton nwAnchorButton;
    private javax.swing.JToggleButton sAnchorButton;
    private javax.swing.JToggleButton seAnchorButton;
    private javax.swing.JToggleButton swAnchorButton;
    private javax.swing.JToggleButton vFillButton;
    private javax.swing.JToggleButton wAnchorButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setContext(DesignerContext context) {
        Set<Component> components = context.getSelectedComponents();
        boolean one = components.size() == 1;
        if (!bidiAnchorButton.isEnabled() && one) {
            // Make the anchor bidi-aware by default
            bidiAnchorButton.setSelected(true);
        }
        bidiAnchorButton.setEnabled(one);
        baselineAnchorButton.setEnabled(one);
        nwAnchorButton.setEnabled(one);
        nAnchorButton.setEnabled(one);
        neAnchorButton.setEnabled(one);
        wAnchorButton.setEnabled(one);
        cAnchorButton.setEnabled(one);
        eAnchorButton.setEnabled(one);
        swAnchorButton.setEnabled(one);
        sAnchorButton.setEnabled(one);
        seAnchorButton.setEnabled(one);
        hFillButton.setEnabled(one);
        vFillButton.setEnabled(one);
        int anchor = 0;
        int fill = 0;
        if (one) {
            Component selection = components.iterator().next();
            GridBagInfoProvider info = manager.getGridInfo();
            anchor = info.getAnchor(selection);
            fill = info.getFill(selection);
        } else {
            anchorGroup.clearSelection();
        }
        baselineAnchorButton.setSelected(anchor == GridBagConstraints.ABOVE_BASELINE_LEADING
                || anchor == GridBagConstraints.ABOVE_BASELINE
                || anchor == GridBagConstraints.ABOVE_BASELINE_TRAILING
                || anchor == GridBagConstraints.BASELINE_LEADING
                || anchor == GridBagConstraints.BASELINE
                || anchor == GridBagConstraints.BASELINE_TRAILING
                || anchor == GridBagConstraints.BELOW_BASELINE_LEADING
                || anchor == GridBagConstraints.BELOW_BASELINE
                || anchor == GridBagConstraints.BELOW_BASELINE_TRAILING);
        if (anchor != GridBagConstraints.CENTER) {
            bidiAnchorButton.setSelected(anchor == GridBagConstraints.FIRST_LINE_START
                || anchor == GridBagConstraints.PAGE_START
                || anchor == GridBagConstraints.FIRST_LINE_END
                || anchor == GridBagConstraints.LINE_START
                || anchor == GridBagConstraints.LINE_END
                || anchor == GridBagConstraints.LAST_LINE_START
                || anchor == GridBagConstraints.PAGE_END
                || anchor == GridBagConstraints.LAST_LINE_END
                || baselineAnchorButton.isSelected());
        }
        nwAnchorButton.setSelected(anchor == GridBagConstraints.NORTHWEST
                || anchor == GridBagConstraints.FIRST_LINE_START
                || anchor == GridBagConstraints.ABOVE_BASELINE_LEADING);
        nAnchorButton.setSelected(anchor == GridBagConstraints.NORTH
                || anchor == GridBagConstraints.PAGE_START
                || anchor == GridBagConstraints.ABOVE_BASELINE);
        neAnchorButton.setSelected(anchor == GridBagConstraints.NORTHEAST
                || anchor == GridBagConstraints.FIRST_LINE_END
                || anchor == GridBagConstraints.ABOVE_BASELINE_TRAILING);
        wAnchorButton.setSelected(anchor == GridBagConstraints.WEST
                || anchor == GridBagConstraints.LINE_START
                || anchor == GridBagConstraints.BASELINE_LEADING);
        cAnchorButton.setSelected(anchor == GridBagConstraints.CENTER
                || anchor == GridBagConstraints.BASELINE);
        eAnchorButton.setSelected(anchor == GridBagConstraints.EAST
                || anchor == GridBagConstraints.LINE_END
                || anchor == GridBagConstraints.BASELINE_TRAILING);
        swAnchorButton.setSelected(anchor == GridBagConstraints.SOUTHWEST
                || anchor == GridBagConstraints.LAST_LINE_START
                || anchor == GridBagConstraints.BELOW_BASELINE_LEADING);
        sAnchorButton.setSelected(anchor == GridBagConstraints.SOUTH
                || anchor == GridBagConstraints.PAGE_END
                || anchor == GridBagConstraints.BELOW_BASELINE);
        seAnchorButton.setSelected(anchor == GridBagConstraints.SOUTHEAST
                || anchor == GridBagConstraints.LAST_LINE_END
                || anchor == GridBagConstraints.BELOW_BASELINE_TRAILING);
        hFillButton.setSelected(fill == GridBagConstraints.HORIZONTAL
                || fill == GridBagConstraints.BOTH);
        vFillButton.setSelected(fill == GridBagConstraints.VERTICAL
                || fill == GridBagConstraints.BOTH);
        updateTooltips();
    }

    @Override
    public Component getComponent() {
        return customizer;
    }

    private void update(final int anchor, final int fill) {
        performer.performAction(new AbstractGridAction() {
            @Override
            public GridBoundsChange performAction(GridManager gridManager, DesignerContext context) {
                GridInfoProvider info = gridManager.getGridInfo();
                int columns = info.getColumnCount();
                int rows = info.getRowCount();
                GridUtils.removePaddingComponents(gridManager);
                Component component = context.getSelectedComponents().iterator().next();
                if (anchor != -1) {
                    ((GridBagManager)gridManager).setAnchor(component, anchor);
                }
                if (fill != -1) {
                    ((GridBagManager)gridManager).setFill(component, fill);
                }
                gridManager.updateLayout();
                GridUtils.revalidateGrid(gridManager);
                GridUtils.addPaddingComponents(gridManager, columns, rows);
                GridUtils.revalidateGrid(gridManager);
                return null;
            }
        });
    }
    
    private void updateTooltips() {
        boolean baseline = baselineAnchorButton.isSelected();
        boolean bidi = bidiAnchorButton.isSelected();
        ResourceBundle bundle = NbBundle.getBundle(GridBagCustomizer.class);
        String key = (baseline ? "GridBagCustomizer.anchor.aboveBaselineLeading" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.firstLineStart" // NOI18N
                    : "GridBagCustomizer.anchor.northWest")); // NOI18N
        nwAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.aboveBaseline" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.pageStart" // NOI18N
                    : "GridBagCustomizer.anchor.north")); // NOI18N
        nAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.aboveBaselineTrailing" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.firstLineEnd" // NOI18N
                    : "GridBagCustomizer.anchor.northEast")); // NOI18N
        neAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.baselineLeading" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.lineStart" // NOI18N
                    : "GridBagCustomizer.anchor.west")); // NOI18N
        wAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.baseline" // NOI18N
                : "GridBagCustomizer.anchor.center"); // NOI18N
        cAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.baselineTrailing" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.lineEnd" // NOI18N
                    : "GridBagCustomizer.anchor.east")); // NOI18N
        eAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.belowBaselineLeading" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.lastLineStart" // NOI18N
                    : "GridBagCustomizer.anchor.southWest")); // NOI18N
        swAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.belowBaseline" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.pageEnd" // NOI18N
                    : "GridBagCustomizer.anchor.south")); // NOI18N
        sAnchorButton.setToolTipText(bundle.getString(key));
        key = (baseline ? "GridBagCustomizer.anchor.belowBaselineTrailing" // NOI18N
                : (bidi ? "GridBagCustomizer.anchor.lastLineEnd" // NOI18N
                    : "GridBagCustomizer.anchor.southEast")); // NOI18N
        seAnchorButton.setToolTipText(bundle.getString(key));
    }

}
