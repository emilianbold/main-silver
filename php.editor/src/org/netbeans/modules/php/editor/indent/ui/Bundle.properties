# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2009 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

# Formating options

LBL_TabsAndIndents=Tabs and Indents2
LBL_BlankLines=Blank Lines
LBL_Alignment=Alignment
LBL_Braces=Braces
LBL_Spaces=Spaces
LBL_Wrapping=Wrapping

LBL_bp_ClassDecl=Class &Declaration:
LBL_bp_MethodDecl=&Method Declaration\:
LBL_bp_Other=&Other\:

LBL_blBeforeNameSpace=Before &Namespace:
LBL_blAfterNamespace=After N&amespace:
LBL_blBeforeUse=Before &Use:
LBL_blAfterImports=After U&se:
LBL_blBeforeClass=&Before  Class:
LBL_blAfterClassHeader=After Class &Header:
LBL_blBeforeClassEnd=Before Class &End:
LBL_blAfterClass=Afte&r Class:
LBL_blBeforeFields=Before &Field:
LBL_blAfterFields=After Fie&ld:
LBL_blBeforeMethods=Before Func&tion:
LBL_blBeforeMethodsEnd=Before Function En&d:
LBL_blAfterMethods=After Funct&ion:
LBL_blAfterPHPOpenTag=After Open Ta&g:
LBL_blBeforeClosePHPTag=Bef&ore Close Tag:
LBL_blBeforeOpenTagInHTML=After Open Tag In &HTML:

FmtTabsIndents.initialIndentLabel.text=I&nitial Indentation:
FmtTabsIndents.initialIndentSizeField.AccessibleContext.accessibleDescription=&Initial Indentation:
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleName=&Continuation Indentation Size:
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleDescription=&Continuation Indentation Size:
LBL_ContinuationIndentSize=&Continuation Indentation:
LBL_br_bracesPlacement=Braces Placement:
FmtTabsIndents.arrayItemsIndentationLabel.text=&Array Declaration Indentation:

LBL_BeforeKeywords=Before Keywords
LBL_spaceBeforeWhile="while"
LBL_spaceBeforeElse="else", "elseif"
LBL_spaceBeforeCatch="catch"
LBL_spaceBeforeFinally="finally"

LBL_BeforeParentheses=Before Parentheses
LBL_spaceBeforeMethodDeclParen=Method / Function Declaration
LBL_spaceBeforeMethodCallParen=Method / Function Call
LBL_spaceBeforeIfParen="if", "elseif"
LBL_spaceBeforeForParen="for", "foreach"
LBL_spaceBeforeWhileParen="while"
LBL_spaceBeforeCatchParen="catch"
LBL_spaceBeforeSwitchParen="switch"
LBL_spaceBeforeArrayDeclParen=Array Declaration
LBL_spaceBeforeSynchronizedParen="synchronized"
LBL_spaceBeforeAnnotationParen=Annotation Parameters

LBL_AroundOperators=Around Operators
LBL_spaceAroundUnaryOps=Unary Operators
LBL_spaceAroundBinaryOps=Binary Operators
LBL_spaceAroundTernaryOps=Ternary Operators
LBL_spaceAroundAssignOps=Assignment Operators
LBL_spaceAroundKeyValueOps=Key => Value Operator
LBL_spaceAroundObjectOps=Object Operator
LBL_spaceAroundStringConcatOps=String Concatenation Operator

LBL_BeforeLeftBraces=Before Left Braces
LBL_spaceBeforeClassDeclLeftBrace=Class Declaration
LBL_spaceBeforeMethodDeclLeftBrace=Method Declaration
LBL_spaceBeforeIfLeftBrace="if", "elseif"
LBL_spaceBeforeElseLeftBrace="else"
LBL_spaceBeforeWhileLeftBrace="while"
LBL_spaceBeforeForLeftBrace="for", "foreach"
LBL_spaceBeforeDoLeftBrace="do"
LBL_spaceBeforeSwitchLeftBrace="switch"
LBL_spaceBeforeTryLeftBrace="try"
LBL_spaceBeforeCatchLeftBrace="catch"
LBL_spaceBeforeFinallyLeftBrace="finally"
LBL_spaceBeforeSynchronizedLeftBrace="synchronized"
LBL_spaceBeforeStaticInitLeftBrace=Static Initializer
LBL_spaceBeforeArrayInitLeftBrace=Array Initializer

LBL_WithinParentheses=Within Parentheses
LBL_spaceWithinParens=Parentheses
LBL_spaceWithinMethodDeclParens=Method / Function Declaration
LBL_spaceWithinMethodCallParens=Method / Function Call
LBL_spaceWithinIfParens="if"
LBL_spaceWithinForParens="for"
LBL_spaceWithinWhileParens="while"
LBL_spaceWithinSwitchParens="switch"
LBL_spaceWithinCatchParens="catch"
LBL_spaceWithinSynchronizedParens="synchronized"
LBL_spaceWithinTypeCastParens=Type Cast
LBL_spaceWithinArrayDeclParens=Array Declaration
LBL_spaceWithinAnnotationParens=Annotation
LBL_spaceWithinBraces=Braces
LBL_spaceWithinArrayBrackets=Array Brackets

LBL_Other=Other
LBL_spaceBeforeComma=Before Comma
LBL_spaceAfterComma=After Comma
LBL_spaceBeforeSemi=Before Semicolon
LBL_spaceAfterSemi=After Semicolon
LBL_spaceBeforeColon=Before Colon
LBL_spaceAfterColon=After Colon
LBL_spaceAfterTypeCast=After Type Cast
LBL_spaceCheckAfterKeywords=After Keywords
LBL_spaceBeforeClosePHPTag=Before Close PHP Tag

LBL_bp_If="&if", "else", "elseif"
LBL_bp_FOR="&for", "foreach"
LBL_bp_WHILE="&while", "do"
LBL_bp_SWITCH="&switch"
LBL_bp_catch="&try", "catch"

LBL_al_newLines=New Lines
LBL_al_multilineAlignment=Multiline Alignment
LBL_nl_Else="&else", "elseif"
LBL_nl_While="w&hile"
LBL_nl_Catch="c&atch"
LBL_nl_Modifiers=after modifie&rs
LBL_am_MethodParams=Method &Parameters
LBL_am_CallArgs=Method Call Arg&uments
LBL_am_AnnotationArgs=&Annotation Arguments
LBL_an_Implements=I&mplements List
LBL_am_Throws=&Throws List
LBL_am_Paren=Parenthesize&d
LBL_am_BinaryOp=&Binary Operators
LBL_am_TernaryOp=Ter&nary Operators
LBL_am_Assign=Assi&gnment
LBL_am_For=&For
LBL_am_ArrayInit=Array Initiali&zer

LBL_styleStyle=&Style
LBL_styleExport=&Export
LBL_styleImport=&Import

LBL_wrp_extendsImplementsKeyword=&Extends/Implements Keyword\:
LBL_wrp_extendsImplementsList=E&xtends/Implements List\:
LBL_wrp_methodParameters=Method &Parameters\:
LBL_wrp_throwsKeyword=&Throws Keyword\:
LBL_wrp_throwsList=Th&rows List\:
LBL_wrp_methodCallArgs=Method Call Arguments\:
LBL_wrp_annotationArgs=Annotation Arg&uments\:
LBL_wrp_chainedMethodCalls=C&hained Method Calls\:
LBL_wrp_arrayInit=Array Initiali&zer\:
LBL_wrp_for=&For\:
LBL_wrp_forStatement=F&or Statement\:
LBL_wrp_ifStatement=&If Statement\:
LBL_wrp_whileStatement=&While Statement\:
LBL_wrp_doWhileStatement=&Do ... While Statement
LBL_wrp_assert=&Assert\:
LBL_wrp_enumConstants=Enum &Constants\:
LBL_wrp_annotations=
LBL_wrp_binaryOps=&Binary Operators\:
LBL_wrp_ternaryOps=Ternar&y Operators\:
LBL_wrp_assignOps=Assi&gnment Operators\:

FmtBlankLines.aOpenPHPTagField.text=
FmtWrapping.jCheckBox1.text=jCheckBox1
cb_wrp_open_close_block_brace=&Open and Close Block Brace
cb_wrp_Statements=&Statetements on the Same Line
FmtBraces.otherCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.methodDeclCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.classDeclCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.AccessibleContext.accessibleName=PHP Formatting Options Panel for Braces Placement
FmtBraces.AccessibleContext.accessibleDescription=PHP Formatting Options Panel for Braces Placement
FmtBraces.bracesPlacementLabel.AccessibleContext.accessibleDescription=Select one of rules below
FmtBraces.jSeparator1.AccessibleContext.accessibleName=component separator
FmtBraces.jSeparator1.AccessibleContext.accessibleDescription=component separator
FmtBraces.classDeclLabel.AccessibleContext.accessibleName=Class Declaration
FmtBraces.classDeclLabel.AccessibleContext.accessibleDescription=Select class declaration rule
FmtBraces.classDeclCombo.AccessibleContext.accessibleDescription=Class declaration rules - Select Box
FmtBraces.methodDeclCombo.AccessibleContext.accessibleDescription=Method Declaration rules - Select Box
FmtBraces.ifCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.ifCombo.AccessibleContext.accessibleDescription=Conditions rules - Select Box
FmtBraces.forCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.forCombo.AccessibleContext.accessibleDescription=For, Foreach loop rules - Select Box
FmtBraces.whileCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.whileCombo.AccessibleContext.accessibleDescription=while, do loop rules - Select Box
FmtBraces.switchCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.switchCombo.AccessibleContext.accessibleDescription=Switch loop rules - Select Box
FmtBraces.catchCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.catchCombo.AccessibleContext.accessibleDescription=try, catch block rules - Select Box
FmtBraces.otherCombo.AccessibleContext.accessibleDescription=other applicable rules - Select Box
FmtBraces.methodDeclLabel.AccessibleContext.accessibleName=Method Declaration rules
FmtBraces.methodDeclLabel.AccessibleContext.accessibleDescription=Select Method Declaration rules
FmtBraces.ifLabel.AccessibleContext.accessibleName=If, else, elseif rules
FmtBraces.ifLabel.AccessibleContext.accessibleDescription=select If, else, elseif rules
FmtBraces.otherLabel.AccessibleContext.accessibleName=Other apllicable rules
FmtBraces.otherLabel.AccessibleContext.accessibleDescription=select rules for other situations of braces placement
FmtBraces.catchLabel.AccessibleContext.accessibleName=Try, catch block rules
FmtBraces.catchLabel.AccessibleContext.accessibleDescription=select rule for try - catch blocks
FmtBraces.switchLabel.AccessibleContext.accessibleName=Switch block rules
FmtBraces.switchLabel.AccessibleContext.accessibleDescription=select rule for switch block
FmtBraces.whileLabel.AccessibleContext.accessibleName=while, do rule
FmtBraces.whileLabel.AccessibleContext.accessibleDescription=select rule for while. do
FmtBraces.forLabel.AccessibleContext.accessibleName=for, foreach rule
FmtBraces.forLabel.AccessibleContext.accessibleDescription=select rule for for - foreach blocks
FmtBraces.bracesPlacementLabel.AccessibleContext.accessibleName=Braces Placement
FmtTabsIndents.initialIndentLabel.AccessibleContext.accessibleName=Initial Indentation
FmtTabsIndents.continuationIndentSizeLabel.AccessibleContext.accessibleName=Continuation Indentation
FmtTabsIndents.arrayItemsIndentationLabel.AccessibleContext.accessibleName=Array Declaration Indentation
FmtTabsIndents.AccessibleContext.accessibleName=Tabs and Indentation Form
FmtTabsIndents.initialIndentSizeField.AccessibleContext.accessibleName=Initial indentation number
FmtTabsIndents.arrayItemsIndentationField.AccessibleContext.accessibleName=Array declaration indentation number
FmtWrapping.extendsImplemetsKeywordLabel.AccessibleContext.accessibleName=Extends/Implements Keyword
FmtWrapping.extendsImplementsListLabel.AccessibleContext.accessibleName=Extends/Implements List
FmtWrapping.methodParamsLabel.AccessibleContext.accessibleName=Method Parameters
FmtWrapping.methodCallArgsLabel.AccessibleContext.accessibleName=Method Call Arguments
FmtWrapping.chainedMethodCallsLabel.AccessibleContext.accessibleName=Chained Method Calls
FmtWrapping.arrayInitLabel.AccessibleContext.accessibleName=Array Initializer
FmtWrapping.forLabel.AccessibleContext.accessibleName=For
FmtWrapping.forStatementLabel.AccessibleContext.accessibleName=For Statement
FmtWrapping.ifStatementLabel.AccessibleContext.accessibleName=If Statement
FmtWrapping.whileStatementLabel.AccessibleContext.accessibleName=While Statement
FmtWrapping.doWhileStatementLabel.AccessibleContext.accessibleName=Do ... While Statement
FmtWrapping.binaryOpsLabel.AccessibleContext.accessibleName=Binary Operators
FmtWrapping.ternaryOpsLabel.AccessibleContext.accessibleName=Ternary Operators
FmtWrapping.assignOpsLabel.AccessibleContext.accessibleName=Assignment Operators
FmtWrapping.cbOpenCloseBlockBrace.AccessibleContext.accessibleName=Open and Close Block Brace
FmtWrapping.cbStatements.AccessibleContext.accessibleName=Statetements on the Same Line
FmtWrapping.AccessibleContext.accessibleName=Php Formatting Wrapping Options
