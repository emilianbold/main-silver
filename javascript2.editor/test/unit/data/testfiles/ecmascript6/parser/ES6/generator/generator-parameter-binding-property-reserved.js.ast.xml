<FunctionNode name=':program' kind='SCRIPT' start='0' end='24'>
  <isProgram/>
  <!-- FunctionNode Parameters -->
  <!-- FunctionNode Body -->
  <Block start='0' end='23'>
    <isFunctionBody/>
    <isSynthetic/>
    <!-- Block Statements -->
    <ExpressionStatement start='0' end='23'>
      <FunctionNode name='L:1' kind='GENERATOR' start='1' end='22'>
        <isAnonymous/>
        <!-- FunctionNode Parameters -->
        <IdentNode start='11' end='18'>
          <name>arguments[0]</name>
          <isDestructuredParameter/>
        </IdentNode>
        <!-- FunctionNode Body -->
        <Block start='10' end='21'>
          <isParameterBlock/>
          <!-- Block Statements -->
          <VarNode name='yield' start='11' end='18'>
            <isDestructuring/>
          </VarNode>
          <ExpressionStatement start='11' end='18'>
            <BinaryNode type='ASSIGN' start='11' end='18'>
              <isAssignment/>
              <!-- BinaryNode lhs -->
              <ObjectNode start='11' end='18'>
                <!-- ObjectNode Elements -->
                <PropertyNode name='yield' start='12' end='17'>
                  <!-- PropertyNode Key -->
                  <IdentNode start='12' end='17'>
                    <name>yield</name>
                    <isPropertyName/>
                  </IdentNode>
                  <!-- PropertyNode Value -->
                  <IdentNode start='12' end='17'>
                    <name>yield</name>
                  </IdentNode>
                  <!-- PropertyNode Decorators -->
                </PropertyNode>
              </ObjectNode>
              <!-- BinaryNode rhs -->
              <IdentNode start='11' end='18'>
                <name>arguments[0]</name>
                <isDestructuredParameter/>
              </IdentNode>
            </BinaryNode>
          </ExpressionStatement>
          <BlockStatement start='20' end='21'>
            <Block start='20' end='21'>
              <isFunctionBody/>
              <!-- Block Statements -->
            </Block>
          </BlockStatement>
        </Block>
      </FunctionNode>
    </ExpressionStatement>
  </Block>
</FunctionNode>
