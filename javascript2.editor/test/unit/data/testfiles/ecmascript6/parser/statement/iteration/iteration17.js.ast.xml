<FunctionNode name=':program' kind='SCRIPT' start='0' end='35'>
  <isProgram/>
  <!-- FunctionNode Parameters -->
  <!-- FunctionNode Body -->
  <Block start='0' end='35'>
    <isFunctionBody/>
    <isSynthetic/>
    <!-- Block Statements -->
    <BlockStatement start='0' end='35'>
      <Block start='0' end='35'>
        <isSynthetic/>
        <!-- Block Statements -->
        <ForNode start='0' end='35'>
          <BinaryNode type='ASSIGN' start='4' end='9'>
            <isAssignment/>
            <!-- BinaryNode lhs -->
            <IdentNode start='4' end='5'>
              <name>x</name>
            </IdentNode>
            <!-- BinaryNode rhs -->
            <NumberLiteralNode value='0' start='8' end='9'/>
          </BinaryNode>
          <JoinPredecessorExpression start='11' end='17'>
            <BinaryNode type='LT' start='11' end='17'>
              <isComparison/>
              <isRelational/>
              <!-- BinaryNode lhs -->
              <IdentNode start='11' end='12'>
                <name>x</name>
              </IdentNode>
              <!-- BinaryNode rhs -->
              <NumberLiteralNode value='42' start='15' end='17'/>
            </BinaryNode>
          </JoinPredecessorExpression>
          <JoinPredecessorExpression start='19' end='22'>
            <UnaryNode type='INCPOSTFIX' start='19' end='22'>
              <isAssignment/>
              <!-- UnaryNode Expression -->
              <IdentNode start='19' end='20'>
                <name>x</name>
              </IdentNode>
            </UnaryNode>
          </JoinPredecessorExpression>
          <Block start='24' end='35'>
            <isSynthetic/>
            <!-- Block Statements -->
            <ExpressionStatement start='24' end='35'>
              <CallNode start='24' end='34'>
                <!-- CallNode Arguments -->
                <IdentNode start='32' end='33'>
                  <name>x</name>
                </IdentNode>
                <!-- CallNode Function -->
                <IdentNode start='24' end='31'>
                  <name>process</name>
                </IdentNode>
              </CallNode>
            </ExpressionStatement>
          </Block>
        </ForNode>
      </Block>
    </BlockStatement>
  </Block>
</FunctionNode>
