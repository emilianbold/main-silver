function |>METHOD:WidgetMilestones<|(|>UNUSED:inHR<|) {
    this.|>FIELD:template<| = "";

    function |>METHOD,UNUSED:getDaysToMilestone<|(|>UNUSED:milestoneName<|) {
        for (var i = 0, max = ChartP3.prototype.milestones.length; i < max; i++) {
         
        }
    }


}

function |>METHOD:ChartP3<|(|>UNUSED:container<|) {

    if (inArchive()) {
        return;
    }

    function |>METHOD:inArchive<|() {
        var t = /.+\.([^?]+)(\?|$)/;
        var results = |>GLOBAL:window<|.location.pathname.match(t);
        if (results && results.length > 1) {
            if (results[1] === "html") {
                return true;
            }
        }
        return false;
    }

    var self = this;
    self.|>CLASS:predictionLinearData<| = {
        |>FIELD:betaFound<|: true
    };

    self.|>FIELD:codeFreezeQC<| = -1;
    self.|>FIELD:milestones<| = [];

    for (var i = 0, max = ChartP3.prototype.milestones.length; i < max; i++) {
        self.|>FIELD:milestones<|.push(cloneMilestone(ChartP3.prototype.milestones[i]));
    }



    function |>METHOD:cloneMilestone<|(milestone) {
        return {
            |>FIELD:name<|: milestone.name,
            |>FIELD:timestamp<|: milestone.realTimestamp,
            |>FIELD:date<|: milestone.dateWithoutTime
        };
    }
}
