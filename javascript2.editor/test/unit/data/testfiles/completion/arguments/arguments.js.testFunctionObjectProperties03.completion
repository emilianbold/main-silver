Code completion result for source line:
formatter.println("Result of testFunction: " + ArgumentsContext.testFunction(1, 2).|toString());
(QueryType=COMPLETION, prefixSearch=true, caseSensitive=true)
------------------------------------
CLASS      prototype                       [PUBLIC]   stub_CORE_Number.js
METHOD     create(O: Object): Object       [PUBLIC,   stub_CORE_Object.js
METHOD     defineProperties(O: Object, Pr  [PUBLIC,   stub_CORE_Object.js
METHOD     defineProperty(O: Object, P: S  [PUBLIC,   stub_CORE_Object.js
METHOD     freeze(O: Object): Object       [PUBLIC,   stub_CORE_Object.js
METHOD     getOwnPropertyDescriptor(O: Ob  [PUBLIC,   stub_CORE_Object.js
METHOD     getOwnPropertyNames(O: Object)  [PUBLIC,   stub_CORE_Object.js
METHOD     getPrototypeOf(O: Object): Obj  [PUBLIC,   stub_CORE_Object.js
METHOD     hasOwnProperty(V: String): Boo  [PUBLIC]   stub_CORE_Object.js
METHOD     isExtensible(O: Object): Boole  [PUBLIC,   stub_CORE_Object.js
METHOD     isFrozen(O: Object): Boolean    [PUBLIC,   stub_CORE_Object.js
METHOD     isPrototypeOf(V: Object): Bool  [PUBLIC]   stub_CORE_Object.js
METHOD     isSealed(O: Object): Boolean    [PUBLIC,   stub_CORE_Object.js
METHOD     keys(O: Object): Array          [PUBLIC,   stub_CORE_Object.js
METHOD     preventExtensions(O: Object):   [PUBLIC,   stub_CORE_Object.js
METHOD     propertyIsEnumerable(V: String  [PUBLIC]   stub_CORE_Object.js
METHOD     seal(O: Object): Object         [PUBLIC,   stub_CORE_Object.js
METHOD     toExponential(fractionDigits:   [PUBLIC]   stub_CORE_Number.js
METHOD     toFixed(fractionDigits: Number  [PUBLIC]   stub_CORE_Number.js
METHOD     toLocaleString(): String        [PUBLIC]   stub_CORE_Number.js
METHOD     toPrecision(precision: Number)  [PUBLIC]   stub_CORE_Number.js
METHOD     toString(): String              [PUBLIC]   stub_CORE_Number.js
METHOD     valueOf(): Number               [PUBLIC]   stub_CORE_Number.js
FIELD      MAX_VALUE: Number               [PUBLIC,   stub_CORE_Number.js
FIELD      MIN_VALUE: Number               [PUBLIC,   stub_CORE_Number.js
FIELD      NEGATIVE_INFINITY: String       [PUBLIC,   stub_CORE_Number.js
FIELD      NaN: Number                     [PUBLIC,   stub_CORE_Number.js
FIELD      POSITIVE_INFINITY: String       [PUBLIC,   stub_CORE_Number.js
FIELD      constructor                     [PUBLIC]   stub_CORE_Number.js
