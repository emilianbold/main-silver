Code completion result for source line:
formatter.println("Result of testFunction: " + ArgumentsContext.testFunction(1, 2).|toString());
(QueryType=COMPLETION, prefixSearch=true, caseSensitive=true)
------------------------------------
METHOD     eval(string): undefined         [PUBLIC]   stub_core_Object.js
METHOD     hasOwnProperty(prop): Boolean   [PUBLIC]   stub_core_Object.js
METHOD     isPrototypeOf(object): Boolean  [PUBLIC]   stub_core_Object.js
METHOD     propertyIsEnumerable(prop): Bo  [PUBLIC]   stub_core_Object.js
METHOD     toExponential(fractionDigits):  [PUBLIC]   stub_core_Number.js
METHOD     toFixed(digits): String         [PUBLIC]   stub_core_Number.js
METHOD     toLocaleString(): String        [PUBLIC]   stub_core_Object.js
METHOD     toPrecision(precision): String  [PUBLIC]   stub_core_Number.js
METHOD     toSource(): undefined           [PUBLIC]   stub_core_Object.js
METHOD     toString(): String              [PUBLIC]   stub_core_Object.js
METHOD     unwatch(prop): undefined        [PUBLIC]   stub_core_Object.js
METHOD     valueOf(): undefined            [PUBLIC]   stub_core_Object.js
METHOD     watch(prop, handler): undefine  [PUBLIC]   stub_core_Object.js
FIELD      MAX_VALUE                       [PUBLIC]   stub_core_Number.js
FIELD      MIN_VALUE                       [PUBLIC]   stub_core_Number.js
FIELD      NEGATIVE_INFINITY               [PUBLIC]   stub_core_Number.js
FIELD      NaN                             [PUBLIC]   stub_core_Number.js
FIELD      POSITIVE_INFINITY               [PUBLIC]   stub_core_Number.js
FIELD      constructor                     [PUBLIC]   stub_core_Object.js
FIELD      prototype                       [PUBLIC]   stub_core_Object.js
VARIABLE   i                               [PUBLIC]   arguments.js
