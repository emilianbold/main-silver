<?xml version="1.0" encoding="UTF-8"?>
<project name="TestRunner" default="all-master-check" basedir=".">

    <property name="script.version" value="1.0.4"/>
    <property name="btd.repo.dir" value="${ide.repo.dir}"/>
    <property environment="env"/>
	
   <!-- Properties for internal purpose-->
    <property name="ide.dest.dir" value="zip"/>
    <property name="ide.dest.file" value="ide.zip"/>
    <property name="btd.dest.dir" value="${ide.dest.dir}"/>
    <property name="btd.dest.file" value="btd.zip"/>
    <property name="results.repository.password" value="guest"/> 
    <property name="results.repository" value="guest@nbperf.cz.oracle.com:/space/results"/>
    <property name="results.repository.password" value="guest"/>
    <property name="results.dir" value="results"/>
    <property name="results.file.unit" value="results-unit.zip"/>
    <property name="results.file.functional" value="results-functional.zip"/>
    <property name="netbeans.dir" value="netbeans"/>
    <property name="testdistribution.dir" value="../../../../../../ergonomics/performance"/>
    <property name="othertests.dir" value="../../../../../../ergonomics"/>

    <loadfile srcFile="../../../../../build.number" property="perftestrun.buildnumber"/>

    <property name="installer.dir" value="installer"/>
    <property name="installer.target.dir" value="netbeans"/>
    <property name="installer.target.dir.glassfish" value="glassfish"/>    


    <target name="master-check" unless="is.master">
        <antcall target="all"/>
    </target>
    
   <target name="master-results-hack" if="is.master">
        <mkdir dir="testdistribution/unit/junit-results"/>
        <mkdir dir="testdistribution/unit/results"/>
        <mkdir dir="testdistribution/qa-functional/results/foo"/>
        <copyfile forceoverwrite="true" src="/space/hudson/foo.xml" dest="testdistribution/unit/junit-results/foo.xml"/>
        <copyfile forceoverwrite="true" src="/space/hudson/foo.xml" dest="testdistribution/unit/results/foo.xml"/>
        <copyfile forceoverwrite="true" src="/space/hudson/foo.xml" dest="testdistribution/qa-functional/results/foo.xml"/>    
   </target>

    <target name="all-master-check">
        <available file="/space/hudsonserver/master" property="is.master"/>
        <antcall target="master-results-hack"/>
        <antcall target="master-check"/>
    </target>
      
    <target name="all" depends="init, move-results">
        <echo message="Script version: ${script.version}"/>
    </target>
    
     
    <target name="init">
        <condition property="testtype.unit">
            <equals arg1="${test.types}" arg2="unit"/>
        </condition>
        <condition property="testtype.functional">
            <equals arg1="${test.types}" arg2="qa-functional"/>
        </condition>
        <available file="${ide.dest.dir}/${buildnumber}-${ide.dest.file}" property="build.ide.exist"/>
        <available file="${btd.dest.dir}/${buildnumber}-${btd.dest.file}" property="build.btd.exist"/>
    </target>
   
    <target name="move-results" depends="init">
        <delete dir="${results.dir}"/>
        <mkdir dir="${results.dir}"/>
        <exec executable="hostname" outputproperty="host.name"/>
        <property name="results.string" value="xtr-netbeans_Dev-${perftestrun.buildnumber}-${host.name}-${java.version}-${perftestrun.buildnumber}"/>
<!--        <property name="results.string" value="xtr-netbeans_Dev-${buildnumber}-${host.name}-${java.version}-${buildnumber}"/> -->
       <antcall target="move-results-functional"/>
<!--       <antcall target="move-results-other"/> -->
       <antcall target="move-results-unit"/>
    </target>
    
    <target name="move-results-functional"  unless="testtype.unit">
        <zip destfile="${results.dir}/${results.string}-${results.file.functional}"
        basedir="${testdistribution.dir}"
        includes="build/test/qa-functional/results/*.xml, j2se/build/test/qa-functional/results/*.xml, j2ee/build/test/qa-functional/results/*.xml, web/build/test/qa-functional/results/*.xml,  enterprise/build/test/qa-functional/results/*.xml, languages/build/test/qa-functional/results/*.xml,  mobility/build/test/qa-functional/results/*.xml, j2se/build/test/qa-functional/work/allPerformance.xml, j2ee/build/test/qa-functional/work/allPerformance.xml, web/build/test/qa-functional/work/allPerformance.xml,  enterprise/build/test/qa-functional/work/allPerformance.xml, languages/build/test/qa-functional/work/allPerformance.xml,  mobility/build/test/qa-functional/work/allPerformance.xml, build/test/qa-functional/work/allPerformance.xml" 
         />
<scp file="${results.dir}/${results.string}-${results.file.functional}"
todir="${results.repository}"
trust="true"
password="${results.repository.password}"/>

    </target>
    
    <target name="move-results-unit"  unless="testtype.functional">
        <zip destfile="${results.dir}/${results.string}-${results.file.unit}"
        basedir="${testdistribution.dir}"
        includes="build/test/unit/results/*.xml, j2se/build/test/unit/results/*.xml, j2ee/build/test/unit/results/*.xml, web/build/test/unit/results/*.xml,  enterprise/build/test/unit/results/*.xml, languages/build/test/unit/results/*.xml,  mobility/build/test/unit/results/*.xml, j2se/build/test/unit/work/allPerformance.xml, j2ee/build/test/unit/work/allPerformance.xml, web/build/test/unit/work/allPerformance.xml,  enterprise/build/test/unit/work/allPerformance.xml, languages/build/test/unit/work/allPerformance.xml,  mobility/build/test/unit/work/allPerformance.xml, build/test/unit/work/allPerformance.xml" 
 />
<scp file="${results.dir}/${results.string}-${results.file.unit}"
todir="${results.repository}"
trust="true"
password="${results.repository.password}"/>
    </target>

    <target name="move-results-other">
        <zip destfile="${results.dir}/${results.string}-other-${results.file.unit}"
        basedir="${othertests.dir}"
 includes="refactoring.java/build/test/unit/results/*.xml, performance/build/test/unit/results/*.xml, performance/build/test/unit/work/allPerformance.xml, refactoring.java/build/test/unit/work/allPerformance.xml"
/> 
<scp file="${results.dir}/${results.string}-other-${results.file.unit}"
todir="${results.repository}"
trust="true"
password="${results.repository.password}"/>
    </target>

</project>