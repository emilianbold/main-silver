/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development and
 * Distribution License("CDDL") (collectively, the "License"). You may not use
 * this file except in compliance with the License. You can obtain a copy of
 * the License at http://www.netbeans.org/cddl-gplv2.html or
 * nbbuild/licenses/CDDL-GPL-2-CP. See the License for the specific language
 * governing permissions and limitations under the License. When distributing
 * the software, include this License Header Notice in each file and include
 * the License file at nbbuild/licenses/CDDL-GPL-2-CP. Oracle designates this
 * particular file as subject to the "Classpath" exception as provided by
 * Oracle in the GPL Version 2 section of the License file that accompanied
 * this code. If applicable, add the following below the License Header, with
 * the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license." If you do not indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to its
 * licensees as provided above. However, if you add GPL Version 2 code and
 * therefore, elected the GPL Version 2 license, then the option applies only
 * if the new code is made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */

/*
 * CustomizerJarComponent.java
 *
 * Created on 2.8.2011, 15:34:54
 */
package org.netbeans.modules.javafx2.project.ui;

//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;
//import java.util.HashMap;
//import java.util.Map;
//import org.netbeans.modules.java.j2seproject.api.J2SEJarConfigProvider;
import org.netbeans.modules.javafx2.project.JFXProjectProperties;
import org.openide.util.Lookup;

/**
 *
 * @author Petr Somol
 */
public class CustomizerJarComponent extends javax.swing.JPanel {// implements ActionListener {

    //private Map<String,String> propMap = new HashMap<String,String>();
    
    //private J2SEJarConfigProvider.ConfigChangeListener listener;
    private static JFXProjectProperties jfxProps = null;
    
    /**
     * Creates new form CustomizerJarComponent
     */
    public CustomizerJarComponent(Lookup context) {
        initComponents();
        jfxProps = JFXProjectProperties.getInstance(context);
        binaryCSSCheckBox.setModel(jfxProps.getBinaryEncodeCSSModel());
    }

//    public void addListener(J2SEJarConfigProvider.ConfigChangeListener l) {
//        listener = l;
//    }

//    @Override
//    public void actionPerformed(ActionEvent e) {
//        jfxProps.
//        if (binaryCSSCheckBox.isSelected()) {
//            //JFXProjectProperties.binaryEncodeCSS
//            propMap.put(JFXProjectProperties.JAVAFX_BINARY_ENCODE_CSS, "true"); // NOI18N
//        } else {
//            propMap.put(JFXProjectProperties.JAVAFX_BINARY_ENCODE_CSS, "false"); // NOI18N
//        }
//        //listener.propertiesChanged(propMap);
//    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        binaryCSSCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        binaryCSSCheckBox.setText(org.openide.util.NbBundle.getMessage(CustomizerJarComponent.class, "CustomizerJarComponent.binaryCSSCheckBox.text")); // NOI18N
        binaryCSSCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryCSSCheckBoxActionPerformed(evt);
            }
        });
        add(binaryCSSCheckBox, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

private void binaryCSSCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryCSSCheckBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_binaryCSSCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox binaryCSSCheckBox;
    // End of variables declaration//GEN-END:variables
}
