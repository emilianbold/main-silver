<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>web.xml Visual Editor: Servlets</title>
<link rel="stylesheet" href="ide.css" title="Oracle BLAFDoc" type="text/css"/>
</head>

<body>
<p><a id="dd_multiview_servlets_servletsNode" name="dd_multiview_servlets_servletsNode"></a></p>
<!-- infolevel="all" infotype="General" --><a id="sthref613" name="sthref613"></a>
<h1>web.xml Visual Editor: Servlets</h1>
<a name="BEGIN" id="BEGIN"></a>
<p>Use the Servlet section of the web.xml Visual Editor to add, remove, and view the deployment information of your web application's servlets and, optionally, JSP files.</p>
<p>Servlets are Java classes that can be loaded dynamically into a server and executed by the server to extend its feature set. Servlets are useful for tasks that involve processing an HTTP request. Servlets are also helpful for tasks that do not generate an HTTP response at all or that generate a relatively simple HTTP response. Servlets use the javax.servlet API.</p>
<p>To deploy a servlet, you must register it in the web.xml file. Doing this provides information needed by the server to deploy the servlet. For example, you tell the server which class should be loaded to deploy the servlet.</p>
<!-- infolevel="all" infotype="General" --><a id="sthref614" name="sthref614"></a>
<h2>JSP Files</h2>
<p>JSP technology was designed to simplify the process of creating servlets. In fact, the main function of servlets is to generate HTML output in cases where dynamic portions can be encapsulated. Servlets are generated by JSP pages when compiled. In many applications, the response sent to the client is a combination of template data and dynamically-generated data. In this situation, it is often easier to work with JSP pages than to do everything with servlets.</p>
<p>Unlike servlets, the server automatically deploys JSP files, therefore you do not have to register a JSP files in the web.xml file in order to deploy it. However, if you register a JSP file in the web.xml file, you can use servlet elements to set initialization parameters and mappings for the JSP file, just as if it were a servlet.</p>
<p>Before registering a servlet or JSP file in the web.xml file, you can create the servlet or create the JSP file in the New File wizard, or import it from your existing sources. You can use the Configure Servlet Deployment panel of the New File wizard to register a servlet. If you have not done so, or if you want to modify a registered servlet's deployment information, use the Servlets view of the web.xml Visual Editor. Note that you cannot use the New File wizard to register JSP files.</p>
<p>You open the web.xml Visual Editor from the Projects window by expanding the Web Pages node, then the WEB-INF node, and then double-clicking the web.xml file. Click Servlets at the top of the editor to open the Servlets view.</p>
<p>First, click Add Servlet Element to define the servlet element with the following properties:</p>

<table summary="User interface elements and descriptions" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="24%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t34">Element</th>
<th align="left" valign="bottom" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t34" headers="r1c1-t34">
<p>Servlet Name</p>
</td>
<td align="left" headers="r2c1-t34 r1c2-t34">
<p>Specifies the display name of the servlet or JSP file, such as MyVeryUsefulComponent.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t34" headers="r1c1-t34">
<p>Description</p>
</td>
<td align="left" headers="r3c1-t34 r1c2-t34">
<p>Specifies a description, such as Initialization settings for my JSP file. Now specify the servlet class or JSP file, by doing one of the following:</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t34" headers="r1c1-t34">
<p>Servlet Class</p>
</td>
<td align="left" headers="r4c1-t34 r1c2-t34">
<p>Specifies the servlet's class, such as MyVeryUsefulServlet.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t34" headers="r1c1-t34">
<p>JSP File</p>
</td>
<td align="left" headers="r5c1-t34 r1c2-t34">
<p>Specifies the JSP file, such as MyVeryUseFulPage.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t34" headers="r1c1-t34">
<p>URL Pattern(s)</p>
</td>
<td align="left" headers="r6c1-t34 r1c2-t34">
<p>Specifies a mapping between the servlet definition or JSP file definition and a URL pattern, such as /bookstore/*, *.jsp. All requests to the specified URL patterns are handled by the servlet or JSP file associated with the servlet or JSP file definition.</p>
</td>
</tr>
</tbody>
</table>
<br />
<!-- -->
<p>When you click OK, the values you entered are displayed in the Servlets section. Optionally, you can now specify the startup order of the servlets in the application. In the Startup Order edit box, type an integer indicating the order in which the servlets should be loaded.</p>
<!-- infolevel="all" infotype="General" --><a id="sthref615" name="sthref615"></a>
<h3>Initialization Parameters</h3>
<p>Next, click Add within the servlet element and define its initialization parameters:</p>

<table summary="User interface elements and descriptions" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="24%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t35">Element</th>
<th align="left" valign="bottom" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t35" headers="r1c1-t35">
<p>Param Name</p>
</td>
<td align="left" headers="r2c1-t35 r1c2-t35">
<p>Specifies the parameter's display name, such as encoding.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t35" headers="r1c1-t35">
<p>Param Value</p>
</td>
<td align="left" headers="r3c1-t35 r1c2-t35">
<p>Specifies the parameter's value, such as UTF-8.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t35" headers="r1c1-t35">
<p>Description</p>
</td>
<td align="left" headers="r4c1-t35 r1c2-t35">
<p>Specifies a description, such as Acceptable encoding formats.</p>
</td>
</tr>
</tbody>
</table>
<br />
<!-- -->
<!-- -->
<!-- infolevel="all" infotype="General" --><a id="sthref616" name="sthref616"></a>
<h3>Security Role References</h3>
<p>Optionally, click Add under Security Role References for the servlet to add role references:</p>

<table summary="User interface elements and descriptions" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="24%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t36">Element</th>
<th align="left" valign="bottom" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t36" headers="r1c1-t36">
<p>Role Ref Name</p>
</td>
<td align="left" headers="r2c1-t36 r1c2-t36">
<p>Specifies the security role reference's display name.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t36" headers="r1c1-t36">
<p>Role Ref Link</p>
</td>
<td align="left" headers="r3c1-t36 r1c2-t36">
<p>Specifies the security role defined in the Security Roles table in the Security section of the visual editor.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t36" headers="r1c1-t36">
<p>Description</p>
</td>
<td align="left" headers="r4c1-t36 r1c2-t36">
<p>Specifies a description.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t36" headers="r1c1-t36">
<p>Run As</p>
</td>
<td align="left" headers="r5c1-t36 r1c2-t36">
<p>Specifies the run-as element for the security roles.</p>
</td>
</tr>
</tbody>
</table>
<br />
<!-- -->
<p>Note that when you click Remove at the top of the Servlets section, you remove the definitions for the servlet or JSP file from the web.xml file, but you do not remove the servlet or JSP file itself. To delete the servlet or JSP file, right-click it in the Projects window and choose Delete.</p>

<!-- -->
<!-- -->
<hr><p><b>Related Topics</b></p>

<!-- -->
<!-- Start Footer -->


<table summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" width="86%"><a href="legal_notice.htm">
Copyright&nbsp;&copy;&nbsp;2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.</a>
</td>
</tr>
</table>
<!-- -->
</body>
</html>
