<?xml version="1.0" encoding="UTF-8"?>

<project default="default" basedir=".." xmlns:jnlp="http://www.netbeans.org/ns/j2se-project/remote-platform/1" xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3">

    <target name="default">
        <echo message="Default target is not set, you must specify which target you want to run."/>
    </target>

    <target name="-init-remote-platform-properties" depends="init">
        <fail unless="platform.runtime">Runtime platform (platform.runtime) must be set.</fail>
        <j2seproject1:property name="remote.platform.home.dir" value="platforms.${platform.runtime}.platform.install.folder"/>
        <j2seproject1:property name="remote.platform.work.dir" value="platforms.${platform.runtime}.platform.work.folder"/>
        <j2seproject1:property name="remote.platform.host" value="platforms.${platform.runtime}.platform.host"/>
        <j2seproject1:property name="remote.platform.port" value="platforms.${platform.runtime}.platform.port"/>
        <j2seproject1:property name="remote.platform.user" value="platforms.${platform.runtime}.platform.auth.username"/>
        <j2seproject1:property name="remote.platform.auth" value="platforms.${platform.runtime}.platform.auth.kind"/>
        <j2seproject1:property name="remote.platform.keyfile" value="platforms.${platform.runtime}.platform.auth.keystore"/>
        <fail unless="remote.platform.home.dir">Must set remote.platform.home.dir</fail>
        <fail unless="remote.platform.work.dir">Must set remote.platform.work.dir</fail>
        <fail unless="remote.platform.host">Must set remote.platform.host</fail>
        <fail unless="remote.platform.port">Must set remote.platform.port</fail>
        <fail unless="remote.platform.user">Must set remote.platform.user</fail>
        <fail unless="remote.platform.auth">Must set remote.platform.auth</fail>
        <condition property="remote.platform.auth.passwd">
            <equals arg1="${remote.platform.auth}" arg2="PASSWORD"/>
        </condition>
        <condition property="remote.platform.auth.key">
            <equals arg1="${remote.platform.auth}" arg2="KEY"/>
        </condition>
        <basename file="${basedir}" property="remote.project.name"/>
        <basename file="${dist.dir}" property="remote.dist.dir.name"/>
        <basename file="${dist.jar}" property="remote.dist.jar.name"/>
        <property name="remote.project.dir" value="${remote.platform.work.dir}/${remote.project.name}"/>
        <property name="remote.dist.dir" value="${remote.project.dir}/${remote.dist.dir.name}"/>
        <property name="remote.dist.jar" value="${remote.dist.dir}/${remote.dist.jar.name}"/>
        <property name="remote.java.executable" value="${remote.platform.home.dir}/bin/java"/>
    </target>

    <target name="-init-run-remote" depends="init, jar" if="remote.platform.auth.passwd">
        <property name="extension.jvmargs" value=""/>
    </target>

    <target name="-init-debug-remote" depends="init, jar, -debug-start-debugger" if="remote.platform.auth.passwd">
        <property name="extension.jvmargs" value="${debug-args-line} -Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
    </target>

    <target name="-ask-password" unless="remote.platform.password" if="remote.platform.auth.passwd">
        <input message="Password ${remote.platform.user}@${remote.platform.host}:" addproperty="remote.platform.password">
            <handler type="secure"/>
        </input>
    </target>
    
    <target name="-ask-passphrase" unless="remote.platform.passphrase" if="remote.platform.auth.key">
        <input message="Passphrase ${remote.platform.user}@${remote.platform.host}:" addproperty="remote.platform.passphrase">
            <handler type="secure"/>
        </input>
    </target>
    
    <target name="-run-remote-passwd" depends="init, jar, -init-remote-platform-properties, -ask-password" if="remote.platform.auth.passwd">
        <sshexec host="${remote.platform.host}" port="${remote.platform.port}" username="${remote.platform.user}" password="${remote.platform.password}" trust="true" command="mkdir -p '${remote.dist.dir}'"/>
        <scp todir="${remote.platform.user}@${remote.platform.host}:${remote.dist.dir}" port="${remote.platform.port}" password="${remote.platform.password}" trust="true">
            <fileset dir="${dist.dir}"/>
        </scp>
        <sshexec host="${remote.platform.host}" port="${remote.platform.port}" username="${remote.platform.user}" password="${remote.platform.password}" trust="true"
                 command="cd '${remote.project.dir}'; '${remote.java.executable}' ${extension.jvmargs} -Dfile.encoding=${runtime.encoding} ${run.jvmargs} ${run.jvmargs.ide} -jar ${remote.dist.jar} ${application.args}"/>
    </target>
    

    <target name="-run-remote-key" depends="init, jar, -init-remote-platform-properties, -ask-passphrase" if="remote.platform.auth.key">
        <fail unless="remote.platform.keyfile">Must set remote.platform.keyfile</fail>
        <sshexec host="${remote.platform.host}" port="${remote.platform.port}" username="${remote.platform.user}" keyfile="${remote.platform.keyfile}" passphrase="${remote.platform.passphrase}" trust="true" command="mkdir -p '${remote.dist.dir}'"/>
        <scp todir="${remote.platform.user}@${remote.platform.host}:${remote.dist.dir}" port="${remote.platform.port}" keyfile="${remote.platform.keyfile}" passphrase="${remote.platform.passphrase}" trust="true">
            <fileset dir="${dist.dir}"/>
        </scp>
        <sshexec host="${remote.platform.host}" port="${remote.platform.port}" username="${remote.platform.user}" keyfile="${remote.platform.keyfile}" passphrase="${remote.platform.passphrase}" trust="true"
                 command="cd '${remote.project.dir}'; '${remote.java.executable}' -jar ${remote.dist.jar} ${application.args}"/>
    </target>

    <target name="run-remote" depends="init, jar, -init-remote-platform-properties, -init-run-remote, -run-remote-passwd, -run-remote-key"/>
    <target name="debug-remote" depends="init, jar, -init-remote-platform-properties, -init-debug-remote, -run-remote-passwd, -run-remote-key"/>

</project>