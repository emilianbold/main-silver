<?xml version="1.0" encoding="UTF-8"?>
<installer-gui-script minSpecVersion="1.0">
    <title>jdk7-netbeans-Title</title>
    <welcome file="Welcome.html"></welcome>
    <background file="background.tif" scaling="none" alignment="bottomleft"></background>
    <options allow-external-scripts="no" customize="never" rootVolumeOnly="false" hostArchitectures="i386"></options>
    <installation-check script="checkMemsize()"></installation-check>
    <volume-check script="checkSystemversion()"></volume-check>
    <script>
/* js:pkmk:start */
function installationCheckRAM() {
	return  checkMemsize() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkMemsize() {
	var result = false;
	try {
		result = system.sysctl('hw.memsize') >= '536870912';
	} catch (e) {}
	
	if(!result) {
		my.result.type = 'Warn';
		my.result.title = system.localizedStringWithFormat('MEMORY_WARNING_TITLE');
		my.result.message = system.localizedStringWithFormat('MEMORY_WARNING_MSG');
	}
	return result;
}
/* js:pkmk:end */
</script>

<script>
/* js:pkmk:start */
function volumeCheckTiger() {
	return  checkSystemversion() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkSystemversion() {
	var result = false;
	var version;	
        if(!(/* >= */ system.compareVersions(system.version.ProductVersion, '10.7.3') >= 0)) {
            my.result.title = 'OS X Lion required';
            my.result.message = 'This Installer is supported only on OS X Lion (10.7.3)';
            my.result.type = 'Fatal';
            return false;
        }
	return true;
}
/* js:pkmk:end */
</script>

<script>
/* js:pkmk:start */
function choiceIsADowngrade() {
	return  checkChoiceUpgradeAction() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkChoiceUpgradeAction() {
	var result = false;
	try {
		result = my.choice.packageUpgradeAction == 'downgrade' || my.choice.packageUpgradeAction == 'mixed';
	} catch (e) {}
	
	return result;
}
/* js:pkmk:end */
</script>

<script>var bundle = system.files.bundleAtPath("/Library/Internet Plug-Ins/JavaAppletPlugin.plugin");

function isDowngrade() {
// No files present
if(!system.files.plistAtPath("/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Info.plist"))
{
	return false;
}

// check if Oracle JRE is installed
if (bundle &amp;&amp; (bundle.CFBundleIdentifier != "com.oracle.java.JavaAppletPlugin"))
{
	// means JRE/Plugin is never installed or is Apple's plugin and which means this is a fresh install
	return false;
}
else
{
	// check if it is a downgrade
	
	tVersionResult = system.compareVersions(bundle.CFBundleVersion, "1.7.25.16");
	if (tVersionResult == 1) 
	{
		// Means installed version > current payload
		return true;
	}
	else
	{
		return false;
	}
}
} 


function pm_choice1_selected() {
  result = true;
  result = result &amp;&amp; (isDowngrade() == false);
  return result;
}


function pm_choice1_enabled() {
  result = true;
  result = result &amp;&amp; (isDowngrade() == false);
  return result;
}</script>

    <choices-outline>
        <line choice="netbeans">
            <line choice="choice0"/>
            <line choice="choice1"/>
            <line choice="baseide"/>
            <line choice="javase"/>
            <line choice="websvccommon"/>
        </line>       
      
    </choices-outline>
    <choice id="netbeans" title="netbeans-title" description="netbeans-description" start_selected="true" start_enabled="true" start_visible="true"></choice>
    <choice id="choice0" title="JDK_VERSION">
        <pkg-ref id="com.oracle.jdk7u25"/>
    </choice>
    <choice id="choice1" title="plugin" selected="pm_choice1_selected()" enabled="pm_choice1_enabled()">
        <pkg-ref id="com.oracle.jre"/>
    </choice>
    <choice id="baseide" title="baseide-title" description="baseide-description" start_selected="true" start_enabled="true" start_visible="true">
        <pkg-ref id="ident.pkg.baseide"></pkg-ref>
    </choice>
    <choice id="javase" title="javase-title" description="javase-description" start_selected="true" start_enabled="true" start_visible="true" selected="choices.javase.selected &amp;&amp; choices.baseide.selected" enabled="choices.baseide.selected">
        <pkg-ref id="ident.pkg.javase"></pkg-ref>
    </choice> 
    <choice id="websvccommon" title="websvccommon-title" description="websvccommon-description" start_selected="true" start_enabled="true" start_visible="false" selected="choices.websvccommmon.selected &amp;&amp; choices.baseide.selected" enabled="choices.baseide.selected">
        <pkg-ref id="ident.pkg.websvccommon"/>
    </choice>
    <pkg-ref id="com.oracle.jdk7u25" installKBytes="239120" version="1.1" auth="Root">file:./Contents/Packages/JDK%207%20Update%2025.pkg#jdk17025.pkg</pkg-ref>
    <pkg-ref id="com.oracle.jre" installKBytes="147320" version="1.1" auth="Root">file:./Contents/Packages/JDK%207%20Update%2025.pkg#javaappletplugin.pkg</pkg-ref>
    <pkg-ref id="com.oracle.jre">
        <relocate search-id="pkmktoken18">
            <bundle id="com.oracle.java.Java-Updater"/>
        </relocate>
    </pkg-ref>
    <pkg-ref id="ident.pkg.baseide" version="0.0.0.0.1" installKBytes="@SIZE_BASEIDE@" auth="Root" onConclusion="None">file:./Contents/Packages/baseide-@NB_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.javase" version="0.0.0.0.1" installKBytes="@SIZE_JAVASE@" auth="Root" onConclusion="None">file:./Contents/Packages/javase-@NB_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.websvccommon" version="0.0.0.0.1" installKBytes="@SIZE_WEBSVCCOMMON@" auth="Root" onConclusion="None">file:./Contents/Packages/websvccommon-@NB_ID@.pkg</pkg-ref>
    <locator>
        <search id="pkmktoken18-1" type="component">
            <bundle CFBundleIdentifier="com.oracle.java.Java-Updater" path="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Resources/Java Updater.app"/>
        </search>
        <search id="pkmktoken18-0" type="script" script="pkmktoken18_combined()">
            <script>
function pkmktoken18_combined() {
	function pkmk_add_results_to_array(results, array) {
		for(i = 0; i &lt; results.length; i++)
			array.push(results[i]);
	}
	var result = new Array();
	var search;
	search = my.search.results['pkmktoken18-1'];
	if(search) pkmk_add_results_to_array(search, result);
	return result;
}
</script>
        </search>
        <search type="script" id="pkmktoken18" script="pkmktoken18_final()">
            <script>
function pkmktoken18_final() {
	var combined = my.search.results['pkmktoken18-0'];
	return combined;
}
</script>
        </search>
    </locator>
</installer-gui-script>
