<?xml version="1.0" encoding="UTF-8"?>
<installer-gui-script minSpecVersion="1.0">
    <title>netbeans-Title</title>
    <welcome file="Welcome.html"></welcome>
    <license file="License.txt"></license>
    <background file="background.tif" scaling="none" alignment="topleft"></background>
    <options allow-external-scripts="yes" customize="allow" rootVolumeOnly="false" hostArchitectures="i386"></options>
    <installation-check script="checkMemsize()"></installation-check>
    <volume-check script="checkSystemversion()"></volume-check>
    <script>
/* js:pkmk:start */
function installationCheckRAM() {
	return  checkMemsize() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkMemsize() {
	var result = false;
	try {
		result = system.sysctl('hw.memsize') >= '536870912';
	} catch (e) {}
	
	if(!result) {
		my.result.type = 'Warn';
		my.result.title = system.localizedStringWithFormat('MEMORY_WARNING_TITLE');
		my.result.message = system.localizedStringWithFormat('MEMORY_WARNING_MSG');
	}
	return result;
}
/* js:pkmk:end */
</script>

<script>
/* js:pkmk:start */
function volumeCheckTiger() {
	return  checkSystemversion() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkSystemversion() {
	var result = false;
	var version;	
	try {
		version = my.target.systemVersion.ProductVersion;
		if(version == 'undefined') {
			result = ( -1 != system.compareVersions(system.version.ProductVersion, '10.5'));
		} else {
			result = ( -1 != system.compareVersions(version, '10.5'));
		}
	
	} catch (e) {}
	
	if(!result) {
		my.result.type = 'Fatal';
		my.result.title = system.localizedStringWithFormat('ERR_INVALID_VERSION_TITLE');
		my.result.message = system.localizedStringWithFormat('ERR_INVALID_VERSION_MSG');
	} else {
                var java7u10_or_newer = false;
                var java7_older = false;
                var java6 = false;
                var no_java = false;
		try {
                    if(system.files.fileExistsAtPath('/usr/libexec/java_home')) {
                       var res = system.run("/usr/libexec/java_home", "--version", "1.7.0_10+", "--failfast");                       
                       java7u10_or_newer = (0 == res);
                       if(!java7u10_or_newer) {
                           var res = system.run("/usr/libexec/java_home", "--version", "1.6", "--failfast");                       
                           java6 = (0 == res);
                       }
                       if(!java7u10_or_newer) {
                           var res = system.run("/usr/libexec/java_home", "--version", "1.7+", "--failfast");                       
                           java7_older = (0 == res);
                       }
                    }
		} catch (e) {}
		
		if(!java7u10_or_newer) {
                    if(java7_older && java6) {
                        my.result.type = 'Warning';
                        my.result.title = system.localizedStringWithFormat('WARN_JAVA6_OLDER_JAVA7_TITLE');
                        my.result.message = system.localizedStringWithFormat('WARN_JAVA6_OLDER_JAVA7_MSG');
                        result = true;
                    } else {
                        if (java7_older) {
                            my.result.type = 'Fatal';
                            my.result.title = system.localizedStringWithFormat('ERR_OLDER_JAVA7_TITLE');
                            my.result.message = system.localizedStringWithFormat('ERR_OLDER_JAVA7_MSG');
                        } else {
                            if (java6) {
                                result = true;
                            } else {
                                my.result.type = 'Fatal';
                                my.result.title = system.localizedStringWithFormat('ERR_NO_JAVA_TITLE');
                                my.result.message = system.localizedStringWithFormat('ERR_NO_JAVA_MSG');
                            }
                        }
                    }
		}
        }

	return result;
}
/* js:pkmk:end */
</script>

<script>
/* js:pkmk:start */
function choiceIsADowngrade() {
	return  checkChoiceUpgradeAction() ;
}
/* js:pkmk:end */


/* js:pkmk:start */
function checkChoiceUpgradeAction() {
	var result = false;
	try {
		result = my.choice.packageUpgradeAction == 'downgrade' || my.choice.packageUpgradeAction == 'mixed';
	} catch (e) {}
	
	return result;
}
/* js:pkmk:end */
</script>

    <choices-outline>
        <line choice="netbeans">
            <line choice="baseide"></line>
            <line choice="javase"></line>
            <line choice="webcommon"/>
            <line choice="javaee"></line>
        </line>       
        <line choice="glassfish-v3"></line>
        <line choice="tomcat"></line>      
      
    </choices-outline>    
    <choice id="glassfish-v3" title="glassfish-v3-title" description="glassfish-v3-description" start_selected="true" start_enabled="true" start_visible="true">
        <pkg-ref id="ident.pkg.glassfish.v3"></pkg-ref>
    </choice>

    <choice id="tomcat" title="tomcat-title" description="tomcat-description" start_selected="false" start_enabled="true" start_visible="true">
        <pkg-ref id="ident.pkg.tomcat"></pkg-ref>
    </choice>
   
    <choice id="netbeans" title="netbeans-title" description="netbeans-description" start_selected="true" start_enabled="true" start_visible="true"></choice>
    <choice id="baseide" title="baseide-title" description="baseide-description" start_selected="true" start_enabled="true" start_visible="true">
        <pkg-ref id="ident.pkg.baseide"></pkg-ref>
    </choice>
    <choice id="javase" title="javase-title" description="javase-description" start_selected="true" start_enabled="true" start_visible="true" selected="choices.javase.selected &amp;&amp; choices.baseide.selected" enabled="choices.baseide.selected">
        <pkg-ref id="ident.pkg.javase"></pkg-ref>
    </choice>
    <choice id="webcommon" title="webcommon-title" description="webcommon-description" start_selected="true" start_enabled="true" start_visible="true" selected="choices.webcommmon.selected &amp;&amp; choices.baseide.selected" enabled="choices.baseide.selected">
        <pkg-ref id="ident.pkg.webcommon"/>
    </choice>
    <choice id="javaee" title="javaee-title" description="javaee-description" start_selected="true" start_enabled="true" start_visible="true" selected="choices.javaee.selected &amp;&amp; choices.javase.selected" enabled="choices.javase.selected">
        <pkg-ref id="ident.pkg.javaee"></pkg-ref>
    </choice>
          
    <pkg-ref id="ident.pkg.glassfish.v3" version="0.0.0.0.0" installKBytes="@SIZE_GLASSFISHV3@" auth="Root" onConclusion="None">file:./Contents/Packages/glassfish-v3-@GLASSFISHV3_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.tomcat" version="0.0.0.6.0" installKBytes="@SIZE_TOMCAT@" auth="Root" onConclusion="None">file:./Contents/Packages/tomcat-@TOMCAT_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.baseide" version="0.0.0.0.1" installKBytes="@SIZE_BASEIDE@" auth="Root" onConclusion="None">file:./Contents/Packages/baseide-@NB_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.javase" version="0.0.0.0.1" installKBytes="@SIZE_JAVASE@" auth="Root" onConclusion="None">file:./Contents/Packages/javase-@NB_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.webcommon" version="0.0.0.0.1" installKBytes="@SIZE_WEBCOMMON@" auth="Root" onConclusion="None">file:./Contents/Packages/webcommon-@NB_ID@.pkg</pkg-ref>
    <pkg-ref id="ident.pkg.javaee" version="0.0.0.0.1" installKBytes="@SIZE_JAVAEE@" auth="Root" onConclusion="None">file:./Contents/Packages/javaee-@NB_ID@.pkg</pkg-ref>
 
</installer-gui-script>